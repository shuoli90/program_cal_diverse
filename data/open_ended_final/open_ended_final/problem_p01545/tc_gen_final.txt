
import random

def tcgen():
    # Generate a random number of luggage items
    n = random.randint(1, 10**5)
    
    # Generate a list of unique weights from 1 to n
    weights = list(range(1, n + 1))
    
    # Shuffle the list to create a random order
    random.shuffle(weights)
    
    return n, weights

# Example usage
#if __name__ == "__main__":
#    n, weights = tcgen()
#    print(n)
#   print(" ".join(map(str, weights)))


#### Explanation
#1. **Generate a Random Number of Luggage Items**: We generate a random integer `n` such that \(1 \leq n \leq 10^5\). This represents the number of luggage items Taro has.
#2. **Generate a Unique List of Weights**: We create a list `weights` that contains integers from 1 to `n` inclusive. This ensures that each weight is unique and falls within the given constraints.
#3. **Shuffle the List**: We shuffle the list to create a random order of luggage weights, simulating the random arrangement by the moving company.
#4. **Output**: The function returns `n` and the list of weights in random order. The example usage prints the generated test case in the required format.

#This generator will produce diverse and valid test cases for the problem. Run it to generate different test cases each time.