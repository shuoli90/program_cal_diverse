
import random

def make_testcase():
    # Generating n, k, and x0 based on given constraints
    n = random.randint(1, 10**8)  # 1 ≤ n ≤ 10^8
    k = random.randint(1, n)  # 1 ≤ k ≤ n
    x0 = random.randint(0, 9)  # 0 ≤ x0 ≤ 9
    
    return n, k, x0

def tcgen():
    n, k, x0 = make_testcase()
    return f"{n} {k} {x0}"

# Example usage of the generator
#if __name__ == "__main__":
#    n, k, x0 = make_testcase()
#    print(f"{n} {k} {x0}")

### Explanation:

#1. **Generating `n`**: We randomly select `n` between 1 and \(10^8\) inclusive, which defines the length of the pseudo-random sequence.
#2. **Generating `k`**: We randomly select `k` between 1 and `n` inclusive, which is the index we need to find in the sorted sequence.
#. **Generating `x0`**: We randomly select `x0` between 0 and 9 inclusive, which is the initial value for generating the pseudo-random sequence.

