Certainly! Let's first write the `extract_arguments` function for the given problem statement. Then, we will implement the function `f` that processes the inputs and provides the necessary output.

### Extract Arguments Function

Here, we'll define a function that reads the input from a file handle:

```python
def extract_arguments(fh):
    N = int(fh.readline().strip())
    permutation = list(map(int, fh.readline().strip().split()))
    return N, permutation
```

### Function to Process the Arguments

Next, we need to write the function `f` that processes the input tuple `(N, permutation)`. This function will perform the given operations until the permutation is sorted.

```python
def f(N, permutation):
    operations = 0
    
    while permutation != list(range(1, N + 1)):
        high = []
        low = []
        max_so_far = 0
        
        for i in range(N):
            if permutation[i] > max_so_far:
                high.append(permutation[i])
                max_so_far = permutation[i]
            else:
                low.append(permutation[i])
        
        permutation = low + high
        operations += 1
    
    print(operations)
```

### Full Script

Here's how you can integrate both functions and execute the script:

```python
import sys

def extract_arguments(fh):
    N = int(fh.readline().strip())
    permutation = list(map(int, fh.readline().strip().split()))
    return N, permutation

def f(N, permutation):
    operations = 0
    
    while permutation != list(range(1, N + 1)):
        high = []
        low = []
        max_so_far = 0
        
        for i in range(N):
            if permutation[i] > max_so_far:
                high.append(permutation[i])
                max_so_far = permutation[i]
            else:
                low.append(permutation[i])
        
        permutation = low + high
        operations += 1
    
    print(operations)

if __name__ == "__main__":
    input_path = sys.argv[1]
    with open(input_path, 'r') as fh:
        N, permutation = extract_arguments(fh)
    f(N, permutation)
```

### Explanation

1. **Extract Arguments**:
    - `extract_arguments(fh)` reads the integer `N` and the list `permutation` from the file handle.
  
2. **Process Function**:
    - `f(N, permutation)` repeatedly sorts the permutation using the specified operations until it becomes sorted.
    - The function identifies "high" and "low" elements based on the definition and rearranges them.
    - The process continues until the permutation matches the sorted list `[1, 2, ..., N]`, counting the number of operations required.

3. **Main Execution**:
    - The script reads input from a file specified in the command line and processes it using the defined functions.

By following this structure, you can solve the given problem by accurately extracting and processing the inputs.