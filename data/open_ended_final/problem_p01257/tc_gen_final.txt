

def generate_vending_machine_test_case():
    test_cases = []
    
    while True:
        # Randomly generate N (number of kinds of coins) and M (amount of change)
        N = random.randint(1, 10)
        M = random.randint(1, 100000)
        
        # Randomly generate N coin denominations
        coins = sorted(random.sample(range(1, 100000), N))
        
        test_cases.append((N, M, coins))
        
        # Randomly decide whether to stop generating more test cases
        if random.random() < 0.2:
            break
    
    # Append the terminating condition dataset (N = M = 0)
    test_cases.append((0, 0, []))
    
    return test_cases

# Function to print the test cases in the required format
def format_test_cases(test_cases):
    s = ""
    for N, M, coins in test_cases:
        s += f"{N} {M}\n"
        if N > 0:
            s += " ".join(map(str, coins)) + "\n"
    return s


def tcgen():
    tc = generate_vending_machine_test_case()
    return format_test_cases(tc)
