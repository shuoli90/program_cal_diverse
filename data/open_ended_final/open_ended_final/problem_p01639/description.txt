Problem F: MLE
ICPC World Finals, Day 4
It was a dark and stormy night. In his dream, Mr. T had slipped back in time. It looked like the ICPC venue, but something was strange... Could it be...ICPC from N years ago (where N is a natural number)? In the confusion, the competition had already begun.
But there was no need to panic. The problem must be easy. For example, this problem can be solved simply by sorting. Write your code calmly and submit it quickly.
But the result was...Memory Limit Exceeded...?!
Problem
For C++ language, the code is as follows:
long long int a[n];
unsigned long long int x = x0;
for (int i = 0; i < n; i++) {
  a[i]=(long long int)x;
  x ^= x << 13;
  x ^= x >> 7;
  x ^= x << 17;
}
For Java language, the code is as follows:
long[] a = new long[n];
long x = x0;
for(int i = 0; i < n; i++){
  a[i] = x;
  x ^= x << 13;
  x ^= x >>> 7;
  x ^= x << 17;
}
Sort the pseudo-random sequence \(a[0], a[1], \cdots, a[n-1] \) in ascending order. Answer the \(k\)-th number (\(a[k-1]\)).
Input
n k x0
On the first line, the length of the pseudo-random sequence \(n\), the index to be found \(k\), and the initial value \(x0\) in the code are given separated by spaces.
Output
Output the smallest number in the pseudo-random sequence with an index of \(k\).
Constraints
\(0 \leq x0 \leq 9\)
\(1 \leq n \leq 10^8 (= 100000000)\)
\(1 \leq k \leq n\)
Examples
Input 1
20 10 1
Output 1
-768720241707614171
The sequence generated by this input is as follows:
1
1082269761
1152992998833853505
-7269227409276787159
-768720241707614171
-8787613929710185883
-670945072575735807
-6753709453369041295
-4166779903597258483
9024654201992055039
8332670729032836398
2074683623940568804
-1176172910426220663
5632491372296299238
-8006175397324373085
-8536891001451786268
-3486562341448986757
1956468987595729445
-6260278484400246991
1076885984028793263
Input 2
1000000 100 2
Output 2
-9221458681145860019
Input 3
100000000 10000000 3
Output 3
-7379326796154077070
