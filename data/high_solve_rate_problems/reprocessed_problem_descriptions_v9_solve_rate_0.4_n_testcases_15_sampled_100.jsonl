{"description_html":"<span class=\"lang-en\">\n<p>Score : <var>400<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>Takahashi has <var>N<\/var> sticks that are distinguishable from each other. The length of the <var>i<\/var>-th stick is <var>L_i<\/var>.<\/p>\n<p>He is going to form a triangle using three of these sticks. Let <var>a<\/var>, <var>b<\/var>, and <var>c<\/var> be the lengths of the three sticks used. Here, all of the following conditions must be satisfied:<\/p>\n<ul>\n<li><var>a &lt; b + c<\/var><\/li>\n<li><var>b &lt; c + a<\/var><\/li>\n<li><var>c &lt; a + b<\/var><\/li>\n<\/ul>\n<p>How many different triangles can be formed? Two triangles are considered different when there is a stick used in only one of them.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li>All values in input are integers.<\/li>\n<li><var>3 \\leq N \\leq 2 \\times 10^3<\/var><\/li>\n<li><var>1 \\leq L_i \\leq 10^3<\/var><\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>N<\/var>\n<var>L_1<\/var> <var>L_2<\/var> <var>...<\/var> <var>L_N<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><p>Print the number of different triangles that can be formed.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>4\n3 4 2 1\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>1\n<\/pre>\n<p>Only one triangle can be formed: the triangle formed by the first, second, and third sticks.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>3\n1 1000 1\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>0\n<\/pre>\n<p>No triangles can be formed.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>7\n218 786 704 233 645 728 389\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>23\n<\/pre><\/section>\n<\/div>\n<\/span>","description_string":"\nScore : 400 points\n\n\nProblem StatementTakahashi has N sticks that are distinguishable from each other. The length of the i-th stick is L_i.\nHe is going to form a triangle using three of these sticks. Let a, b, and c be the lengths of the three sticks used. Here, all of the following conditions must be satisfied:\n\na < b + c\nb < c + a\nc < a + b\n\nHow many different triangles can be formed? Two triangles are considered different when there is a stick used in only one of them.\n\n\n\n\nConstraints\nAll values in input are integers.\n3 \\leq N \\leq 2 \\times 10^3\n1 \\leq L_i \\leq 10^3\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nL_1 L_2 ... L_N\n\n\n\n\n\nConstraintsPrint the number of different triangles that can be formed.\n\n\n\n\n\n\nSample Input 14\n3 4 2 1\n\n\n\n\n\nSample Output 11\n\nOnly one triangle can be formed: the triangle formed by the first, second, and third sticks.\n\n\n\n\n\nSample Input 23\n1 1000 1\n\n\n\n\n\nSample Output 20\n\nNo triangles can be formed.\n\n\n\n\n\nSample Input 37\n218 786 704 233 645 728 389\n\n\n\n\n\nSample Output 323\n\n\n","orig_lang_html":"<span class=\"lang-en\">\n<p>Score : <var>400<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>Takahashi has <var>N<\/var> sticks that are distinguishable from each other. The length of the <var>i<\/var>-th stick is <var>L_i<\/var>.<\/p>\n<p>He is going to form a triangle using three of these sticks. Let <var>a<\/var>, <var>b<\/var>, and <var>c<\/var> be the lengths of the three sticks used. Here, all of the following conditions must be satisfied:<\/p>\n<ul>\n<li><var>a &lt; b + c<\/var><\/li>\n<li><var>b &lt; c + a<\/var><\/li>\n<li><var>c &lt; a + b<\/var><\/li>\n<\/ul>\n<p>How many different triangles can be formed? Two triangles are considered different when there is a stick used in only one of them.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li>All values in input are integers.<\/li>\n<li><var>3 \\leq N \\leq 2 \\times 10^3<\/var><\/li>\n<li><var>1 \\leq L_i \\leq 10^3<\/var><\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>N<\/var>\n<var>L_1<\/var> <var>L_2<\/var> <var>...<\/var> <var>L_N<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><p>Print the number of different triangles that can be formed.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>4\n3 4 2 1\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>1\n<\/pre>\n<p>Only one triangle can be formed: the triangle formed by the first, second, and third sticks.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>3\n1 1000 1\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>0\n<\/pre>\n<p>No triangles can be formed.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>7\n218 786 704 233 645 728 389\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>23\n<\/pre><\/section>\n<\/div>\n<\/span>","orig_lang_string":"\nScore : 400 points\n\n\nProblem StatementTakahashi has N sticks that are distinguishable from each other. The length of the i-th stick is L_i.\nHe is going to form a triangle using three of these sticks. Let a, b, and c be the lengths of the three sticks used. Here, all of the following conditions must be satisfied:\n\na < b + c\nb < c + a\nc < a + b\n\nHow many different triangles can be formed? Two triangles are considered different when there is a stick used in only one of them.\n\n\n\n\nConstraints\nAll values in input are integers.\n3 \\leq N \\leq 2 \\times 10^3\n1 \\leq L_i \\leq 10^3\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nL_1 L_2 ... L_N\n\n\n\n\n\nConstraintsPrint the number of different triangles that can be formed.\n\n\n\n\n\n\nSample Input 14\n3 4 2 1\n\n\n\n\n\nSample Output 11\n\nOnly one triangle can be formed: the triangle formed by the first, second, and third sticks.\n\n\n\n\n\nSample Input 23\n1 1000 1\n\n\n\n\n\nSample Output 20\n\nNo triangles can be formed.\n\n\n\n\n\nSample Input 37\n218 786 704 233 645 728 389\n\n\n\n\n\nSample Output 323\n\n\n","solve_rate":0.4121757771,"codenet_problem_id":"p02888","input_testcases":{"89":"4\n5 4 3 1","19":"7\n159 613 704 233 645 890 389","20":"7\n218 554 704 233 449 890 389","16":"7\n218 410 704 233 449 890 389","86":"7\n292 833 32 31 128 304 3","13":"7\n218 786 704 271 645 728 389","88":"3\n1 1010 1","15":"7\n218 613 704 233 645 890 389","22":"7\n159 613 334 233 645 890 389","21":"7\n218 527 1051 233 74 890 389","101":"4\n3 4 2 1","28":"4\n8 2 2 1","25":"7\n170 163 107 65 129 145 196","102":"3\n1 1000 1","84":"7\n583 833 22 31 128 304 3","26":"7\n170 163 107 95 129 145 196","103":"7\n218 786 704 233 645 728 389","30":"4\n8 2 1 1","0":"4\n5 4 2 1","78":"7\n540 1452 60 24 75 304 3","1":"7\n218 1140 704 233 645 728 389","2":"3\n1 1000 2","90":"4\n6 2 2 1","27":"4\n5 2 2 1","91":"4\n1 2 1 1","23":"7\n218 554 380 233 449 890 389","14":"7\n403 1140 704 233 645 728 389","87":"4\n6 4 2 1","24":"7\n91 574 704 384 645 728 374","85":"7\n292 833 22 31 128 304 3","100":"4\n3 4 2 1"},"output_testcases":{"89":"1\n","19":"19\n","20":"21\n","16":"18\n","86":"4\n","13":"24\n","88":"0\n","15":"20\n","22":"16\n","21":"9\n","101":"1\n","28":"1\n","25":"33\n","102":"0\n","84":"1\n","26":"35\n","103":"23\n","30":"0\n","0":"1\n","78":"1\n","1":"14\n","2":"0\n","90":"1\n","27":"1\n","91":"1\n","23":"22\n","14":"17\n","87":"0\n","24":"25\n","85":"3\n","100":"1\n"},"n_missing":73,"programs":["n = int(input())\nl = list(map(int, input().split()))\nl.sort(reverse=True)\nco = 0\nfor i in range(n-2):\n  for j in range(i+1,n-1):\n    if l[i] >= l[j]+l[j+1]:\n      m = n-j\n      co += (m*(m-1))\/\/2\n      break\nprint(n*(n-1)*(n-2)\/\/6-co)","import sys\nimport math\nimport copy\n\ndef main():\n    n = int(input())\n    l = [int(t) for t in input().split()]\n\n    # \u307e\u305a\u306fL\u3092\u6607\u9806\u306b\u30bd\u30fc\u30c8\u3059\u308b\n    l.sort()\n    \n    count = 0\n    # 1\u756a\u77ed\u3044\u68d2(i)\u30682\u756a\u76ee\u306b\u77ed\u3044\u68d2(j)\u3092\u6c7a\u3081\u308b\n    for i in range(0, n):\n        for j in range(i+1, n):\n            lb, ub = j, n\n            while ub - lb > 1:\n                half = (lb + ub) \/\/ 2\n                if l[half] < l[i] + l[j]:\n                    lb = half\n                else:\n                    ub = half\n            count += ub - (j + 1)\n\n    print(count)\n\n    return 0\n\nif __name__ == '__main__':\n    sys.exit(main())","import itertools\n\ndef read():\n    N = int(input().strip())\n    L = list(map(int, input().strip().split()))\n    return N, L\n\ndef solve(N, L):\n    L.sort()\n    count = 0\n    for a, b, c in itertools.combinations(L, 3):\n        if c < a + b:\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    inputs = read()\n    print(\"%d\" % solve(*inputs))\n","N = int(input())\nL = list(map(int,input().split()))\nL.sort()\nans = 0\nfor i in range(N-2):\n    for j in range(i+1,N-1):\n        for k in range(j+1,N):\n            if L[k] < L[i] + L[j]:\n                ans += 1\n            else:\n                break\nprint(ans)","#!\/usr\/bin\/env python3\nimport sys\n\nINF = 2 * 10 ** 3 + 1\n\ndef main():\n    N = int(input())\n    L = [int(i) for i in input().split()]\n    L.sort()\n\n    # True ---- False\n    def is_ok_top(mid: int, a: int, b: int):\n        # \u691c\u7d22\u5bfe\u8c61\u306e\u5916\u306b\u3042\u308b\u3082\u306e\u306f\u5148\u306b\u5f3e\u304f(\u30ea\u30b9\u30c8\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306a\u3093\u304b\u3060\u3068out of range\u3059\u308b\u306e\u3067)\n        if mid < 0:\n            return True\n        elif mid >= N:\n            return False\n        return L[mid] < L[a] + L[b]\n\n    def binSearch_top(ok: int, ng: int, a: int, b: int):\n        #print(ok, ng)              # \u306f\u3058\u3081\u306e2\u5024\u306e\u72b6\u614b\n        while abs(ok - ng) > 1:     # \u7d42\u4e86\u6761\u4ef6\uff08\u5dee\u304c1\u3068\u306a\u308a\u5883\u754c\u3092\u898b\u3064\u3051\u305f\u6642)\n            mid = (ok + ng) \/\/ 2\n            if is_ok_top(mid, a, b):\n                ok = mid            # mid\u304c\u6761\u4ef6\u3092\u6e80\u305f\u3059\u306a\u3089mid\u307e\u3067\u306fok\u306a\u306e\u3067ok\u306e\u65b9\u3092\u771f\u3093\u4e2d\u307e\u3067\u6301\u3063\u3066\u3044\u304f\n            else:\n                ng = mid            # mid\u304c\u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044\u306a\u3089mid\u307e\u3067\u306fng\u306a\u306e\u3067ng\u306e\u65b9\u3092\u771f\u3093\u4e2d\u307e\u3067\u6301\u3063\u3066\u3044\u304f\n            #print(ok, ng)          # \u534a\u5206\u306b\u5207\u308a\u5206\u3051\u308b\u6bce\u306e2\u5024\u306e\u72b6\u614b\n        return ok    \n\n    count = 0\n    for a in range(0, len(L) - 2):\n        for b in range(a + 1, len(L) - 1):\n            count += binSearch_top(-1, INF, a, b) - b\n\n    print(count)\n\n\n\n\n\n\n\nif __name__ == '__main__':\n    main()\n","N=int(input())\nL=list(map(int,input().split()))\n\n# \u6607\u9806\u306b\u3059\u308b\nL.sort()\n\nimport bisect\ncount=0\nfor i in range(N):\n    for j in range(i+1,N):\n        # 2\u5206\u63a2\u7d22\u3092\u4f7f\u3046\u3053\u3068\u3067n^2*log(n)\u306e\u63a2\u7d22\u3067\u7d42\u308f\u308b,\u3053\u306eindex\u306f\u65b0\u305f\u306bL[i]+L[j]\u304c\u633f\u5165\u3067\u304d\u308bindex\u306a\u306e\u3067\u3001\u3053\u306eindex-1\u304c\u6761\u4ef6\u3092\u6e80\u305f\u3059\u6700\u5927\u306ec\u306eindex\n        maximum_index = bisect.bisect_left(L,L[i]+L[j])\n        count+= maximum_index-1 - j \nprint(count)\n\n\n\n\n\n","import bisect\nN = int(input())\nL = sorted(list(map(int, input().split())))\n\ns = 0\nfor i in range(N):\n    for j in range(i + 1, N):        \n        k = bisect.bisect_left(L, L[i] + L[j])\n        s += k - j - 1\n\nprint(s)","import bisect\nN=int(input())\nL=list(map(int,input().split()))\nL.sort()\nans = 0\nfor a in range(N):\n  for b in range(a+1,N):\n    c=bisect.bisect_left(L, L[a]+L[b])#\u7b2c\u4e00\u6761\u4ef6(\u7d42\u70b9)\n    if b<c:#\u7b2c2\u6761\u4ef6\uff08\u59cb\u70b9\uff09\n      ans+=c-b-1     \nprint(ans)#bisect\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3088\u308a\u4e00\u500b\u524d\u306a\u3089\u5c0f\u3055\u3044","# -*- coding: utf-8 -*-\nN = int(input())\nL_list = list(map(int, input().split()))\n\nans = 0\nL_list.sort(reverse=True)\nb_end = N - 1\nc_end = N\nfor i in range(N - 2):\n    for j in range(i + 1, b_end):\n        for k in range(j + 1, c_end):\n            if L_list[i] < L_list[j] + L_list[k]:\n                ans += 1\n            else:\n                b_end = k\n                c_end = k + 1\n                break\n    b_end = N - 1\n    c_end = N\n\nprint(ans)","import bisect\nn = int(input())\nl = list(map(int,input().split()))\nl.sort()\nans = 0\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        r = bisect.bisect_left(l,l[i]+l[j])\n        ans += r-(j+1)\nprint(ans)","import bisect\nN = int(input())\nL = sorted(list(map(int, input().split())))\nans = 0\nfor a in range(N):\n    for b in range(a+1, N):\n        c = bisect.bisect_left(L, L[a] + L[b])\n        if c > b:\n            ans += c - b - 1\nprint(ans)","n = int(input())\n\nl = list(map(int,input().split()))\n\nans = int(0)\n\nfor i in range(n):\n    for j in range(i+1,n):\n            for k in range(j+1,n):\n                if l[i] < l[j]+l[k] and l[j] < l[i]+l[k] and l[k] < l[j]+l[i]:\n                    ans += 1\n                \nprint(ans)\n","\nN=int(input())\nL=[int(i) for i in input().split()]\nL=sorted(L)\nans=0\n\nfor i in range(N-2):\n    maxk=i+1\n    for j in range(i+1,N-1):\n        ans+=max(0,maxk-j-1)\n        for k in range(max(j+1,maxk),N):\n            if L[i]+L[j]<=L[k]:\n                ans+=k-j-1\n                maxk=k\n                break\n            if k==N-1:\n                ans+=N-j-1\n                maxk=N\nprint(ans)","from collections import defaultdict, deque\nfrom heapq import heappush, heappop\nfrom bisect import bisect_left, bisect_right\nimport sys\nimport random\nimport itertools\nimport math\nsys.setrecursionlimit(10**5)\ninput = sys.stdin.readline\nsqrt = math.sqrt\n\n\ndef LI(): return list(map(int, input().split()))\n\n\ndef LF(): return list(map(float, input().split()))\n\n\ndef LI_(): return list(map(lambda x: int(x)-1, input().split()))\n\n\ndef II(): return int(input())\n\n\ndef IF(): return float(input())\n\n\ndef LS(): return list(map(list, input().split()))\n\n\ndef S(): return list(input().rstrip())\n\n\ndef IR(n): return [II() for _ in range(n)]\n\n\ndef LIR(n): return [LI() for _ in range(n)]\n\n\ndef FR(n): return [IF() for _ in range(n)]\n\n\ndef LFR(n): return [LI() for _ in range(n)]\n\n\ndef LIR_(n): return [LI_() for _ in range(n)]\n\n\ndef SR(n): return [S() for _ in range(n)]\n\n\ndef LSR(n): return [LS() for _ in range(n)]\n\n\ndef gcd(x, y):\n    if y == 0:\n        return x\n    return gcd(y, x % y)\n\n\ndef my_index_multi(l, x):\n    return [i for i, _x in enumerate(l) if _x == x]\n\n\ndef sosu(x):\n    for i in range(2, int(sqrt(x)+1)):\n        if x % i == 0:\n            return False\n    return True\n\n\nmod = 1000000007\ninf = float('INF')\n\n\ndef A():\n    A, B = LI()\n    ans = A-2*B\n    if ans > 0:\n        print(ans)\n    else:\n        print(0)\n    return\n\n# B\n\n\ndef B():\n    N = II()\n    d = LI()\n    ans = 0\n    for i in range(N):\n        for x in range(i+1, N):\n            ans += d[i]*d[x]\n    print(ans)\n\n    return\n\n# C\n\n\ndef C():\n    N = II()\n    S = input()\n    c = 0\n    count = 0\n    for i in S:\n        if i != c:\n            count += 1\n        c = i\n    print(count-1)\n\n    return\n\n# D\n\n\ndef D():\n    N = II()\n    L = LI()\n    L2 = L.copy()\n    L2 = deque(L2)\n    count = 0\n    for i in range(N-1):\n        L2.popleft()\n        L3 = L2.copy()\n        for j in range(i+1, N):\n            L3.popleft()\n            if L3 == deque([]):\n                break\n            p = L[i]+L[j]\n\n            if min(L3) >= p:\n                continue\n            #Lk = filter(lambda x: x % 2 == 1, L2)\n            Lk = [x for x in L3 if p > x]\n\n            for k in Lk:\n                if k+L[i] > L[j] and k+L[j] > L[i]:\n                    #print(k,L[i] , L[j])\n                    count += 1\n        if len(L2) == 2:\n            break\n    print(count)\n\n    return\n\n# E\n\n\ndef E():\n    N, M = LI()\n    bit_max = 1 << N\n    dp = [[inf for i in range(bit_max)] for j in range(M+1)]\n    dp[0][0] = 0\n\n    for i in range(M):\n        a, b = LI()\n\n        c = LI()\n        bit = 0\n\n        for d in c:\n            bit |= 1 << (d-1)\n\n        for w in range(bit_max):\n\n            t = w | bit\n            cost = dp[i][w] + a\n\n            dp[i+1][t] = min(dp[i+1][t], cost)\n\n            dp[i+1][w] = min(dp[i][w], dp[i+1][w])\n\n    print(-1) if dp[-1][-1] == inf else print(dp[-1][-1])\n\n    return\n\n# F\n\n\ndef F():\n    N, M = LI()\n\n    value = [0] * M\n    power = [0] * M\n    for i in range(M):\n        a, b = LI()\n        value[i] = a\n        c = LI()\n        L = ['0'] * N\n        for k in c:\n            L[k - 1] = '1'\n        bint = ''.join(L)\n        power[i] = int(bint, 2)\n    bint = ''.join(list(['1'] * N))\n    dp = [inf] * (int(bint, 2)+1)\n    t = 0\n    cost = 0\n\n    dp[0] = 0\n    for s in range(int(bint, 2) + 1):\n        for i in range(M):\n            t = s | power[i]\n            cost = dp[s] + value[i]\n            dp[t] = min(dp[t], cost)\n    print(-1) if(dp[-1] == inf) else print(dp[-1])\n\n    return\n\n    # you can write to stdout for debugging purposes, e.g.\n# print(\"this is a debug message\")\n\n\ndef solution(S):\n    # write your code in Python 3.6\n    import math\n\n    vowels = \"AIUEO\"\n    count = 0\n    consonants = 0\n    newC = []\n    newV = []\n\n    for i in S[:-1]:\n        if i in vowels:\n            count += 1\n            newV.append(i)\n        else:\n            consonants += 1\n            newC.append(i)\n\n    if consonants < count or consonants - 2 > count:\n        return 0\n\n    a = math.factorial(len(set(newC))) * math.factorial(len(set(newV)))\n    return a\n\n    pass\n\n\n# Solve\nif __name__ == '__main__':\n    D()\n","import array\nimport bisect\n\nN = int(input())\nL = list(map(int, input().split()))\n\nL.sort()\n\nA = array.array('i', L)\n\n#print(L)\n#print(A)\n\ncount = 0\n\nfor ia in range(2,N):\n    for ib in range(1, ia):\n        ic_max = ib-1\n        c_min = A[ia]-A[ib]\n        ic_min = bisect.bisect_right(A, c_min)\n        #print('---------------------')\n        #print(ia, ib, ic_max, ic_min)\n        #print(A[ia], A[ib], A[ic_max], A[ic_min])\n        c_count = ic_max - ic_min + 1\n        if c_count > 0:\n            count += c_count\n\nprint(count)\n","import itertools\n\nN = int(input())\nL = map(int,input().split())\n\n# all_sample = N * (N-1) * (N-2) \/ 6\n\na = list(itertools.combinations(L, 3))\n\nans = 0\n\nfor i in a:\n    s = sum(i)\n    if i[0] < s\/2 and i[1] < s\/2 and i[2] < s\/2:\n        ans += 1\n\nprint(ans)","N=int(input())\nb=[]\nL=[]\nb=input().split()\n\nfor i in range(N):\n    L.append(int(b[i]))\nL.sort()\nx=0\nindex=0\nfor i in range(N-2):\n    x=L[0]\n    L.remove(L[0])\n    for k in range(N-3):\n        if (x + L[k]) > L[k+1]:\n            index+=1\nprint(index)\n","N=int(input())\nL=list(map(int,input().split()))\ncounter=0\nfor t in range(N):\n  for i in range(t+1,N):\n    for p in range(i+1,N):\n      if L[p]<L[t]+L[i] and L[t]<L[i]+L[p] and L[i]<L[p]+L[t]:\n        counter+=1\nprint(counter","length = 2010\n\nn = int(input())\nL = list(map(int, input().split()))\nans = 0\nL.sort()\nsum_1 = [ 0 for _ in range(length)]\nfor i in range(n):\n    sum_1[L[i]]+=1\n#\u68d2\u306e\u9577\u3055\u3067\u7d2f\u7a4d\u548c\nfor i in range(length-1):\n    sum_1[i+1] +=sum_1[i]\nfor i in range(n-1):\n    for j in range(i+1, n):\n        a = abs(L[i]-L[j])\n        b = L[i]+L[j]\n        ans = ans + sum_1[b-1] - sum_1[a]\n\n        if a<L[i] and L[i]<b:\n            ans -=1\n        \n        if a<L[j] and L[j]<b:\n            ans -=1\nprint(ans\/\/3)","#!\/usr\/bin\/env python3\nimport sys\n\n\ndef solve(N: int, L: \"List[int]\"):\n    from itertools import combinations\n    from bisect import bisect_left as bl\n    L = sorted(L)\n    ans = 0\n    for ai, a in enumerate(L):\n        for bi, b in enumerate(L[ai+1:-1], ai+1):\n            ci = bl(L, a+b)\n            ans += ci - bi - 1\n    return ans\n\n# Generated by 1.1.7.1 https:\/\/github.com\/kyuridenamida\/atcoder-tools\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    N = int(next(tokens))  # type: int\n    L = [int(next(tokens)) for _ in range(N)]  # type: \"List[int]\"\n    print(solve(N, L))\n\ndef test():\n    import doctest\n    doctest.testmod()\n\nif __name__ == '__main__':\n    #test()\n    main()\n","n = int(input())\nl_list = list(map(int,input().split()))\nl_list.sort()\nimport bisect\ncount = 0\nfor i in range(1,n):\n  for j in range(i+1,n):\n    b = l_list[i]\n    c = l_list[j]\n    a_cand = l_list[:i]\n    border = c-b\n    count += len(a_cand) - bisect.bisect_right(a_cand,border)\nprint(count)    \n    \n    ","from bisect import bisect_left\nn = int(input())\nl = [int(_) for _ in input().split()]\nl.sort()\ncnt = 0\nfor i in range(n):\n\tfor j in range(i+1,n):\n\t\tcnt += max(0, bisect_left(l, l[i] + l[j]) - (j+1))\nprint(cnt)","N = int(input())\nLs = sorted(map(int, input().split()))\n\nimport bisect\nans = 0\nfor i, a in enumerate(Ls[:-2]):\n  for j, b in enumerate(Ls[i + 1:-1], start=i + 1):\n\n    rest = a + b\n    end_idx = bisect.bisect_left(Ls, rest)\n\n    start_idx = j + 1\n    ans += end_idx - start_idx\n\nprint(ans)\n","import itertools\nN=int(input())\nL=[i for i in map(int,input().split())]\nM=[]\nans=0\nfor i in itertools.permutations(L,3):\n    X=list(i)\n    X.sort()\n    if X not in M :\n        if i[0] < i[1] + i[2] and i[1] < i[0] + i[2] and i[2] < i[0] + i[1] :\n            ans += 1\n            M.append(X)\nprint(ans)","N = int(input())\nl = sorted([int(item) for item in input().split(' ')])\ncount = 0\n\ndef binary_search(count, a, b, l):\n    if len(l) == 0:\n        return count\n    center = len(l) \/\/ 2\n    if a + b > l[center]:\n        count += center + 1\n        return binary_search(count, a, b, l[center+1:])\n    else:\n        return binary_search(count, a, b, l[:center])\n\n\nfor i in range(N):\n    for j in range(i + 1, N):\n        l_remained = l[j + 1:]\n        count = binary_search(count, l[i], l[j], l_remained)\n\nprint(count)\n","n=int(input())\nl=list(map(int,input().split()))\nl.sort()\ndef judge(c,a,b):\n    if a<b+c and b<a+c and c<a+b:\n        return True\n    else:\n        return False\ndef search(st,a,b):\n    min=st-1\n    max=len(l)\n    while max-min>1:\n        mid=(min+max)\/\/2\n        if judge(l[mid],a,b):\n            max=mid\n        else:\n            min=mid\n    return len(l)-max\ndef main(n,l):\n    ans=0\n    for i in range(n-2):\n        for j in range(i+1,n-1):\n            ans+=search(j+1,l[i],l[j])\n    print(ans)\nmain(n,l)","from bisect import bisect_left, bisect_right\n\nn = int(input())\n*l, = map(int, input().split())\n\nl = sorted(l)\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        idx = bisect_left(l, l[j] - l[i] + 1)\n        ans += max(0, i - idx)\n\nprint(ans)","from bisect import bisect_left\nfrom bisect import bisect_right\n\n\nN = int(input())\nL = list(map(int, input().split()))\nL.sort()\n\n\"\"\"\n\u77ed\u3044\u307b\u3046\u304b\u3089\uff12\u672c\u56fa\u5b9a\u3057\u3066\u6761\u4ef6\u306b\u5408\u3046\u3082\u306e\u3092\u3055\u304c\u3059\uff08\u9577\u3044\u307b\u3046\u304b\u3089\uff12\u672c\u56fa\u5b9a\u3067\u3082OK\uff09\n\u6700\u9577\u3068\u6700\u77ed\u3092\u56fa\u5b9a\u3059\u308b\u3068\u3084\u3084\u3053\u3057\u304f\u306a\u308b\u304b\u3089\u3001\u3053\u3046\u3044\u3046\u5834\u5408\u306f\u6700\u9577\/\u6700\u77ed\u3069\u3061\u3089\u304b\u304b\u3089\u56fa\u5b9a\u3059\u308b\u307b\u3046\u304c\u3044\u3044\u304b\n\"\"\"\n\n\nans = 0\nfor i in range(N-2):\n    a = L[i]\n    for j in range(i+1, N-1):\n        #b = L[j]\n        # \u305d\u3082\u305d\u3082c\u304ca\u3084b\u3088\u308a\u5927\u304d\u3044\u306e\u3067\u3001\u4e0b\u306e\u89e3\u6cd5\u306e\u3088\u3046\u306bil\u3092\u6c42\u3081\u308b\u5fc5\u8981\u306a\u3069\u306a\u304f\u3001il=\u3067\u8003\u3048\u308c\u3070\u826f\u304b\u3063\u305f\u3093\u3084\uff01\n        k = bisect_left(L, a+L[j])\n        ans += k - j - 1\n\n\n\n\"\"\"\nans = 0\nfor i in range(N):\n    for j in range(i+1, N):\n        l = L[j] - L[i]\n        r = L[j] + L[i]\n        #  a < b < c\uff08\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u7b49\u53f7\u3092\u542b\u3080\uff09\u3067\u8003\u3048\u305f\u3068\u304d\u306e\u3001b - a < c\u3092\u6e80\u305f\u3059\u3082\u306e \n        il = bisect_right(L, l, lo=j)\n        #  a < b < c\uff08\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u7b49\u53f7\u3092\u542b\u3080\uff09\u3067\u8003\u3048\u305f\u3068\u304d\u306e\u3001c < a + b\u3092\u6e80\u305f\u3059\u3082\u306e\n        ir = bisect_left(L, r, lo=j)\n        # b - a < c\u3092\u6e80\u305f\u3059\u3082\u306e\u304c\u306a\u3044\u5834\u5408\u3001\u98db\u3070\u3059\n        if il == N-1:\n            break\n        \n        ans += ir - il - 1\n\"\"\"\n\nprint(ans)\n","n = input()\nl = input().split(\" \")\nl = [int(i) for i in l]\n\nl.sort(reverse = True)\n\nres = 0\n\nfor i in list(range(0, len(l) - 2)):\n  e1 = l[i]\n  for j in list(range(i+1, len(l) - 1)):\n    e2 = l[j]\n    e3can = l[j+1:]\n    res = res + len([k for k in e3can if k > e1 - e2])\n\nprint(res)","n,res = int(input()),0\nl = sorted(list(map(int,input().split())))\nfor i in range(n-2):\n    for j in range(i +1 , n-1 ):\n        for k in range( j + 1, n ):\n            if l[k] < l[i] + l[j]: res += 1\nprint(res)\n\n\n","N = int(input())\nL = list(map(int, input().split()))\n\nL = sorted(L)\n\ncnt = 0\nfor c in range(N-2):\n    for b in range(c+1, N-1):\n        for a in range(b+1, N):\n            if L[b]-L[c] >= L[a]:\n                continue\n            elif L[a] < L[b] + L[c]:\n                cnt += 1\n                continue\n            elif L[a] >= L[a] + L[c]:\n                break\n            break\n\nprint(cnt)\n","from itertools import combinations\n\nN = int(input())\nL = sorted(list(map(int, input().split())))\n\ncount = 0\nfor bars in list(combinations(L, 3)):\n    if bars[2] < bars[0] + bars[1]:\n        if bars[1] - bars[0] < bars[2]:\n            count += 1\n\nprint(count)","n = int(input())\na = list(map(int, input().split()))\na = sorted(a, reverse=True)\ndef find_min_fuka_idx(lst, e1, e2):\n  ok = -1\n  ng = len(lst)\n  while abs(ok-ng)>1:\n    mid = (ok+ng)\/\/2\n    e3 = lst[mid]\n    if e1+e2 > e3 and e2+e3>e1 and e3+e1>e2:\n      ok = mid\n    else:\n      ng = mid\n  return ng\nc = 0\nfor i in range(n-2):\n  for j in range(i+1, n-1):\n    c += find_min_fuka_idx(a[j+1:], a[i], a[j])\nprint(c)\n  ","n=int(input())\na=list(map(int,input().split()))\ns=set(a)\na1=[]\na2=[]\na3=[]\nfor ii in s:\n  c=a.count(ii)\n  if c==1:\n    a1.append(ii)\n  elif c==2:\n    a2.append(ii)\n  else:\n    a3.append(ii)\na2=a2+a3\na1.sort()\na2.sort()\n\nr=len(a3)\nfor ii in range(len(a2)):\n  for jj in range(len(a1)):\n    if 2*a2[ii]<=a1[jj]:\n      break\n    r+=1\n\n  for jj in range(len(a2)):\n    if 2*a2[ii]<=a2[jj]:\n      break\n    if ii!=jj:\n      r+=1\na1=a1+a2\nimport numpy as np\nfor ii in range(len(a1)-2):\n  for jj in np.arange(ii+1,len(a1)-1):\n    for kk in np.arange(jj+1,len(a1)):\n      if a1[ii]+a1[jj]<=a1[kk]:\n        break\n      r+=1\n      #print(r,a1[ii],a1[jj],a1[kk])\nprint(r)","import bisect\n\nn = int(input())\nL = sorted(list(map(int,input().split())))\n\nans = 0\n\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        k = bisect.bisect_left(L,L[i]+L[j])\n        ans += k-j-1\nprint(ans)","import bisect\nimport sys\n\ninput = sys.stdin.readline\n\n\ndef read_i():\n    return list(map(int, input().split()))\n\n\nn = int(input())\nls = sorted(read_i())\nls2 = ls[::-1]\nres = 0\nfor i, x in enumerate(ls2):\n    for j, y in enumerate(ls2[i + 1:], i + 1):\n        res += n - j - 1 - bisect.bisect(ls[:-(j + 1)], x - y)\nprint(res)","import bisect\n\nn = int(input())\nbar = [ int(v) for v in input().split() ]\nbar.sort()\n\nans = 0\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        ans += bisect.bisect_right(bar,bar[i]+bar[j]-1) - j - 1\nprint(ans)","n = int(input())\nL = list(map(int, input().split()))\nL.sort()\nans = 0\n#print(L)\n\nfor i in range(n):\n    for j in range(i+1, n-1):\n        length = L[i] + L[j]\n\n        l = j+1\n        r = n-1\n        m = (l + r) \/\/ 2\n\n        while True:\n            if l > r:\n                #m = -1\n                break\n            m = (l + r) \/\/ 2\n            if L[m] < length:\n                l = m + 1\n            else:\n                r = m - 1\n\n#        print(i, j, m)\n        if m+1 < n and L[m+1] < length:\n#            print('increment!')\n            m += 1\n        if L[m] >= length and L[m-1] < length:\n            m -= 1\n#            print('decrement!')\n        if L[m] < length:\n            #print('count up: ' + str(m - j) + '\\n')\n            ans += m - j\n\nprint(ans)","import bisect\nN = int(input())\nL = [int(i) for i in input().split()]\nL.sort()\nans = 0\n\nfor i in range(N):\n  for j in range(i+1,N):    \n    A = L[i]+L[j]\n    tmp = bisect.bisect_left(L,A)\n    ans += tmp-j-1\nprint(ans)","n=int(input())\nl=list(map(int,input().split()))\nans=0\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        left=abs(l[i]-l[j])\n        right=l[i]+l[j]\n        ans+=len(list(filter(lambda x: left<x<right, l[j+1:])))\nprint(ans)","n=int(input())\nl=list(map(int,input().split()))\nans=0\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        for k in range(j+1,n):\n            if l[i]<l[j]+l[k] and l[j]<l[k]+l[i] and l[k]<l[i]+l[j]:\n                ans+=1\nprint(ans)","import sys\nfrom itertools import accumulate\nimport bisect\ninput = sys.stdin.readline\ndef inputs():return [int(x) for x in input().split()]\nN = int(input())\nL= inputs()\nL.sort()\nb= 0\nans = 0\nfor i in range(N-1,-1,-1):\n    for j in range(i-1,-1,-1):\n        b= L[i]-L[j]\n        insert_index = bisect.bisect_right(L,b)\n        #print(L,b,i,j,insert_index)\n        ans += max(j-insert_index,0)\n        #print(ans)\nprint(ans)\n","from itertools import combinations\nimport numpy as np\n\nn=int(input())\nl=sorted([int(i) for i in input().split()])\n\nv=np.array([l[0], l[1]])\nvsum=np.array([l[0]+l[1]])\n\nc=0\n\nfor i in range(2, n):\n    p=l[i]\n    c+=np.sum(vsum>p)\n    vsum = np.concatenate([vsum, v+p], 0)\n    v=np.append(v, p)\n\nprint(c)","a = int(input())\nb = [int(elem) for elem in input().split()]\nb.sort(reverse=True)\ncounter = 0\nfor i in range(a-2):\n\tfor j in range(i+1, a-1):\n\t\tfor k in range(j+1, a):\n\t\t\tif b[i] < b[j] + b[k] and b[j] < b[i] + b[k] and b[k] < b[i] + b[j]:\n\t\t\t\tcounter += 1\n\t\t\telse:\n\t\t\t\tbreak\nprint('{}'.format(counter))","n=int(input())\nl=list(map(int, input().split()))\nans=0\nfor i in range(0,n-2,1):\n  for j in range(i+1,n-1,1):\n    for k in range(j+1,n,1):\n      if l[i]<l[j]+l[k]and l[j]<l[k]+l[i]and l[k]<l[i]+l[j]:\n        ans+=1\nprint(ans)","from bisect import*\nn,*l=map(int,open(0).read().split())\nl.sort()\n#print(l)\nans=0\nfor i in range(n):\n    for j in range(i+1,n):\n#        print(max(bisect_left(l,l[i]+l[j])-j-1,0),l[i]+l[j])\n        ans+=max(bisect_left(l,l[i]+l[j])-j-1,0)\nprint(ans)","import bisect\n\nN = int(input())\nL = sorted([int(i) for i in input().split()])\n\nans = 0\nfor i, a in enumerate(L):\n    if i == len(L) - 2:\n        break\n    for j in range(1, N-1-i):\n        l = j + i\n        b = L[l]\n        idx = bisect.bisect_left(L, a + b, lo=l+1)\n        ans += (idx - (l + 1))\n        \nprint(ans)","import bisect\n\nN = int(input())\nL = [int(a) for a in input().split()]\n\nL.sort()\n\nnum_triangles = 0\nfor i in range(0, N - 2): # 0, 1, ..., N - 3\n    for j in range(i + 1, N - 1): # i+1, i+2, ..., N-2\n        num_triangles += bisect.bisect_left(L[j + 1:N], L[i] + L[j])\n\nprint(num_triangles)","from bisect import bisect_left\n\nN = int(input())\nL = [int(x) for x in input().split()]\nL.sort()\n\nans = 0\nfor i in range(N-2):\n\tfor j in range(i+1,N-1):\n\t\tans += bisect_left(L, L[i]+L[j])-j-1\nprint(ans)","N = int(input())\nLs = list(map(int, input().split()))\n\nLs.sort(reverse = True)\ntotal = 0\n\n# print(Ls)\n\n# skip = 10\n\nfor i in range(N-2):\n    for j in range(i+1, N-1):\n        sub_total = 0\n        for k in range(j+1, N):\n            if Ls[i]-Ls[j] < Ls[k] and Ls[i]+Ls[j] > Ls[k]:\n                total += 1\n            elif Ls[i]-Ls[j] >= Ls[k]:\n                break\n\nprint(total)\n","import bisect    \n    \nN = int(input())\nb = list(int(i) for i in input().split())\nb.sort()\nsum_N = 0\nfor i,x in enumerate(b):\n    s = i+1\n    for y in range(i+1,N,1):\n        index = bisect.bisect_left(b,x+b[y])\n        sum_N += max(0,index - y -1)\nprint(sum_N)","n = int(input())\nl = [int(i) for i in input().split()]\n\ns = 0\nfor i in range(n-2):\n  for j in range(i+1, n-1):\n    for k in range(j+1, n):\n      if (l[i] < l[j]+l[k]) and (l[j] < l[k]+l[i]) and (l[k] < l[i]+l[j]):\n        s += 1\nprint(s)","from itertools import combinations\nn = int(input())\nl = list(map(int,input().split()))\ncomb = combinations(l,3)\ncnt = 0\nfor a,b,c in comb:\n    if a<b+c and b<c+a and c<a+b:\n        cnt += 1\nprint(cnt)","n = int(input())\narrl = list(map(int,input().split()))\nimport itertools\ncount = 0\nfor i in itertools.combinations(arrl,3):\n    i = list(i)\n    i.sort()\n    if i[0] + i[1] > i[2]:\n        count += 1\nprint(count)","# -*- coding: utf-8 -*-\nN = int(input())\nL = list(map(int, input().split()))\n\ndef main():\n    tri = 0\n    L.sort()\n    for i in range(N-1,-1,-1): #range(\u521d\u671f\u5024,\u7d42\u4e86\u6761\u4ef6,\u5909\u5316\u91cf)\n        mn = 0\n        sl = i-1\n        while(mn<sl):\n            if (L[mn] + L[sl]) > L[i]:\n                tri += sl - mn\n                sl -= 1\n            else:\n                mn += 1\n    print(tri)\n    \nmain()","n = int(input())\nl = list(map(int, input().split()))\nl.sort()\ndef bin_search(key, list):\n    ok = n\n    ng = -1\n    while abs(ok - ng) > 1:\n        mid = (ok + ng) \/\/ 2\n        if list[mid] > key:\n            ok = mid\n        else:\n            ng = mid\n    return ok\n\nans = 0\nfor i in range(1, n - 1):\n    for j in range(i + 1, n):\n        c_min_len = l[j] - l[i]\n        x = i - bin_search(c_min_len, l)\n        ans += max(0, x)\nprint(ans)","import bisect\n\nN = int(input())\nL = list(map(int, input().split()))\nL.sort(reverse=True)\n\nans = 0\ndif = 0\ncount = 0\nfor i in range(N-2):\n    for j in range(i+1, N-1):\n        dif = L[i] - L[j] + 1\n        L_descend = sorted(L[j+1:])\n        # print(L_descend, bisect.bisect_left(L_descend, dif))\n        index = bisect.bisect_left(L_descend, dif)\n        count = len(L_descend) - index\n        ans += count\n        # print(\"ans = \", ans)\nprint(ans)\n","N = int(input())\nd = input().split()\nd.sort()\n\nli = []\n\ntemp = ''\nfor i in range(N):\n    if(temp != d[i]):\n        temp = d[i]\n        li.append(int(d[i]))\n\nsum = 0\nfor i in range(N-2):\n    for j in range(i+1,N-1):\n        for k in range(j+1,N):\n            if(int(li[i])<int(li[j])+int(li[k]) and int(li[j])<int(li[i])+int(li[k]) and int(li[k])<int(li[i])+int(li[j])):\n                sum += 1\n            else:\n                break\nprint(sum)","n = int(input())\nl = list(map(int, input().split()))\ncnt = 0\nfor i in range(n-2):\n    for j in range(i+1, n-1):\n        for k in range(j+1, n):\n            if l[i] < l[j] + l[k] and l[j] < l[i] + l[k] and l[k] < l[i] + l[j]:\n                cnt += 1\nprint(cnt)","if __name__ == '__main__':\n    n = int(input())\n    l = list(map(int,input().split()))\n\n    answer = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            for k in range(j+1,n):\n                if abs(l[j]-l[k]) < l[i] and l[i] < l[j] + l[k]:\n                    answer += 1\n\n    print(answer)\n","import sys\ninput = sys.stdin.readline\nimport bisect\nn = int(input())\na = [int(i) for i in input().split()]\na = tuple(sorted(a))\nans = 0\nfor i in range(n-2):\n  for j in range(i+1,n-1):\n    chk = a[i]+a[j]\n    ind = bisect.bisect_left(a,chk)\n    ans += (ind-j-1)\nprint(ans)  ","import bisect\nN = int(input())\nls = list(map(int,input().split()))\nls.sort()\nans = 0\nfor i in range(N-2):\n    for j in range(i+1,N-1):\n        ls1 = ls[j+1:]\n        ans += bisect.bisect_left(ls1,ls[j]+ls[i]+1)-bisect.bisect(ls1,ls[j]-ls[i]-1)\nprint(ans)","from heapq import heappush, heappop\nfrom collections import deque,defaultdict,Counter\nimport itertools\nfrom itertools import permutations,combinations\nimport sys\nimport bisect\nimport string\n#import math\n#import time\n#import random  # randome is not available at Codeforces\ndef I():\n    return int(input())\ndef MI():\n    return map(int,input().split())\ndef LI():\n    return [int(i) for i in input().split()]\ndef LI_():\n    return [int(i)-1 for i in input().split()]\ndef StoI():\n    return [ord(i)-97 for i in input()]\ndef show(*inp,end='\\n'):\n    if show_flg:\n        print(*inp,end=end)\nYN=['Yes','No']\nmo=10**9+7\ninf=float('inf')\n#eps=10**(-10)\n#ts=time.time()\n#sys.setrecursionlimit(10**6)\ninput=lambda: sys.stdin.readline().rstrip()\n\nshow_flg=False\nshow_flg=True\n\nn=I()\na=sorted(LI())[::-1]\n\ns=set()\nfor i in a:\n    s.add(i)\ns=sorted(list(s))[::-1]\nL=1080\n#L=10000\nk=[0]*(L)\nak=[0]\nans=0\n\nfor i in a:\n    k[i]+=1\nfor i in range(L):\n    ak.append(ak[-1]+k[i])\n\nun=len(s)\nfor i in range(un):\n    c=s[i]\n    if k[c]>=3:\n        ans+=k[c]*(k[c]-1)*(k[c]-2)\/\/6\n    if k[c]>=2:\n        ans+=ak[c]*k[c]*(k[c]-1)\/\/2\n    for j in range(i+1,un):\n        #show('i,j,s[i],s[j],mm',i,j,'|',s[i],s[j],s[i]-s[j]+1,'|',ak[s[i]-s[j]],ans)\n        \n        sc=s[j]\n        if ak[sc]==0:\n            break\n        mm=c-sc+1\n        if mm<0:\n            continue\n        elif mm>sc:\n            continue # break\n        else:\n            ans+=k[c]*k[sc]*((1 if 2*k[sc]>k[c] 0)*(k[sc]-1)\/\/2+ak[sc]-ak[mm])\n        #show('ans+=',k[sc]*(k[sc]-1)\/\/2+ak[sc]-ak[mm])\n    \nprint(ans)\n    \n","import sys\n\ndef main():\n\n\targs = sys.argv\n\tN = int(input())\n\tL = list(map(int, input().split()))\n\tC = 0\n\tfor i in range(0, N-2):\n\t\tfor j in range(i+1, N-1):\n\t\t\tfor k in range(j+1, N):\n\t\t\t\tif L[i] < L[j] + L[k] and L[j] < L[k] + L[i] and L[k] < L[i] + L[j]:\n\t\t\t\t\tC = C + 1\n\tprint(C)\n\nif __name__ == \"__main__\":\n    main()","import bisect\n\nN = int(input())\nL = list(map(int,input().split()))\nL.sort()\n\nans = 0\nfor i in range(1,N-1):\n  for j in range(i+1,N):\n    m = bisect.bisect_right(L,L[j]-L[i])\n    if i>m:\n      ans += i-m\nprint(ans)","import bisect\nn = int(input())\nl = list(map(int,input().split()))\nl = sorted(l)\nans = 0\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        x = bisect.bisect_left(l, l[i] + l[j], j+1)\n        ans += x -j -1\nprint(ans)\n","import itertools\n\nn = int(input())\n\nl = list(map(int, input().split()))\n\nzzz = list(itertools.combinations(l,2))\n\n\ncnt = 0\nprint(zzz)\n\nfor z in zzz:\n\n    b = z[0]\n    c = z[1]\n\n    b_flg = True\n\n    c_flg = True\n\n    for i in l:\n        if b_flg and i == b:\n            continue\n\n        if c_flg and i == c:\n            continue\n                \n        if abs(b-c) < i < b+c:\n            cnt += 1\n\nprint(cnt \/ 3)\n","N = int(input())\nL = map(int, input().split())\nSL = sorted(list(L))\nA = [0] * (10 ** 3 + 10)\n\nfor i in SL:\n    A[i] = True\nfor i in range(len(A)):\n    if A[i] == True:\n        A[i] = A[i-1] + 1\n    else:\n        A[i] = A[i-1]\n\n# print(A[4-1] - A[2])\n\nans = 0\nfor i in range(N-2):\n    for j in range(i+1, N-1):\n        for k in range(j+1, N):\n            # print(i, j, k)\n            a = SL[i]\n            b = SL[j]\n            c = SL[k]\n            if a < b + c and b < c + a and c < a + b:\n                ans += 1\nprint(ans)","n = int(input())\nxs = list(map(int,input().split()))\nxs.sort()\nans = 0\nfor i in range(n-2):\n  for j in range(i+1,n-1):\n    for k in range(j+1,n):\n      if xs[i] + xs[j] <= xs[k]:\n        break\n      ans += 1\nprint(ans)\n\n\n","import sys; readline = sys.stdin.readline\nfrom collections import deque\n\n\nN = int(readline())\nL = list(map(int, readline().split()))\n\nL.sort()\n\nNs = [0] * (2*10**3 + 10)\n\nfor l in L:\n    Ns[l] += 1\n\ncNs = [0] * len(Ns)\nfor i in range(1, len(Ns)):\n    cNs[i] = cNs[i - 1] + Ns[i]\n\ncount = 0\nfor i in range(N - 1, -1, -1):\n    for j in range(i - 1, -1, -1):\n        m = L[i] - L[j]\n        M = L[j] - 1\n        count += max(0, cNs[M] - cNs[m])\n\n        if L[j] == m:\n            count += max(0, Ns[L[j]] - 1)\n        \n\nprint(count)","import bisect\n\nn = int(input())\nL = sorted([int(x) for x in input().split()])\nans = 0\nfor ai in range(n - 1):\n    for bi in range(ai + 1, n):\n        a = L[ai]\n        b = L[bi]\n        l, r = abs(a - b) + 1, a + b - 1\n        li = bisect.bisect_left(L, l)\n        ri = bisect.bisect_right(L, r)\n        ans += ri - li\n        if li <= ai <= ri:\n            ans -= 1\n        if li <= bi <= ri:\n            ans -= 1\nprint(int(ans \/ 3))\n","n = int(input())\nv = [int(x) for x in input().split()]\n\ndef check(a,b,c):\n  if a + b > c and b + c > a and c + a > b:\n    return True\n  return False\n\nres = 0\nfor i in range(n):\n  for j in range(i+1,n):\n    for k in range(j+1,n):\n      if check(v[i],v[j],v[k]):\n        res += 1\nprint(res)","import itertools\n\nN = int(input())\nL = list(map(int, input().split()))\n\nL = sorted(L, reverse = True)\n\ncomb = itertools.combinations(L, 3)\n\ncount = 0\n\nfor item in comb:\n#    print(item)\n    if item[0] < item[1] + item[2]:\n        count += 1\n\nprint(count)\n\n","import itertools\n\nN = int(input())\nL = list(map(int, input().split()))\n\ntriangle = 0\nb = list((itertools.combinations(L, 3)))\nc = list((itertools.combinations(L, 3)))\n\nfor i in range(len(c)):\n    if (c[i][0] < c[i][1] + c[i][2]\n            and c[i][1] < c[i][0] + c[i][2]\n            and c[i][2] < c[i][1] + c[i][0]):\n        triangle += 1\n\nprint(triangle)\n","N = int(input())\nl_list = list(map(int, input().split()))\nl_list.sort()\n\ncnt = 0\nstart_j = 1\nstart_k = 2\nfor i in range(N):\n    for j in range(i+1, N):\n        for k in range(j+1, N):\n            if l_list[k] < l_list[i] + l_list[j]:\n                cnt += 1\n            else:\n                break\nprint(cnt)","N=int(input())\nL=input()\nL=L.split(\" \")\nL_i=[]\nfor i in L:\n L_i.append(int(i))\n\ncount=0\nfor i in range(0,N):\n for j in range(i+1,N):\n  for k in range(j+1,N):\n   if(L_i[i]<L_i[j]+L_i[k] and L_i[j]<L_i[k]+L_i[i] and L_i[k]<L_i[i]+L_i[j] ):\n    count+=1\n\nprint(count)","import itertools\n\nn = int(input())\nL = list(map(int, input().split()))\n\ncircle = list(itertools.combinations(L, 3))\n\ncount = 0\nfor c in circle:\n    if c[0] < c[1] + c[2] and c[1] < c[2] + c[0] and c[2] < c[0] + c[1]:\n        count += 1\n\nprint(count)","import math\nimport itertools\nimport copy\nimport bisect\n\nN = int(input())\nL = [int(x) for x in input().split()]\nLs = sorted(L) # L\u3092\u964d\u9806\u306b\u30bd\u30fc\u30c8\n#print(Ls)\ncnt = 0\n\nfor i in range(N) :\n    a = Ls[i]\n    for j in range(i+1,N) :\n        #print(\" \")\n        b = Ls[j]\n        L_roop = copy.deepcopy(Ls[j+1:])\n        #print(L_roop)\n\n        # 2\u5206\u63a2\u7d22 x2 index\u3092\u6c42\u3081\u308b\n        ba = bisect.bisect(L_roop,abs(a-b)+0.1)\n        #print(abs(a-b)+0.1,ba)\n        L_roop.insert(ba,abs(a-b)+0.1)\n        #print(\"a\",L_roop)\n\n        bb = bisect.bisect(L_roop,abs(a+b)-0.1)\n        #print(abs(a+b)-0.1,bb)\n        L_roop.insert(bb,abs(a+b)-0.1)\n        #print(\"b\",L_roop)\n\n        #print(\"ba,bb\",ba,bb)\n        if bb - ba > 1 :\n            #print(Ls[i],Ls[j],L_roop[ba+1])\n            cnt += bb - ba - 1\n    \nprint(cnt)\n","import itertools\nN = int(input())\nA = list(map(int, input().split())) \ntk = list(itertools.combinations(A, 3))\ncount = 0\n\nfor i in range(len(tk)):\n    test = sorted(tk[i], reverse=True)\n    if (test[1] - test[2] < test[0])and(test[0] < test[1] + test[2]):\n        count += 1\n        \nprint(count)","import bisect\nn = int(input())\nl = sorted(list(map(int, input().split())))\ns = 0\nfor i in range(0,n-2):\n  a = l[i]\n  for j in range(i+1,n-1):\n    b = l[j]\n    s += bisect.bisect_left(l,a+b)-j-1\nprint(s)","n=int(input())\nlistl = [int(i) for i in input().split()]\n\nlistl.sort(reverse=True)\n\n#print(listl)\nans=0\nfor i in range(n-2):\n\tfor j in range(i+1,n-1):\n\t\tif listl[j]<=(listl[i]\/2):\n\t\t\tbreak\n\t\tfor k in range(j+1,n):\n\n\t\t\tif listl[i]<listl[j]+listl[k]:\n\t\t\t\tans=ans+1\n\t\t\telse:\n\t\t\t\tbreak\t\nprint(1)\nprint(ans)\n\t\t\t\t \n\t\t","import itertools\nN = int(input())\nd_list = list(map(int, input().split()))\nc_d_list = list(itertools.combinations(d_list, 3))\ncount = 0\nfor i in c_d_list:\n    a = i[0]\n    b = i[1]\n    c = i[2]\n    if a < b + c:\n        if b < a + c:\n            if c < a + b:\n                count += 1\nprint(count)","import itertools\n \nn = int(input())\nl = list(map(int, input().split()))\n \ncnt = 0\n \nfor subset in itertools.combinations(l, 3):\n    L = [subset[0],subset[1],subset[2]]\n    L.sort()\n    if abs(L[0]-L[1]) < L[2] < L[0]+L[1]:\n        cnt += 1\nprint(cnt)","import bisect\nn = int(input())\nl = list(map(lambda x:int(x),input().split()))\nl = sorted(l)\n\nans = 0\nfor i in range(n):\n    for j in range(i+1,n):\n        ans += bisect.bisect_left(l,l[i]+l[j])-j-1\n        \nprint(ans)","n=int(input())\nl = list(map(int,input().split()))\nans=0\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        for k in range(j+1,n):\n            if abs(l[i]-l[j]) < l[k] and l[k] <  l[i]+l[j]:\n                ans+=1\n            else:\n                ans+=0\nprint(ans)","a = int(input())\nb = str(input())\nc = b.split(\" \")\nans = 0\nfor i in range(a):\n  for j in range(a):\n    if j<=i:continue\n    for k in range(a):\n      if k<=i or k<=j:continue\n      if (int(c[i]) < (int(c[j])+int(c[k]))) and (int(c[j]) < (int(c[i])+int(c[k]))) and (int(c[k]) < (int(c[i])+int(c[j]))):\n        ans += 1\nprint(ans)","n = int(input())\nl = list(map(int, input().split()))\n\nfor i in range(n):\n    for j in range(i, n - i):\n        a = l[i]\n        b = l[j]\n        for k in range(j, n - i - j):\n            c = l[k]\n            if (a < b + c) and (b < c + a) and (c < a + b):\n                ans += 1\n\nprint(ans)\n","n = int(input())\nl = list(map(int, input().split()))\nl.sort()\n\nhoge = []\nans = 0\na = b = c = None\nfor i in range(n - 2):\n    if i == 0 or l[hoge[-1][0]] != l[i]:\n        for j in range(i + 1,n - 1):\n            if j == i + 1 or l[hoge[-1][1]] != l[j]:\n                for k in range(j + 1, n):\n                    if k == j + 1 or l[hoge[-1][2]] != l[k]:\n                        hoge.append([i, j, k])\nfor i, j, k in hoge:\n    a = l[i]\n    b = l[j]\n    c = l[k]\n    if a < b + c and b < a + c and c < b + a:\n        ans += 1\nprint(ans)\n","def check(data):\n  data=[int(i) for i in data]\n  if data[0]>=data[1]+data[2]:\n    return False\n  elif data[1]>=data[0]+data[2]:\n    return False\n  elif data[2]>=data[0]+data[1]:\n  \treturn False\n  else:\n    return True\ninput()\ndata=[i for i in input().split()]\ntriangles=set()\nfor id1,i in enumerate(data):\n  for id2,j in enumerate(data):\n    if id1==id2:\n      continue\n    for id3,k in enumerate(data):\n      if id1==id3 or id2==id3:\n        continue\n      tri=[i,j,k]\n      tri.sort()\n      if \"-\".join(tri) not in triangles:\n        if check(tri):\n          triangles.add(\"-\".join(tri))\nprint(len(triangles))","N = int(input())\nL = list(map(int, input().split()))\ncount = 0\nfor i in range(0,N):\n  for j in range(i+1,N):\n    for k in range(j+1, N):\n      a = L[i]\n      b = L[j]\n      c = L[k]\n      if a < b+c and b < a+c and c < a+b:\n        count += 1\nprint(count)","n = int(input())\nl = list(map(int , input().split()))\nl = sorted(l, key=None, reverse=True)\nans = 0\nfor i in range(0, n):\n    for j in range(i + 1, n):\n        for k in range(j + 1, n):\n            print(i,j,k)\n            if l[i] < l[j] + l[k] and l[j] < l[i] + l[k] and l[k] < l[i] + l[j]:\n                ans += 1\n                print('ok')\n            else:\n                print('break')\n                break\n        else:\n            continue\n        break\nprint(ans)\n\n","import sys\nimport bisect\nreadline = sys.stdin.readline\nn = int(readline())\nA = list(map(int,readline().split()))\nmemo1 = {}\nmemo2 = {}\nA.sort()\nmemo1[A[0]+A[1]] =1\nmemo2[A[0]] =1\nif A[1] in memo2:\n    memo2[A[1]] +=1\nelse:\n    memo2[A[1]] =1\nans = 0\nfor c in A[2:]:\n    for l,amount in memo1.items():\n        if c<l:\n            ans +=amount\n    for a,amount in memo2.items():\n        ac = a+c\n        if ac in memo1:\n            memo1[ac] += memo2[a]\n        else:\n            memo1[ac] = memo2[a]\n    if c in memo2:\n        memo2[c] +=1\n    else:\n        memo2[c] =1\n\nprint(ans)","N = int(input())\nL = list(map(int, input().split()))\nL.sort()\nans = 0\nfor i in range(N):\n    for j in range(i+1, N, 1):\n        for k in range(j+1, N, 1):\n            if L[k] < L[i]+L[j]:\n                ans+=1\nprint(ans)","from bisect import*\nfrom itertools import*\nn,*L=map(int,open(0).read().split())\nL.sort()\nans=0\nfor x,y in combinations(L,2):\n\tlow=abs(x-y)\n\thigh=x+y\n\tans+=bisect_left(L,high)-bisect(L,low)\n\tif low<x<high:\n\t\tans-=1\n\tif low<y<high:\n\t\tans-=1\nprint(ans\/\/3)","import bisect\nn = int(input())\nl = list(map(int, input().split()))\nl.sort()\n\ncnt = 0\n\nprint(l)\nfor i in range(n - 1, 0, -1):\n    for j in range(i - 1, -1, -1):\n        base = l[i] - l[j]\n        idx = bisect.bisect_right(l, base)\n        cnt += max(j - idx, 0)\nprint(cnt)\n\n\n","# -*- coding: utf-8 -*-\nimport bisect\n\n# \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u6574\u6570\u306e\u5165\u529b\nn = int(input())\nl_list = input().split(\" \")\nl_int_list = []\nfor item in l_list:\n    l_int_list.append(int(item))\n\nl_int_list.sort()\n\ncount = 0\n\n\nfor i in range(len(l_int_list)):\n    for j in range(i+1, len(l_int_list)):\n        index = bisect.bisect_left(\n            l_int_list, l_int_list[i]+l_int_list[j], j+1, len(l_int_list))\n        count += index - j - 1\n\nprint(count)\n","import itertools\nn = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in itertools.combinations(l,3):\n  if i[0]<i[1]+i[2] and i[1]<i[2]+i[0] and i[2]<i[0]+i[1]:\n    ans+=1\nprint(ans)","import bisect\nN=int(input())\nL=list(map(int,input().split()))\nL.sort()\nans=0\nfor i in range(N-2):\n  for j in range(i+1,N-1):\n    a=bisect.bisect_left(L,L[i]+L[j])\n    ans+=(a-j-1)\nprint(ans)","import bisect\nN = int(input())\nL = list(map(int, input().split()))\nL.sort()\n\ncount = 0\nfor i in range(N):\n    for j in range(i+1, N):\n        a = L[i]\n        b = L[j]\n        k = bisect.bisect_left(L, a+b)\n        if k > j:\n            count += k -j -1\nprint(count)","from bisect import bisect_left\n\nN=int(input())\nL=list(map(int,input().split()))\nL.sort()\nans=0\nfor i in range(N-2):\n    for j in range(i+1,N-1):\n        l=L[i]+L[j]\n        c=bisect_left(L,l)\n        ans+=max(0,c-j-1)\nprint(ans)\n"],"raw_generations":["n = int(input())\nl = list(map(int, input().split()))\nl.sort(reverse=True)\nco = 0\nfor i in range(n-2):\n  for j in range(i+1,n-1):\n    if l[i] >= l[j]+l[j+1]:\n      m = n-j\n      co += (m*(m-1))\/\/2\n      break\nprint(n*(n-1)*(n-2)\/\/6-co)","import sys\nimport math\nimport copy\n\ndef main():\n    n = int(input())\n    l = [int(t) for t in input().split()]\n\n    # \u307e\u305a\u306fL\u3092\u6607\u9806\u306b\u30bd\u30fc\u30c8\u3059\u308b\n    l.sort()\n    \n    count = 0\n    # 1\u756a\u77ed\u3044\u68d2(i)\u30682\u756a\u76ee\u306b\u77ed\u3044\u68d2(j)\u3092\u6c7a\u3081\u308b\n    for i in range(0, n):\n        for j in range(i+1, n):\n            lb, ub = j, n\n            while ub - lb > 1:\n                half = (lb + ub) \/\/ 2\n                if l[half] < l[i] + l[j]:\n                    lb = half\n                else:\n                    ub = half\n            count += ub - (j + 1)\n\n    print(count)\n\n    return 0\n\nif __name__ == '__main__':\n    sys.exit(main())","import itertools\n\ndef read():\n    N = int(input().strip())\n    L = list(map(int, input().strip().split()))\n    return N, L\n\ndef solve(N, L):\n    L.sort()\n    count = 0\n    for a, b, c in itertools.combinations(L, 3):\n        if c < a + b:\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    inputs = read()\n    print(\"%d\" % solve(*inputs))\n","N = int(input())\nL = list(map(int,input().split()))\nL.sort()\nans = 0\nfor i in range(N-2):\n    for j in range(i+1,N-1):\n        for k in range(j+1,N):\n            if L[k] < L[i] + L[j]:\n                ans += 1\n            else:\n                break\nprint(ans)","#!\/usr\/bin\/env python3\nimport sys\n\nINF = 2 * 10 ** 3 + 1\n\ndef main():\n    N = int(input())\n    L = [int(i) for i in input().split()]\n    L.sort()\n\n    # True ---- False\n    def is_ok_top(mid: int, a: int, b: int):\n        # \u691c\u7d22\u5bfe\u8c61\u306e\u5916\u306b\u3042\u308b\u3082\u306e\u306f\u5148\u306b\u5f3e\u304f(\u30ea\u30b9\u30c8\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306a\u3093\u304b\u3060\u3068out of range\u3059\u308b\u306e\u3067)\n        if mid < 0:\n            return True\n        elif mid >= N:\n            return False\n        return L[mid] < L[a] + L[b]\n\n    def binSearch_top(ok: int, ng: int, a: int, b: int):\n        #print(ok, ng)              # \u306f\u3058\u3081\u306e2\u5024\u306e\u72b6\u614b\n        while abs(ok - ng) > 1:     # \u7d42\u4e86\u6761\u4ef6\uff08\u5dee\u304c1\u3068\u306a\u308a\u5883\u754c\u3092\u898b\u3064\u3051\u305f\u6642)\n            mid = (ok + ng) \/\/ 2\n            if is_ok_top(mid, a, b):\n                ok = mid            # mid\u304c\u6761\u4ef6\u3092\u6e80\u305f\u3059\u306a\u3089mid\u307e\u3067\u306fok\u306a\u306e\u3067ok\u306e\u65b9\u3092\u771f\u3093\u4e2d\u307e\u3067\u6301\u3063\u3066\u3044\u304f\n            else:\n                ng = mid            # mid\u304c\u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044\u306a\u3089mid\u307e\u3067\u306fng\u306a\u306e\u3067ng\u306e\u65b9\u3092\u771f\u3093\u4e2d\u307e\u3067\u6301\u3063\u3066\u3044\u304f\n            #print(ok, ng)          # \u534a\u5206\u306b\u5207\u308a\u5206\u3051\u308b\u6bce\u306e2\u5024\u306e\u72b6\u614b\n        return ok    \n\n    count = 0\n    for a in range(0, len(L) - 2):\n        for b in range(a + 1, len(L) - 1):\n            count += binSearch_top(-1, INF, a, b) - b\n\n    print(count)\n\n\n\n\n\n\n\nif __name__ == '__main__':\n    main()\n","N=int(input())\nL=list(map(int,input().split()))\n\n# \u6607\u9806\u306b\u3059\u308b\nL.sort()\n\nimport bisect\ncount=0\nfor i in range(N):\n    for j in range(i+1,N):\n        # 2\u5206\u63a2\u7d22\u3092\u4f7f\u3046\u3053\u3068\u3067n^2*log(n)\u306e\u63a2\u7d22\u3067\u7d42\u308f\u308b,\u3053\u306eindex\u306f\u65b0\u305f\u306bL[i]+L[j]\u304c\u633f\u5165\u3067\u304d\u308bindex\u306a\u306e\u3067\u3001\u3053\u306eindex-1\u304c\u6761\u4ef6\u3092\u6e80\u305f\u3059\u6700\u5927\u306ec\u306eindex\n        maximum_index = bisect.bisect_left(L,L[i]+L[j])\n        count+= maximum_index-1 - j \nprint(count)\n\n\n\n\n\n","import bisect\nN = int(input())\nL = sorted(list(map(int, input().split())))\n\ns = 0\nfor i in range(N):\n    for j in range(i + 1, N):        \n        k = bisect.bisect_left(L, L[i] + L[j])\n        s += k - j - 1\n\nprint(s)","import bisect\nN=int(input())\nL=list(map(int,input().split()))\nL.sort()\nans = 0\nfor a in range(N):\n  for b in range(a+1,N):\n    c=bisect.bisect_left(L, L[a]+L[b])#\u7b2c\u4e00\u6761\u4ef6(\u7d42\u70b9)\n    if b<c:#\u7b2c2\u6761\u4ef6\uff08\u59cb\u70b9\uff09\n      ans+=c-b-1     \nprint(ans)#bisect\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3088\u308a\u4e00\u500b\u524d\u306a\u3089\u5c0f\u3055\u3044","# -*- coding: utf-8 -*-\nN = int(input())\nL_list = list(map(int, input().split()))\n\nans = 0\nL_list.sort(reverse=True)\nb_end = N - 1\nc_end = N\nfor i in range(N - 2):\n    for j in range(i + 1, b_end):\n        for k in range(j + 1, c_end):\n            if L_list[i] < L_list[j] + L_list[k]:\n                ans += 1\n            else:\n                b_end = k\n                c_end = k + 1\n                break\n    b_end = N - 1\n    c_end = N\n\nprint(ans)","import bisect\nn = int(input())\nl = list(map(int,input().split()))\nl.sort()\nans = 0\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        r = bisect.bisect_left(l,l[i]+l[j])\n        ans += r-(j+1)\nprint(ans)","import bisect\nN = int(input())\nL = sorted(list(map(int, input().split())))\nans = 0\nfor a in range(N):\n    for b in range(a+1, N):\n        c = bisect.bisect_left(L, L[a] + L[b])\n        if c > b:\n            ans += c - b - 1\nprint(ans)","n = int(input())\n\nl = list(map(int,input().split()))\n\nans = int(0)\n\nfor i in range(n):\n    for j in range(i+1,n):\n            for k in range(j+1,n):\n                if l[i] < l[j]+l[k] and l[j] < l[i]+l[k] and l[k] < l[j]+l[i]:\n                    ans += 1\n                \nprint(ans)\n","\nN=int(input())\nL=[int(i) for i in input().split()]\nL=sorted(L)\nans=0\n\nfor i in range(N-2):\n    maxk=i+1\n    for j in range(i+1,N-1):\n        ans+=max(0,maxk-j-1)\n        for k in range(max(j+1,maxk),N):\n            if L[i]+L[j]<=L[k]:\n                ans+=k-j-1\n                maxk=k\n                break\n            if k==N-1:\n                ans+=N-j-1\n                maxk=N\nprint(ans)","from collections import defaultdict, deque\nfrom heapq import heappush, heappop\nfrom bisect import bisect_left, bisect_right\nimport sys\nimport random\nimport itertools\nimport math\nsys.setrecursionlimit(10**5)\ninput = sys.stdin.readline\nsqrt = math.sqrt\n\n\ndef LI(): return list(map(int, input().split()))\n\n\ndef LF(): return list(map(float, input().split()))\n\n\ndef LI_(): return list(map(lambda x: int(x)-1, input().split()))\n\n\ndef II(): return int(input())\n\n\ndef IF(): return float(input())\n\n\ndef LS(): return list(map(list, input().split()))\n\n\ndef S(): return list(input().rstrip())\n\n\ndef IR(n): return [II() for _ in range(n)]\n\n\ndef LIR(n): return [LI() for _ in range(n)]\n\n\ndef FR(n): return [IF() for _ in range(n)]\n\n\ndef LFR(n): return [LI() for _ in range(n)]\n\n\ndef LIR_(n): return [LI_() for _ in range(n)]\n\n\ndef SR(n): return [S() for _ in range(n)]\n\n\ndef LSR(n): return [LS() for _ in range(n)]\n\n\ndef gcd(x, y):\n    if y == 0:\n        return x\n    return gcd(y, x % y)\n\n\ndef my_index_multi(l, x):\n    return [i for i, _x in enumerate(l) if _x == x]\n\n\ndef sosu(x):\n    for i in range(2, int(sqrt(x)+1)):\n        if x % i == 0:\n            return False\n    return True\n\n\nmod = 1000000007\ninf = float('INF')\n\n\ndef A():\n    A, B = LI()\n    ans = A-2*B\n    if ans > 0:\n        print(ans)\n    else:\n        print(0)\n    return\n\n# B\n\n\ndef B():\n    N = II()\n    d = LI()\n    ans = 0\n    for i in range(N):\n        for x in range(i+1, N):\n            ans += d[i]*d[x]\n    print(ans)\n\n    return\n\n# C\n\n\ndef C():\n    N = II()\n    S = input()\n    c = 0\n    count = 0\n    for i in S:\n        if i != c:\n            count += 1\n        c = i\n    print(count-1)\n\n    return\n\n# D\n\n\ndef D():\n    N = II()\n    L = LI()\n    L2 = L.copy()\n    L2 = deque(L2)\n    count = 0\n    for i in range(N-1):\n        L2.popleft()\n        L3 = L2.copy()\n        for j in range(i+1, N):\n            L3.popleft()\n            if L3 == deque([]):\n                break\n            p = L[i]+L[j]\n\n            if min(L3) >= p:\n                continue\n            #Lk = filter(lambda x: x % 2 == 1, L2)\n            Lk = [x for x in L3 if p > x]\n\n            for k in Lk:\n                if k+L[i] > L[j] and k+L[j] > L[i]:\n                    #print(k,L[i] , L[j])\n                    count += 1\n        if len(L2) == 2:\n            break\n    print(count)\n\n    return\n\n# E\n\n\ndef E():\n    N, M = LI()\n    bit_max = 1 << N\n    dp = [[inf for i in range(bit_max)] for j in range(M+1)]\n    dp[0][0] = 0\n\n    for i in range(M):\n        a, b = LI()\n\n        c = LI()\n        bit = 0\n\n        for d in c:\n            bit |= 1 << (d-1)\n\n        for w in range(bit_max):\n\n            t = w | bit\n            cost = dp[i][w] + a\n\n            dp[i+1][t] = min(dp[i+1][t], cost)\n\n            dp[i+1][w] = min(dp[i][w], dp[i+1][w])\n\n    print(-1) if dp[-1][-1] == inf else print(dp[-1][-1])\n\n    return\n\n# F\n\n\ndef F():\n    N, M = LI()\n\n    value = [0] * M\n    power = [0] * M\n    for i in range(M):\n        a, b = LI()\n        value[i] = a\n        c = LI()\n        L = ['0'] * N\n        for k in c:\n            L[k - 1] = '1'\n        bint = ''.join(L)\n        power[i] = int(bint, 2)\n    bint = ''.join(list(['1'] * N))\n    dp = [inf] * (int(bint, 2)+1)\n    t = 0\n    cost = 0\n\n    dp[0] = 0\n    for s in range(int(bint, 2) + 1):\n        for i in range(M):\n            t = s | power[i]\n            cost = dp[s] + value[i]\n            dp[t] = min(dp[t], cost)\n    print(-1) if(dp[-1] == inf) else print(dp[-1])\n\n    return\n\n    # you can write to stdout for debugging purposes, e.g.\n# print(\"this is a debug message\")\n\n\ndef solution(S):\n    # write your code in Python 3.6\n    import math\n\n    vowels = \"AIUEO\"\n    count = 0\n    consonants = 0\n    newC = []\n    newV = []\n\n    for i in S[:-1]:\n        if i in vowels:\n            count += 1\n            newV.append(i)\n        else:\n            consonants += 1\n            newC.append(i)\n\n    if consonants < count or consonants - 2 > count:\n        return 0\n\n    a = math.factorial(len(set(newC))) * math.factorial(len(set(newV)))\n    return a\n\n    pass\n\n\n# Solve\nif __name__ == '__main__':\n    D()\n","import array\nimport bisect\n\nN = int(input())\nL = list(map(int, input().split()))\n\nL.sort()\n\nA = array.array('i', L)\n\n#print(L)\n#print(A)\n\ncount = 0\n\nfor ia in range(2,N):\n    for ib in range(1, ia):\n        ic_max = ib-1\n        c_min = A[ia]-A[ib]\n        ic_min = bisect.bisect_right(A, c_min)\n        #print('---------------------')\n        #print(ia, ib, ic_max, ic_min)\n        #print(A[ia], A[ib], A[ic_max], A[ic_min])\n        c_count = ic_max - ic_min + 1\n        if c_count > 0:\n            count += c_count\n\nprint(count)\n","import itertools\n\nN = int(input())\nL = map(int,input().split())\n\n# all_sample = N * (N-1) * (N-2) \/ 6\n\na = list(itertools.combinations(L, 3))\n\nans = 0\n\nfor i in a:\n    s = sum(i)\n    if i[0] < s\/2 and i[1] < s\/2 and i[2] < s\/2:\n        ans += 1\n\nprint(ans)","N=int(input())\nb=[]\nL=[]\nb=input().split()\n\nfor i in range(N):\n    L.append(int(b[i]))\nL.sort()\nx=0\nindex=0\nfor i in range(N-2):\n    x=L[0]\n    L.remove(L[0])\n    for k in range(N-3):\n        if (x + L[k]) > L[k+1]:\n            index+=1\nprint(index)\n","N=int(input())\nL=list(map(int,input().split()))\ncounter=0\nfor t in range(N):\n  for i in range(t+1,N):\n    for p in range(i+1,N):\n      if L[p]<L[t]+L[i] and L[t]<L[i]+L[p] and L[i]<L[p]+L[t]:\n        counter+=1\nprint(counter","length = 2010\n\nn = int(input())\nL = list(map(int, input().split()))\nans = 0\nL.sort()\nsum_1 = [ 0 for _ in range(length)]\nfor i in range(n):\n    sum_1[L[i]]+=1\n#\u68d2\u306e\u9577\u3055\u3067\u7d2f\u7a4d\u548c\nfor i in range(length-1):\n    sum_1[i+1] +=sum_1[i]\nfor i in range(n-1):\n    for j in range(i+1, n):\n        a = abs(L[i]-L[j])\n        b = L[i]+L[j]\n        ans = ans + sum_1[b-1] - sum_1[a]\n\n        if a<L[i] and L[i]<b:\n            ans -=1\n        \n        if a<L[j] and L[j]<b:\n            ans -=1\nprint(ans\/\/3)","#!\/usr\/bin\/env python3\nimport sys\n\n\ndef solve(N: int, L: \"List[int]\"):\n    from itertools import combinations\n    from bisect import bisect_left as bl\n    L = sorted(L)\n    ans = 0\n    for ai, a in enumerate(L):\n        for bi, b in enumerate(L[ai+1:-1], ai+1):\n            ci = bl(L, a+b)\n            ans += ci - bi - 1\n    return ans\n\n# Generated by 1.1.7.1 https:\/\/github.com\/kyuridenamida\/atcoder-tools\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    N = int(next(tokens))  # type: int\n    L = [int(next(tokens)) for _ in range(N)]  # type: \"List[int]\"\n    print(solve(N, L))\n\ndef test():\n    import doctest\n    doctest.testmod()\n\nif __name__ == '__main__':\n    #test()\n    main()\n","n = int(input())\nl_list = list(map(int,input().split()))\nl_list.sort()\nimport bisect\ncount = 0\nfor i in range(1,n):\n  for j in range(i+1,n):\n    b = l_list[i]\n    c = l_list[j]\n    a_cand = l_list[:i]\n    border = c-b\n    count += len(a_cand) - bisect.bisect_right(a_cand,border)\nprint(count)    \n    \n    ","from bisect import bisect_left\nn = int(input())\nl = [int(_) for _ in input().split()]\nl.sort()\ncnt = 0\nfor i in range(n):\n\tfor j in range(i+1,n):\n\t\tcnt += max(0, bisect_left(l, l[i] + l[j]) - (j+1))\nprint(cnt)","N = int(input())\nLs = sorted(map(int, input().split()))\n\nimport bisect\nans = 0\nfor i, a in enumerate(Ls[:-2]):\n  for j, b in enumerate(Ls[i + 1:-1], start=i + 1):\n\n    rest = a + b\n    end_idx = bisect.bisect_left(Ls, rest)\n\n    start_idx = j + 1\n    ans += end_idx - start_idx\n\nprint(ans)\n","import itertools\nN=int(input())\nL=[i for i in map(int,input().split())]\nM=[]\nans=0\nfor i in itertools.permutations(L,3):\n    X=list(i)\n    X.sort()\n    if X not in M :\n        if i[0] < i[1] + i[2] and i[1] < i[0] + i[2] and i[2] < i[0] + i[1] :\n            ans += 1\n            M.append(X)\nprint(ans)","N = int(input())\nl = sorted([int(item) for item in input().split(' ')])\ncount = 0\n\ndef binary_search(count, a, b, l):\n    if len(l) == 0:\n        return count\n    center = len(l) \/\/ 2\n    if a + b > l[center]:\n        count += center + 1\n        return binary_search(count, a, b, l[center+1:])\n    else:\n        return binary_search(count, a, b, l[:center])\n\n\nfor i in range(N):\n    for j in range(i + 1, N):\n        l_remained = l[j + 1:]\n        count = binary_search(count, l[i], l[j], l_remained)\n\nprint(count)\n","n=int(input())\nl=list(map(int,input().split()))\nl.sort()\ndef judge(c,a,b):\n    if a<b+c and b<a+c and c<a+b:\n        return True\n    else:\n        return False\ndef search(st,a,b):\n    min=st-1\n    max=len(l)\n    while max-min>1:\n        mid=(min+max)\/\/2\n        if judge(l[mid],a,b):\n            max=mid\n        else:\n            min=mid\n    return len(l)-max\ndef main(n,l):\n    ans=0\n    for i in range(n-2):\n        for j in range(i+1,n-1):\n            ans+=search(j+1,l[i],l[j])\n    print(ans)\nmain(n,l)","from bisect import bisect_left, bisect_right\n\nn = int(input())\n*l, = map(int, input().split())\n\nl = sorted(l)\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        idx = bisect_left(l, l[j] - l[i] + 1)\n        ans += max(0, i - idx)\n\nprint(ans)","from bisect import bisect_left\nfrom bisect import bisect_right\n\n\nN = int(input())\nL = list(map(int, input().split()))\nL.sort()\n\n\"\"\"\n\u77ed\u3044\u307b\u3046\u304b\u3089\uff12\u672c\u56fa\u5b9a\u3057\u3066\u6761\u4ef6\u306b\u5408\u3046\u3082\u306e\u3092\u3055\u304c\u3059\uff08\u9577\u3044\u307b\u3046\u304b\u3089\uff12\u672c\u56fa\u5b9a\u3067\u3082OK\uff09\n\u6700\u9577\u3068\u6700\u77ed\u3092\u56fa\u5b9a\u3059\u308b\u3068\u3084\u3084\u3053\u3057\u304f\u306a\u308b\u304b\u3089\u3001\u3053\u3046\u3044\u3046\u5834\u5408\u306f\u6700\u9577\/\u6700\u77ed\u3069\u3061\u3089\u304b\u304b\u3089\u56fa\u5b9a\u3059\u308b\u307b\u3046\u304c\u3044\u3044\u304b\n\"\"\"\n\n\nans = 0\nfor i in range(N-2):\n    a = L[i]\n    for j in range(i+1, N-1):\n        #b = L[j]\n        # \u305d\u3082\u305d\u3082c\u304ca\u3084b\u3088\u308a\u5927\u304d\u3044\u306e\u3067\u3001\u4e0b\u306e\u89e3\u6cd5\u306e\u3088\u3046\u306bil\u3092\u6c42\u3081\u308b\u5fc5\u8981\u306a\u3069\u306a\u304f\u3001il=\u3067\u8003\u3048\u308c\u3070\u826f\u304b\u3063\u305f\u3093\u3084\uff01\n        k = bisect_left(L, a+L[j])\n        ans += k - j - 1\n\n\n\n\"\"\"\nans = 0\nfor i in range(N):\n    for j in range(i+1, N):\n        l = L[j] - L[i]\n        r = L[j] + L[i]\n        #  a < b < c\uff08\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u7b49\u53f7\u3092\u542b\u3080\uff09\u3067\u8003\u3048\u305f\u3068\u304d\u306e\u3001b - a < c\u3092\u6e80\u305f\u3059\u3082\u306e \n        il = bisect_right(L, l, lo=j)\n        #  a < b < c\uff08\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u7b49\u53f7\u3092\u542b\u3080\uff09\u3067\u8003\u3048\u305f\u3068\u304d\u306e\u3001c < a + b\u3092\u6e80\u305f\u3059\u3082\u306e\n        ir = bisect_left(L, r, lo=j)\n        # b - a < c\u3092\u6e80\u305f\u3059\u3082\u306e\u304c\u306a\u3044\u5834\u5408\u3001\u98db\u3070\u3059\n        if il == N-1:\n            break\n        \n        ans += ir - il - 1\n\"\"\"\n\nprint(ans)\n","n = input()\nl = input().split(\" \")\nl = [int(i) for i in l]\n\nl.sort(reverse = True)\n\nres = 0\n\nfor i in list(range(0, len(l) - 2)):\n  e1 = l[i]\n  for j in list(range(i+1, len(l) - 1)):\n    e2 = l[j]\n    e3can = l[j+1:]\n    res = res + len([k for k in e3can if k > e1 - e2])\n\nprint(res)","n,res = int(input()),0\nl = sorted(list(map(int,input().split())))\nfor i in range(n-2):\n    for j in range(i +1 , n-1 ):\n        for k in range( j + 1, n ):\n            if l[k] < l[i] + l[j]: res += 1\nprint(res)\n\n\n","N = int(input())\nL = list(map(int, input().split()))\n\nL = sorted(L)\n\ncnt = 0\nfor c in range(N-2):\n    for b in range(c+1, N-1):\n        for a in range(b+1, N):\n            if L[b]-L[c] >= L[a]:\n                continue\n            elif L[a] < L[b] + L[c]:\n                cnt += 1\n                continue\n            elif L[a] >= L[a] + L[c]:\n                break\n            break\n\nprint(cnt)\n","from itertools import combinations\n\nN = int(input())\nL = sorted(list(map(int, input().split())))\n\ncount = 0\nfor bars in list(combinations(L, 3)):\n    if bars[2] < bars[0] + bars[1]:\n        if bars[1] - bars[0] < bars[2]:\n            count += 1\n\nprint(count)","n = int(input())\na = list(map(int, input().split()))\na = sorted(a, reverse=True)\ndef find_min_fuka_idx(lst, e1, e2):\n  ok = -1\n  ng = len(lst)\n  while abs(ok-ng)>1:\n    mid = (ok+ng)\/\/2\n    e3 = lst[mid]\n    if e1+e2 > e3 and e2+e3>e1 and e3+e1>e2:\n      ok = mid\n    else:\n      ng = mid\n  return ng\nc = 0\nfor i in range(n-2):\n  for j in range(i+1, n-1):\n    c += find_min_fuka_idx(a[j+1:], a[i], a[j])\nprint(c)\n  ","n=int(input())\na=list(map(int,input().split()))\ns=set(a)\na1=[]\na2=[]\na3=[]\nfor ii in s:\n  c=a.count(ii)\n  if c==1:\n    a1.append(ii)\n  elif c==2:\n    a2.append(ii)\n  else:\n    a3.append(ii)\na2=a2+a3\na1.sort()\na2.sort()\n\nr=len(a3)\nfor ii in range(len(a2)):\n  for jj in range(len(a1)):\n    if 2*a2[ii]<=a1[jj]:\n      break\n    r+=1\n\n  for jj in range(len(a2)):\n    if 2*a2[ii]<=a2[jj]:\n      break\n    if ii!=jj:\n      r+=1\na1=a1+a2\nimport numpy as np\nfor ii in range(len(a1)-2):\n  for jj in np.arange(ii+1,len(a1)-1):\n    for kk in np.arange(jj+1,len(a1)):\n      if a1[ii]+a1[jj]<=a1[kk]:\n        break\n      r+=1\n      #print(r,a1[ii],a1[jj],a1[kk])\nprint(r)","import bisect\n\nn = int(input())\nL = sorted(list(map(int,input().split())))\n\nans = 0\n\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        k = bisect.bisect_left(L,L[i]+L[j])\n        ans += k-j-1\nprint(ans)","import bisect\nimport sys\n\ninput = sys.stdin.readline\n\n\ndef read_i():\n    return list(map(int, input().split()))\n\n\nn = int(input())\nls = sorted(read_i())\nls2 = ls[::-1]\nres = 0\nfor i, x in enumerate(ls2):\n    for j, y in enumerate(ls2[i + 1:], i + 1):\n        res += n - j - 1 - bisect.bisect(ls[:-(j + 1)], x - y)\nprint(res)","import bisect\n\nn = int(input())\nbar = [ int(v) for v in input().split() ]\nbar.sort()\n\nans = 0\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        ans += bisect.bisect_right(bar,bar[i]+bar[j]-1) - j - 1\nprint(ans)","n = int(input())\nL = list(map(int, input().split()))\nL.sort()\nans = 0\n#print(L)\n\nfor i in range(n):\n    for j in range(i+1, n-1):\n        length = L[i] + L[j]\n\n        l = j+1\n        r = n-1\n        m = (l + r) \/\/ 2\n\n        while True:\n            if l > r:\n                #m = -1\n                break\n            m = (l + r) \/\/ 2\n            if L[m] < length:\n                l = m + 1\n            else:\n                r = m - 1\n\n#        print(i, j, m)\n        if m+1 < n and L[m+1] < length:\n#            print('increment!')\n            m += 1\n        if L[m] >= length and L[m-1] < length:\n            m -= 1\n#            print('decrement!')\n        if L[m] < length:\n            #print('count up: ' + str(m - j) + '\\n')\n            ans += m - j\n\nprint(ans)","import bisect\nN = int(input())\nL = [int(i) for i in input().split()]\nL.sort()\nans = 0\n\nfor i in range(N):\n  for j in range(i+1,N):    \n    A = L[i]+L[j]\n    tmp = bisect.bisect_left(L,A)\n    ans += tmp-j-1\nprint(ans)","n=int(input())\nl=list(map(int,input().split()))\nans=0\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        left=abs(l[i]-l[j])\n        right=l[i]+l[j]\n        ans+=len(list(filter(lambda x: left<x<right, l[j+1:])))\nprint(ans)","n=int(input())\nl=list(map(int,input().split()))\nans=0\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        for k in range(j+1,n):\n            if l[i]<l[j]+l[k] and l[j]<l[k]+l[i] and l[k]<l[i]+l[j]:\n                ans+=1\nprint(ans)","import sys\nfrom itertools import accumulate\nimport bisect\ninput = sys.stdin.readline\ndef inputs():return [int(x) for x in input().split()]\nN = int(input())\nL= inputs()\nL.sort()\nb= 0\nans = 0\nfor i in range(N-1,-1,-1):\n    for j in range(i-1,-1,-1):\n        b= L[i]-L[j]\n        insert_index = bisect.bisect_right(L,b)\n        #print(L,b,i,j,insert_index)\n        ans += max(j-insert_index,0)\n        #print(ans)\nprint(ans)\n","from itertools import combinations\nimport numpy as np\n\nn=int(input())\nl=sorted([int(i) for i in input().split()])\n\nv=np.array([l[0], l[1]])\nvsum=np.array([l[0]+l[1]])\n\nc=0\n\nfor i in range(2, n):\n    p=l[i]\n    c+=np.sum(vsum>p)\n    vsum = np.concatenate([vsum, v+p], 0)\n    v=np.append(v, p)\n\nprint(c)","a = int(input())\nb = [int(elem) for elem in input().split()]\nb.sort(reverse=True)\ncounter = 0\nfor i in range(a-2):\n\tfor j in range(i+1, a-1):\n\t\tfor k in range(j+1, a):\n\t\t\tif b[i] < b[j] + b[k] and b[j] < b[i] + b[k] and b[k] < b[i] + b[j]:\n\t\t\t\tcounter += 1\n\t\t\telse:\n\t\t\t\tbreak\nprint('{}'.format(counter))","n=int(input())\nl=list(map(int, input().split()))\nans=0\nfor i in range(0,n-2,1):\n  for j in range(i+1,n-1,1):\n    for k in range(j+1,n,1):\n      if l[i]<l[j]+l[k]and l[j]<l[k]+l[i]and l[k]<l[i]+l[j]:\n        ans+=1\nprint(ans)","from bisect import*\nn,*l=map(int,open(0).read().split())\nl.sort()\n#print(l)\nans=0\nfor i in range(n):\n    for j in range(i+1,n):\n#        print(max(bisect_left(l,l[i]+l[j])-j-1,0),l[i]+l[j])\n        ans+=max(bisect_left(l,l[i]+l[j])-j-1,0)\nprint(ans)","import bisect\n\nN = int(input())\nL = sorted([int(i) for i in input().split()])\n\nans = 0\nfor i, a in enumerate(L):\n    if i == len(L) - 2:\n        break\n    for j in range(1, N-1-i):\n        l = j + i\n        b = L[l]\n        idx = bisect.bisect_left(L, a + b, lo=l+1)\n        ans += (idx - (l + 1))\n        \nprint(ans)","import bisect\n\nN = int(input())\nL = [int(a) for a in input().split()]\n\nL.sort()\n\nnum_triangles = 0\nfor i in range(0, N - 2): # 0, 1, ..., N - 3\n    for j in range(i + 1, N - 1): # i+1, i+2, ..., N-2\n        num_triangles += bisect.bisect_left(L[j + 1:N], L[i] + L[j])\n\nprint(num_triangles)","from bisect import bisect_left\n\nN = int(input())\nL = [int(x) for x in input().split()]\nL.sort()\n\nans = 0\nfor i in range(N-2):\n\tfor j in range(i+1,N-1):\n\t\tans += bisect_left(L, L[i]+L[j])-j-1\nprint(ans)","N = int(input())\nLs = list(map(int, input().split()))\n\nLs.sort(reverse = True)\ntotal = 0\n\n# print(Ls)\n\n# skip = 10\n\nfor i in range(N-2):\n    for j in range(i+1, N-1):\n        sub_total = 0\n        for k in range(j+1, N):\n            if Ls[i]-Ls[j] < Ls[k] and Ls[i]+Ls[j] > Ls[k]:\n                total += 1\n            elif Ls[i]-Ls[j] >= Ls[k]:\n                break\n\nprint(total)\n","import bisect    \n    \nN = int(input())\nb = list(int(i) for i in input().split())\nb.sort()\nsum_N = 0\nfor i,x in enumerate(b):\n    s = i+1\n    for y in range(i+1,N,1):\n        index = bisect.bisect_left(b,x+b[y])\n        sum_N += max(0,index - y -1)\nprint(sum_N)","n = int(input())\nl = [int(i) for i in input().split()]\n\ns = 0\nfor i in range(n-2):\n  for j in range(i+1, n-1):\n    for k in range(j+1, n):\n      if (l[i] < l[j]+l[k]) and (l[j] < l[k]+l[i]) and (l[k] < l[i]+l[j]):\n        s += 1\nprint(s)","from itertools import combinations\nn = int(input())\nl = list(map(int,input().split()))\ncomb = combinations(l,3)\ncnt = 0\nfor a,b,c in comb:\n    if a<b+c and b<c+a and c<a+b:\n        cnt += 1\nprint(cnt)","n = int(input())\narrl = list(map(int,input().split()))\nimport itertools\ncount = 0\nfor i in itertools.combinations(arrl,3):\n    i = list(i)\n    i.sort()\n    if i[0] + i[1] > i[2]:\n        count += 1\nprint(count)","# -*- coding: utf-8 -*-\nN = int(input())\nL = list(map(int, input().split()))\n\ndef main():\n    tri = 0\n    L.sort()\n    for i in range(N-1,-1,-1): #range(\u521d\u671f\u5024,\u7d42\u4e86\u6761\u4ef6,\u5909\u5316\u91cf)\n        mn = 0\n        sl = i-1\n        while(mn<sl):\n            if (L[mn] + L[sl]) > L[i]:\n                tri += sl - mn\n                sl -= 1\n            else:\n                mn += 1\n    print(tri)\n    \nmain()","n = int(input())\nl = list(map(int, input().split()))\nl.sort()\ndef bin_search(key, list):\n    ok = n\n    ng = -1\n    while abs(ok - ng) > 1:\n        mid = (ok + ng) \/\/ 2\n        if list[mid] > key:\n            ok = mid\n        else:\n            ng = mid\n    return ok\n\nans = 0\nfor i in range(1, n - 1):\n    for j in range(i + 1, n):\n        c_min_len = l[j] - l[i]\n        x = i - bin_search(c_min_len, l)\n        ans += max(0, x)\nprint(ans)","import bisect\n\nN = int(input())\nL = list(map(int, input().split()))\nL.sort(reverse=True)\n\nans = 0\ndif = 0\ncount = 0\nfor i in range(N-2):\n    for j in range(i+1, N-1):\n        dif = L[i] - L[j] + 1\n        L_descend = sorted(L[j+1:])\n        # print(L_descend, bisect.bisect_left(L_descend, dif))\n        index = bisect.bisect_left(L_descend, dif)\n        count = len(L_descend) - index\n        ans += count\n        # print(\"ans = \", ans)\nprint(ans)\n","N = int(input())\nd = input().split()\nd.sort()\n\nli = []\n\ntemp = ''\nfor i in range(N):\n    if(temp != d[i]):\n        temp = d[i]\n        li.append(int(d[i]))\n\nsum = 0\nfor i in range(N-2):\n    for j in range(i+1,N-1):\n        for k in range(j+1,N):\n            if(int(li[i])<int(li[j])+int(li[k]) and int(li[j])<int(li[i])+int(li[k]) and int(li[k])<int(li[i])+int(li[j])):\n                sum += 1\n            else:\n                break\nprint(sum)","n = int(input())\nl = list(map(int, input().split()))\ncnt = 0\nfor i in range(n-2):\n    for j in range(i+1, n-1):\n        for k in range(j+1, n):\n            if l[i] < l[j] + l[k] and l[j] < l[i] + l[k] and l[k] < l[i] + l[j]:\n                cnt += 1\nprint(cnt)","if __name__ == '__main__':\n    n = int(input())\n    l = list(map(int,input().split()))\n\n    answer = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            for k in range(j+1,n):\n                if abs(l[j]-l[k]) < l[i] and l[i] < l[j] + l[k]:\n                    answer += 1\n\n    print(answer)\n","import sys\ninput = sys.stdin.readline\nimport bisect\nn = int(input())\na = [int(i) for i in input().split()]\na = tuple(sorted(a))\nans = 0\nfor i in range(n-2):\n  for j in range(i+1,n-1):\n    chk = a[i]+a[j]\n    ind = bisect.bisect_left(a,chk)\n    ans += (ind-j-1)\nprint(ans)  ","import bisect\nN = int(input())\nls = list(map(int,input().split()))\nls.sort()\nans = 0\nfor i in range(N-2):\n    for j in range(i+1,N-1):\n        ls1 = ls[j+1:]\n        ans += bisect.bisect_left(ls1,ls[j]+ls[i]+1)-bisect.bisect(ls1,ls[j]-ls[i]-1)\nprint(ans)","from heapq import heappush, heappop\nfrom collections import deque,defaultdict,Counter\nimport itertools\nfrom itertools import permutations,combinations\nimport sys\nimport bisect\nimport string\n#import math\n#import time\n#import random  # randome is not available at Codeforces\ndef I():\n    return int(input())\ndef MI():\n    return map(int,input().split())\ndef LI():\n    return [int(i) for i in input().split()]\ndef LI_():\n    return [int(i)-1 for i in input().split()]\ndef StoI():\n    return [ord(i)-97 for i in input()]\ndef show(*inp,end='\\n'):\n    if show_flg:\n        print(*inp,end=end)\nYN=['Yes','No']\nmo=10**9+7\ninf=float('inf')\n#eps=10**(-10)\n#ts=time.time()\n#sys.setrecursionlimit(10**6)\ninput=lambda: sys.stdin.readline().rstrip()\n\nshow_flg=False\nshow_flg=True\n\nn=I()\na=sorted(LI())[::-1]\n\ns=set()\nfor i in a:\n    s.add(i)\ns=sorted(list(s))[::-1]\nL=1080\n#L=10000\nk=[0]*(L)\nak=[0]\nans=0\n\nfor i in a:\n    k[i]+=1\nfor i in range(L):\n    ak.append(ak[-1]+k[i])\n\nun=len(s)\nfor i in range(un):\n    c=s[i]\n    if k[c]>=3:\n        ans+=k[c]*(k[c]-1)*(k[c]-2)\/\/6\n    if k[c]>=2:\n        ans+=ak[c]*k[c]*(k[c]-1)\/\/2\n    for j in range(i+1,un):\n        #show('i,j,s[i],s[j],mm',i,j,'|',s[i],s[j],s[i]-s[j]+1,'|',ak[s[i]-s[j]],ans)\n        \n        sc=s[j]\n        if ak[sc]==0:\n            break\n        mm=c-sc+1\n        if mm<0:\n            continue\n        elif mm>sc:\n            continue # break\n        else:\n            ans+=k[c]*k[sc]*((1 if 2*k[sc]>k[c] 0)*(k[sc]-1)\/\/2+ak[sc]-ak[mm])\n        #show('ans+=',k[sc]*(k[sc]-1)\/\/2+ak[sc]-ak[mm])\n    \nprint(ans)\n    \n","import sys\n\ndef main():\n\n\targs = sys.argv\n\tN = int(input())\n\tL = list(map(int, input().split()))\n\tC = 0\n\tfor i in range(0, N-2):\n\t\tfor j in range(i+1, N-1):\n\t\t\tfor k in range(j+1, N):\n\t\t\t\tif L[i] < L[j] + L[k] and L[j] < L[k] + L[i] and L[k] < L[i] + L[j]:\n\t\t\t\t\tC = C + 1\n\tprint(C)\n\nif __name__ == \"__main__\":\n    main()","import bisect\n\nN = int(input())\nL = list(map(int,input().split()))\nL.sort()\n\nans = 0\nfor i in range(1,N-1):\n  for j in range(i+1,N):\n    m = bisect.bisect_right(L,L[j]-L[i])\n    if i>m:\n      ans += i-m\nprint(ans)","import bisect\nn = int(input())\nl = list(map(int,input().split()))\nl = sorted(l)\nans = 0\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        x = bisect.bisect_left(l, l[i] + l[j], j+1)\n        ans += x -j -1\nprint(ans)\n","import itertools\n\nn = int(input())\n\nl = list(map(int, input().split()))\n\nzzz = list(itertools.combinations(l,2))\n\n\ncnt = 0\nprint(zzz)\n\nfor z in zzz:\n\n    b = z[0]\n    c = z[1]\n\n    b_flg = True\n\n    c_flg = True\n\n    for i in l:\n        if b_flg and i == b:\n            continue\n\n        if c_flg and i == c:\n            continue\n                \n        if abs(b-c) < i < b+c:\n            cnt += 1\n\nprint(cnt \/ 3)\n","N = int(input())\nL = map(int, input().split())\nSL = sorted(list(L))\nA = [0] * (10 ** 3 + 10)\n\nfor i in SL:\n    A[i] = True\nfor i in range(len(A)):\n    if A[i] == True:\n        A[i] = A[i-1] + 1\n    else:\n        A[i] = A[i-1]\n\n# print(A[4-1] - A[2])\n\nans = 0\nfor i in range(N-2):\n    for j in range(i+1, N-1):\n        for k in range(j+1, N):\n            # print(i, j, k)\n            a = SL[i]\n            b = SL[j]\n            c = SL[k]\n            if a < b + c and b < c + a and c < a + b:\n                ans += 1\nprint(ans)","n = int(input())\nxs = list(map(int,input().split()))\nxs.sort()\nans = 0\nfor i in range(n-2):\n  for j in range(i+1,n-1):\n    for k in range(j+1,n):\n      if xs[i] + xs[j] <= xs[k]:\n        break\n      ans += 1\nprint(ans)\n\n\n","import sys; readline = sys.stdin.readline\nfrom collections import deque\n\n\nN = int(readline())\nL = list(map(int, readline().split()))\n\nL.sort()\n\nNs = [0] * (2*10**3 + 10)\n\nfor l in L:\n    Ns[l] += 1\n\ncNs = [0] * len(Ns)\nfor i in range(1, len(Ns)):\n    cNs[i] = cNs[i - 1] + Ns[i]\n\ncount = 0\nfor i in range(N - 1, -1, -1):\n    for j in range(i - 1, -1, -1):\n        m = L[i] - L[j]\n        M = L[j] - 1\n        count += max(0, cNs[M] - cNs[m])\n\n        if L[j] == m:\n            count += max(0, Ns[L[j]] - 1)\n        \n\nprint(count)","import bisect\n\nn = int(input())\nL = sorted([int(x) for x in input().split()])\nans = 0\nfor ai in range(n - 1):\n    for bi in range(ai + 1, n):\n        a = L[ai]\n        b = L[bi]\n        l, r = abs(a - b) + 1, a + b - 1\n        li = bisect.bisect_left(L, l)\n        ri = bisect.bisect_right(L, r)\n        ans += ri - li\n        if li <= ai <= ri:\n            ans -= 1\n        if li <= bi <= ri:\n            ans -= 1\nprint(int(ans \/ 3))\n","n = int(input())\nv = [int(x) for x in input().split()]\n\ndef check(a,b,c):\n  if a + b > c and b + c > a and c + a > b:\n    return True\n  return False\n\nres = 0\nfor i in range(n):\n  for j in range(i+1,n):\n    for k in range(j+1,n):\n      if check(v[i],v[j],v[k]):\n        res += 1\nprint(res)","import itertools\n\nN = int(input())\nL = list(map(int, input().split()))\n\nL = sorted(L, reverse = True)\n\ncomb = itertools.combinations(L, 3)\n\ncount = 0\n\nfor item in comb:\n#    print(item)\n    if item[0] < item[1] + item[2]:\n        count += 1\n\nprint(count)\n\n","import itertools\n\nN = int(input())\nL = list(map(int, input().split()))\n\ntriangle = 0\nb = list((itertools.combinations(L, 3)))\nc = list((itertools.combinations(L, 3)))\n\nfor i in range(len(c)):\n    if (c[i][0] < c[i][1] + c[i][2]\n            and c[i][1] < c[i][0] + c[i][2]\n            and c[i][2] < c[i][1] + c[i][0]):\n        triangle += 1\n\nprint(triangle)\n","N = int(input())\nl_list = list(map(int, input().split()))\nl_list.sort()\n\ncnt = 0\nstart_j = 1\nstart_k = 2\nfor i in range(N):\n    for j in range(i+1, N):\n        for k in range(j+1, N):\n            if l_list[k] < l_list[i] + l_list[j]:\n                cnt += 1\n            else:\n                break\nprint(cnt)","N=int(input())\nL=input()\nL=L.split(\" \")\nL_i=[]\nfor i in L:\n L_i.append(int(i))\n\ncount=0\nfor i in range(0,N):\n for j in range(i+1,N):\n  for k in range(j+1,N):\n   if(L_i[i]<L_i[j]+L_i[k] and L_i[j]<L_i[k]+L_i[i] and L_i[k]<L_i[i]+L_i[j] ):\n    count+=1\n\nprint(count)","import itertools\n\nn = int(input())\nL = list(map(int, input().split()))\n\ncircle = list(itertools.combinations(L, 3))\n\ncount = 0\nfor c in circle:\n    if c[0] < c[1] + c[2] and c[1] < c[2] + c[0] and c[2] < c[0] + c[1]:\n        count += 1\n\nprint(count)","import math\nimport itertools\nimport copy\nimport bisect\n\nN = int(input())\nL = [int(x) for x in input().split()]\nLs = sorted(L) # L\u3092\u964d\u9806\u306b\u30bd\u30fc\u30c8\n#print(Ls)\ncnt = 0\n\nfor i in range(N) :\n    a = Ls[i]\n    for j in range(i+1,N) :\n        #print(\" \")\n        b = Ls[j]\n        L_roop = copy.deepcopy(Ls[j+1:])\n        #print(L_roop)\n\n        # 2\u5206\u63a2\u7d22 x2 index\u3092\u6c42\u3081\u308b\n        ba = bisect.bisect(L_roop,abs(a-b)+0.1)\n        #print(abs(a-b)+0.1,ba)\n        L_roop.insert(ba,abs(a-b)+0.1)\n        #print(\"a\",L_roop)\n\n        bb = bisect.bisect(L_roop,abs(a+b)-0.1)\n        #print(abs(a+b)-0.1,bb)\n        L_roop.insert(bb,abs(a+b)-0.1)\n        #print(\"b\",L_roop)\n\n        #print(\"ba,bb\",ba,bb)\n        if bb - ba > 1 :\n            #print(Ls[i],Ls[j],L_roop[ba+1])\n            cnt += bb - ba - 1\n    \nprint(cnt)\n","import itertools\nN = int(input())\nA = list(map(int, input().split())) \ntk = list(itertools.combinations(A, 3))\ncount = 0\n\nfor i in range(len(tk)):\n    test = sorted(tk[i], reverse=True)\n    if (test[1] - test[2] < test[0])and(test[0] < test[1] + test[2]):\n        count += 1\n        \nprint(count)","import bisect\nn = int(input())\nl = sorted(list(map(int, input().split())))\ns = 0\nfor i in range(0,n-2):\n  a = l[i]\n  for j in range(i+1,n-1):\n    b = l[j]\n    s += bisect.bisect_left(l,a+b)-j-1\nprint(s)","n=int(input())\nlistl = [int(i) for i in input().split()]\n\nlistl.sort(reverse=True)\n\n#print(listl)\nans=0\nfor i in range(n-2):\n\tfor j in range(i+1,n-1):\n\t\tif listl[j]<=(listl[i]\/2):\n\t\t\tbreak\n\t\tfor k in range(j+1,n):\n\n\t\t\tif listl[i]<listl[j]+listl[k]:\n\t\t\t\tans=ans+1\n\t\t\telse:\n\t\t\t\tbreak\t\nprint(1)\nprint(ans)\n\t\t\t\t \n\t\t","import itertools\nN = int(input())\nd_list = list(map(int, input().split()))\nc_d_list = list(itertools.combinations(d_list, 3))\ncount = 0\nfor i in c_d_list:\n    a = i[0]\n    b = i[1]\n    c = i[2]\n    if a < b + c:\n        if b < a + c:\n            if c < a + b:\n                count += 1\nprint(count)","import itertools\n \nn = int(input())\nl = list(map(int, input().split()))\n \ncnt = 0\n \nfor subset in itertools.combinations(l, 3):\n    L = [subset[0],subset[1],subset[2]]\n    L.sort()\n    if abs(L[0]-L[1]) < L[2] < L[0]+L[1]:\n        cnt += 1\nprint(cnt)","import bisect\nn = int(input())\nl = list(map(lambda x:int(x),input().split()))\nl = sorted(l)\n\nans = 0\nfor i in range(n):\n    for j in range(i+1,n):\n        ans += bisect.bisect_left(l,l[i]+l[j])-j-1\n        \nprint(ans)","n=int(input())\nl = list(map(int,input().split()))\nans=0\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        for k in range(j+1,n):\n            if abs(l[i]-l[j]) < l[k] and l[k] <  l[i]+l[j]:\n                ans+=1\n            else:\n                ans+=0\nprint(ans)","a = int(input())\nb = str(input())\nc = b.split(\" \")\nans = 0\nfor i in range(a):\n  for j in range(a):\n    if j<=i:continue\n    for k in range(a):\n      if k<=i or k<=j:continue\n      if (int(c[i]) < (int(c[j])+int(c[k]))) and (int(c[j]) < (int(c[i])+int(c[k]))) and (int(c[k]) < (int(c[i])+int(c[j]))):\n        ans += 1\nprint(ans)","n = int(input())\nl = list(map(int, input().split()))\n\nfor i in range(n):\n    for j in range(i, n - i):\n        a = l[i]\n        b = l[j]\n        for k in range(j, n - i - j):\n            c = l[k]\n            if (a < b + c) and (b < c + a) and (c < a + b):\n                ans += 1\n\nprint(ans)\n","n = int(input())\nl = list(map(int, input().split()))\nl.sort()\n\nhoge = []\nans = 0\na = b = c = None\nfor i in range(n - 2):\n    if i == 0 or l[hoge[-1][0]] != l[i]:\n        for j in range(i + 1,n - 1):\n            if j == i + 1 or l[hoge[-1][1]] != l[j]:\n                for k in range(j + 1, n):\n                    if k == j + 1 or l[hoge[-1][2]] != l[k]:\n                        hoge.append([i, j, k])\nfor i, j, k in hoge:\n    a = l[i]\n    b = l[j]\n    c = l[k]\n    if a < b + c and b < a + c and c < b + a:\n        ans += 1\nprint(ans)\n","def check(data):\n  data=[int(i) for i in data]\n  if data[0]>=data[1]+data[2]:\n    return False\n  elif data[1]>=data[0]+data[2]:\n    return False\n  elif data[2]>=data[0]+data[1]:\n  \treturn False\n  else:\n    return True\ninput()\ndata=[i for i in input().split()]\ntriangles=set()\nfor id1,i in enumerate(data):\n  for id2,j in enumerate(data):\n    if id1==id2:\n      continue\n    for id3,k in enumerate(data):\n      if id1==id3 or id2==id3:\n        continue\n      tri=[i,j,k]\n      tri.sort()\n      if \"-\".join(tri) not in triangles:\n        if check(tri):\n          triangles.add(\"-\".join(tri))\nprint(len(triangles))","N = int(input())\nL = list(map(int, input().split()))\ncount = 0\nfor i in range(0,N):\n  for j in range(i+1,N):\n    for k in range(j+1, N):\n      a = L[i]\n      b = L[j]\n      c = L[k]\n      if a < b+c and b < a+c and c < a+b:\n        count += 1\nprint(count)","n = int(input())\nl = list(map(int , input().split()))\nl = sorted(l, key=None, reverse=True)\nans = 0\nfor i in range(0, n):\n    for j in range(i + 1, n):\n        for k in range(j + 1, n):\n            print(i,j,k)\n            if l[i] < l[j] + l[k] and l[j] < l[i] + l[k] and l[k] < l[i] + l[j]:\n                ans += 1\n                print('ok')\n            else:\n                print('break')\n                break\n        else:\n            continue\n        break\nprint(ans)\n\n","import sys\nimport bisect\nreadline = sys.stdin.readline\nn = int(readline())\nA = list(map(int,readline().split()))\nmemo1 = {}\nmemo2 = {}\nA.sort()\nmemo1[A[0]+A[1]] =1\nmemo2[A[0]] =1\nif A[1] in memo2:\n    memo2[A[1]] +=1\nelse:\n    memo2[A[1]] =1\nans = 0\nfor c in A[2:]:\n    for l,amount in memo1.items():\n        if c<l:\n            ans +=amount\n    for a,amount in memo2.items():\n        ac = a+c\n        if ac in memo1:\n            memo1[ac] += memo2[a]\n        else:\n            memo1[ac] = memo2[a]\n    if c in memo2:\n        memo2[c] +=1\n    else:\n        memo2[c] =1\n\nprint(ans)","N = int(input())\nL = list(map(int, input().split()))\nL.sort()\nans = 0\nfor i in range(N):\n    for j in range(i+1, N, 1):\n        for k in range(j+1, N, 1):\n            if L[k] < L[i]+L[j]:\n                ans+=1\nprint(ans)","from bisect import*\nfrom itertools import*\nn,*L=map(int,open(0).read().split())\nL.sort()\nans=0\nfor x,y in combinations(L,2):\n\tlow=abs(x-y)\n\thigh=x+y\n\tans+=bisect_left(L,high)-bisect(L,low)\n\tif low<x<high:\n\t\tans-=1\n\tif low<y<high:\n\t\tans-=1\nprint(ans\/\/3)","import bisect\nn = int(input())\nl = list(map(int, input().split()))\nl.sort()\n\ncnt = 0\n\nprint(l)\nfor i in range(n - 1, 0, -1):\n    for j in range(i - 1, -1, -1):\n        base = l[i] - l[j]\n        idx = bisect.bisect_right(l, base)\n        cnt += max(j - idx, 0)\nprint(cnt)\n\n\n","# -*- coding: utf-8 -*-\nimport bisect\n\n# \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u6574\u6570\u306e\u5165\u529b\nn = int(input())\nl_list = input().split(\" \")\nl_int_list = []\nfor item in l_list:\n    l_int_list.append(int(item))\n\nl_int_list.sort()\n\ncount = 0\n\n\nfor i in range(len(l_int_list)):\n    for j in range(i+1, len(l_int_list)):\n        index = bisect.bisect_left(\n            l_int_list, l_int_list[i]+l_int_list[j], j+1, len(l_int_list))\n        count += index - j - 1\n\nprint(count)\n","import itertools\nn = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in itertools.combinations(l,3):\n  if i[0]<i[1]+i[2] and i[1]<i[2]+i[0] and i[2]<i[0]+i[1]:\n    ans+=1\nprint(ans)","import bisect\nN=int(input())\nL=list(map(int,input().split()))\nL.sort()\nans=0\nfor i in range(N-2):\n  for j in range(i+1,N-1):\n    a=bisect.bisect_left(L,L[i]+L[j])\n    ans+=(a-j-1)\nprint(ans)","import bisect\nN = int(input())\nL = list(map(int, input().split()))\nL.sort()\n\ncount = 0\nfor i in range(N):\n    for j in range(i+1, N):\n        a = L[i]\n        b = L[j]\n        k = bisect.bisect_left(L, a+b)\n        if k > j:\n            count += k -j -1\nprint(count)","from bisect import bisect_left\n\nN=int(input())\nL=list(map(int,input().split()))\nL.sort()\nans=0\nfor i in range(N-2):\n    for j in range(i+1,N-1):\n        l=L[i]+L[j]\n        c=bisect_left(L,l)\n        ans+=max(0,c-j-1)\nprint(ans)\n"],"formatted_programs":["n = int(input())\nl = list(map(int, input().split()))\nl.sort(reverse=True)\nco = 0\nfor i in range(n-2):\n  for j in range(i+1,n-1):\n    if l[i] >= l[j]+l[j+1]:\n      m = n-j\n      co += (m*(m-1))\/\/2\n      break\nprint(n*(n-1)*(n-2)\/\/6-co)","import sys\nimport math\nimport copy\n\ndef main():\n    n = int(input())\n    l = [int(t) for t in input().split()]\n\n    # \u307e\u305a\u306fL\u3092\u6607\u9806\u306b\u30bd\u30fc\u30c8\u3059\u308b\n    l.sort()\n    \n    count = 0\n    # 1\u756a\u77ed\u3044\u68d2(i)\u30682\u756a\u76ee\u306b\u77ed\u3044\u68d2(j)\u3092\u6c7a\u3081\u308b\n    for i in range(0, n):\n        for j in range(i+1, n):\n            lb, ub = j, n\n            while ub - lb > 1:\n                half = (lb + ub) \/\/ 2\n                if l[half] < l[i] + l[j]:\n                    lb = half\n                else:\n                    ub = half\n            count += ub - (j + 1)\n\n    print(count)\n\n    return 0\n\nif __name__ == '__main__':\n    sys.exit(main())","import itertools\n\ndef read():\n    N = int(input().strip())\n    L = list(map(int, input().strip().split()))\n    return N, L\n\ndef solve(N, L):\n    L.sort()\n    count = 0\n    for a, b, c in itertools.combinations(L, 3):\n        if c < a + b:\n            count += 1\n    return count\n\nif __name__ == '__main__':\n    inputs = read()\n    print(\"%d\" % solve(*inputs))\n","N = int(input())\nL = list(map(int,input().split()))\nL.sort()\nans = 0\nfor i in range(N-2):\n    for j in range(i+1,N-1):\n        for k in range(j+1,N):\n            if L[k] < L[i] + L[j]:\n                ans += 1\n            else:\n                break\nprint(ans)","#!\/usr\/bin\/env python3\nimport sys\n\nINF = 2 * 10 ** 3 + 1\n\ndef main():\n    N = int(input())\n    L = [int(i) for i in input().split()]\n    L.sort()\n\n    # True ---- False\n    def is_ok_top(mid: int, a: int, b: int):\n        # \u691c\u7d22\u5bfe\u8c61\u306e\u5916\u306b\u3042\u308b\u3082\u306e\u306f\u5148\u306b\u5f3e\u304f(\u30ea\u30b9\u30c8\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306a\u3093\u304b\u3060\u3068out of range\u3059\u308b\u306e\u3067)\n        if mid < 0:\n            return True\n        elif mid >= N:\n            return False\n        return L[mid] < L[a] + L[b]\n\n    def binSearch_top(ok: int, ng: int, a: int, b: int):\n        #print(ok, ng)              # \u306f\u3058\u3081\u306e2\u5024\u306e\u72b6\u614b\n        while abs(ok - ng) > 1:     # \u7d42\u4e86\u6761\u4ef6\uff08\u5dee\u304c1\u3068\u306a\u308a\u5883\u754c\u3092\u898b\u3064\u3051\u305f\u6642)\n            mid = (ok + ng) \/\/ 2\n            if is_ok_top(mid, a, b):\n                ok = mid            # mid\u304c\u6761\u4ef6\u3092\u6e80\u305f\u3059\u306a\u3089mid\u307e\u3067\u306fok\u306a\u306e\u3067ok\u306e\u65b9\u3092\u771f\u3093\u4e2d\u307e\u3067\u6301\u3063\u3066\u3044\u304f\n            else:\n                ng = mid            # mid\u304c\u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044\u306a\u3089mid\u307e\u3067\u306fng\u306a\u306e\u3067ng\u306e\u65b9\u3092\u771f\u3093\u4e2d\u307e\u3067\u6301\u3063\u3066\u3044\u304f\n            #print(ok, ng)          # \u534a\u5206\u306b\u5207\u308a\u5206\u3051\u308b\u6bce\u306e2\u5024\u306e\u72b6\u614b\n        return ok    \n\n    count = 0\n    for a in range(0, len(L) - 2):\n        for b in range(a + 1, len(L) - 1):\n            count += binSearch_top(-1, INF, a, b) - b\n\n    print(count)\n\n\n\n\n\n\n\nif __name__ == '__main__':\n    main()\n","N=int(input())\nL=list(map(int,input().split()))\n\n# \u6607\u9806\u306b\u3059\u308b\nL.sort()\n\nimport bisect\ncount=0\nfor i in range(N):\n    for j in range(i+1,N):\n        # 2\u5206\u63a2\u7d22\u3092\u4f7f\u3046\u3053\u3068\u3067n^2*log(n)\u306e\u63a2\u7d22\u3067\u7d42\u308f\u308b,\u3053\u306eindex\u306f\u65b0\u305f\u306bL[i]+L[j]\u304c\u633f\u5165\u3067\u304d\u308bindex\u306a\u306e\u3067\u3001\u3053\u306eindex-1\u304c\u6761\u4ef6\u3092\u6e80\u305f\u3059\u6700\u5927\u306ec\u306eindex\n        maximum_index = bisect.bisect_left(L,L[i]+L[j])\n        count+= maximum_index-1 - j \nprint(count)\n\n\n\n\n\n","import bisect\nN = int(input())\nL = sorted(list(map(int, input().split())))\n\ns = 0\nfor i in range(N):\n    for j in range(i + 1, N):        \n        k = bisect.bisect_left(L, L[i] + L[j])\n        s += k - j - 1\n\nprint(s)","import bisect\nN=int(input())\nL=list(map(int,input().split()))\nL.sort()\nans = 0\nfor a in range(N):\n  for b in range(a+1,N):\n    c=bisect.bisect_left(L, L[a]+L[b])#\u7b2c\u4e00\u6761\u4ef6(\u7d42\u70b9)\n    if b<c:#\u7b2c2\u6761\u4ef6\uff08\u59cb\u70b9\uff09\n      ans+=c-b-1     \nprint(ans)#bisect\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3088\u308a\u4e00\u500b\u524d\u306a\u3089\u5c0f\u3055\u3044","# -*- coding: utf-8 -*-\nN = int(input())\nL_list = list(map(int, input().split()))\n\nans = 0\nL_list.sort(reverse=True)\nb_end = N - 1\nc_end = N\nfor i in range(N - 2):\n    for j in range(i + 1, b_end):\n        for k in range(j + 1, c_end):\n            if L_list[i] < L_list[j] + L_list[k]:\n                ans += 1\n            else:\n                b_end = k\n                c_end = k + 1\n                break\n    b_end = N - 1\n    c_end = N\n\nprint(ans)","import bisect\nn = int(input())\nl = list(map(int,input().split()))\nl.sort()\nans = 0\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        r = bisect.bisect_left(l,l[i]+l[j])\n        ans += r-(j+1)\nprint(ans)","import bisect\nN = int(input())\nL = sorted(list(map(int, input().split())))\nans = 0\nfor a in range(N):\n    for b in range(a+1, N):\n        c = bisect.bisect_left(L, L[a] + L[b])\n        if c > b:\n            ans += c - b - 1\nprint(ans)","n = int(input())\n\nl = list(map(int,input().split()))\n\nans = int(0)\n\nfor i in range(n):\n    for j in range(i+1,n):\n            for k in range(j+1,n):\n                if l[i] < l[j]+l[k] and l[j] < l[i]+l[k] and l[k] < l[j]+l[i]:\n                    ans += 1\n                \nprint(ans)\n","\nN=int(input())\nL=[int(i) for i in input().split()]\nL=sorted(L)\nans=0\n\nfor i in range(N-2):\n    maxk=i+1\n    for j in range(i+1,N-1):\n        ans+=max(0,maxk-j-1)\n        for k in range(max(j+1,maxk),N):\n            if L[i]+L[j]<=L[k]:\n                ans+=k-j-1\n                maxk=k\n                break\n            if k==N-1:\n                ans+=N-j-1\n                maxk=N\nprint(ans)","from collections import defaultdict, deque\nfrom heapq import heappush, heappop\nfrom bisect import bisect_left, bisect_right\nimport sys\nimport random\nimport itertools\nimport math\nsys.setrecursionlimit(10**5)\ninput = sys.stdin.readline\nsqrt = math.sqrt\n\n\ndef LI(): return list(map(int, input().split()))\n\n\ndef LF(): return list(map(float, input().split()))\n\n\ndef LI_(): return list(map(lambda x: int(x)-1, input().split()))\n\n\ndef II(): return int(input())\n\n\ndef IF(): return float(input())\n\n\ndef LS(): return list(map(list, input().split()))\n\n\ndef S(): return list(input().rstrip())\n\n\ndef IR(n): return [II() for _ in range(n)]\n\n\ndef LIR(n): return [LI() for _ in range(n)]\n\n\ndef FR(n): return [IF() for _ in range(n)]\n\n\ndef LFR(n): return [LI() for _ in range(n)]\n\n\ndef LIR_(n): return [LI_() for _ in range(n)]\n\n\ndef SR(n): return [S() for _ in range(n)]\n\n\ndef LSR(n): return [LS() for _ in range(n)]\n\n\ndef gcd(x, y):\n    if y == 0:\n        return x\n    return gcd(y, x % y)\n\n\ndef my_index_multi(l, x):\n    return [i for i, _x in enumerate(l) if _x == x]\n\n\ndef sosu(x):\n    for i in range(2, int(sqrt(x)+1)):\n        if x % i == 0:\n            return False\n    return True\n\n\nmod = 1000000007\ninf = float('INF')\n\n\ndef A():\n    A, B = LI()\n    ans = A-2*B\n    if ans > 0:\n        print(ans)\n    else:\n        print(0)\n    return\n\n# B\n\n\ndef B():\n    N = II()\n    d = LI()\n    ans = 0\n    for i in range(N):\n        for x in range(i+1, N):\n            ans += d[i]*d[x]\n    print(ans)\n\n    return\n\n# C\n\n\ndef C():\n    N = II()\n    S = input()\n    c = 0\n    count = 0\n    for i in S:\n        if i != c:\n            count += 1\n        c = i\n    print(count-1)\n\n    return\n\n# D\n\n\ndef D():\n    N = II()\n    L = LI()\n    L2 = L.copy()\n    L2 = deque(L2)\n    count = 0\n    for i in range(N-1):\n        L2.popleft()\n        L3 = L2.copy()\n        for j in range(i+1, N):\n            L3.popleft()\n            if L3 == deque([]):\n                break\n            p = L[i]+L[j]\n\n            if min(L3) >= p:\n                continue\n            #Lk = filter(lambda x: x % 2 == 1, L2)\n            Lk = [x for x in L3 if p > x]\n\n            for k in Lk:\n                if k+L[i] > L[j] and k+L[j] > L[i]:\n                    #print(k,L[i] , L[j])\n                    count += 1\n        if len(L2) == 2:\n            break\n    print(count)\n\n    return\n\n# E\n\n\ndef E():\n    N, M = LI()\n    bit_max = 1 << N\n    dp = [[inf for i in range(bit_max)] for j in range(M+1)]\n    dp[0][0] = 0\n\n    for i in range(M):\n        a, b = LI()\n\n        c = LI()\n        bit = 0\n\n        for d in c:\n            bit |= 1 << (d-1)\n\n        for w in range(bit_max):\n\n            t = w | bit\n            cost = dp[i][w] + a\n\n            dp[i+1][t] = min(dp[i+1][t], cost)\n\n            dp[i+1][w] = min(dp[i][w], dp[i+1][w])\n\n    print(-1) if dp[-1][-1] == inf else print(dp[-1][-1])\n\n    return\n\n# F\n\n\ndef F():\n    N, M = LI()\n\n    value = [0] * M\n    power = [0] * M\n    for i in range(M):\n        a, b = LI()\n        value[i] = a\n        c = LI()\n        L = ['0'] * N\n        for k in c:\n            L[k - 1] = '1'\n        bint = ''.join(L)\n        power[i] = int(bint, 2)\n    bint = ''.join(list(['1'] * N))\n    dp = [inf] * (int(bint, 2)+1)\n    t = 0\n    cost = 0\n\n    dp[0] = 0\n    for s in range(int(bint, 2) + 1):\n        for i in range(M):\n            t = s | power[i]\n            cost = dp[s] + value[i]\n            dp[t] = min(dp[t], cost)\n    print(-1) if(dp[-1] == inf) else print(dp[-1])\n\n    return\n\n    # you can write to stdout for debugging purposes, e.g.\n# print(\"this is a debug message\")\n\n\ndef solution(S):\n    # write your code in Python 3.6\n    import math\n\n    vowels = \"AIUEO\"\n    count = 0\n    consonants = 0\n    newC = []\n    newV = []\n\n    for i in S[:-1]:\n        if i in vowels:\n            count += 1\n            newV.append(i)\n        else:\n            consonants += 1\n            newC.append(i)\n\n    if consonants < count or consonants - 2 > count:\n        return 0\n\n    a = math.factorial(len(set(newC))) * math.factorial(len(set(newV)))\n    return a\n\n    pass\n\n\n# Solve\nif __name__ == '__main__':\n    D()\n","import array\nimport bisect\n\nN = int(input())\nL = list(map(int, input().split()))\n\nL.sort()\n\nA = array.array('i', L)\n\n#print(L)\n#print(A)\n\ncount = 0\n\nfor ia in range(2,N):\n    for ib in range(1, ia):\n        ic_max = ib-1\n        c_min = A[ia]-A[ib]\n        ic_min = bisect.bisect_right(A, c_min)\n        #print('---------------------')\n        #print(ia, ib, ic_max, ic_min)\n        #print(A[ia], A[ib], A[ic_max], A[ic_min])\n        c_count = ic_max - ic_min + 1\n        if c_count > 0:\n            count += c_count\n\nprint(count)\n","import itertools\n\nN = int(input())\nL = map(int,input().split())\n\n# all_sample = N * (N-1) * (N-2) \/ 6\n\na = list(itertools.combinations(L, 3))\n\nans = 0\n\nfor i in a:\n    s = sum(i)\n    if i[0] < s\/2 and i[1] < s\/2 and i[2] < s\/2:\n        ans += 1\n\nprint(ans)","N=int(input())\nb=[]\nL=[]\nb=input().split()\n\nfor i in range(N):\n    L.append(int(b[i]))\nL.sort()\nx=0\nindex=0\nfor i in range(N-2):\n    x=L[0]\n    L.remove(L[0])\n    for k in range(N-3):\n        if (x + L[k]) > L[k+1]:\n            index+=1\nprint(index)\n","N=int(input())\nL=list(map(int,input().split()))\ncounter=0\nfor t in range(N):\n  for i in range(t+1,N):\n    for p in range(i+1,N):\n      if L[p]<L[t]+L[i] and L[t]<L[i]+L[p] and L[i]<L[p]+L[t]:\n        counter+=1\nprint(counter","length = 2010\n\nn = int(input())\nL = list(map(int, input().split()))\nans = 0\nL.sort()\nsum_1 = [ 0 for _ in range(length)]\nfor i in range(n):\n    sum_1[L[i]]+=1\n#\u68d2\u306e\u9577\u3055\u3067\u7d2f\u7a4d\u548c\nfor i in range(length-1):\n    sum_1[i+1] +=sum_1[i]\nfor i in range(n-1):\n    for j in range(i+1, n):\n        a = abs(L[i]-L[j])\n        b = L[i]+L[j]\n        ans = ans + sum_1[b-1] - sum_1[a]\n\n        if a<L[i] and L[i]<b:\n            ans -=1\n        \n        if a<L[j] and L[j]<b:\n            ans -=1\nprint(ans\/\/3)","#!\/usr\/bin\/env python3\nimport sys\n\n\ndef solve(N: int, L: \"List[int]\"):\n    from itertools import combinations\n    from bisect import bisect_left as bl\n    L = sorted(L)\n    ans = 0\n    for ai, a in enumerate(L):\n        for bi, b in enumerate(L[ai+1:-1], ai+1):\n            ci = bl(L, a+b)\n            ans += ci - bi - 1\n    return ans\n\n# Generated by 1.1.7.1 https:\/\/github.com\/kyuridenamida\/atcoder-tools\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    N = int(next(tokens))  # type: int\n    L = [int(next(tokens)) for _ in range(N)]  # type: \"List[int]\"\n    print(solve(N, L))\n\ndef test():\n    import doctest\n    doctest.testmod()\n\nif __name__ == '__main__':\n    #test()\n    main()\n","n = int(input())\nl_list = list(map(int,input().split()))\nl_list.sort()\nimport bisect\ncount = 0\nfor i in range(1,n):\n  for j in range(i+1,n):\n    b = l_list[i]\n    c = l_list[j]\n    a_cand = l_list[:i]\n    border = c-b\n    count += len(a_cand) - bisect.bisect_right(a_cand,border)\nprint(count)    \n    \n    ","from bisect import bisect_left\nn = int(input())\nl = [int(_) for _ in input().split()]\nl.sort()\ncnt = 0\nfor i in range(n):\n\tfor j in range(i+1,n):\n\t\tcnt += max(0, bisect_left(l, l[i] + l[j]) - (j+1))\nprint(cnt)","N = int(input())\nLs = sorted(map(int, input().split()))\n\nimport bisect\nans = 0\nfor i, a in enumerate(Ls[:-2]):\n  for j, b in enumerate(Ls[i + 1:-1], start=i + 1):\n\n    rest = a + b\n    end_idx = bisect.bisect_left(Ls, rest)\n\n    start_idx = j + 1\n    ans += end_idx - start_idx\n\nprint(ans)\n","import itertools\nN=int(input())\nL=[i for i in map(int,input().split())]\nM=[]\nans=0\nfor i in itertools.permutations(L,3):\n    X=list(i)\n    X.sort()\n    if X not in M :\n        if i[0] < i[1] + i[2] and i[1] < i[0] + i[2] and i[2] < i[0] + i[1] :\n            ans += 1\n            M.append(X)\nprint(ans)","N = int(input())\nl = sorted([int(item) for item in input().split(' ')])\ncount = 0\n\ndef binary_search(count, a, b, l):\n    if len(l) == 0:\n        return count\n    center = len(l) \/\/ 2\n    if a + b > l[center]:\n        count += center + 1\n        return binary_search(count, a, b, l[center+1:])\n    else:\n        return binary_search(count, a, b, l[:center])\n\n\nfor i in range(N):\n    for j in range(i + 1, N):\n        l_remained = l[j + 1:]\n        count = binary_search(count, l[i], l[j], l_remained)\n\nprint(count)\n","n=int(input())\nl=list(map(int,input().split()))\nl.sort()\ndef judge(c,a,b):\n    if a<b+c and b<a+c and c<a+b:\n        return True\n    else:\n        return False\ndef search(st,a,b):\n    min=st-1\n    max=len(l)\n    while max-min>1:\n        mid=(min+max)\/\/2\n        if judge(l[mid],a,b):\n            max=mid\n        else:\n            min=mid\n    return len(l)-max\ndef main(n,l):\n    ans=0\n    for i in range(n-2):\n        for j in range(i+1,n-1):\n            ans+=search(j+1,l[i],l[j])\n    print(ans)\nmain(n,l)","from bisect import bisect_left, bisect_right\n\nn = int(input())\n*l, = map(int, input().split())\n\nl = sorted(l)\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        idx = bisect_left(l, l[j] - l[i] + 1)\n        ans += max(0, i - idx)\n\nprint(ans)","from bisect import bisect_left\nfrom bisect import bisect_right\n\n\nN = int(input())\nL = list(map(int, input().split()))\nL.sort()\n\n\"\"\"\n\u77ed\u3044\u307b\u3046\u304b\u3089\uff12\u672c\u56fa\u5b9a\u3057\u3066\u6761\u4ef6\u306b\u5408\u3046\u3082\u306e\u3092\u3055\u304c\u3059\uff08\u9577\u3044\u307b\u3046\u304b\u3089\uff12\u672c\u56fa\u5b9a\u3067\u3082OK\uff09\n\u6700\u9577\u3068\u6700\u77ed\u3092\u56fa\u5b9a\u3059\u308b\u3068\u3084\u3084\u3053\u3057\u304f\u306a\u308b\u304b\u3089\u3001\u3053\u3046\u3044\u3046\u5834\u5408\u306f\u6700\u9577\/\u6700\u77ed\u3069\u3061\u3089\u304b\u304b\u3089\u56fa\u5b9a\u3059\u308b\u307b\u3046\u304c\u3044\u3044\u304b\n\"\"\"\n\n\nans = 0\nfor i in range(N-2):\n    a = L[i]\n    for j in range(i+1, N-1):\n        #b = L[j]\n        # \u305d\u3082\u305d\u3082c\u304ca\u3084b\u3088\u308a\u5927\u304d\u3044\u306e\u3067\u3001\u4e0b\u306e\u89e3\u6cd5\u306e\u3088\u3046\u306bil\u3092\u6c42\u3081\u308b\u5fc5\u8981\u306a\u3069\u306a\u304f\u3001il=\u3067\u8003\u3048\u308c\u3070\u826f\u304b\u3063\u305f\u3093\u3084\uff01\n        k = bisect_left(L, a+L[j])\n        ans += k - j - 1\n\n\n\n\"\"\"\nans = 0\nfor i in range(N):\n    for j in range(i+1, N):\n        l = L[j] - L[i]\n        r = L[j] + L[i]\n        #  a < b < c\uff08\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u7b49\u53f7\u3092\u542b\u3080\uff09\u3067\u8003\u3048\u305f\u3068\u304d\u306e\u3001b - a < c\u3092\u6e80\u305f\u3059\u3082\u306e \n        il = bisect_right(L, l, lo=j)\n        #  a < b < c\uff08\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u7b49\u53f7\u3092\u542b\u3080\uff09\u3067\u8003\u3048\u305f\u3068\u304d\u306e\u3001c < a + b\u3092\u6e80\u305f\u3059\u3082\u306e\n        ir = bisect_left(L, r, lo=j)\n        # b - a < c\u3092\u6e80\u305f\u3059\u3082\u306e\u304c\u306a\u3044\u5834\u5408\u3001\u98db\u3070\u3059\n        if il == N-1:\n            break\n        \n        ans += ir - il - 1\n\"\"\"\n\nprint(ans)\n","n = input()\nl = input().split(\" \")\nl = [int(i) for i in l]\n\nl.sort(reverse = True)\n\nres = 0\n\nfor i in list(range(0, len(l) - 2)):\n  e1 = l[i]\n  for j in list(range(i+1, len(l) - 1)):\n    e2 = l[j]\n    e3can = l[j+1:]\n    res = res + len([k for k in e3can if k > e1 - e2])\n\nprint(res)","n,res = int(input()),0\nl = sorted(list(map(int,input().split())))\nfor i in range(n-2):\n    for j in range(i +1 , n-1 ):\n        for k in range( j + 1, n ):\n            if l[k] < l[i] + l[j]: res += 1\nprint(res)\n\n\n","N = int(input())\nL = list(map(int, input().split()))\n\nL = sorted(L)\n\ncnt = 0\nfor c in range(N-2):\n    for b in range(c+1, N-1):\n        for a in range(b+1, N):\n            if L[b]-L[c] >= L[a]:\n                continue\n            elif L[a] < L[b] + L[c]:\n                cnt += 1\n                continue\n            elif L[a] >= L[a] + L[c]:\n                break\n            break\n\nprint(cnt)\n","from itertools import combinations\n\nN = int(input())\nL = sorted(list(map(int, input().split())))\n\ncount = 0\nfor bars in list(combinations(L, 3)):\n    if bars[2] < bars[0] + bars[1]:\n        if bars[1] - bars[0] < bars[2]:\n            count += 1\n\nprint(count)","n = int(input())\na = list(map(int, input().split()))\na = sorted(a, reverse=True)\ndef find_min_fuka_idx(lst, e1, e2):\n  ok = -1\n  ng = len(lst)\n  while abs(ok-ng)>1:\n    mid = (ok+ng)\/\/2\n    e3 = lst[mid]\n    if e1+e2 > e3 and e2+e3>e1 and e3+e1>e2:\n      ok = mid\n    else:\n      ng = mid\n  return ng\nc = 0\nfor i in range(n-2):\n  for j in range(i+1, n-1):\n    c += find_min_fuka_idx(a[j+1:], a[i], a[j])\nprint(c)\n  ","n=int(input())\na=list(map(int,input().split()))\ns=set(a)\na1=[]\na2=[]\na3=[]\nfor ii in s:\n  c=a.count(ii)\n  if c==1:\n    a1.append(ii)\n  elif c==2:\n    a2.append(ii)\n  else:\n    a3.append(ii)\na2=a2+a3\na1.sort()\na2.sort()\n\nr=len(a3)\nfor ii in range(len(a2)):\n  for jj in range(len(a1)):\n    if 2*a2[ii]<=a1[jj]:\n      break\n    r+=1\n\n  for jj in range(len(a2)):\n    if 2*a2[ii]<=a2[jj]:\n      break\n    if ii!=jj:\n      r+=1\na1=a1+a2\nimport numpy as np\nfor ii in range(len(a1)-2):\n  for jj in np.arange(ii+1,len(a1)-1):\n    for kk in np.arange(jj+1,len(a1)):\n      if a1[ii]+a1[jj]<=a1[kk]:\n        break\n      r+=1\n      #print(r,a1[ii],a1[jj],a1[kk])\nprint(r)","import bisect\n\nn = int(input())\nL = sorted(list(map(int,input().split())))\n\nans = 0\n\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        k = bisect.bisect_left(L,L[i]+L[j])\n        ans += k-j-1\nprint(ans)","import bisect\nimport sys\n\ninput = sys.stdin.readline\n\n\ndef read_i():\n    return list(map(int, input().split()))\n\n\nn = int(input())\nls = sorted(read_i())\nls2 = ls[::-1]\nres = 0\nfor i, x in enumerate(ls2):\n    for j, y in enumerate(ls2[i + 1:], i + 1):\n        res += n - j - 1 - bisect.bisect(ls[:-(j + 1)], x - y)\nprint(res)","import bisect\n\nn = int(input())\nbar = [ int(v) for v in input().split() ]\nbar.sort()\n\nans = 0\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        ans += bisect.bisect_right(bar,bar[i]+bar[j]-1) - j - 1\nprint(ans)","n = int(input())\nL = list(map(int, input().split()))\nL.sort()\nans = 0\n#print(L)\n\nfor i in range(n):\n    for j in range(i+1, n-1):\n        length = L[i] + L[j]\n\n        l = j+1\n        r = n-1\n        m = (l + r) \/\/ 2\n\n        while True:\n            if l > r:\n                #m = -1\n                break\n            m = (l + r) \/\/ 2\n            if L[m] < length:\n                l = m + 1\n            else:\n                r = m - 1\n\n#        print(i, j, m)\n        if m+1 < n and L[m+1] < length:\n#            print('increment!')\n            m += 1\n        if L[m] >= length and L[m-1] < length:\n            m -= 1\n#            print('decrement!')\n        if L[m] < length:\n            #print('count up: ' + str(m - j) + '\\n')\n            ans += m - j\n\nprint(ans)","import bisect\nN = int(input())\nL = [int(i) for i in input().split()]\nL.sort()\nans = 0\n\nfor i in range(N):\n  for j in range(i+1,N):    \n    A = L[i]+L[j]\n    tmp = bisect.bisect_left(L,A)\n    ans += tmp-j-1\nprint(ans)","n=int(input())\nl=list(map(int,input().split()))\nans=0\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        left=abs(l[i]-l[j])\n        right=l[i]+l[j]\n        ans+=len(list(filter(lambda x: left<x<right, l[j+1:])))\nprint(ans)","n=int(input())\nl=list(map(int,input().split()))\nans=0\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        for k in range(j+1,n):\n            if l[i]<l[j]+l[k] and l[j]<l[k]+l[i] and l[k]<l[i]+l[j]:\n                ans+=1\nprint(ans)","import sys\nfrom itertools import accumulate\nimport bisect\ninput = sys.stdin.readline\ndef inputs():return [int(x) for x in input().split()]\nN = int(input())\nL= inputs()\nL.sort()\nb= 0\nans = 0\nfor i in range(N-1,-1,-1):\n    for j in range(i-1,-1,-1):\n        b= L[i]-L[j]\n        insert_index = bisect.bisect_right(L,b)\n        #print(L,b,i,j,insert_index)\n        ans += max(j-insert_index,0)\n        #print(ans)\nprint(ans)\n","from itertools import combinations\nimport numpy as np\n\nn=int(input())\nl=sorted([int(i) for i in input().split()])\n\nv=np.array([l[0], l[1]])\nvsum=np.array([l[0]+l[1]])\n\nc=0\n\nfor i in range(2, n):\n    p=l[i]\n    c+=np.sum(vsum>p)\n    vsum = np.concatenate([vsum, v+p], 0)\n    v=np.append(v, p)\n\nprint(c)","a = int(input())\nb = [int(elem) for elem in input().split()]\nb.sort(reverse=True)\ncounter = 0\nfor i in range(a-2):\n\tfor j in range(i+1, a-1):\n\t\tfor k in range(j+1, a):\n\t\t\tif b[i] < b[j] + b[k] and b[j] < b[i] + b[k] and b[k] < b[i] + b[j]:\n\t\t\t\tcounter += 1\n\t\t\telse:\n\t\t\t\tbreak\nprint('{}'.format(counter))","n=int(input())\nl=list(map(int, input().split()))\nans=0\nfor i in range(0,n-2,1):\n  for j in range(i+1,n-1,1):\n    for k in range(j+1,n,1):\n      if l[i]<l[j]+l[k]and l[j]<l[k]+l[i]and l[k]<l[i]+l[j]:\n        ans+=1\nprint(ans)","from bisect import*\nn,*l=map(int,open(0).read().split())\nl.sort()\n#print(l)\nans=0\nfor i in range(n):\n    for j in range(i+1,n):\n#        print(max(bisect_left(l,l[i]+l[j])-j-1,0),l[i]+l[j])\n        ans+=max(bisect_left(l,l[i]+l[j])-j-1,0)\nprint(ans)","import bisect\n\nN = int(input())\nL = sorted([int(i) for i in input().split()])\n\nans = 0\nfor i, a in enumerate(L):\n    if i == len(L) - 2:\n        break\n    for j in range(1, N-1-i):\n        l = j + i\n        b = L[l]\n        idx = bisect.bisect_left(L, a + b, lo=l+1)\n        ans += (idx - (l + 1))\n        \nprint(ans)","import bisect\n\nN = int(input())\nL = [int(a) for a in input().split()]\n\nL.sort()\n\nnum_triangles = 0\nfor i in range(0, N - 2): # 0, 1, ..., N - 3\n    for j in range(i + 1, N - 1): # i+1, i+2, ..., N-2\n        num_triangles += bisect.bisect_left(L[j + 1:N], L[i] + L[j])\n\nprint(num_triangles)","from bisect import bisect_left\n\nN = int(input())\nL = [int(x) for x in input().split()]\nL.sort()\n\nans = 0\nfor i in range(N-2):\n\tfor j in range(i+1,N-1):\n\t\tans += bisect_left(L, L[i]+L[j])-j-1\nprint(ans)","N = int(input())\nLs = list(map(int, input().split()))\n\nLs.sort(reverse = True)\ntotal = 0\n\n# print(Ls)\n\n# skip = 10\n\nfor i in range(N-2):\n    for j in range(i+1, N-1):\n        sub_total = 0\n        for k in range(j+1, N):\n            if Ls[i]-Ls[j] < Ls[k] and Ls[i]+Ls[j] > Ls[k]:\n                total += 1\n            elif Ls[i]-Ls[j] >= Ls[k]:\n                break\n\nprint(total)\n","import bisect    \n    \nN = int(input())\nb = list(int(i) for i in input().split())\nb.sort()\nsum_N = 0\nfor i,x in enumerate(b):\n    s = i+1\n    for y in range(i+1,N,1):\n        index = bisect.bisect_left(b,x+b[y])\n        sum_N += max(0,index - y -1)\nprint(sum_N)","n = int(input())\nl = [int(i) for i in input().split()]\n\ns = 0\nfor i in range(n-2):\n  for j in range(i+1, n-1):\n    for k in range(j+1, n):\n      if (l[i] < l[j]+l[k]) and (l[j] < l[k]+l[i]) and (l[k] < l[i]+l[j]):\n        s += 1\nprint(s)","from itertools import combinations\nn = int(input())\nl = list(map(int,input().split()))\ncomb = combinations(l,3)\ncnt = 0\nfor a,b,c in comb:\n    if a<b+c and b<c+a and c<a+b:\n        cnt += 1\nprint(cnt)","n = int(input())\narrl = list(map(int,input().split()))\nimport itertools\ncount = 0\nfor i in itertools.combinations(arrl,3):\n    i = list(i)\n    i.sort()\n    if i[0] + i[1] > i[2]:\n        count += 1\nprint(count)","# -*- coding: utf-8 -*-\nN = int(input())\nL = list(map(int, input().split()))\n\ndef main():\n    tri = 0\n    L.sort()\n    for i in range(N-1,-1,-1): #range(\u521d\u671f\u5024,\u7d42\u4e86\u6761\u4ef6,\u5909\u5316\u91cf)\n        mn = 0\n        sl = i-1\n        while(mn<sl):\n            if (L[mn] + L[sl]) > L[i]:\n                tri += sl - mn\n                sl -= 1\n            else:\n                mn += 1\n    print(tri)\n    \nmain()","n = int(input())\nl = list(map(int, input().split()))\nl.sort()\ndef bin_search(key, list):\n    ok = n\n    ng = -1\n    while abs(ok - ng) > 1:\n        mid = (ok + ng) \/\/ 2\n        if list[mid] > key:\n            ok = mid\n        else:\n            ng = mid\n    return ok\n\nans = 0\nfor i in range(1, n - 1):\n    for j in range(i + 1, n):\n        c_min_len = l[j] - l[i]\n        x = i - bin_search(c_min_len, l)\n        ans += max(0, x)\nprint(ans)","import bisect\n\nN = int(input())\nL = list(map(int, input().split()))\nL.sort(reverse=True)\n\nans = 0\ndif = 0\ncount = 0\nfor i in range(N-2):\n    for j in range(i+1, N-1):\n        dif = L[i] - L[j] + 1\n        L_descend = sorted(L[j+1:])\n        # print(L_descend, bisect.bisect_left(L_descend, dif))\n        index = bisect.bisect_left(L_descend, dif)\n        count = len(L_descend) - index\n        ans += count\n        # print(\"ans = \", ans)\nprint(ans)\n","N = int(input())\nd = input().split()\nd.sort()\n\nli = []\n\ntemp = ''\nfor i in range(N):\n    if(temp != d[i]):\n        temp = d[i]\n        li.append(int(d[i]))\n\nsum = 0\nfor i in range(N-2):\n    for j in range(i+1,N-1):\n        for k in range(j+1,N):\n            if(int(li[i])<int(li[j])+int(li[k]) and int(li[j])<int(li[i])+int(li[k]) and int(li[k])<int(li[i])+int(li[j])):\n                sum += 1\n            else:\n                break\nprint(sum)","n = int(input())\nl = list(map(int, input().split()))\ncnt = 0\nfor i in range(n-2):\n    for j in range(i+1, n-1):\n        for k in range(j+1, n):\n            if l[i] < l[j] + l[k] and l[j] < l[i] + l[k] and l[k] < l[i] + l[j]:\n                cnt += 1\nprint(cnt)","if __name__ == '__main__':\n    n = int(input())\n    l = list(map(int,input().split()))\n\n    answer = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            for k in range(j+1,n):\n                if abs(l[j]-l[k]) < l[i] and l[i] < l[j] + l[k]:\n                    answer += 1\n\n    print(answer)\n","import sys\ninput = sys.stdin.readline\nimport bisect\nn = int(input())\na = [int(i) for i in input().split()]\na = tuple(sorted(a))\nans = 0\nfor i in range(n-2):\n  for j in range(i+1,n-1):\n    chk = a[i]+a[j]\n    ind = bisect.bisect_left(a,chk)\n    ans += (ind-j-1)\nprint(ans)  ","import bisect\nN = int(input())\nls = list(map(int,input().split()))\nls.sort()\nans = 0\nfor i in range(N-2):\n    for j in range(i+1,N-1):\n        ls1 = ls[j+1:]\n        ans += bisect.bisect_left(ls1,ls[j]+ls[i]+1)-bisect.bisect(ls1,ls[j]-ls[i]-1)\nprint(ans)","from heapq import heappush, heappop\nfrom collections import deque,defaultdict,Counter\nimport itertools\nfrom itertools import permutations,combinations\nimport sys\nimport bisect\nimport string\n#import math\n#import time\n#import random  # randome is not available at Codeforces\ndef I():\n    return int(input())\ndef MI():\n    return map(int,input().split())\ndef LI():\n    return [int(i) for i in input().split()]\ndef LI_():\n    return [int(i)-1 for i in input().split()]\ndef StoI():\n    return [ord(i)-97 for i in input()]\ndef show(*inp,end='\\n'):\n    if show_flg:\n        print(*inp,end=end)\nYN=['Yes','No']\nmo=10**9+7\ninf=float('inf')\n#eps=10**(-10)\n#ts=time.time()\n#sys.setrecursionlimit(10**6)\ninput=lambda: sys.stdin.readline().rstrip()\n\nshow_flg=False\nshow_flg=True\n\nn=I()\na=sorted(LI())[::-1]\n\ns=set()\nfor i in a:\n    s.add(i)\ns=sorted(list(s))[::-1]\nL=1080\n#L=10000\nk=[0]*(L)\nak=[0]\nans=0\n\nfor i in a:\n    k[i]+=1\nfor i in range(L):\n    ak.append(ak[-1]+k[i])\n\nun=len(s)\nfor i in range(un):\n    c=s[i]\n    if k[c]>=3:\n        ans+=k[c]*(k[c]-1)*(k[c]-2)\/\/6\n    if k[c]>=2:\n        ans+=ak[c]*k[c]*(k[c]-1)\/\/2\n    for j in range(i+1,un):\n        #show('i,j,s[i],s[j],mm',i,j,'|',s[i],s[j],s[i]-s[j]+1,'|',ak[s[i]-s[j]],ans)\n        \n        sc=s[j]\n        if ak[sc]==0:\n            break\n        mm=c-sc+1\n        if mm<0:\n            continue\n        elif mm>sc:\n            continue # break\n        else:\n            ans+=k[c]*k[sc]*((1 if 2*k[sc]>k[c] 0)*(k[sc]-1)\/\/2+ak[sc]-ak[mm])\n        #show('ans+=',k[sc]*(k[sc]-1)\/\/2+ak[sc]-ak[mm])\n    \nprint(ans)\n    \n","import sys\n\ndef main():\n\n\targs = sys.argv\n\tN = int(input())\n\tL = list(map(int, input().split()))\n\tC = 0\n\tfor i in range(0, N-2):\n\t\tfor j in range(i+1, N-1):\n\t\t\tfor k in range(j+1, N):\n\t\t\t\tif L[i] < L[j] + L[k] and L[j] < L[k] + L[i] and L[k] < L[i] + L[j]:\n\t\t\t\t\tC = C + 1\n\tprint(C)\n\nif __name__ == \"__main__\":\n    main()","import bisect\n\nN = int(input())\nL = list(map(int,input().split()))\nL.sort()\n\nans = 0\nfor i in range(1,N-1):\n  for j in range(i+1,N):\n    m = bisect.bisect_right(L,L[j]-L[i])\n    if i>m:\n      ans += i-m\nprint(ans)","import bisect\nn = int(input())\nl = list(map(int,input().split()))\nl = sorted(l)\nans = 0\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        x = bisect.bisect_left(l, l[i] + l[j], j+1)\n        ans += x -j -1\nprint(ans)\n","import itertools\n\nn = int(input())\n\nl = list(map(int, input().split()))\n\nzzz = list(itertools.combinations(l,2))\n\n\ncnt = 0\nprint(zzz)\n\nfor z in zzz:\n\n    b = z[0]\n    c = z[1]\n\n    b_flg = True\n\n    c_flg = True\n\n    for i in l:\n        if b_flg and i == b:\n            continue\n\n        if c_flg and i == c:\n            continue\n                \n        if abs(b-c) < i < b+c:\n            cnt += 1\n\nprint(cnt \/ 3)\n","N = int(input())\nL = map(int, input().split())\nSL = sorted(list(L))\nA = [0] * (10 ** 3 + 10)\n\nfor i in SL:\n    A[i] = True\nfor i in range(len(A)):\n    if A[i] == True:\n        A[i] = A[i-1] + 1\n    else:\n        A[i] = A[i-1]\n\n# print(A[4-1] - A[2])\n\nans = 0\nfor i in range(N-2):\n    for j in range(i+1, N-1):\n        for k in range(j+1, N):\n            # print(i, j, k)\n            a = SL[i]\n            b = SL[j]\n            c = SL[k]\n            if a < b + c and b < c + a and c < a + b:\n                ans += 1\nprint(ans)","n = int(input())\nxs = list(map(int,input().split()))\nxs.sort()\nans = 0\nfor i in range(n-2):\n  for j in range(i+1,n-1):\n    for k in range(j+1,n):\n      if xs[i] + xs[j] <= xs[k]:\n        break\n      ans += 1\nprint(ans)\n\n\n","import sys; readline = sys.stdin.readline\nfrom collections import deque\n\n\nN = int(readline())\nL = list(map(int, readline().split()))\n\nL.sort()\n\nNs = [0] * (2*10**3 + 10)\n\nfor l in L:\n    Ns[l] += 1\n\ncNs = [0] * len(Ns)\nfor i in range(1, len(Ns)):\n    cNs[i] = cNs[i - 1] + Ns[i]\n\ncount = 0\nfor i in range(N - 1, -1, -1):\n    for j in range(i - 1, -1, -1):\n        m = L[i] - L[j]\n        M = L[j] - 1\n        count += max(0, cNs[M] - cNs[m])\n\n        if L[j] == m:\n            count += max(0, Ns[L[j]] - 1)\n        \n\nprint(count)","import bisect\n\nn = int(input())\nL = sorted([int(x) for x in input().split()])\nans = 0\nfor ai in range(n - 1):\n    for bi in range(ai + 1, n):\n        a = L[ai]\n        b = L[bi]\n        l, r = abs(a - b) + 1, a + b - 1\n        li = bisect.bisect_left(L, l)\n        ri = bisect.bisect_right(L, r)\n        ans += ri - li\n        if li <= ai <= ri:\n            ans -= 1\n        if li <= bi <= ri:\n            ans -= 1\nprint(int(ans \/ 3))\n","n = int(input())\nv = [int(x) for x in input().split()]\n\ndef check(a,b,c):\n  if a + b > c and b + c > a and c + a > b:\n    return True\n  return False\n\nres = 0\nfor i in range(n):\n  for j in range(i+1,n):\n    for k in range(j+1,n):\n      if check(v[i],v[j],v[k]):\n        res += 1\nprint(res)","import itertools\n\nN = int(input())\nL = list(map(int, input().split()))\n\nL = sorted(L, reverse = True)\n\ncomb = itertools.combinations(L, 3)\n\ncount = 0\n\nfor item in comb:\n#    print(item)\n    if item[0] < item[1] + item[2]:\n        count += 1\n\nprint(count)\n\n","import itertools\n\nN = int(input())\nL = list(map(int, input().split()))\n\ntriangle = 0\nb = list((itertools.combinations(L, 3)))\nc = list((itertools.combinations(L, 3)))\n\nfor i in range(len(c)):\n    if (c[i][0] < c[i][1] + c[i][2]\n            and c[i][1] < c[i][0] + c[i][2]\n            and c[i][2] < c[i][1] + c[i][0]):\n        triangle += 1\n\nprint(triangle)\n","N = int(input())\nl_list = list(map(int, input().split()))\nl_list.sort()\n\ncnt = 0\nstart_j = 1\nstart_k = 2\nfor i in range(N):\n    for j in range(i+1, N):\n        for k in range(j+1, N):\n            if l_list[k] < l_list[i] + l_list[j]:\n                cnt += 1\n            else:\n                break\nprint(cnt)","N=int(input())\nL=input()\nL=L.split(\" \")\nL_i=[]\nfor i in L:\n L_i.append(int(i))\n\ncount=0\nfor i in range(0,N):\n for j in range(i+1,N):\n  for k in range(j+1,N):\n   if(L_i[i]<L_i[j]+L_i[k] and L_i[j]<L_i[k]+L_i[i] and L_i[k]<L_i[i]+L_i[j] ):\n    count+=1\n\nprint(count)","import itertools\n\nn = int(input())\nL = list(map(int, input().split()))\n\ncircle = list(itertools.combinations(L, 3))\n\ncount = 0\nfor c in circle:\n    if c[0] < c[1] + c[2] and c[1] < c[2] + c[0] and c[2] < c[0] + c[1]:\n        count += 1\n\nprint(count)","import math\nimport itertools\nimport copy\nimport bisect\n\nN = int(input())\nL = [int(x) for x in input().split()]\nLs = sorted(L) # L\u3092\u964d\u9806\u306b\u30bd\u30fc\u30c8\n#print(Ls)\ncnt = 0\n\nfor i in range(N) :\n    a = Ls[i]\n    for j in range(i+1,N) :\n        #print(\" \")\n        b = Ls[j]\n        L_roop = copy.deepcopy(Ls[j+1:])\n        #print(L_roop)\n\n        # 2\u5206\u63a2\u7d22 x2 index\u3092\u6c42\u3081\u308b\n        ba = bisect.bisect(L_roop,abs(a-b)+0.1)\n        #print(abs(a-b)+0.1,ba)\n        L_roop.insert(ba,abs(a-b)+0.1)\n        #print(\"a\",L_roop)\n\n        bb = bisect.bisect(L_roop,abs(a+b)-0.1)\n        #print(abs(a+b)-0.1,bb)\n        L_roop.insert(bb,abs(a+b)-0.1)\n        #print(\"b\",L_roop)\n\n        #print(\"ba,bb\",ba,bb)\n        if bb - ba > 1 :\n            #print(Ls[i],Ls[j],L_roop[ba+1])\n            cnt += bb - ba - 1\n    \nprint(cnt)\n","import itertools\nN = int(input())\nA = list(map(int, input().split())) \ntk = list(itertools.combinations(A, 3))\ncount = 0\n\nfor i in range(len(tk)):\n    test = sorted(tk[i], reverse=True)\n    if (test[1] - test[2] < test[0])and(test[0] < test[1] + test[2]):\n        count += 1\n        \nprint(count)","import bisect\nn = int(input())\nl = sorted(list(map(int, input().split())))\ns = 0\nfor i in range(0,n-2):\n  a = l[i]\n  for j in range(i+1,n-1):\n    b = l[j]\n    s += bisect.bisect_left(l,a+b)-j-1\nprint(s)","n=int(input())\nlistl = [int(i) for i in input().split()]\n\nlistl.sort(reverse=True)\n\n#print(listl)\nans=0\nfor i in range(n-2):\n\tfor j in range(i+1,n-1):\n\t\tif listl[j]<=(listl[i]\/2):\n\t\t\tbreak\n\t\tfor k in range(j+1,n):\n\n\t\t\tif listl[i]<listl[j]+listl[k]:\n\t\t\t\tans=ans+1\n\t\t\telse:\n\t\t\t\tbreak\t\nprint(1)\nprint(ans)\n\t\t\t\t \n\t\t","import itertools\nN = int(input())\nd_list = list(map(int, input().split()))\nc_d_list = list(itertools.combinations(d_list, 3))\ncount = 0\nfor i in c_d_list:\n    a = i[0]\n    b = i[1]\n    c = i[2]\n    if a < b + c:\n        if b < a + c:\n            if c < a + b:\n                count += 1\nprint(count)","import itertools\n \nn = int(input())\nl = list(map(int, input().split()))\n \ncnt = 0\n \nfor subset in itertools.combinations(l, 3):\n    L = [subset[0],subset[1],subset[2]]\n    L.sort()\n    if abs(L[0]-L[1]) < L[2] < L[0]+L[1]:\n        cnt += 1\nprint(cnt)","import bisect\nn = int(input())\nl = list(map(lambda x:int(x),input().split()))\nl = sorted(l)\n\nans = 0\nfor i in range(n):\n    for j in range(i+1,n):\n        ans += bisect.bisect_left(l,l[i]+l[j])-j-1\n        \nprint(ans)","n=int(input())\nl = list(map(int,input().split()))\nans=0\nfor i in range(n-2):\n    for j in range(i+1,n-1):\n        for k in range(j+1,n):\n            if abs(l[i]-l[j]) < l[k] and l[k] <  l[i]+l[j]:\n                ans+=1\n            else:\n                ans+=0\nprint(ans)","a = int(input())\nb = str(input())\nc = b.split(\" \")\nans = 0\nfor i in range(a):\n  for j in range(a):\n    if j<=i:continue\n    for k in range(a):\n      if k<=i or k<=j:continue\n      if (int(c[i]) < (int(c[j])+int(c[k]))) and (int(c[j]) < (int(c[i])+int(c[k]))) and (int(c[k]) < (int(c[i])+int(c[j]))):\n        ans += 1\nprint(ans)","n = int(input())\nl = list(map(int, input().split()))\n\nfor i in range(n):\n    for j in range(i, n - i):\n        a = l[i]\n        b = l[j]\n        for k in range(j, n - i - j):\n            c = l[k]\n            if (a < b + c) and (b < c + a) and (c < a + b):\n                ans += 1\n\nprint(ans)\n","n = int(input())\nl = list(map(int, input().split()))\nl.sort()\n\nhoge = []\nans = 0\na = b = c = None\nfor i in range(n - 2):\n    if i == 0 or l[hoge[-1][0]] != l[i]:\n        for j in range(i + 1,n - 1):\n            if j == i + 1 or l[hoge[-1][1]] != l[j]:\n                for k in range(j + 1, n):\n                    if k == j + 1 or l[hoge[-1][2]] != l[k]:\n                        hoge.append([i, j, k])\nfor i, j, k in hoge:\n    a = l[i]\n    b = l[j]\n    c = l[k]\n    if a < b + c and b < a + c and c < b + a:\n        ans += 1\nprint(ans)\n","def check(data):\n  data=[int(i) for i in data]\n  if data[0]>=data[1]+data[2]:\n    return False\n  elif data[1]>=data[0]+data[2]:\n    return False\n  elif data[2]>=data[0]+data[1]:\n  \treturn False\n  else:\n    return True\ninput()\ndata=[i for i in input().split()]\ntriangles=set()\nfor id1,i in enumerate(data):\n  for id2,j in enumerate(data):\n    if id1==id2:\n      continue\n    for id3,k in enumerate(data):\n      if id1==id3 or id2==id3:\n        continue\n      tri=[i,j,k]\n      tri.sort()\n      if \"-\".join(tri) not in triangles:\n        if check(tri):\n          triangles.add(\"-\".join(tri))\nprint(len(triangles))","N = int(input())\nL = list(map(int, input().split()))\ncount = 0\nfor i in range(0,N):\n  for j in range(i+1,N):\n    for k in range(j+1, N):\n      a = L[i]\n      b = L[j]\n      c = L[k]\n      if a < b+c and b < a+c and c < a+b:\n        count += 1\nprint(count)","n = int(input())\nl = list(map(int , input().split()))\nl = sorted(l, key=None, reverse=True)\nans = 0\nfor i in range(0, n):\n    for j in range(i + 1, n):\n        for k in range(j + 1, n):\n            print(i,j,k)\n            if l[i] < l[j] + l[k] and l[j] < l[i] + l[k] and l[k] < l[i] + l[j]:\n                ans += 1\n                print('ok')\n            else:\n                print('break')\n                break\n        else:\n            continue\n        break\nprint(ans)\n\n","import sys\nimport bisect\nreadline = sys.stdin.readline\nn = int(readline())\nA = list(map(int,readline().split()))\nmemo1 = {}\nmemo2 = {}\nA.sort()\nmemo1[A[0]+A[1]] =1\nmemo2[A[0]] =1\nif A[1] in memo2:\n    memo2[A[1]] +=1\nelse:\n    memo2[A[1]] =1\nans = 0\nfor c in A[2:]:\n    for l,amount in memo1.items():\n        if c<l:\n            ans +=amount\n    for a,amount in memo2.items():\n        ac = a+c\n        if ac in memo1:\n            memo1[ac] += memo2[a]\n        else:\n            memo1[ac] = memo2[a]\n    if c in memo2:\n        memo2[c] +=1\n    else:\n        memo2[c] =1\n\nprint(ans)","N = int(input())\nL = list(map(int, input().split()))\nL.sort()\nans = 0\nfor i in range(N):\n    for j in range(i+1, N, 1):\n        for k in range(j+1, N, 1):\n            if L[k] < L[i]+L[j]:\n                ans+=1\nprint(ans)","from bisect import*\nfrom itertools import*\nn,*L=map(int,open(0).read().split())\nL.sort()\nans=0\nfor x,y in combinations(L,2):\n\tlow=abs(x-y)\n\thigh=x+y\n\tans+=bisect_left(L,high)-bisect(L,low)\n\tif low<x<high:\n\t\tans-=1\n\tif low<y<high:\n\t\tans-=1\nprint(ans\/\/3)","import bisect\nn = int(input())\nl = list(map(int, input().split()))\nl.sort()\n\ncnt = 0\n\nprint(l)\nfor i in range(n - 1, 0, -1):\n    for j in range(i - 1, -1, -1):\n        base = l[i] - l[j]\n        idx = bisect.bisect_right(l, base)\n        cnt += max(j - idx, 0)\nprint(cnt)\n\n\n","# -*- coding: utf-8 -*-\nimport bisect\n\n# \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306e\u6574\u6570\u306e\u5165\u529b\nn = int(input())\nl_list = input().split(\" \")\nl_int_list = []\nfor item in l_list:\n    l_int_list.append(int(item))\n\nl_int_list.sort()\n\ncount = 0\n\n\nfor i in range(len(l_int_list)):\n    for j in range(i+1, len(l_int_list)):\n        index = bisect.bisect_left(\n            l_int_list, l_int_list[i]+l_int_list[j], j+1, len(l_int_list))\n        count += index - j - 1\n\nprint(count)\n","import itertools\nn = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in itertools.combinations(l,3):\n  if i[0]<i[1]+i[2] and i[1]<i[2]+i[0] and i[2]<i[0]+i[1]:\n    ans+=1\nprint(ans)","import bisect\nN=int(input())\nL=list(map(int,input().split()))\nL.sort()\nans=0\nfor i in range(N-2):\n  for j in range(i+1,N-1):\n    a=bisect.bisect_left(L,L[i]+L[j])\n    ans+=(a-j-1)\nprint(ans)","import bisect\nN = int(input())\nL = list(map(int, input().split()))\nL.sort()\n\ncount = 0\nfor i in range(N):\n    for j in range(i+1, N):\n        a = L[i]\n        b = L[j]\n        k = bisect.bisect_left(L, a+b)\n        if k > j:\n            count += k -j -1\nprint(count)","from bisect import bisect_left\n\nN=int(input())\nL=list(map(int,input().split()))\nL.sort()\nans=0\nfor i in range(N-2):\n    for j in range(i+1,N-1):\n        l=L[i]+L[j]\n        c=bisect_left(L,l)\n        ans+=max(0,c-j-1)\nprint(ans)\n"]}
{"description_html":"<span class=\"lang-en\">\n<p>Score : <var>100<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>There are <var>S<\/var> sheep and <var>W<\/var> wolves.<\/p>\n<p>If the number of wolves is greater than or equal to that of sheep, the wolves will attack the sheep.<\/p>\n<p>If the wolves will attack the sheep, print <code>unsafe<\/code>; otherwise, print <code>safe<\/code>.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li><var>1 \\leq S \\leq 100<\/var><\/li>\n<li><var>1 \\leq W \\leq 100<\/var><\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>S<\/var> <var>W<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>If the wolves will attack the sheep, print <code>unsafe<\/code>; otherwise, print <code>safe<\/code>.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>4 5\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>unsafe\n<\/pre>\n<p>There are four sheep and five wolves. The number of wolves is not less than that of sheep, so they will attack them.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>100 2\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>safe\n<\/pre>\n<p>Many a sheep drive away two wolves.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>10 10\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>unsafe\n<\/pre><\/section>\n<\/div>\n<\/span>","description_string":"\nScore : 100 points\n\n\nProblem StatementThere are S sheep and W wolves.\nIf the number of wolves is greater than or equal to that of sheep, the wolves will attack the sheep.\nIf the wolves will attack the sheep, print unsafe; otherwise, print safe.\n\n\n\n\nConstraints\n1 \\leq S \\leq 100\n1 \\leq W \\leq 100\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nS W\n\n\n\n\n\nOutputIf the wolves will attack the sheep, print unsafe; otherwise, print safe.\n\n\n\n\n\n\nSample Input 14 5\n\n\n\n\n\nSample Output 1unsafe\n\nThere are four sheep and five wolves. The number of wolves is not less than that of sheep, so they will attack them.\n\n\n\n\n\nSample Input 2100 2\n\n\n\n\n\nSample Output 2safe\n\nMany a sheep drive away two wolves.\n\n\n\n\n\nSample Input 310 10\n\n\n\n\n\nSample Output 3unsafe\n\n\n","orig_lang_html":"<span class=\"lang-en\">\n<p>Score : <var>100<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>There are <var>S<\/var> sheep and <var>W<\/var> wolves.<\/p>\n<p>If the number of wolves is greater than or equal to that of sheep, the wolves will attack the sheep.<\/p>\n<p>If the wolves will attack the sheep, print <code>unsafe<\/code>; otherwise, print <code>safe<\/code>.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li><var>1 \\leq S \\leq 100<\/var><\/li>\n<li><var>1 \\leq W \\leq 100<\/var><\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>S<\/var> <var>W<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>If the wolves will attack the sheep, print <code>unsafe<\/code>; otherwise, print <code>safe<\/code>.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>4 5\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>unsafe\n<\/pre>\n<p>There are four sheep and five wolves. The number of wolves is not less than that of sheep, so they will attack them.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>100 2\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>safe\n<\/pre>\n<p>Many a sheep drive away two wolves.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>10 10\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>unsafe\n<\/pre><\/section>\n<\/div>\n<\/span>","orig_lang_string":"\nScore : 100 points\n\n\nProblem StatementThere are S sheep and W wolves.\nIf the number of wolves is greater than or equal to that of sheep, the wolves will attack the sheep.\nIf the wolves will attack the sheep, print unsafe; otherwise, print safe.\n\n\n\n\nConstraints\n1 \\leq S \\leq 100\n1 \\leq W \\leq 100\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nS W\n\n\n\n\n\nOutputIf the wolves will attack the sheep, print unsafe; otherwise, print safe.\n\n\n\n\n\n\nSample Input 14 5\n\n\n\n\n\nSample Output 1unsafe\n\nThere are four sheep and five wolves. The number of wolves is not less than that of sheep, so they will attack them.\n\n\n\n\n\nSample Input 2100 2\n\n\n\n\n\nSample Output 2safe\n\nMany a sheep drive away two wolves.\n\n\n\n\n\nSample Input 310 10\n\n\n\n\n\nSample Output 3unsafe\n\n\n","solve_rate":0.7001472875,"codenet_problem_id":"p02699","input_testcases":{"102":"10 10","14":"3 10","44":"2 19","5":"8 10","53":"1 2","26":"1 17","17":"5 14","65":"3 1","59":"2 3","99":"2 1","0":"1 5","41":"1 16","50":"1 1","101":"4 5","8":"11 10","20":"1 14","100":"4 5","103":"100 2","2":"5 10","88":"001 1","23":"1 19","11":"6 10","3":"1 6","38":"1 13","62":"3 3","56":"2 2","94":"100 1"},"output_testcases":{"102":"unsafe\n","14":"unsafe\n","44":"unsafe\n","5":"unsafe\n","53":"unsafe\n","26":"unsafe\n","17":"unsafe\n","65":"safe\n","59":"unsafe\n","99":"safe\n","0":"unsafe\n","41":"unsafe\n","50":"unsafe\n","101":"unsafe\n","8":"safe\n","20":"unsafe\n","100":"unsafe\n","103":"safe\n","2":"unsafe\n","88":"unsafe\n","23":"unsafe\n","11":"unsafe\n","3":"unsafe\n","38":"unsafe\n","62":"unsafe\n","56":"unsafe\n","94":"safe\n"},"n_missing":77,"programs":["import sys \ntry:\n\tsys.stdin = open('input.txt', 'r') \n\tsys.stdout = open('output.txt', 'w')\nexcept:\n\tpass\ninput = sys.stdin.readline\nfor tt in range(1):\n\t# n = int(input())\n\ts,w = map(int,input().split())\n\tif w>=s:\n\t\tprint(\"unsafe\")\n\telse:\n\t\tprint(\"safe\")\n\t","S,W = map(int,input().split())\n\nprint(\"unsafe\") if S<=W else print(\"safe\")","import numpy as np\nimport sys\nimport math\n\ns , w = map(int,input().split())\n\nif s >= w :\n    print(\"safe\")\nelse:\n    print(\"unsafe\")\n\n","num_list = [int(i) for i in input().split()]\n\nif num_list[0] <= num_list[1]:\n    print('unsafe')\nelse:\n    print('safe')","s, w = input().split()\ns = int( s )\nw = int( w )\n\nif w >= s:\n    print( \"unsafe\" )\nelse:\n    print( \"safe\" )\n    ","A, B, C, D = map(int,input().split())\nans = \"Yes\"\ncurA = A\ncurC = C\nfor i in range(max(A,C)):\n  curC  = curC-B\n  if(curC<=0):\n    ans = \"Yes\"\n    break\n  curA = curA-D\n  if(curA<=0):\n    ans = \"No\"\n    break\nprint(ans)","S, W = map(int, input().split())\n\nif W >= S :\n    print('unsafe')\nelse:\n    print('safe')","S, W =map(int, input().split())\nif S <= W:\n    print('unsafe')\nelse:\n    print('safe')","s, w = map(int, input().split())\nif s<=w:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","s, w = map(int, input().split()) # split()\u3067\u7a7a\u767d\u533a\u5207\u308a\u3067\u30ea\u30b9\u30c8\u5316\u3001\u305d\u306e\u969bmap()\u3067int\u578b\u306b\u30ad\u30e3\u30b9\u30c8\u3057\u5909\u6570\u306b\u4ee3\u5165\u3002\nif s > w\n\tprint(\"safe\")\nelse\n\tprint(\"unsafe\")","a,b=map(int,input().split())\nprint('unsafe' if b>=a else 'safe')","s, w = map(int, input().split())\n\nif s <= w:\n    print('unsafe')\nelse:\n    print('safe')","s,w = map(int,input().split())\nif(s<=w):\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","S, W = map(int, input().split())\n\nprint(\"unsafe\" if W >= S else \"safe\")","S,W = map(int,input().split())\nif S > W:\n    print('safe')\nelse:\n    print('unsafe')","S, W = map(int, input().split())\n\nif S > W:\n    print(\"safe\")\nelse:\n    print(\"unsafe\")","S,W=map(int,input().split())\nif (W>=S):\n    print('Unsafe')\nelse:\n    print('Safe')","S, W = map(int, input().split())\nprint(\"unsafe\" if S <= W else \"safe\")\n","s,w = map(int, input().split())\n\nif s<=w:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","s,v = map(int, input().split())\nif v >= s:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","S,W = map(int, input().split())\nif (S<=W):\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","\ndef main():\n    s, w = map(int, input().split(\" \"))\n    if s <= w:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == \"__main__\":\n    main()","S, W = map(int, input().split())\n\nif S <= W:\n  print('unsafe')\nelse:\n  print('safe')","S, W = map(int, input().split())\n\nprint('unsafe' if S <= W else 'safe')\n","s, w = map(int, input().split())\n\nif s <= w:\n  print('unsafe')\nelse:\n  print('safe')","s, w = map(int, input().split())\n\nif s <= w:\n    print('unsafe')\nelse:\n    print('safe')","s, w = map(int, input().split())\n\nif w >= s:\n    print('unsafe')\nelse:\n    print('safe')\n    ","s, w = map(int, input().split())\nif w >= s:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","a,b,c,d=map(int,input().split())\nwhile True:\n  c-=b\n  if c<=0:\n    print('Yes')\n    break\n  a-=d\n  if a<=0:\n    print('No')\n    break","w=eval(input(\"\"))\ns=eval(input(\"\"))\nif(w>=s):\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","s, w = map(int, input().split())\nprint('unsafe' if s <= w else 'safe')\n","LI = lambda: list(map(int,input().split()))\nMI = lambda: map(int,input().split())\nyes = lambda: print(\"YES\")\nno = lambda: print(\"NO\")\nI = lambda: list(input())\nJ = lambda x: \"\".join(x)\nII = lambda: int(input())\nSI = lambda: input()\n#---khan17---template\nn,w = MI()\nif w>=n:\n\tprint(\"unsafe\")\nelse:\n\tprint(\"safe\")","S, W = map(int, input().split())\nif W >= S:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")\n\n","s, w = map(int, input().split())\nif w >= s:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","from heapq import *\nimport sys\nfrom collections import *\nfrom itertools import *\nfrom decimal import *\nimport copy\nfrom bisect import *\nimport time\nimport math\ndef gcd(a,b):\n    if(a%b==0):return(b)\n    return (gcd(b,a%b))\nS,W=map(int,input().split())\nif not S<=W:\n    print(\"safe\")\nelse:\n    print(\"unsafe\")\n","inputs = input()\nS,W = inputs.split()\nresult = int(S) - int(W)\nif result < 0:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","n = list(map(int, input().split()))\nif n[0] <= n[1]:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","s, w = map(int, input().split())\nif w >= s:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")\n","s, w = list(map(int, input().split()))\nprint('safe' if s > w else 'unsafe')","s, w = map(int, input().split())\n\nif s > w:\n  print(\"safe\")\nelse:\n  print(\"unsafe\")","S,W = (int(x) for x in input().split())\nif S<=W:\n  print('unsafe')\nelse:\n  print('safe')","li = input().split()\nS = int(li[0])\nW = int(li[1])\n\nif S - W > 0:\n    print('safe')\nelse:\n    print('unsafe')\n","S,W = map(int,input().split())\n\nif W >= S:\n    print('unsafe')\n    \nelse:\n    print('safe')","#!\/usr\/bin\/python3\n# -*- coding:utf-8 -*-\n\nfrom collections import Counter\n\ndef main():\n  s = input().strip()\n  remains = Counter([int(s[-i:]) % 2019 for i in range(1, len(s)+1)]).items()\n\n  cnt = 0\n  for k, v in remains:\n    cnt += (v * (v - 1)) \/\/ 2\n    if k == 0:\n      cnt += v\n  print(cnt)\n  \nif __name__=='__main__':\n  main()\n\n","s,w = map(int,input().split())\nif w>=s:\n      print(\"unsafe\")\nelse:\n      print(\"safe\")","S, W = map(int, input().split())\nif S <= W:\n    print('unsafe')\nelse:\n    print('safe')","S, W = map(int, input().split())\n\nif W >= S:\n  print('unsafe')\nelse:\n  print('safe')","s, w = map(int,input().split())\n\nif w >= s:\n    print('unsafe')\nelse:\n    print('safe')","S,W=input().split()\nS=int(S)\nW=int(W)\nif W >= S:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","s,w = map(int,input().split())\nif s>w:\n  print('safe')\n else:\n  print('unsafe')","s, w = map(int, input().split())\n\nif w >= s:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","S, W = map(int, input().split())\n\nif S <= W:\n  print('unsafe')\nelse:\n  print('safe')","s ,w = map(int, input().split())\nif s <= w:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")\n","s, w = map(int, input().split())\nprint(\"unsafe\" if w >= s else \"safe\")","s, w = list(map(int, input().split()))\noutput = \"safe\"\nif s <= w:\n  output = \"un\" + output\nprint(output)","s, w = map(int, input().split())\nif s > w:\n    print(\"safe\")\nelse:\n    print(\"unsafe\")\n    \n","S,W= map(int,input().split())\n\nif (W>=S):\n    print(\"unsafe\")\nelse:\n    print(\"safe\")\n","s,w = map(int,input().split())\nif s<=w:\n    print('unsafe')\nelse:\n    print('safe')\n\n","s,w=map(int,input().split(' '))\nif s>w:\n    print('safe')\nelse:\n    print('unsafe')","s,w=map(int, input().split())\nif s <= w:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","S,W=map(int,input().split())\nif S>W:\n    print('safe')\nelse:\n    print('unsafe')","S,W = map (int12,input().split())\nif S > W:\n  print(\"safe\")\nelse :\n  print(\"unsafe\")\n","s,w = map(int, input().split())\n\nif s <= w:\n    print('unsafe')\n\nelse:\n    print('safe')","s,w = map(int,input().split())\nif w >= s:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","s, w = map(int, input().split())\n \nif w >= s:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","#coding UTf-8\ns,w = map(int,input().split())\nif(s <= w):\n    print('unsafe')\nelse:\n    print('safe')\n","s, w = map(int,input().split())\n\nif s <= w:\n  print('unsafe')\nelse:\n  print('safe')","def Sol(taka_health,taka_stregnth,aoki_health,aoki_stregnth):\n    \n    if taka_health%aoki_stregnth != 0:\n        moves_taka = int(taka_health\/aoki_stregnth) + 1\n    else:\n        moves_taka = int(taka_health\/aoki_stregnth)\n    \n    if aoki_health%taka_stregnth != 0:\n        moves_aoki =int(aoki_health\/taka_stregnth) + 1\n    else:\n        moves_aoki = int(aoki_health\/taka_stregnth)\n    \n    print(moves_aoki,moves_taka)\n    if moves_taka > moves_aoki:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n    return\n\n    \n\n#for t in range(int(input())):\nn,k,d,c = map(int,input().split())\n#n = int(input())\n#arr = []\n#for i in range(n):\n#    time = list(map(int,input().split()))\n#    time = time[0] + (time[1]\/60)\n#    arr.append(time)\n#arr = list(map(int,input().split()))\n#k = input()\n#n = int(input())\nSol(n,k,d,c)\n","s,w = map(int,input().split())\nif s>w:\n    print(\"safe\")\nelse:\n    print(\"unsafe\")","a,b,c,d = (int(x) for x in input().split())\n\nx=int(a\/d)+1\ny=int(b\/c)+1\n\nif x>=y:\n    print(\"Yes\")\nelse:\n    print(\"No\")","s,w = map(int,input().split())\nif s<=w:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","def main():\n    S , W = map(int, input().split())\n\n    if W >= S :\n        print(\"unsafe\")\n    else :\n        print(\"safe\")\n\n\nif __name__ == '__main__':\n    main()\n","a,b=map(int,input().split())\nprint(\"safe\" if a>b else \"unsafe\")","s,w = map(int, input().split())\nif s <= w:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","S,W = map(int,input().split())\nif S<=W:\n    print('unsafe')\nelse:\n    print('safe')","s, w = map(int, input().split())\n\nif s <= w:\n    print('unsafe')\nelse:\n    print('safe')","S, W = map(int,input().split())\nif S > W:\n  print('safe')\nelse:\n  print('unsafe')","s, w = map(int,input().split())\nif (s <= w):\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","s,w = (int(x) for x in input().split())\n\nif w>=s:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","S,W=map(int,input().split())\n\nif S<=W:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","s,w = map(int,input().split())\nprint(\"safe\" if s > w else \"unsafe\")","S,W=map(int,input().split(\" \"))\n\nprint(\"unsafe\" if W>=S else \"safe\")","#!\/usr\/bin\/env python3\ns, w = map(int, input().split())\n\n\nif w >= s:\n    print('unsafe')\nelse:\n    print('safe')","S, W = map(float, input().split())\n\nif W >= S\/2:\n  print('unsafe')\nelse:\n  print('safe')","S, W = map(int, input().split())\nif S <= W:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","s,w=map(int,input().split())\nif w>=s:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","s,w=list(map(int, input().split()))\nif w>=s:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","\nMOD = 10 ** 9 + 7\n\ndef main():\n    for _ in inputt(1):\n        s, w = inputi()\n        print(\"unsafe\" if s <= w else \"safe\")\n\n\n# region M\n\n\n# region import\n# \u6240\u6709import\u90e8\u5206\n\nfrom math import *\nfrom heapq import *\nfrom itertools import *\nfrom functools import reduce, lru_cache, partial\nfrom collections import Counter, defaultdict\nimport re, copy, operator, cmath\nimport sys, io, os, builtins\nsys.setrecursionlimit(1000)\n\n# endregion\n\n# region fastio\n\nBUFSIZE = 8192\nclass FastIO(io.IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = io.BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\nclass IOWrapper(io.IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\ndef print(*args, **kwargs):\n    if args:\n        sys.stdout.write(args[0])\n        split = kwargs.pop(\"split\", \" \")\n        for arg in args[1:]:\n            sys.stdout.write(split)\n            sys.stdout.write(arg)\n    sys.stdout.write(kwargs.pop(\"end\", \"\\n\"))\ndef debug(*args, **kwargs):\n    print(\"debug\", *args, **kwargs)\n    sys.stdout.flush()\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip()\ninputt = lambda t = 0: range(t) if t else range(int(input()))\ninputs = lambda: input().split()\ninputi = lambda: map(int, inputs())\ninputl = lambda t = 0, k = inputi: map(list, (k() for _ in range(t))) if t else list(k())\n\n# endregion\n\n# region bisect\n\ndef len(a):\n    if isinstance(a, range):\n        return -((a.start - a.stop) \/\/ a.step)\n    return builtins.len(a)\ndef bisect_left(a, x, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    if key == None: key = do_nothing\n    while lo < hi:\n        mid = (lo + hi) \/\/ 2\n        if key(a[mid]) < x: lo = mid + 1\n        else: hi = mid\n    return lo\ndef bisect_right(a, x, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    if key == None: key = do_nothing\n    while lo < hi:\n        mid = (lo + hi) \/\/ 2\n        if x < key(a[mid]): hi = mid\n        else: lo = mid + 1\n    return lo\ndef insort_left(a, x, key = None, lo = 0, hi = None):\n    lo = bisect_left(a, x, key, lo, hi)\n    a.insert(lo, x)\ndef insort_right(a, x, key = None, lo = 0, hi = None):\n    lo = bisect_right(a, x, key, lo, hi)\n    a.insert(lo, x)\ndo_nothing = lambda x: x\nbisect = bisect_right\ninsort = insort_right\ndef index(a, x, default = None, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    if key == None: key = do_nothing\n    i = bisect_left(a, x, key, lo, hi)\n    if lo <= i < hi and key(a[i]) == x: return a[i]\n    if default != None: return default\n    raise ValueError\ndef find_lt(a, x, default = None, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    i = bisect_left(a, x, key, lo, hi)\n    if lo < i <= hi: return a[i - 1]\n    if default != None: return default\n    raise ValueError\ndef find_le(a, x, default = None, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    i = bisect_right(a, x, key, lo, hi)\n    if lo < i <= hi: return a[i - 1]\n    if default != None: return default\n    raise ValueError\ndef find_gt(a, x, default = None, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    i = bisect_right(a, x, key, lo, hi)\n    if lo <= i < hi: return a[i]\n    if default != None: return default\n    raise ValueError\ndef find_ge(a, x, default = None, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    i = bisect_left(a, x, key, lo, hi)\n    if lo <= i < hi: return a[i]\n    if default != None: return default\n    raise ValueError\n\n# endregion\n\n# region csgraph\n# TODO\n\nclass Tree:\n    def __init__(n):\n        self._n = n\n        self._conn = [[] for _ in range(n)]\n        self._list = [0] * n\n    def connect(a, b):\n        pass\n\n# endregion\n\n# region ntheory\n# TODO\n\nclass Sieve:\n    def __init__(self):\n        self._n = 6\n        self._list = [2, 3, 5, 7, 11, 13]\n    def extend(self, n):\n        pass\n\n\nsieve = Sieve()\ndef isprime(n):\n    pass\ndef prime(n):\n    pass\ndef factorint(n):\n    factordict = defaultdict(int)\n    for i in sieve:\n        if n <= i * i:\n            break\n        while not n % i:\n            factordict[i] += 1\n            n \/\/= i\n    if n != 1:\n        factordict[n] += 1\n    return factordict\n\n# endregion\n\n# region main\n\nif __name__ == \"__main__\":\n    main()\n\n# endregion\n\n\n# endregion","S, W = map(int, input().split())\n\nif S <= W:\n  print('unsafe')\nelse:\n  print('safe')\n","from collections import defaultdict\nS = input()\nN = len(S)\n\nD=defaultdict()\nprev=0\nans=0\nfor i,s in enumerate(reversed(S)):\n    cur=prev+pow(10,i,2019)*int(s)%2019\n    ans+=D[cur]\n    D[cur]+=1\n    prev=cur\nprint(ans)\n","#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\n\nint main()\n{\n    int s, w;\n    if (s <= w) {\n        cout << \"unsafe\" << endl;\n    } else {\n        cout << \"safe\" << endl;\n    }\n\n\n\n    return 0;\n}\n\n","s = input()\nans = 0\nfor j in range(len(s)):\n  for i in range(j):\n    if int(s[i:j+1])%2019 == 0:\n      ans+=1\nprint(ans)","n, m = map(int, input().split())\nif n > m:\n    print(\"safe\")\nelse:\n    print(\"unsafe\")","s,w=map(int,input().split())\n\nprint(\"unsafe\" if w>=s else \"safe\")","# -*- coding: utf-8 -*-\n#a = int(input())\ns,w = map(int,input().split())\n\nif w >= s:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")\n\n\n","#https:\/\/atcoder.jp\/contests\/abc164\/tasks\/abc164_a\n# -*- coding: utf-8 -*-\nS,W = map(int,input().split())\nif W >= S :\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","S, W = [int(i) for i in input().split()]\n\nif S <= W:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","def main():\n    import sys\n\n    input = sys.stdin.readline\n    n, w = map(int, input().split())\n\n    if n > w:\n        print(\"safe\")\n    else:\n        print(\"unsafe\")\nif __name__ == \"__main__\":\n    main()","\nS,W=map(int,input().split())\nif S <= W:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","s,w = map(int, input().split())\nif s <= w:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")"],"raw_generations":["import sys \ntry:\n\tsys.stdin = open('input.txt', 'r') \n\tsys.stdout = open('output.txt', 'w')\nexcept:\n\tpass\ninput = sys.stdin.readline\nfor tt in range(1):\n\t# n = int(input())\n\ts,w = map(int,input().split())\n\tif w>=s:\n\t\tprint(\"unsafe\")\n\telse:\n\t\tprint(\"safe\")\n\t","S,W = map(int,input().split())\n\nprint(\"unsafe\") if S<=W else print(\"safe\")","import numpy as np\nimport sys\nimport math\n\ns , w = map(int,input().split())\n\nif s >= w :\n    print(\"safe\")\nelse:\n    print(\"unsafe\")\n\n","num_list = [int(i) for i in input().split()]\n\nif num_list[0] <= num_list[1]:\n    print('unsafe')\nelse:\n    print('safe')","s, w = input().split()\ns = int( s )\nw = int( w )\n\nif w >= s:\n    print( \"unsafe\" )\nelse:\n    print( \"safe\" )\n    ","A, B, C, D = map(int,input().split())\nans = \"Yes\"\ncurA = A\ncurC = C\nfor i in range(max(A,C)):\n  curC  = curC-B\n  if(curC<=0):\n    ans = \"Yes\"\n    break\n  curA = curA-D\n  if(curA<=0):\n    ans = \"No\"\n    break\nprint(ans)","S, W = map(int, input().split())\n\nif W >= S :\n    print('unsafe')\nelse:\n    print('safe')","S, W =map(int, input().split())\nif S <= W:\n    print('unsafe')\nelse:\n    print('safe')","s, w = map(int, input().split())\nif s<=w:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","s, w = map(int, input().split()) # split()\u3067\u7a7a\u767d\u533a\u5207\u308a\u3067\u30ea\u30b9\u30c8\u5316\u3001\u305d\u306e\u969bmap()\u3067int\u578b\u306b\u30ad\u30e3\u30b9\u30c8\u3057\u5909\u6570\u306b\u4ee3\u5165\u3002\nif s > w\n\tprint(\"safe\")\nelse\n\tprint(\"unsafe\")","a,b=map(int,input().split())\nprint('unsafe' if b>=a else 'safe')","s, w = map(int, input().split())\n\nif s <= w:\n    print('unsafe')\nelse:\n    print('safe')","s,w = map(int,input().split())\nif(s<=w):\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","S, W = map(int, input().split())\n\nprint(\"unsafe\" if W >= S else \"safe\")","S,W = map(int,input().split())\nif S > W:\n    print('safe')\nelse:\n    print('unsafe')","S, W = map(int, input().split())\n\nif S > W:\n    print(\"safe\")\nelse:\n    print(\"unsafe\")","S,W=map(int,input().split())\nif (W>=S):\n    print('Unsafe')\nelse:\n    print('Safe')","S, W = map(int, input().split())\nprint(\"unsafe\" if S <= W else \"safe\")\n","s,w = map(int, input().split())\n\nif s<=w:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","s,v = map(int, input().split())\nif v >= s:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","S,W = map(int, input().split())\nif (S<=W):\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","\ndef main():\n    s, w = map(int, input().split(\" \"))\n    if s <= w:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == \"__main__\":\n    main()","S, W = map(int, input().split())\n\nif S <= W:\n  print('unsafe')\nelse:\n  print('safe')","S, W = map(int, input().split())\n\nprint('unsafe' if S <= W else 'safe')\n","s, w = map(int, input().split())\n\nif s <= w:\n  print('unsafe')\nelse:\n  print('safe')","s, w = map(int, input().split())\n\nif s <= w:\n    print('unsafe')\nelse:\n    print('safe')","s, w = map(int, input().split())\n\nif w >= s:\n    print('unsafe')\nelse:\n    print('safe')\n    ","s, w = map(int, input().split())\nif w >= s:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","a,b,c,d=map(int,input().split())\nwhile True:\n  c-=b\n  if c<=0:\n    print('Yes')\n    break\n  a-=d\n  if a<=0:\n    print('No')\n    break","w=eval(input(\"\"))\ns=eval(input(\"\"))\nif(w>=s):\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","s, w = map(int, input().split())\nprint('unsafe' if s <= w else 'safe')\n","LI = lambda: list(map(int,input().split()))\nMI = lambda: map(int,input().split())\nyes = lambda: print(\"YES\")\nno = lambda: print(\"NO\")\nI = lambda: list(input())\nJ = lambda x: \"\".join(x)\nII = lambda: int(input())\nSI = lambda: input()\n#---khan17---template\nn,w = MI()\nif w>=n:\n\tprint(\"unsafe\")\nelse:\n\tprint(\"safe\")","S, W = map(int, input().split())\nif W >= S:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")\n\n","s, w = map(int, input().split())\nif w >= s:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","from heapq import *\nimport sys\nfrom collections import *\nfrom itertools import *\nfrom decimal import *\nimport copy\nfrom bisect import *\nimport time\nimport math\ndef gcd(a,b):\n    if(a%b==0):return(b)\n    return (gcd(b,a%b))\nS,W=map(int,input().split())\nif not S<=W:\n    print(\"safe\")\nelse:\n    print(\"unsafe\")\n","inputs = input()\nS,W = inputs.split()\nresult = int(S) - int(W)\nif result < 0:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","n = list(map(int, input().split()))\nif n[0] <= n[1]:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","s, w = map(int, input().split())\nif w >= s:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")\n","s, w = list(map(int, input().split()))\nprint('safe' if s > w else 'unsafe')","s, w = map(int, input().split())\n\nif s > w:\n  print(\"safe\")\nelse:\n  print(\"unsafe\")","S,W = (int(x) for x in input().split())\nif S<=W:\n  print('unsafe')\nelse:\n  print('safe')","li = input().split()\nS = int(li[0])\nW = int(li[1])\n\nif S - W > 0:\n    print('safe')\nelse:\n    print('unsafe')\n","S,W = map(int,input().split())\n\nif W >= S:\n    print('unsafe')\n    \nelse:\n    print('safe')","#!\/usr\/bin\/python3\n# -*- coding:utf-8 -*-\n\nfrom collections import Counter\n\ndef main():\n  s = input().strip()\n  remains = Counter([int(s[-i:]) % 2019 for i in range(1, len(s)+1)]).items()\n\n  cnt = 0\n  for k, v in remains:\n    cnt += (v * (v - 1)) \/\/ 2\n    if k == 0:\n      cnt += v\n  print(cnt)\n  \nif __name__=='__main__':\n  main()\n\n","s,w = map(int,input().split())\nif w>=s:\n      print(\"unsafe\")\nelse:\n      print(\"safe\")","S, W = map(int, input().split())\nif S <= W:\n    print('unsafe')\nelse:\n    print('safe')","S, W = map(int, input().split())\n\nif W >= S:\n  print('unsafe')\nelse:\n  print('safe')","s, w = map(int,input().split())\n\nif w >= s:\n    print('unsafe')\nelse:\n    print('safe')","S,W=input().split()\nS=int(S)\nW=int(W)\nif W >= S:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","s,w = map(int,input().split())\nif s>w:\n  print('safe')\n else:\n  print('unsafe')","s, w = map(int, input().split())\n\nif w >= s:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","S, W = map(int, input().split())\n\nif S <= W:\n  print('unsafe')\nelse:\n  print('safe')","s ,w = map(int, input().split())\nif s <= w:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")\n","s, w = map(int, input().split())\nprint(\"unsafe\" if w >= s else \"safe\")","s, w = list(map(int, input().split()))\noutput = \"safe\"\nif s <= w:\n  output = \"un\" + output\nprint(output)","s, w = map(int, input().split())\nif s > w:\n    print(\"safe\")\nelse:\n    print(\"unsafe\")\n    \n","S,W= map(int,input().split())\n\nif (W>=S):\n    print(\"unsafe\")\nelse:\n    print(\"safe\")\n","s,w = map(int,input().split())\nif s<=w:\n    print('unsafe')\nelse:\n    print('safe')\n\n","s,w=map(int,input().split(' '))\nif s>w:\n    print('safe')\nelse:\n    print('unsafe')","s,w=map(int, input().split())\nif s <= w:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","S,W=map(int,input().split())\nif S>W:\n    print('safe')\nelse:\n    print('unsafe')","S,W = map (int12,input().split())\nif S > W:\n  print(\"safe\")\nelse :\n  print(\"unsafe\")\n","s,w = map(int, input().split())\n\nif s <= w:\n    print('unsafe')\n\nelse:\n    print('safe')","s,w = map(int,input().split())\nif w >= s:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","s, w = map(int, input().split())\n \nif w >= s:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","#coding UTf-8\ns,w = map(int,input().split())\nif(s <= w):\n    print('unsafe')\nelse:\n    print('safe')\n","s, w = map(int,input().split())\n\nif s <= w:\n  print('unsafe')\nelse:\n  print('safe')","def Sol(taka_health,taka_stregnth,aoki_health,aoki_stregnth):\n    \n    if taka_health%aoki_stregnth != 0:\n        moves_taka = int(taka_health\/aoki_stregnth) + 1\n    else:\n        moves_taka = int(taka_health\/aoki_stregnth)\n    \n    if aoki_health%taka_stregnth != 0:\n        moves_aoki =int(aoki_health\/taka_stregnth) + 1\n    else:\n        moves_aoki = int(aoki_health\/taka_stregnth)\n    \n    print(moves_aoki,moves_taka)\n    if moves_taka > moves_aoki:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n    return\n\n    \n\n#for t in range(int(input())):\nn,k,d,c = map(int,input().split())\n#n = int(input())\n#arr = []\n#for i in range(n):\n#    time = list(map(int,input().split()))\n#    time = time[0] + (time[1]\/60)\n#    arr.append(time)\n#arr = list(map(int,input().split()))\n#k = input()\n#n = int(input())\nSol(n,k,d,c)\n","s,w = map(int,input().split())\nif s>w:\n    print(\"safe\")\nelse:\n    print(\"unsafe\")","a,b,c,d = (int(x) for x in input().split())\n\nx=int(a\/d)+1\ny=int(b\/c)+1\n\nif x>=y:\n    print(\"Yes\")\nelse:\n    print(\"No\")","s,w = map(int,input().split())\nif s<=w:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","def main():\n    S , W = map(int, input().split())\n\n    if W >= S :\n        print(\"unsafe\")\n    else :\n        print(\"safe\")\n\n\nif __name__ == '__main__':\n    main()\n","a,b=map(int,input().split())\nprint(\"safe\" if a>b else \"unsafe\")","s,w = map(int, input().split())\nif s <= w:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","S,W = map(int,input().split())\nif S<=W:\n    print('unsafe')\nelse:\n    print('safe')","s, w = map(int, input().split())\n\nif s <= w:\n    print('unsafe')\nelse:\n    print('safe')","S, W = map(int,input().split())\nif S > W:\n  print('safe')\nelse:\n  print('unsafe')","s, w = map(int,input().split())\nif (s <= w):\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","s,w = (int(x) for x in input().split())\n\nif w>=s:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","S,W=map(int,input().split())\n\nif S<=W:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","s,w = map(int,input().split())\nprint(\"safe\" if s > w else \"unsafe\")","S,W=map(int,input().split(\" \"))\n\nprint(\"unsafe\" if W>=S else \"safe\")","#!\/usr\/bin\/env python3\ns, w = map(int, input().split())\n\n\nif w >= s:\n    print('unsafe')\nelse:\n    print('safe')","S, W = map(float, input().split())\n\nif W >= S\/2:\n  print('unsafe')\nelse:\n  print('safe')","S, W = map(int, input().split())\nif S <= W:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","s,w=map(int,input().split())\nif w>=s:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","s,w=list(map(int, input().split()))\nif w>=s:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","\nMOD = 10 ** 9 + 7\n\ndef main():\n    for _ in inputt(1):\n        s, w = inputi()\n        print(\"unsafe\" if s <= w else \"safe\")\n\n\n# region M\n\n\n# region import\n# \u6240\u6709import\u90e8\u5206\n\nfrom math import *\nfrom heapq import *\nfrom itertools import *\nfrom functools import reduce, lru_cache, partial\nfrom collections import Counter, defaultdict\nimport re, copy, operator, cmath\nimport sys, io, os, builtins\nsys.setrecursionlimit(1000)\n\n# endregion\n\n# region fastio\n\nBUFSIZE = 8192\nclass FastIO(io.IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = io.BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\nclass IOWrapper(io.IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\ndef print(*args, **kwargs):\n    if args:\n        sys.stdout.write(args[0])\n        split = kwargs.pop(\"split\", \" \")\n        for arg in args[1:]:\n            sys.stdout.write(split)\n            sys.stdout.write(arg)\n    sys.stdout.write(kwargs.pop(\"end\", \"\\n\"))\ndef debug(*args, **kwargs):\n    print(\"debug\", *args, **kwargs)\n    sys.stdout.flush()\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip()\ninputt = lambda t = 0: range(t) if t else range(int(input()))\ninputs = lambda: input().split()\ninputi = lambda: map(int, inputs())\ninputl = lambda t = 0, k = inputi: map(list, (k() for _ in range(t))) if t else list(k())\n\n# endregion\n\n# region bisect\n\ndef len(a):\n    if isinstance(a, range):\n        return -((a.start - a.stop) \/\/ a.step)\n    return builtins.len(a)\ndef bisect_left(a, x, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    if key == None: key = do_nothing\n    while lo < hi:\n        mid = (lo + hi) \/\/ 2\n        if key(a[mid]) < x: lo = mid + 1\n        else: hi = mid\n    return lo\ndef bisect_right(a, x, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    if key == None: key = do_nothing\n    while lo < hi:\n        mid = (lo + hi) \/\/ 2\n        if x < key(a[mid]): hi = mid\n        else: lo = mid + 1\n    return lo\ndef insort_left(a, x, key = None, lo = 0, hi = None):\n    lo = bisect_left(a, x, key, lo, hi)\n    a.insert(lo, x)\ndef insort_right(a, x, key = None, lo = 0, hi = None):\n    lo = bisect_right(a, x, key, lo, hi)\n    a.insert(lo, x)\ndo_nothing = lambda x: x\nbisect = bisect_right\ninsort = insort_right\ndef index(a, x, default = None, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    if key == None: key = do_nothing\n    i = bisect_left(a, x, key, lo, hi)\n    if lo <= i < hi and key(a[i]) == x: return a[i]\n    if default != None: return default\n    raise ValueError\ndef find_lt(a, x, default = None, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    i = bisect_left(a, x, key, lo, hi)\n    if lo < i <= hi: return a[i - 1]\n    if default != None: return default\n    raise ValueError\ndef find_le(a, x, default = None, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    i = bisect_right(a, x, key, lo, hi)\n    if lo < i <= hi: return a[i - 1]\n    if default != None: return default\n    raise ValueError\ndef find_gt(a, x, default = None, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    i = bisect_right(a, x, key, lo, hi)\n    if lo <= i < hi: return a[i]\n    if default != None: return default\n    raise ValueError\ndef find_ge(a, x, default = None, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    i = bisect_left(a, x, key, lo, hi)\n    if lo <= i < hi: return a[i]\n    if default != None: return default\n    raise ValueError\n\n# endregion\n\n# region csgraph\n# TODO\n\nclass Tree:\n    def __init__(n):\n        self._n = n\n        self._conn = [[] for _ in range(n)]\n        self._list = [0] * n\n    def connect(a, b):\n        pass\n\n# endregion\n\n# region ntheory\n# TODO\n\nclass Sieve:\n    def __init__(self):\n        self._n = 6\n        self._list = [2, 3, 5, 7, 11, 13]\n    def extend(self, n):\n        pass\n\n\nsieve = Sieve()\ndef isprime(n):\n    pass\ndef prime(n):\n    pass\ndef factorint(n):\n    factordict = defaultdict(int)\n    for i in sieve:\n        if n <= i * i:\n            break\n        while not n % i:\n            factordict[i] += 1\n            n \/\/= i\n    if n != 1:\n        factordict[n] += 1\n    return factordict\n\n# endregion\n\n# region main\n\nif __name__ == \"__main__\":\n    main()\n\n# endregion\n\n\n# endregion","S, W = map(int, input().split())\n\nif S <= W:\n  print('unsafe')\nelse:\n  print('safe')\n","from collections import defaultdict\nS = input()\nN = len(S)\n\nD=defaultdict()\nprev=0\nans=0\nfor i,s in enumerate(reversed(S)):\n    cur=prev+pow(10,i,2019)*int(s)%2019\n    ans+=D[cur]\n    D[cur]+=1\n    prev=cur\nprint(ans)\n","#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\n\nint main()\n{\n    int s, w;\n    if (s <= w) {\n        cout << \"unsafe\" << endl;\n    } else {\n        cout << \"safe\" << endl;\n    }\n\n\n\n    return 0;\n}\n\n","s = input()\nans = 0\nfor j in range(len(s)):\n  for i in range(j):\n    if int(s[i:j+1])%2019 == 0:\n      ans+=1\nprint(ans)","n, m = map(int, input().split())\nif n > m:\n    print(\"safe\")\nelse:\n    print(\"unsafe\")","s,w=map(int,input().split())\n\nprint(\"unsafe\" if w>=s else \"safe\")","# -*- coding: utf-8 -*-\n#a = int(input())\ns,w = map(int,input().split())\n\nif w >= s:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")\n\n\n","#https:\/\/atcoder.jp\/contests\/abc164\/tasks\/abc164_a\n# -*- coding: utf-8 -*-\nS,W = map(int,input().split())\nif W >= S :\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","S, W = [int(i) for i in input().split()]\n\nif S <= W:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","def main():\n    import sys\n\n    input = sys.stdin.readline\n    n, w = map(int, input().split())\n\n    if n > w:\n        print(\"safe\")\n    else:\n        print(\"unsafe\")\nif __name__ == \"__main__\":\n    main()","\nS,W=map(int,input().split())\nif S <= W:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","s,w = map(int, input().split())\nif s <= w:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")"],"formatted_programs":["import sys \ntry:\n\tsys.stdin = open('input.txt', 'r') \n\tsys.stdout = open('output.txt', 'w')\nexcept:\n\tpass\ninput = sys.stdin.readline\nfor tt in range(1):\n\t# n = int(input())\n\ts,w = map(int,input().split())\n\tif w>=s:\n\t\tprint(\"unsafe\")\n\telse:\n\t\tprint(\"safe\")\n\t","S,W = map(int,input().split())\n\nprint(\"unsafe\") if S<=W else print(\"safe\")","import numpy as np\nimport sys\nimport math\n\ns , w = map(int,input().split())\n\nif s >= w :\n    print(\"safe\")\nelse:\n    print(\"unsafe\")\n\n","num_list = [int(i) for i in input().split()]\n\nif num_list[0] <= num_list[1]:\n    print('unsafe')\nelse:\n    print('safe')","s, w = input().split()\ns = int( s )\nw = int( w )\n\nif w >= s:\n    print( \"unsafe\" )\nelse:\n    print( \"safe\" )\n    ","A, B, C, D = map(int,input().split())\nans = \"Yes\"\ncurA = A\ncurC = C\nfor i in range(max(A,C)):\n  curC  = curC-B\n  if(curC<=0):\n    ans = \"Yes\"\n    break\n  curA = curA-D\n  if(curA<=0):\n    ans = \"No\"\n    break\nprint(ans)","S, W = map(int, input().split())\n\nif W >= S :\n    print('unsafe')\nelse:\n    print('safe')","S, W =map(int, input().split())\nif S <= W:\n    print('unsafe')\nelse:\n    print('safe')","s, w = map(int, input().split())\nif s<=w:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","s, w = map(int, input().split()) # split()\u3067\u7a7a\u767d\u533a\u5207\u308a\u3067\u30ea\u30b9\u30c8\u5316\u3001\u305d\u306e\u969bmap()\u3067int\u578b\u306b\u30ad\u30e3\u30b9\u30c8\u3057\u5909\u6570\u306b\u4ee3\u5165\u3002\nif s > w\n\tprint(\"safe\")\nelse\n\tprint(\"unsafe\")","a,b=map(int,input().split())\nprint('unsafe' if b>=a else 'safe')","s, w = map(int, input().split())\n\nif s <= w:\n    print('unsafe')\nelse:\n    print('safe')","s,w = map(int,input().split())\nif(s<=w):\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","S, W = map(int, input().split())\n\nprint(\"unsafe\" if W >= S else \"safe\")","S,W = map(int,input().split())\nif S > W:\n    print('safe')\nelse:\n    print('unsafe')","S, W = map(int, input().split())\n\nif S > W:\n    print(\"safe\")\nelse:\n    print(\"unsafe\")","S,W=map(int,input().split())\nif (W>=S):\n    print('Unsafe')\nelse:\n    print('Safe')","S, W = map(int, input().split())\nprint(\"unsafe\" if S <= W else \"safe\")\n","s,w = map(int, input().split())\n\nif s<=w:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","s,v = map(int, input().split())\nif v >= s:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","S,W = map(int, input().split())\nif (S<=W):\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","\ndef main():\n    s, w = map(int, input().split(\" \"))\n    if s <= w:\n        print(\"unsafe\")\n    else:\n        print(\"safe\")\n\nif __name__ == \"__main__\":\n    main()","S, W = map(int, input().split())\n\nif S <= W:\n  print('unsafe')\nelse:\n  print('safe')","S, W = map(int, input().split())\n\nprint('unsafe' if S <= W else 'safe')\n","s, w = map(int, input().split())\n\nif s <= w:\n  print('unsafe')\nelse:\n  print('safe')","s, w = map(int, input().split())\n\nif s <= w:\n    print('unsafe')\nelse:\n    print('safe')","s, w = map(int, input().split())\n\nif w >= s:\n    print('unsafe')\nelse:\n    print('safe')\n    ","s, w = map(int, input().split())\nif w >= s:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","a,b,c,d=map(int,input().split())\nwhile True:\n  c-=b\n  if c<=0:\n    print('Yes')\n    break\n  a-=d\n  if a<=0:\n    print('No')\n    break","w=eval(input(\"\"))\ns=eval(input(\"\"))\nif(w>=s):\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","s, w = map(int, input().split())\nprint('unsafe' if s <= w else 'safe')\n","LI = lambda: list(map(int,input().split()))\nMI = lambda: map(int,input().split())\nyes = lambda: print(\"YES\")\nno = lambda: print(\"NO\")\nI = lambda: list(input())\nJ = lambda x: \"\".join(x)\nII = lambda: int(input())\nSI = lambda: input()\n#---khan17---template\nn,w = MI()\nif w>=n:\n\tprint(\"unsafe\")\nelse:\n\tprint(\"safe\")","S, W = map(int, input().split())\nif W >= S:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")\n\n","s, w = map(int, input().split())\nif w >= s:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","from heapq import *\nimport sys\nfrom collections import *\nfrom itertools import *\nfrom decimal import *\nimport copy\nfrom bisect import *\nimport time\nimport math\ndef gcd(a,b):\n    if(a%b==0):return(b)\n    return (gcd(b,a%b))\nS,W=map(int,input().split())\nif not S<=W:\n    print(\"safe\")\nelse:\n    print(\"unsafe\")\n","inputs = input()\nS,W = inputs.split()\nresult = int(S) - int(W)\nif result < 0:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","n = list(map(int, input().split()))\nif n[0] <= n[1]:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","s, w = map(int, input().split())\nif w >= s:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")\n","s, w = list(map(int, input().split()))\nprint('safe' if s > w else 'unsafe')","s, w = map(int, input().split())\n\nif s > w:\n  print(\"safe\")\nelse:\n  print(\"unsafe\")","S,W = (int(x) for x in input().split())\nif S<=W:\n  print('unsafe')\nelse:\n  print('safe')","li = input().split()\nS = int(li[0])\nW = int(li[1])\n\nif S - W > 0:\n    print('safe')\nelse:\n    print('unsafe')\n","S,W = map(int,input().split())\n\nif W >= S:\n    print('unsafe')\n    \nelse:\n    print('safe')","#!\/usr\/bin\/python3\n# -*- coding:utf-8 -*-\n\nfrom collections import Counter\n\ndef main():\n  s = input().strip()\n  remains = Counter([int(s[-i:]) % 2019 for i in range(1, len(s)+1)]).items()\n\n  cnt = 0\n  for k, v in remains:\n    cnt += (v * (v - 1)) \/\/ 2\n    if k == 0:\n      cnt += v\n  print(cnt)\n  \nif __name__=='__main__':\n  main()\n\n","s,w = map(int,input().split())\nif w>=s:\n      print(\"unsafe\")\nelse:\n      print(\"safe\")","S, W = map(int, input().split())\nif S <= W:\n    print('unsafe')\nelse:\n    print('safe')","S, W = map(int, input().split())\n\nif W >= S:\n  print('unsafe')\nelse:\n  print('safe')","s, w = map(int,input().split())\n\nif w >= s:\n    print('unsafe')\nelse:\n    print('safe')","S,W=input().split()\nS=int(S)\nW=int(W)\nif W >= S:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","s,w = map(int,input().split())\nif s>w:\n  print('safe')\n else:\n  print('unsafe')","s, w = map(int, input().split())\n\nif w >= s:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","S, W = map(int, input().split())\n\nif S <= W:\n  print('unsafe')\nelse:\n  print('safe')","s ,w = map(int, input().split())\nif s <= w:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")\n","s, w = map(int, input().split())\nprint(\"unsafe\" if w >= s else \"safe\")","s, w = list(map(int, input().split()))\noutput = \"safe\"\nif s <= w:\n  output = \"un\" + output\nprint(output)","s, w = map(int, input().split())\nif s > w:\n    print(\"safe\")\nelse:\n    print(\"unsafe\")\n    \n","S,W= map(int,input().split())\n\nif (W>=S):\n    print(\"unsafe\")\nelse:\n    print(\"safe\")\n","s,w = map(int,input().split())\nif s<=w:\n    print('unsafe')\nelse:\n    print('safe')\n\n","s,w=map(int,input().split(' '))\nif s>w:\n    print('safe')\nelse:\n    print('unsafe')","s,w=map(int, input().split())\nif s <= w:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","S,W=map(int,input().split())\nif S>W:\n    print('safe')\nelse:\n    print('unsafe')","S,W = map (int12,input().split())\nif S > W:\n  print(\"safe\")\nelse :\n  print(\"unsafe\")\n","s,w = map(int, input().split())\n\nif s <= w:\n    print('unsafe')\n\nelse:\n    print('safe')","s,w = map(int,input().split())\nif w >= s:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","s, w = map(int, input().split())\n \nif w >= s:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","#coding UTf-8\ns,w = map(int,input().split())\nif(s <= w):\n    print('unsafe')\nelse:\n    print('safe')\n","s, w = map(int,input().split())\n\nif s <= w:\n  print('unsafe')\nelse:\n  print('safe')","def Sol(taka_health,taka_stregnth,aoki_health,aoki_stregnth):\n    \n    if taka_health%aoki_stregnth != 0:\n        moves_taka = int(taka_health\/aoki_stregnth) + 1\n    else:\n        moves_taka = int(taka_health\/aoki_stregnth)\n    \n    if aoki_health%taka_stregnth != 0:\n        moves_aoki =int(aoki_health\/taka_stregnth) + 1\n    else:\n        moves_aoki = int(aoki_health\/taka_stregnth)\n    \n    print(moves_aoki,moves_taka)\n    if moves_taka > moves_aoki:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n    return\n\n    \n\n#for t in range(int(input())):\nn,k,d,c = map(int,input().split())\n#n = int(input())\n#arr = []\n#for i in range(n):\n#    time = list(map(int,input().split()))\n#    time = time[0] + (time[1]\/60)\n#    arr.append(time)\n#arr = list(map(int,input().split()))\n#k = input()\n#n = int(input())\nSol(n,k,d,c)\n","s,w = map(int,input().split())\nif s>w:\n    print(\"safe\")\nelse:\n    print(\"unsafe\")","a,b,c,d = (int(x) for x in input().split())\n\nx=int(a\/d)+1\ny=int(b\/c)+1\n\nif x>=y:\n    print(\"Yes\")\nelse:\n    print(\"No\")","s,w = map(int,input().split())\nif s<=w:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","def main():\n    S , W = map(int, input().split())\n\n    if W >= S :\n        print(\"unsafe\")\n    else :\n        print(\"safe\")\n\n\nif __name__ == '__main__':\n    main()\n","a,b=map(int,input().split())\nprint(\"safe\" if a>b else \"unsafe\")","s,w = map(int, input().split())\nif s <= w:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","S,W = map(int,input().split())\nif S<=W:\n    print('unsafe')\nelse:\n    print('safe')","s, w = map(int, input().split())\n\nif s <= w:\n    print('unsafe')\nelse:\n    print('safe')","S, W = map(int,input().split())\nif S > W:\n  print('safe')\nelse:\n  print('unsafe')","s, w = map(int,input().split())\nif (s <= w):\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","s,w = (int(x) for x in input().split())\n\nif w>=s:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","S,W=map(int,input().split())\n\nif S<=W:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","s,w = map(int,input().split())\nprint(\"safe\" if s > w else \"unsafe\")","S,W=map(int,input().split(\" \"))\n\nprint(\"unsafe\" if W>=S else \"safe\")","#!\/usr\/bin\/env python3\ns, w = map(int, input().split())\n\n\nif w >= s:\n    print('unsafe')\nelse:\n    print('safe')","S, W = map(float, input().split())\n\nif W >= S\/2:\n  print('unsafe')\nelse:\n  print('safe')","S, W = map(int, input().split())\nif S <= W:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","s,w=map(int,input().split())\nif w>=s:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","s,w=list(map(int, input().split()))\nif w>=s:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","\nMOD = 10 ** 9 + 7\n\ndef main():\n    for _ in inputt(1):\n        s, w = inputi()\n        print(\"unsafe\" if s <= w else \"safe\")\n\n\n# region M\n\n\n# region import\n# \u6240\u6709import\u90e8\u5206\n\nfrom math import *\nfrom heapq import *\nfrom itertools import *\nfrom functools import reduce, lru_cache, partial\nfrom collections import Counter, defaultdict\nimport re, copy, operator, cmath\nimport sys, io, os, builtins\nsys.setrecursionlimit(1000)\n\n# endregion\n\n# region fastio\n\nBUFSIZE = 8192\nclass FastIO(io.IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = io.BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\nclass IOWrapper(io.IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\ndef print(*args, **kwargs):\n    if args:\n        sys.stdout.write(args[0])\n        split = kwargs.pop(\"split\", \" \")\n        for arg in args[1:]:\n            sys.stdout.write(split)\n            sys.stdout.write(arg)\n    sys.stdout.write(kwargs.pop(\"end\", \"\\n\"))\ndef debug(*args, **kwargs):\n    print(\"debug\", *args, **kwargs)\n    sys.stdout.flush()\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip()\ninputt = lambda t = 0: range(t) if t else range(int(input()))\ninputs = lambda: input().split()\ninputi = lambda: map(int, inputs())\ninputl = lambda t = 0, k = inputi: map(list, (k() for _ in range(t))) if t else list(k())\n\n# endregion\n\n# region bisect\n\ndef len(a):\n    if isinstance(a, range):\n        return -((a.start - a.stop) \/\/ a.step)\n    return builtins.len(a)\ndef bisect_left(a, x, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    if key == None: key = do_nothing\n    while lo < hi:\n        mid = (lo + hi) \/\/ 2\n        if key(a[mid]) < x: lo = mid + 1\n        else: hi = mid\n    return lo\ndef bisect_right(a, x, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    if key == None: key = do_nothing\n    while lo < hi:\n        mid = (lo + hi) \/\/ 2\n        if x < key(a[mid]): hi = mid\n        else: lo = mid + 1\n    return lo\ndef insort_left(a, x, key = None, lo = 0, hi = None):\n    lo = bisect_left(a, x, key, lo, hi)\n    a.insert(lo, x)\ndef insort_right(a, x, key = None, lo = 0, hi = None):\n    lo = bisect_right(a, x, key, lo, hi)\n    a.insert(lo, x)\ndo_nothing = lambda x: x\nbisect = bisect_right\ninsort = insort_right\ndef index(a, x, default = None, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    if key == None: key = do_nothing\n    i = bisect_left(a, x, key, lo, hi)\n    if lo <= i < hi and key(a[i]) == x: return a[i]\n    if default != None: return default\n    raise ValueError\ndef find_lt(a, x, default = None, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    i = bisect_left(a, x, key, lo, hi)\n    if lo < i <= hi: return a[i - 1]\n    if default != None: return default\n    raise ValueError\ndef find_le(a, x, default = None, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    i = bisect_right(a, x, key, lo, hi)\n    if lo < i <= hi: return a[i - 1]\n    if default != None: return default\n    raise ValueError\ndef find_gt(a, x, default = None, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    i = bisect_right(a, x, key, lo, hi)\n    if lo <= i < hi: return a[i]\n    if default != None: return default\n    raise ValueError\ndef find_ge(a, x, default = None, key = None, lo = 0, hi = None):\n    if lo < 0: lo = 0\n    if hi == None: hi = len(a)\n    i = bisect_left(a, x, key, lo, hi)\n    if lo <= i < hi: return a[i]\n    if default != None: return default\n    raise ValueError\n\n# endregion\n\n# region csgraph\n# TODO\n\nclass Tree:\n    def __init__(n):\n        self._n = n\n        self._conn = [[] for _ in range(n)]\n        self._list = [0] * n\n    def connect(a, b):\n        pass\n\n# endregion\n\n# region ntheory\n# TODO\n\nclass Sieve:\n    def __init__(self):\n        self._n = 6\n        self._list = [2, 3, 5, 7, 11, 13]\n    def extend(self, n):\n        pass\n\n\nsieve = Sieve()\ndef isprime(n):\n    pass\ndef prime(n):\n    pass\ndef factorint(n):\n    factordict = defaultdict(int)\n    for i in sieve:\n        if n <= i * i:\n            break\n        while not n % i:\n            factordict[i] += 1\n            n \/\/= i\n    if n != 1:\n        factordict[n] += 1\n    return factordict\n\n# endregion\n\n# region main\n\nif __name__ == \"__main__\":\n    main()\n\n# endregion\n\n\n# endregion","S, W = map(int, input().split())\n\nif S <= W:\n  print('unsafe')\nelse:\n  print('safe')\n","from collections import defaultdict\nS = input()\nN = len(S)\n\nD=defaultdict()\nprev=0\nans=0\nfor i,s in enumerate(reversed(S)):\n    cur=prev+pow(10,i,2019)*int(s)%2019\n    ans+=D[cur]\n    D[cur]+=1\n    prev=cur\nprint(ans)\n","#include <bits\/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\n\nint main()\n{\n    int s, w;\n    if (s <= w) {\n        cout << \"unsafe\" << endl;\n    } else {\n        cout << \"safe\" << endl;\n    }\n\n\n\n    return 0;\n}\n\n","s = input()\nans = 0\nfor j in range(len(s)):\n  for i in range(j):\n    if int(s[i:j+1])%2019 == 0:\n      ans+=1\nprint(ans)","n, m = map(int, input().split())\nif n > m:\n    print(\"safe\")\nelse:\n    print(\"unsafe\")","s,w=map(int,input().split())\n\nprint(\"unsafe\" if w>=s else \"safe\")","# -*- coding: utf-8 -*-\n#a = int(input())\ns,w = map(int,input().split())\n\nif w >= s:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")\n\n\n","#https:\/\/atcoder.jp\/contests\/abc164\/tasks\/abc164_a\n# -*- coding: utf-8 -*-\nS,W = map(int,input().split())\nif W >= S :\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","S, W = [int(i) for i in input().split()]\n\nif S <= W:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")","def main():\n    import sys\n\n    input = sys.stdin.readline\n    n, w = map(int, input().split())\n\n    if n > w:\n        print(\"safe\")\n    else:\n        print(\"unsafe\")\nif __name__ == \"__main__\":\n    main()","\nS,W=map(int,input().split())\nif S <= W:\n    print(\"unsafe\")\nelse:\n    print(\"safe\")","s,w = map(int, input().split())\nif s <= w:\n  print(\"unsafe\")\nelse:\n  print(\"safe\")"]}
{"description_html":"<span class=\"lang-en\">\n<p>Score : <var>200<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>A string is called a KEYENCE string when it can be changed to <code>keyence<\/code> by removing its contiguous substring (possibly empty) only once.<\/p>\n<p>Given a string <var>S<\/var> consisting of lowercase English letters, determine if <var>S<\/var> is a KEYENCE string.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li>The length of <var>S<\/var> is between <var>7<\/var> and <var>100<\/var> (inclusive).<\/li>\n<li><var>S<\/var> consists of lowercase English letters.<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>S<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>If <var>S<\/var> is a KEYENCE string, print <code>YES<\/code>; otherwise, print <code>NO<\/code>.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>keyofscience\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>YES\n<\/pre>\n<p><code>keyence<\/code> is an abbreviation of <code>key of science<\/code>.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>mpyszsbznf\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>NO\n<\/pre>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>ashlfyha\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>NO\n<\/pre>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 4<\/h3><pre>keyence\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 4<\/h3><pre>YES\n<\/pre><\/section>\n<\/div>\n<\/span>","description_string":"\nScore : 200 points\n\n\nProblem StatementA string is called a KEYENCE string when it can be changed to keyence by removing its contiguous substring (possibly empty) only once.\nGiven a string S consisting of lowercase English letters, determine if S is a KEYENCE string.\n\n\n\n\nConstraints\nThe length of S is between 7 and 100 (inclusive).\nS consists of lowercase English letters.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nS\n\n\n\n\n\nOutputIf S is a KEYENCE string, print YES; otherwise, print NO.\n\n\n\n\n\n\nSample Input 1keyofscience\n\n\n\n\n\nSample Output 1YES\n\nkeyence is an abbreviation of key of science.\n\n\n\n\n\nSample Input 2mpyszsbznf\n\n\n\n\n\nSample Output 2NO\n\n\n\n\n\n\nSample Input 3ashlfyha\n\n\n\n\n\nSample Output 3NO\n\n\n\n\n\n\nSample Input 4keyence\n\n\n\n\n\nSample Output 4YES\n\n\n","orig_lang_html":"<span class=\"lang-en\">\n<p>Score : <var>200<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>A string is called a KEYENCE string when it can be changed to <code>keyence<\/code> by removing its contiguous substring (possibly empty) only once.<\/p>\n<p>Given a string <var>S<\/var> consisting of lowercase English letters, determine if <var>S<\/var> is a KEYENCE string.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li>The length of <var>S<\/var> is between <var>7<\/var> and <var>100<\/var> (inclusive).<\/li>\n<li><var>S<\/var> consists of lowercase English letters.<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>S<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>If <var>S<\/var> is a KEYENCE string, print <code>YES<\/code>; otherwise, print <code>NO<\/code>.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>keyofscience\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>YES\n<\/pre>\n<p><code>keyence<\/code> is an abbreviation of <code>key of science<\/code>.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>mpyszsbznf\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>NO\n<\/pre>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>ashlfyha\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>NO\n<\/pre>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 4<\/h3><pre>keyence\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 4<\/h3><pre>YES\n<\/pre><\/section>\n<\/div>\n<\/span>","orig_lang_string":"\nScore : 200 points\n\n\nProblem StatementA string is called a KEYENCE string when it can be changed to keyence by removing its contiguous substring (possibly empty) only once.\nGiven a string S consisting of lowercase English letters, determine if S is a KEYENCE string.\n\n\n\n\nConstraints\nThe length of S is between 7 and 100 (inclusive).\nS consists of lowercase English letters.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nS\n\n\n\n\n\nOutputIf S is a KEYENCE string, print YES; otherwise, print NO.\n\n\n\n\n\n\nSample Input 1keyofscience\n\n\n\n\n\nSample Output 1YES\n\nkeyence is an abbreviation of key of science.\n\n\n\n\n\nSample Input 2mpyszsbznf\n\n\n\n\n\nSample Output 2NO\n\n\n\n\n\n\nSample Input 3ashlfyha\n\n\n\n\n\nSample Output 3NO\n\n\n\n\n\n\nSample Input 4keyence\n\n\n\n\n\nSample Output 4YES\n\n\n","solve_rate":0.4237820318,"codenet_problem_id":"p03150","input_testcases":{"15":"mnzs{sb{pf","38":"eeeofsjdymci","46":"eeeofsjdyjcm","72":"deydmfn","65":"`khrzlbf","42":"eeeofsjdyicm","80":"dexcmnf","34":"eeeofsjcymci","81":"hbmzrfka","79":"slps}n|fxb","35":"{pfbn{szls","88":"emxcenf","91":"slpt}n{exb","95":"sxpt}n{elb","45":"arhkzjaf","70":"eedojsjeygcm","62":"mcjyejsgodee","32":"dcyemeo","36":"dcyemen","33":"arhkzfjb","68":"deycmfn","47":"slzs|nbfp|","37":"arhkzbjf","53":"arhkzlaf","90":"mcygejriodfe","52":"dcyenfn","0":"ecneyek","71":"|xfbn}spls","73":"fbmzrhk`","93":"hczarfkm","25":"arhkzfhb","63":"|zfbn}spls","30":"eeeofscjymci","104":"ashlfyha","96":"foecxme","61":"akhrzlbf","6":"eeyofsciencj","66":"eedogsjeyjcm","74":"eedojrjeygcm","8":"ecleyen","92":"emxceof","29":"arhkzfib","27":"{pfbm{szns","39":"|pfbn{szls","57":"akhrzlaf","22":"icnyjcsfoeee","99":"sxpt}nzelb","84":"dmxcenf","11":"mnzszsb{pf","54":"mcjydjsfodee","20":"oeyemce","2":"eeyofscienck","78":"eedoirjeygcm","97":"mkfrazch","21":"arhkzfha","41":"arhkzjbf","85":"hcmzrfka","26":"icmyjcsfoeee","49":"arhkzkaf","17":"ahfzkhra","75":"bxf|n}spls","87":"slpt}n{fxb","100":"mpyszsbznf","5":"arhkfyha","1":"ashkfyha","59":"slzs}nbfp|","58":"mcjyejsfodee","60":"nfncyed","7":"mnyszsb{pf","56":"nfneycd","83":"slpt}n|fxb","12":"neyelce","76":"deycmnf","14":"eeyofscjenci","69":"fblzrhk`","10":"eeyofscienci","40":"dcxemen","23":"snzs{mbfp{","3":"mnyszsbzpf","94":"lcygejriodfe","31":"{pfbl{szns","89":"hcmarfkz","86":"mcgyejriodfe","24":"oemeyce","19":"snzs{mb{pf","82":"mcgyejriodee","44":"dcxenen","51":"|pfbn|szls","43":"slzs{nbfp|","55":"|pfbn}szls","16":"neyemce","28":"oemeycd","9":"arhkyfha","77":"hbmzrfk`","48":"dcxenfn","4":"ecneyel","64":"nfmcyed","18":"icnejcsfoyee","67":"|yfbn}spls","13":"ahfykhra","98":"lcygfjriodfe","50":"mcjydjsfoeee"},"output_testcases":{"15":"NO\n","38":"NO\n","46":"NO\n","72":"NO\n","65":"NO\n","42":"NO\n","80":"NO\n","34":"NO\n","81":"NO\n","79":"NO\n","35":"NO\n","88":"NO\n","91":"NO\n","95":"NO\n","45":"NO\n","70":"NO\n","62":"NO\n","32":"NO\n","36":"NO\n","33":"NO\n","68":"NO\n","47":"NO\n","37":"NO\n","53":"NO\n","90":"NO\n","52":"NO\n","0":"NO\n","71":"NO\n","73":"NO\n","93":"NO\n","25":"NO\n","63":"NO\n","30":"NO\n","104":"NO\n","96":"NO\n","61":"NO\n","6":"NO\n","66":"NO\n","74":"NO\n","8":"NO\n","92":"NO\n","29":"NO\n","27":"NO\n","39":"NO\n","57":"NO\n","22":"NO\n","99":"NO\n","84":"NO\n","11":"NO\n","54":"NO\n","20":"NO\n","2":"NO\n","78":"NO\n","97":"NO\n","21":"NO\n","41":"NO\n","85":"NO\n","26":"NO\n","49":"NO\n","17":"NO\n","75":"NO\n","87":"NO\n","100":"NO\n","5":"NO\n","1":"NO\n","59":"NO\n","58":"NO\n","60":"NO\n","7":"NO\n","56":"NO\n","83":"NO\n","12":"NO\n","76":"NO\n","14":"NO\n","69":"NO\n","10":"NO\n","40":"NO\n","23":"NO\n","3":"NO\n","94":"NO\n","31":"NO\n","89":"NO\n","86":"NO\n","24":"NO\n","19":"NO\n","82":"NO\n","44":"NO\n","51":"NO\n","43":"NO\n","55":"NO\n","16":"NO\n","28":"NO\n","9":"NO\n","77":"NO\n","48":"NO\n","4":"NO\n","64":"NO\n","18":"NO\n","67":"NO\n","13":"NO\n","98":"NO\n","50":"NO\n"},"n_missing":3,"programs":["S = input()\nK = 'keyence'\n\nfor i in range(8):\n  #print(S[:i], S[len(S)-7+i:], K[:i], K[i:])\n  if S[:i] == K[:i] and S[len(S)-7+i:] == K[i:]:\n    print('YES')\n    break\n  else:\n    continue\nelse:\n  print('NO')","s = input()\nif len(s) < 7:\n    print(\"NO\")\nif s[0] != \"k\":\n    if s[-7] == \"k\" and s[-6] == \"e\" and s[-5] == \"y\" and s[-4] == \"e\" and s[-3] == \"n\" and s[-2] == \"c\" and s[-1] == \"e\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelif s[1] != \"e\":\n    if s[-6] == \"e\" and s[-5] == \"y\" and s[-4] == \"e\" and s[-3] == \"n\" and s[-2] == \"c\" and s[-1] == \"e\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelif s[2] != \"y\":\n    if s[-5] == \"y\" and s[-4] == \"e\" and s[-3] == \"n\" and s[-2] == \"c\" and s[-1] == \"e\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelif s[3] != \"e\":\n    if s[-4] == \"e\" and s[-3] == \"n\" and s[-2] == \"c\" and s[-1] == \"e\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelif s[4] != \"n\":\n    if s[-3] == \"n\" and s[-2] == \"c\" and s[-1] == \"e\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelif s[5] != \"c\":\n    if s[-2] == \"c\" and s[-1] == \"e\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelif s[6] != \"e\":\n    if s[-1] == \"e\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    print(\"YES\")\n","S=list(input())\nstr1=\"\"\nstr2=\"\"\nflag=0\nfor i in range(7):\n    str1+=S[i]\n    str2+=S[len(S)-7]\n\nif str1==\"keyence\"or str2==\"keyence\":\n    flag=1\ns=\"\"\nt=\"\"\nfor i in range(7):\n    for j in range(i):\n        s+=S[j]\n    for j in range(7-i):\n        t+=S[len(S)-7+i+j]\n    if s+t==\"keyence\":\n        flag=1\n    s=\"\"\n    t=\"\"\nif flag==1:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\n","S = input()\n\np = 0\nkeyence = list(\"keyence\")\n# print(keyence)\nid = []\n\nfor s in S:\n    if p > 6:\n        id.append(p)\n        continue\n    if s != keyence[p]:\n        id.append(p)\n        continue\n    if p <= 6:\n        p += 1\n\n# print(p, id)\nif p == 7 and (len(set(id)) == 1 or len(id) == 0):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\n","S=input()\nlen_S=len(S)\nlen_SS=len_S-7\nans='keyence'\n\nif len_S==7:\n    if S==ans:\n        print('YES')\n        exit()\n    else:\n        print('NO')\n        exit()\n\nS_lst=list(S)\n\nfor i in range(len_S):\n    for j in range(len_SS+1):\n        lst=S_lst[:]\n        del lst[i:i+j]\n        if ''.join(lst)==ans:\n            print('YES')\n            exit()\nprint('NO')","import sys\nstr = list(input())\n\nn = len(str)\n\nfor i in range(8):\n    edit = str[0:i] + str[n - 7 + i:]\n    if edit == ['k', 'e', 'y', 'e', 'n', 'c', 'e']:\n        print('YES')\n        sys.exit()\nprint('NO')\n","s = input()\n\ndef main(string):\n    c = \"keyence\"\n    head = string[:7]\n\n    idx = 0\n    for s in head:\n        if s == c[idx]: idx += 1\n        else: break\n    if idx == 7:\n        print(\"YES\")\n        return\n\n    tail = string[-7+idx:]\n    for s in tail:\n        if s == c[idx]: idx += 1\n        else: break        \n    \n    if idx == 7:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nmain(s)","s = input()\nif s == 'keyence':\n    print('YES')\n    exit()\nfor i in range(len(s)+1):\n    for j in range(i):\n        if s[:j] + s[i:] == 'keyence':\n            print('YES')\n            exit()\nprint('NO')\n","def main():\n    \"\"\"\n    \u554f\u984c\u304c 3\u554f\u51fa\u984c\u3055\u308c\u3001\n    1\u554f\u76ee\u306e\u914d\u70b9\u306f A\u70b9\u4ee5\u4e0b\u3001\n    2\u554f\u76ee\u306e\u914d\u70b9\u306f A+1\u70b9\u4ee5\u4e0a B\u70b9\u4ee5\u4e0b\u3001\n    3\u554f\u76ee\u306e\u914d\u70b9\u306f  B+1\u70b9\u4ee5\u4e0a\u3067\u3042\u308b\u3002\n    \"\"\"\n    S = input()\n    ans = f(S)\n    if ans:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n\ndef f(S):\n    n = len(S)\n    ok = False\n    target = \"keyence\"\n    for i in range(n):\n        for j in range(i, n):\n            # print(S[:i], S[i:j], S[j:])\n            if S[:i] == target:\n                return True\n            elif S[:i] + S[j:] == target:\n                return True\n            elif S[j:] == target:\n                return True\n\n    return False\n\n\nif __name__ == '__main__':\n    main()\n","S = input()\n\nhead = 0\nback = 0\n\nkey = 'keyence'\n\nfor i in range(len(key)):\n    if S[:i+1] == key[:i+1]:\n        head = i+1\n\nfor i in range(len(key)):\n    if S[len(S)-i-1:] == key[len(key)-i-1:]:\n        back = i+1\n\nif head + back >= len(key):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n","s = input()\nans = 'keyence'\nj = 0\nfor i in range(len(s)):\n    if(ans[j] == s[i]):\n        j += 1\nprint(['NO','YES'][j==7])","S = input()\nans = \"NO\"\nN = len(S)\n\nfor i in range(N):\n    for j in range(i, N + 1):\n        tmp = (S[:i] + S[j:])\n        if tmp == \"keyence\":\n            ans = \"YES\"\n\nprint(ans)\n","import sys\n\ninput = sys.stdin.readline\n\ndef main():\n    ans = 'NO'\n    k = 'keyence'\n    S = input().rstrip('\\n')\n    if S[:7] == k or S[-7:] == k:\n        ans = 'YES'\n    elif S[0] == k[0]:\n        for i in range(1,len(k)):\n            if S[i] != k[i]:\n                if S[-(7-i):] == k[i:]:\n                    ans = 'YES'\n                    break\n                else:\n                  break\n    print(ans)\n\nif __name__ == '__main__':\n    main()","s = input()\nkey = \"keyence\"\nj = 0\nword = key[j]\nfor i in range(len(s)):\n    if s[i] == key[j]:\n        j +=1\n    if j == 7:\n        break\nif j == 7:\n    print(\"YES\")\nelse:\n    print(\"NO\")","S = input()\noriginal_str = \"keyence\"\n\nfor i in range(len(S)):\n  for j in range(i,len(S)):\n    s = \"\".join([S[:i],S[j:]])\n    if s == original_str:\n      print(\"YES\")\n      exit()\n    \nprint(\"NO\")","s=input()\n\nfor i in range(len(s)-6):\n    for j in range(len(s)-i+1):\n        p=s[:j]+s[j+i:]\n        if p==\"keyence\":\n            print(\"YES\")\n            exit()\nprint(\"NO\")","s = input()\nn = len(s)\nk = 'keyence'\na = 0\nb = 6\n\nfor i in range(n):\n    if k[a] == s[i]:\n        a += 1\n    else:\n        break\n    if a == 7:\n        break\n\nfor i in range(n)[::-1]:\n    if k[b] == s[i]:\n        b -= 1\n    else:\n        break\n    if b == -1:\n        break\n\nb = 7 - b + 1\nif a + b >= 7:\n    print('YES')\nelse:\n    print('NO')","S=str(input())\n\nans='keyence'\n\nif S[-7:]=='keyence':\n    print('YES')\n    exit()\n   \nfor i in range(1,7):\n    if S[:i]==ans[:i] and S[-7+i:]==ans[i:]:\n        print('YES')\n        exit()\n\nif S[:8]=='keyence':\n    print('YES')\n    exit()\n\nprint('NO')\n\n\n        \n\n\n\n\n\n","S = input()\n\ntarget = \"keyence\"\nnow = 0\nstart = None\nend = None\nfor i in range(len(S)):\n    if target[now] == S[i]:\n        now += 1\n        if start is not None and end is None:\n            end = i\n    elif start is not None:\n        continue\n    else:\n        start = i\n\nif start is None:\n    pred = S\nelif end is None:\n    pred = S[:start]\nelse:\n    pred = S[:start] + S[end:]\n\nif pred == target:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n","s = input()\nl = []\ni = 0\n\nfor w in 'keyence':\n    if w in s:\n        i += s[i:].find(w)\n        l.append(i)\n        i += 1\n\nif len(l) == len('keyence') and l== sorted(l):\n    cnt = 0\n    for i in range(len(l)-1):\n        if l[i+1] - l[i] > 1:\n            cnt += 1\n    if cnt < 2:\n        print('YES')\n        exit()\n\nprint('NO')","def main():\n  s = str(input())\n  keyence = 'keyence'\n  for i in range(len(keyence)+1):\n    prefix = keyence[:i]\n    postfix = keyence[i:]\n    if s.startswith(prefix) and s.endswith(postfix):\n      print('YES')\n      return\n  print('NO')\n\n\nif __name__ == '__main__':\n  main()\n","S=input()\nflag=0\nfor i in range(len(S)):\n    for j in range(i+1,len(S)):\n        if S[0:i]+S[j:] == 'keyence':\n            flag=1\nif flag==1:\n    print(\"YES\")\nelse:\n    print(\"NO\")","S=input()\ncount= 0\nfor i in range(len(S)):\n    for j in range(len(S)):\n        if S[:i]+S[j:]==\"keyence\":\n            count += 1\nif count == 0:\n    print(\"NO\")\nelse:\n    print(\"YES\")","import itertools\n\nS = input()\nif S == 'keyence':\n    print(\"YES\")\nelse:\n    cands = [S[:i]+S[j:] for i, j in itertools.combinations(range(len(S)), 2)]\n    if 'keyence' in cands:\n        print(\"YES\")\n    else:\n        print(\"NO\")","def solve():\n    S = input()\n    N = len(S)\n    for i in range(N-(N-8)):\n        if S[:i] + S[i+(N-7):] == 'keyence':\n            print('YES')\n            exit()\n    print('NO')\n\n\nif __name__ == '__main__':\n    solve()\n","S = input()\nans = False\nif(S.find(\"keyence\") == 0 or S.find(\"keyence\") == len(S) - 7):\n  ans = True\nelse:\n  for i in range(7):\n    if(S[0: i + 1] + S[len(S) - 6  +i : len(S)]  == \"keyence\"):\n      ans = True\n      break\nif ans:\n  print(\"YES\")\nelse:\n  print(\"NO\")","S = input()\nK = 'keyence'\n\nkn = 0\nbf = False\nlas = False\n\ntmp = \"\"\nfor i in range(len(S)):\n    # \u3082\u3057K\u306eindex\u304c6\u3092\u8d85\u3048\u308b\uff08\u5168\u3066OK\uff09\u306e\u5834\u5408\u629c\u3051\u308b\n    if kn == 7:\n        break\n\n    # \u3082\u3057\u4eca\u898b\u3066\u308bS\u3068K\u304c\u540c\u3058\u3060\u3063\u305f\u3089K\u306eindex\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\n    # \u3082\u3057\u90e8\u5206\u6587\u5b57\u5217\u3092\u524a\u9664\u6e08\u307f\u306a\u3089\u3082\u3046\u524a\u9664\u3059\u308b\u90e8\u5206\u6587\u5b57\u5217\u306f\u7121\u3044    \n    if S[i] == K[kn]:\n        kn += 1\n        if bf == True:\n            bf = False\n            las = True\n    else:\n        if bf == False:\n            tmp += S[i]\n            bf = True\n            continue\n        elif bf == True and las == False:\n            tmp += S[i]\n            continue\n        elif bf == True and las == True:\n            break\n\nif kn == 7 or S.replace(tmp, ''):\n    print('YES')\nelse:\n    a = 0\n    b = 6\n    St = 0\n    La = len(S)\n    for i in range(St, len(S)):\n        if a >= b:\n            break\n        if S[i] == K[a]:\n            a += 1\n            for j in range(La-1, 0, -1):\n                if S[j] == K[b]:\n                    b -= 1\n                    if a == b:\n                        print(\"YES\")\n                        exit()\n    print(\"NO\")\n    exit()","S = input()\nst = 'keyence'\nans = 'NO'\nfor i in range(len(st)):\n  if st[:i]==S[:i] and st[i:]==S[-(7-i):]:\n    ans='YES'\n    break\nprint(ans)","import sys\nS = input()\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if \"keyence\" == S[:i] + S[j:]:\n            print('YES')\n            sys.exit()\nprint('NO')","S=input()\nN=len(S)\n\nK='keyence'\n\nfor n in range(7):\n    if S[n]!=K[n]:\n        if S[N-7+n:N]==K[n:7]:\n            print('YES')\n            break\n        else:\n            print('NO')\n            break\n\n    if n==6:\n        print('YES')  ","S = input()\nremove_num = len(S) - 7\nyes = False\nfor i in range(len(S) - remove_num):\n    tmp = S[:i] + S[i + remove_num:]\n    if tmp == \"keyence\":\n        yes = True\n        break\n\nif yes:\n    print(\"YES\")\nelse:\n    print(\"NO\")","S = input()\n\nkey = list(\"keyence\")\n\nflg = False\nfor i in range(len(S)):\n    for j in range(len(S)):\n        tmp = S[0:i]+S[j:]\n\n        if tmp == key and not flg:\n            print(\"YES\")\n            flg = True\n            break\n\nif not flg:\n    print(\"NO\")\n","need = \"keyence\"\ns = input()\nn = len(s)\nm = len(need)\nir = set()\nir.add(s)\nfor i in range(1, m+1):\n    if n >= i and n - m + i + 1 >= i:\n        ir.add(s[0:i] + s[n - m + i:])\n#for i in ir:\n    #print(i)\nif need in ir:\n    print(\"YES\")\nelse:\n    print(\"NO\")","S = input()\n\nP = \"keyence\"\na = 0\nc = 0\n\ni = 0\nj = 0\n\nwhile i < 7 and j < len(S):\n  if S[j] == P[i]:\n    i += 1\n    a = 0\n  elif a == 0:\n    a = 1\n    c += 1\n  j += 1\n\nif c == 0 and i == 7:\n  print(\"YES\")\nelif c == 1 and j == len(S) and i == 7:\n  print(\"YES\")\nelse:\n  print(\"NO\")\n","s = input()\nlen_s = len(s)\nw = list(\"keyence\")\n\nans = \"NO\"\nif s[0:7] == \"keyence\":\n    ans = \"YES\"\nelif s[0] == \"k\" and s[len_s-6:] == \"eyence\":\n    ans = \"YES\"\nelif s[0:2] == \"ke\" and s[len_s-5:] == \"yence\":\n    ans = \"YES\"\nelif s[0:3] == \"key\" and s[len_s-4:] == \"ence\":\n    ans = \"YES\"\nelif s[0:4] == \"keye\" and s[len_s-3:] == \"nce\":\n    ans = \"YES\"\nelif s[0:5] == \"keyen\" and s[len_s-2:] == \"ce\":\n    ans = \"YES\"\nelif s[0:6] == \"keyenc\" and s[len_s-1:] == \"e\":\n    ans = \"YES\"\nelif s[len_s-7:] == \"keyence\":\n    ans = \"YES\"\n\nprint(ans)","S = input()\n\nkeyence = 'keyence'\n\nif keyence in S:\n    print('YES')\nelse:\n    result = 'NO'\n    for i in range(1, len(keyence)):\n        delimiters = keyence[:i], keyence[i:]\n        if S.startswith(delimiters[0]) and S.endswith(delimiters[1]):\n            result = 'YES'\n            break\n    print(result)","S=input()\n\nif S.startswith(\"keyence\") or S.endswith(\"Keyence\"):\n  print(\"YES\")\nelif S.startswith(\"k\") and S.endswith(\"eyence\"):\n  print(\"YES\")\nelif S.startswith(\"ke\") and S.endswith(\"yence\"):\n  print(\"YES\")\nelif S.startswith(\"key\") and S.endswith(\"ence\"):\n  print(\"YES\")\nelif S.startswith(\"keye\") and S.endswith(\"nce\"):\n  print(\"YES\")\nelif S.startswith(\"keyen\") and S.endswith(\"ce\"):\n  print(\"YES\")\nelif S.startswith(\"keyenc\") and S.endswith(\"e\"):\n  print(\"YES\")\nelse:\n  print(\"NO\")\n  ","S = list(input())\nn = len(S)\n\nfor i in range(n):\n    for j in range(i, n):\n        if S[:i] + S[j:] == list('keyence'):\n            print('YES')\n            exit()\nprint('NO')\n","s = input()\nkey = \"\"\n\nfor i in range(8):\n  if i == 0:\n    key = s[len(s)-7:]\n    if key == \"keyence\":\n      break\n  if 0 < i < 7:\n    key = s[:i] + s[len(s) - 7 + i:]\n    if key == \"keyence\":\n      break\n  if i == 7:\n    key = s[:7]\n    if key == \"keyence\":\n      break\n\nif key == \"keyence\":\n  print(\"YES\")\nelse:\n  print(\"NO\")\n    ","S = input()\ntarget = \"keyence\"\nlength = len(target)+1\n\nfor i in range(length):\n  first = target[:i]\n  second = target[i:]\n  if first in S and second in S and S.find(first) <= S.find(second):\n    print(\"YES\")\n    exit()\nprint(\"NO\")","S = input()\n\nbl = False\nfor L in range(8):\n  T = S[:L] + S[len(S)-(7-L):]\n  if T == 'keyence':\n    bl = True\n    break\n\nanswer = 'YES' if bl else 'NO'\nprint(answer)","# coding: utf-8\n# Your code here!\n\n#a = [int(i) for i  in input().split()]\n\ns = input()\na = len(s)\nok=0\nfor i in range(a):\n    for j in range(i,a):\n        c = s[:i]+s[j:]\n#        print(c)\n        if c == 'keyence':\n            ok = 1\n        \nif ok:\n    print('YES')\nelse:\n    print('NO')\n","s = input()\nfor i in range(len(s)):\n    for j in range(i, len(s)):\n        a = s[:i] + s[j:]\n        if a == \"keyence\":\n            print(\"YES\")\n            exit()\nprint(\"NO\")","S=input()\nS=S.replace(\"keyence\",\"A\")\nif S==\"A\":\n    print(\"YES\")\nelif S[0]==\"A\" and S[len(S)-1]!=\"A\":\n    print(\"YES\")\nelif S[len(S)-1]!=\"A\":\n    print(\"YES\")\n    \nS1=S.replace(\"K\",\"A\")\nS1=S1.replace(\"eyence\",\"B\")\nif S1[0]==\"A\" and S1[len(S1)-1]==\"B\":\n    print(\"YES\")\nS2=S.replace(\"Ke\",\"A\")\nS2=S2.replace(\"yence\",\"B\")\nif S2[0]==\"A\" and S2[len(S2)-1]==\"B\":\n    print(\"YES\")\nS3=S.replace(\"Key\",\"A\")\nS3=S3.replace(\"ence\",\"B\")\nif S3[0]==\"A\" and S3[len(S3)-1]==\"B\":\n    print(\"YES\")\nS4=S.replace(\"Keye\",\"A\")\nS4=S4.replace(\"nce\",\"B\")\nif S4[0]==\"A\" and S4[len(S4)-1]==\"B\":\n    print(\"YES\")\nS5=S.replace(\"Keyen\",\"A\")\nS5=S5.replace(\"ce\",\"B\")\nif S5[0]==\"A\" and S5[len(S5)-1]==\"B\":\n    print(\"YES\")\nS6=S.replace(\"Keyenc\",\"A\")\nS6=S6.replace(\"e\",\"B\")\nif S6[0]==\"A\" and S6[len(S6)-1]==\"B\":\n    print(\"YES\")\n","import sys\nS = list(input())\nAns_list=['k','e','y','e','n','c','e']\nAns = 'NO'\nfor i in range(len(S)):\n    for j in range(i,len(S),+1):\n        \n        if (S[:i:]+S[j::]) == Ans_list:\n           Ans = 'YES'\n           print(Ans)\n           sys.exit()\nprint(Ans)\n","import re\nstr = input()\nk1 = re.compile(\".*keyence$\")\nk2 = re.compile(\"^k.*eyence$\")\nk3 = re.compile(\"^ke.*yence$\")\nk4 = re.compile(\"^key.*ence$\")\nk5 = re.compile(\"^keye.*nce$\")\nk6 = re.compile(\"^keyen.*ce$\")\nk7 = re.compile(\"^keyenc.*e$\")\nk8 = re.compile(\"^keyence.*\")\n\nif (re.match(k1, str) is not None) or (re.match(k2, str) is not None) or (re.match(k3, str) is not None) or (re.match(k4, str) is not None) or (re.match(k5, str) is not None) or (re.match(k6, str) is not None) or (re.match(k7, str) is not None) or (re.match(k8, str) is not None):\n  print(\"YES\")\nelse:\n  print(\"NO\")","import sys\n\ns = input()\ntmp = len(s) - 7\nif s == \"keyence\":\n    print(\"YES\")\n    sys.exit()\nif s.count(\"k\") >= 1 and s.count(\"e\") >= 3 and s.count(\"y\") >= 1 and s.count(\"n\") >= 1 and s.count(\"c\") >= 1:\n    for i in range(len(s)):\n        if s[i] == 'k':\n            for j in range(i, len(s)):\n                if s[j] == 'e':\n                    for k in range(j, len(s)):\n                        if s[k] == 'y':\n                            for x in range(k, len(s)):\n                                if s[x] == 'e':\n                                    for y in range(x, len(s)):\n                                        if s[y] == 'n':\n                                            for z in range(y, len(s)):\n                                                if s[z] == 'c':\n                                                    for b in range(z, len(s)):\n                                                        if s[b] == 'e':\n                                                            print(\"YES\")\n                                                            sys.exit()\n\n\nprint(\"NO\")\n","# https:\/\/atcoder.jp\/contests\/keyence2019\/tasks\/keyence2019_b\n\nimport re\n\n\nS = input()\n\nif \"keyence\" in S:\n    print(\"YES\")\nelse:\n    patterns = [\"k*eyence\", \"ke*yence\", \"key*ence\", \"keye*nce\", \"keyen*ce\", \"keyenc*e\"]\n\n    matched = False\n    for pattern in patterns:\n        matchOB = re.search(pattern, S)\n        if matchOB:\n            matched = True\n            break\n    if matched:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n        \n\n","s=input()\nans=False\nfor x in range(len(s)):\n    for y in range(x,len(s)):\n        if (s[:x]+s[y:])=='keyence':\n            ans=True\nif ans:\n    print('YES')\nelse:\n    print('NO')","s=str(input())\nst=list(s)\nl=len(st)\nif st[0]==\"k\" and st[1]==\"e\" and st[2]==\"y\" and st[3]==\"e\" and st[4]==\"n\" and st[5]==\"c\" and st[6]==\"e\":\n  print(\"YES\")\nelif st[l-7]==\"k\" and st[l-6]==\"e\" and st[l-5]==\"y\" and st[l-4]==\"e\" and st[l-3]==\"n\" and st[l-2]==\"c\" and st[l-1]==\"e\":\n  print(\"YES\")\nelif st[0]==\"k\" and st[l-6]==\"e\" and st[l-5]==\"y\" and st[l-4]==\"e\" and st[l-3]==\"n\" and st[l-2]==\"c\" and st[l-1]==\"e\":\n  print(\"YES\")\nelif st[0]==\"k\" and st[1]==\"e\" and st[l-5]==\"y\" and st[l-4]==\"e\" and st[l-3]==\"n\" and st[l-2]==\"c\" and st[l-1]==\"e\":\n  print(\"YES\")\nelif st[0]==\"k\" and st[1]==\"e\" and st[2]==\"y\" and st[l-4]==\"e\" and st[l-3]==\"n\" and st[l-2]==\"c\" and st[l-1]==\"e\":\n  print(\"YES\")\nelif st[0]==\"k\" and st[1]==\"e\" and st[2]==\"y\" and st[3]==\"e\" and st[l-3]==\"n\" and st[l-2]==\"c\" and st[l-1]==\"e\":\n  print(\"YES\")\nelif st[0]==\"k\" and st[1]==\"e\" and st[2]==\"y\" and st[3]==\"e\" and st[4]==\"n\" and st[l-2]==\"c\" and st[l-1]==\"e\":\n  print(\"YES\")\nelif st[0]==\"k\" and st[1]==\"e\" and st[2]==\"y\" and st[3]==\"e\" and st[4]==\"n\" and st[5]==\"c\" and st[l-1]==\"e\":\n  print(\"YES\")\nelse:\n  ptint(\"NO\")","str = input()\nn = len(str)\nflag = \"NO\"\nfor i in range(8):\n\tbuf = str[:i]+str[n-7+i:]\n\tif(buf == \"keyence\"):\n\t\tflag = \"YES\"\n\t#print(str[n-i-7:])\nprint(flag)","# coding: utf-8\n# Your code here!\n\ns = input()\na = [\"k\", \"ke\", \"key\", \"keye\", \"keyen\", \"keyenc\"]\nb = [\"eyence\", \"yence\", \"ence\", \"nce\", \"ce\", \"e\"]\nif s == \"keyence\":\n    print(\"YES\")\n    exit(0)\nif len(s) > 7:\n    if s[7:] == \"keyence\":\n        print(\"YES\")\n        exit(0)\n    if s[:7] == \"keyence\":\n        print(\"YES\")\n        exit(0)\n    else:\n        for i in range(6):\n            if a[i] in s and b[i] in s:\n                if s.find(a[i])==0 and s.rfind(b[i])+len(b[i])==len(s):\n                    print(\"YES\")\n                    exit(0)\n                else:\n                    print(\"NO\")\n                    exit(0)\n            else:\n                print(\"NO\")\n                exit(0)","var =input()\nb =\"\"\nflg = False\nfor a in var:\n \n    if \"k\" in var:\n        b= var.find(\"k\")+1\n        if \"e\" in var and var.find(\"e\",b,len(var))+1 > b:\n            b= var.find(\"e\",b,len(var))+1\n            if \"y\" in var and var.find(\"y\",b,len(var))+1 > b:\n                b= var.find(\"y\",b,len(var))+1\n                if \"e\" in var and var.find(\"e\",b,len(var))+1 > b:\n                     b= var.find(\"e\",b,len(var))+1\n                     if \"n\" in var and var.find(\"n\",b,len(var))+1 > b:\n                         b= var.find(\"n\",b,len(var))+1\n                         if \"c\" in var and var.find(\"c\",b,len(var))+1 > b:\n                             b= var.find(\"c\",b,len(var))+1\n                             if \"e\" in var and var.find(\"e\",b,len(var))+1 > b:\n                                 flg = True\nif flg:\n    print(\"YES\")\nelse:\n    print(\"NO\")","s = input()\n\nif s == 'keyence':\n    print('YES')\n    exit()\n\nfor i in range(0,len(s)-1):\n    for j in range(i+1,len(s)):\n        if s[:i]+s[j:] == 'keyence':\n            print('YES')\n            exit()\nprint('NO')","import sys\n\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninm = lambda: map(int, sys.stdin.readline().split())\ninl = lambda: list(inm())\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\nS = ins()\nK = \"keyence\"\n\n\ndef solve():\n    if len(S) < len(K):\n        return False\n    f = b = True\n    x = y = 0\n    ns = len(S)\n    nk = len(K)\n    for i in range(len(S)):\n        if i < nk and S[i] == K[i]:\n            if f:\n                x += 1\n        else:\n            f = False\n        if nk - 1 - i >= 0 and S[ns - 1 - i] == K[nk - 1 - i]:\n            if b:\n                y += 1\n        else:\n            b = False\n    # debug(f\"{x=} {y=}\")\n    return x + y >= nk\n\n\nprint(\"YES\" if solve() else \"NO\")\n","\ndef solve(s):\n  t = 'keyence'\n  if t in s[0:7] or t in s[-7:]:\n    return 'YES'\n\n  p = 0\n  for i in range(len(s)):\n    if t[p] == s[i]:\n      p = p + 1\n    else:\n      if t[p:] in s[-7+p:]:\n        return 'YES'\n      else:\n        return 'NO'\n  return 'NO'\n\nprint(solve(input()))","S = input()\n\nif S[0] != \"k\":\n    if S[-7:] == \"keyence\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nelif S[-1] != \"e\":\n    if S[:7] == \"keyence\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nelse:\n    if S[:1] == \"k\" and S[-6:] == \"eyence\":\n        print(\"YES\")\n    elif S[:2] == \"ke\" and S[-5:] == \"yence\":\n        print(\"YES\")\n    elif S[:3] == \"key\" and S[-4:] == \"ence\":\n        print(\"YES\")\n    elif S[:4] == \"keye\" and S[-3:] == \"nce\":\n        print(\"YES\")\n    elif S[:5] == \"keyen\" and S[-2:] == \"ce\":\n        print(\"YES\")\n    elif S[:6] == \"keyenc\" and S[-1:] == \"e\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\n","s=input()\n\nkey1=s.find('k')\nflag=0\nif key1==-1:\n    flag=1\nelse:\n    s=s[key1+1:]\n\nkey1=s.find('e')\nif key1==-1:\n    flag=1\nelse:\n    s=s[key1+1:]\n\nkey1=s.find('y')\nif key1==-1:\n    flag=1\nelse:\n    s=s[key1+1:]\n\nkey1=s.find('e')\nif key1==-1:\n    flag=1\nelse:\n    s=s[key1+1:]\n\nkey1=s.find('n')\nif key1==-1:\n    flag=1\nelse:\n    s=s[key1+1:]\n    \nkey1=s.find('c')\nif key1==-1:\n    flag=1\nelse:\n    s=s[key1+1:]\n\nkey2=s.count('e')\nif key2==-1:\n    flag=1\n    \nif flag==1:\n  print('NO')\nelse:\n  print('YES')\n    ","def main():\n    s = input()\n\n    good = 'keyence'\n\n    for start in range(len(s)):\n        for end in range(len(s)):\n            if s.replace(s[start:end],'') == good:\n                print('YES')\n                exit()\n\n    print('NO')\n\nif __name__ == '__main__':\n    main()\n","s = input()\n\nfor i in range(len(s)):\n    if s[:i] + s[i+len(s)-7:] == 'keyence':\n        print('YES')\n        break\nelse:\n    print('NO')","S = list(input())\nkeyword = list('keyence')\n\ncur = 0\nans = \"NO\"\nwhile cur < len(S):\n    target = keyword[0]\n    if S[cur] == target:\n        keyword.pop(0)\n    if len(keyword) == 0:\n        ans = \"YES\"\n        break\n    cur += 1\n    \nprint(ans)","S = input()\nN = len(S)\nok = 0\nfor i in range(N):\n    for j in range(i, N+1):\n        if S[:i] + S[j:] == 'keyence':\n            ok = 1\nprint(\"YES\" if ok else \"NO\")","string = input()\nN = len(string)\nN0 = 7\njudge = 0\n\nif string == \"keyence\":\n\tjudge = 1\n\nfor i in range(0,N0):\n\tstringnew = string[0:i]+string[i+N-N0:N]\n\tif stringnew == \"keyence\":\n\t\tjudge = 1\n\nif judge == 1:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n","import sys, re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, tan, asin, acos, atan, radians, degrees#, log2\nfrom itertools import accumulate, permutations, combinations, combinations_with_replacement, product, groupby\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left, insort, insort_left\nfrom fractions import gcd\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\ndef ZIP(n): return zip(*(MAP() for _ in range(n)))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10**9 + 7\n#from decimal import *\n\nS = input()\nN = len(S)\n\nfor l in range(N):\n\tfor r in range(l, N):\n\t\tif S[:l] + S[r:] == \"keyence\":\n\t\t\tprint(\"YES\")\n\t\t\tbreak\nelse:\n\tprint(\"NO\")\n","S = input()\nk = \"keyence\"\nn = 0\nans = False\nfor i in range(8):\n    if i==0:\n        if S[-7:] == k:\n            ans = True\n    elif i==7:\n        if S[:7]==k:\n            ans = True\n    else:\n        if S[:i]==k[:i] and S[-(7-i):]==k[-(7-i):]:\n            ans = True\nif ans:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n","import sys\nsys.setrecursionlimit(10**6)\ninput=sys.stdin.readline\n\ns=input().rstrip()\nt=\"keyence\"\ni,j=0,0\nwhile len(s)>i:\n    if j>=7:break\n    if s[i]==t[j]:\n        j+=1\n    i+=1\nprint(\"YES\"if j==7 else \"NO\")","S=input()\ns=\"keyence\"\nl=len(S)\nfor i in range(l):\n    for j in range(i,l+1):\n        if s==S[:i]+S[j:]:\n            print(\"YES\")\n            break\n    else:\n        continue\n    break\nelse:\n    print(\"NO\")","#!\/usr\/bin\/env python\n# coding: utf-8\n\n# In[22]:\n\n\nS = input()\n\n\n# In[24]:\n\n\nkeyence = \"keyence\"\nlength = len(keyence)\nflag = True\nfor i in range(len(keyence)):\n#     print(S[:i+1], keyence[:i+1], S[-length+i+1:], keyence[-length+i+1:])\n    if S[:i+1] == keyence[:i+1]:\n        if S[-length+i+1:] == keyence[-length+i+1:]:\n            print(\"YES\")\n            flag = False\n            break\nif flag:\n    print(\"NO\")\n\n\n# In[ ]:\n\n\n\n\n","s = input()\nn = len(s)\nfor i in range(n):\n\tfor j in range(i, n):\n\t\tif s[:i] + s[j:] == \"keyence\":\n\t\t\tprint(\"YES\")\n\t\t\texit()\nprint(\"NO\")","S = input()\nfor i in range(8):\n    if S[:i]+S[-7:][i:] == \"keyence\":\n        print(\"YES\")\n        break\nelse:\n    print(\"NO\")\n","S = list(input())\n\nS_rev = S[::-1]\n\nkey_front = [False] * 7\n\nkey_back = [False] * 7\n\ns_key = [\"k\", \"e\", \"y\", \"e\", \"n\", \"c\", \"e\"]\ns_key_rev = s_key[::-1]\n\ni = 0\nwhile S[i] == s_key[i] and i < 6:\n    key_front[i] = True\n    i += 1\n\ni = 0\nwhile S_rev[i] == s_key_rev[i] and i < 6:\n    key_back[i] = True\n    i += 1\nans = 0\nfor b in key_front:\n    if b:\n        ans += 1\nfor b in key_back:\n    if b:\n        ans += 1\n\nif ans >= 7:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n","#!\/usr\/bin\/env python\n# -*- coding: utf-8 -*-\n\ndef solve():\n    s = input()\n    k = 'keyence'\n    if s.startswith(k) or s.endswith(k):\n        print(\"YES\")\n        return\n\n    for i in range(len(k)):\n        start = k[:i]\n        end = k[i:]\n        if s.startswith(start) and s.endswith(end):\n            print(\"YES\")\n            return\n    print(\"NO\")\n\nif __name__==\"__main__\":\n    solve()\n","s=input()\nans=0\nt=\"keyence\"\nif s[:7]==t or s[-7:]==t:\n    ans=1\nfor i in range(1,7):\n    if s[:i]==t[:i] and s[-7+i:]==t[-7+i:]:\n        ans=1\nprint([\"NO\",\"YES\"][ans])","s = input()\nif 'keyence' in s:\n    print(\"YES\")\nelif 'keyenc' in s:\n    index = s.find('keyenc')\n    index2 = s.find('e',index+4)\n    if index2 != -1:\n        print(\"YES\")\nelif 'keyen' in s:\n    index = s.find('keyen')\n    index2 = s.find('ce',index+3)\n    if index2 != -1:\n        print(\"YES\")\nelif 'keye' in s:\n    index = s.find('keye')\n    index2 = s.find('nce',index+2)\n    if index2 != -1:\n        print(\"YES\")\nelif 'key' in s:\n    index = s.find('key')\n    index2 = s.find('ence',index+1)\n    if index2 != -1:\n        print(\"YES\")\nelif 'ke' in s:\n    index = s.find('ke')\n    index2 = s.find('yence',index)\n    if index2 != -1:\n        print(\"YES\")\nelif 'k' in s:\n    index = s.find('k')\n    index2 = s.find('eyence',index)\n    if index2 != -1:\n        print(\"YES\")\nelse:\n    print(\"NO\")\n","s = input()\nkey = \"keyence\"\nfor i in range(len(key)):\n    if key[: i] in s and key[i:] in s:\n        print(\"Yes\")\n        exit()\n\nprint(\"No\")","S = input()\n\nN = len(S)\nstr = \"keyence\"\nans = False\n\nif S[-1]+S[N-7:] == str:\n    ans = True\nfor i in range(8):\n    if S[:i]+S[N-7+i:] == str:\n        ans = True\n\nprint(\"YES\") if ans else print(\"NO\")","s = input()\nb = s[:7]\ne = s[-7:]\nflg = 0\nfor i in range(7):\n  if b[:i] + e[i:] == \"keyence\":\n    flg = 1\nif flg:\n  print(\"YES\")\nelse:\n  print(\"NO\")","def main():\n  s=input()\n  k=\"keyence\"\n  if len(s)<7:\n    print(\"NO\")\n    return\n  if s[:7]==k or s[-7:]==k:\n    print(\"YES\")\n    return\n  for i in range(1,7):\n    if s[:i]==k[:i] and s[i-7:]==k[i-7:]:\n      print(\"YES\")\n      return\n  print(\"NO\")\nmain()","# keyence\u304c\u5148\u982d\u306b\u3042\u308b\u5834\u5408\u3068\u6700\u5f8c\u306b\u3042\u308b\u5834\u5408\u3001\u305d\u308c\u4ee5\u5916\u306f\u771f\u3093\u4e2d\u306b\u3042\u308b\u5834\u5408\ns = input()\nkeyence = \"keyence\"\nfor i in range(len(keyence)):\n    if s[: i + 1] == keyence[: i + 1] and s[-i + 1 :] == keyence[-i + 1]:\n        print(\"YES\")\n        exit()\nprint(\"NO\")\n","S=input()\nk='keyence'\nfor i in range(1,7):\n    if S.find(k[:i]) != -1 and S.rfind(k[i:]) != -1 and S.find(k[:i]) < S.rfind(k[i:]):\n        print('YES')\n        exit()\nprint('NO')\n","stringEnter = input()\ntarget = \"keyence\"\ncounter = 0\ntargetCounter = 0\nwhile(counter < len(stringEnter) and targetCounter < len(target)):\n if(stringEnter[counter] == target[targetCounter]):\n  targetCounter += 1\n counter += 1\nif(targetCounter == len(target)):\n print(\"YES\");\nelse:\n print(\"NO\");\n","s = input()\n\nif s.startswith('k') and s.startswith('eyence'):\n  print('YES')\nelif s.startswith('ke') and s.startswith('yence'):\n  print('YES')\nelif s.startswith('key') and s.startswith('ence'):\n  print('YES')\nelif s.startswith('keye') and s.startswith('nce'):\n  print('YES')\nelif s.startswith('keyen') and s.startswith('ce'):\n  print('YES')\nelif s.startswith('keyenc') and s.startswith('e'):\n  print('YES')\nelse:\n  print('NO')","def is_keyence(s):\n    KEYENCE = \"keyence\"\n    if s[:7] == KEYENCE or s[-7:] == KEYENCE:\n        return True\n    for index, string in enumerate(KEYENCE):\n        if s[:index] == KEYENCE[:index] and s[-index:] == KEYENCE[-index:]:\n            return True\n    return False\n\ninp = input()\nif is_keyence(inp):\n    print(\"YES\")\nelse:\n    print(\"NO\")","moji = input()\nif moji.find('k') >= 0 and moji.find(\"eyence\") >= 0 and moji.find('k')<moji.find(\"eyence\"):\n    print(\"YES\")\nelif moji.find('ke') >= 0 and moji.find(\"yence\") >= 0 and moji.find('ke')<moji.find(\"yence\"):\n    print(\"YES\")\nelif moji.find('key') >= 0 and moji.find(\"ence\") >= 0 and moji.find('key')<moji.find(\"ence\"):\n    print(\"YES\")\nelif moji.find('keye') >= 0 and moji.find(\"nce\") >= 0 and moji.find('keye')<moji.find(\"nce\"):\n    print(\"YES\")\nelif moji.find('keyen') >= 0 and moji.find(\"ce\") >= 0 and moji.find('keyen')<moji.find(\"ce\"):\n    print(\"YES\")\nelif moji.find('keyenc') >= 0 and moji.find(\"e\") >= 0 and moji.find('keyenc')<moji.find(\"e\"):\n    print(\"YES\")\nelif \"keyence\" in moji:\n    print(\"YES\")\nelse:\n    print(\"NO\")","import sys\nfrom sys import exit\nfrom collections import deque\nfrom bisect import bisect_left, bisect_right, insort_left, insort_right #func(\u30ea\u30b9\u30c8,\u5024)\nfrom heapq import heapify, heappop, heappush\nfrom math import *\n\nsys.setrecursionlimit(10**6)\nINF = 10**20\nMOD = 10**9+7\n\ndef mint():\n    return map(int,input().split())\ndef lint():\n    return map(int,input().split())\ndef judge(x, l=['Yes', 'No']):\n    print(l[0] if x else l[1])\ndef lprint(l, sep='\\n'):\n    for x in l:\n        print(x, end=sep)\n\nS = input()\nT = 'keyence'\nN = len(S)\n\ni = 0\nwhile i<7 and S[i]==T[i]:\n    i += 1\nj = 0\nwhile j<7 and S[N-1-j]==T[6-j]:\n    j += 1\njudge(i+j>=7,['YES','NO'])","import sys\n\nsys.setrecursionlimit(10 ** 7)\nf_inf = float('inf')\nmod = 10 ** 9 + 7\n\n\ndef resolve():\n    s = input()\n    n = len(s)\n    key = list(\"keyence\")\n\n    cnt = 0\n    flg = True\n    for i in range(n):\n        if len(key) != 0 and s[i] == key[0]:\n            key.pop(0)\n            flg = True\n        else:\n            if flg:\n                cnt += 1\n                flg = False\n\n    if cnt > 1 or len(key) != 0:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\n\nif __name__ == '__main__':\n    resolve()\n","S=input()\nkey_='keyence'\n\nans='NO'\nfor i in range(len(S)):\n  if S[:i]+S[i+len(S)-7:]==key_:\n    ans='YES'\n    break\n\nprint(ans)","import sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef input(): return sys.stdin.readline().strip()\n\ndef resolve():\n    def main():\n        S=str(input())\n        ls=len(S)\n\n        if S=='keyence':\n            return 'YES'\n        else:\n\n\n\n            for i in range(ls):\n                for j in range(i+1,ls):\n                    if S[:i]+S[j:]=='keyence':\n                        return 'YES'\n            return 'NO'\n    print(main())\n\n\n\nresolve()","s = input()\nfor i in range(8):\n    if s[:i] + s[i - 7:] == \"keyence\":\n        print(\"YES\")\n        exit()\nprint(\"NO\")","S = input()\nN = len(S)\nfor i in range(N + 1):\n    for j in range(N + 1):\n        tmp = S[:i] + S[j:]\n        if tmp == 'keyence':\n            print('YES')\n            exit()\n\nprint('NO')\n","s = list(input())\nk_index = []\nk = list('keyence')\n\nfor i in range(len(s)):\n    if s[i] == k[0]:\n        k_index.append(i)\n\nans = 'NO'\nfor i in k_index:\n    j = 0\n    flag = 0\n    for a in s[i:]:\n        if a == k[j]:\n            j += 1\n            if flag == 0:\n                flag = 1 # reading 1st half\n            elif flag == 2:\n                flag = 3 # reading 2nd half\n            if j == len(k):\n                ans = 'YES'\n        elif flag == 1: # end of 1st half\n            flag = 2 # reading middle\n        elif flag == 3:\n            break\n\nprint(ans)","S = str(input())\n\nif S[:7] == \"keyence\" or S[-7:] == \"keyence\":\n    print(\"YES\")\n    exit()\n\nelif S[:1] + S[-6:] == \"keyence\" or S[:2] + S[-5:] == \"keyence\" or S[:3] + S[-4:] == \"keyence\" or S[:4] + S[-3:] == \"keyence\" or S[:5] + S[-2:] == \"keyence\" or S[:6] + S[-1:] == \"keyence\":\n    print(\"YES\")\n    exit()\n\nelse:\n    print(\"NO\")\n","s = input()\nkey = 'keyence'\nif len(s) < len(key):\n    print(\"NO\")\nelif s[:len(key)] == key:\n    print(\"YES\")\nelif s[-len(key):] == key:\n    print(\"YES\")\nelse:\n    for i in range(1, len(key)):\n        head = s.startswith(key[0:i])\n        hip = s.endswith(key[i:])\n        if head and hip:\n            print(\"YES\")\n            break\n    else:\n        print(\"NO\")\n","s=input()\nkey=\"keyence\"\n\nl=len(s)\n\nfor i in range(l):\n    for j in range(i,l):\n        mo = s[:i] + s[j:]\n        if mo == key:\n            print(\"YES\")\n            exit()\nprint(\"NO\")","# -*- coding: utf-8 -*-\n# B\n# \n# input\ns = input()\n# calc\nif s[0:7] == 'keyence' or s[-7:] == 'keyence':\n  print('YES')\nelif s[0:1]+s[-6:] == 'keyence':\n  print('YES')\nelif s[0:2]+s[-5:] == 'keyence':\n  print('YES')\nelif s[0:3]+s[-4:] == 'keyence':\n  print('YES')  \nelif s[0:4]+s[-3:] == 'keyence':\n  print('YES')\nelif s[0:5]+s[-2:] == 'keyence':\n  print('YES')  \nelif s[0:6]+s[-1:] == 'keyence':\n  print('YES')\nelse:\n  print('NO')","s=input()\nfor i in range(8):\n    if s[:i]+s[-(7-i):]==\"keyence\":\n        print(\"YES\")\n        exit(0)\nprint(\"NO\")","S = input()\n\nKEYENCE = 'keyence'\nAnswer = 'NO'\nif S[0:7] == KEYENCE:\n  Answer = 'YES'\nelif S[0] == 'k':\n  counter = 1\n  for i in range(6):\n    if S[i+1]==KEYENCE[i+1]:\n      counter +=1\n  if S[-(7-counter):] ==KEYENCE[counter:]:\n    Answer = 'YES'\n\nelif S[-7:] == KEYENCE:\n  Answer = 'YES'\n\nprint(Answer)","s=input()\u00df\ns=list(s)\na=list('keyence')\nfor i in range(8):\n    if s[:i]==a[:i] and s[i-7:]==a[i-7:]:\n        print('YES')\n        quit()\nprint('NO')","import re\nS = input()\nflag = False\nres = re.match(r'.*keyence$',S)\nif res :\n  flag = True\nres = re.match(r'^k.*eyence$',S)\nif res :\n  flag = True\nres = re.match(r'^ke.*yence$',S)\nif res :\n  flag = True\nres = re.match(r'^key.*ence$',S)\nif res :\n  flag = True\nres = re.match(r'^keye.*nce$',S)\nif res :\n  flag = True\nres = re.match(r'^keyen.*ce$',S)\nif res :\n  flag = True\nres = re.match(r'^keyenc.*e$',S)\nif res :\n  flag = True\nres = re.match(r'^keyence.*',S)\nif res :\n  flag = True\nif flag :\n  print('YES')\nelse :\n  print('NO')","import copy\nS = list(input())\ndiff = len(S)-len(\"keyence\")\nfor i in range(len(S)-diff):\n    S_tmp = copy.deepcopy(S)\n    #print(i)\n    del S_tmp[i:(i+diff)]\n    #print(str(S_tmp))\n    if \"keyence\" == \"\".join(S_tmp):\n        print(\"YES\")\n        exit(0)\nprint(\"NO\")"],"raw_generations":["S = input()\nK = 'keyence'\n\nfor i in range(8):\n  #print(S[:i], S[len(S)-7+i:], K[:i], K[i:])\n  if S[:i] == K[:i] and S[len(S)-7+i:] == K[i:]:\n    print('YES')\n    break\n  else:\n    continue\nelse:\n  print('NO')","s = input()\nif len(s) < 7:\n    print(\"NO\")\nif s[0] != \"k\":\n    if s[-7] == \"k\" and s[-6] == \"e\" and s[-5] == \"y\" and s[-4] == \"e\" and s[-3] == \"n\" and s[-2] == \"c\" and s[-1] == \"e\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelif s[1] != \"e\":\n    if s[-6] == \"e\" and s[-5] == \"y\" and s[-4] == \"e\" and s[-3] == \"n\" and s[-2] == \"c\" and s[-1] == \"e\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelif s[2] != \"y\":\n    if s[-5] == \"y\" and s[-4] == \"e\" and s[-3] == \"n\" and s[-2] == \"c\" and s[-1] == \"e\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelif s[3] != \"e\":\n    if s[-4] == \"e\" and s[-3] == \"n\" and s[-2] == \"c\" and s[-1] == \"e\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelif s[4] != \"n\":\n    if s[-3] == \"n\" and s[-2] == \"c\" and s[-1] == \"e\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelif s[5] != \"c\":\n    if s[-2] == \"c\" and s[-1] == \"e\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelif s[6] != \"e\":\n    if s[-1] == \"e\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    print(\"YES\")\n","S=list(input())\nstr1=\"\"\nstr2=\"\"\nflag=0\nfor i in range(7):\n    str1+=S[i]\n    str2+=S[len(S)-7]\n\nif str1==\"keyence\"or str2==\"keyence\":\n    flag=1\ns=\"\"\nt=\"\"\nfor i in range(7):\n    for j in range(i):\n        s+=S[j]\n    for j in range(7-i):\n        t+=S[len(S)-7+i+j]\n    if s+t==\"keyence\":\n        flag=1\n    s=\"\"\n    t=\"\"\nif flag==1:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\n","S = input()\n\np = 0\nkeyence = list(\"keyence\")\n# print(keyence)\nid = []\n\nfor s in S:\n    if p > 6:\n        id.append(p)\n        continue\n    if s != keyence[p]:\n        id.append(p)\n        continue\n    if p <= 6:\n        p += 1\n\n# print(p, id)\nif p == 7 and (len(set(id)) == 1 or len(id) == 0):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\n","S=input()\nlen_S=len(S)\nlen_SS=len_S-7\nans='keyence'\n\nif len_S==7:\n    if S==ans:\n        print('YES')\n        exit()\n    else:\n        print('NO')\n        exit()\n\nS_lst=list(S)\n\nfor i in range(len_S):\n    for j in range(len_SS+1):\n        lst=S_lst[:]\n        del lst[i:i+j]\n        if ''.join(lst)==ans:\n            print('YES')\n            exit()\nprint('NO')","import sys\nstr = list(input())\n\nn = len(str)\n\nfor i in range(8):\n    edit = str[0:i] + str[n - 7 + i:]\n    if edit == ['k', 'e', 'y', 'e', 'n', 'c', 'e']:\n        print('YES')\n        sys.exit()\nprint('NO')\n","s = input()\n\ndef main(string):\n    c = \"keyence\"\n    head = string[:7]\n\n    idx = 0\n    for s in head:\n        if s == c[idx]: idx += 1\n        else: break\n    if idx == 7:\n        print(\"YES\")\n        return\n\n    tail = string[-7+idx:]\n    for s in tail:\n        if s == c[idx]: idx += 1\n        else: break        \n    \n    if idx == 7:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nmain(s)","s = input()\nif s == 'keyence':\n    print('YES')\n    exit()\nfor i in range(len(s)+1):\n    for j in range(i):\n        if s[:j] + s[i:] == 'keyence':\n            print('YES')\n            exit()\nprint('NO')\n","def main():\n    \"\"\"\n    \u554f\u984c\u304c 3\u554f\u51fa\u984c\u3055\u308c\u3001\n    1\u554f\u76ee\u306e\u914d\u70b9\u306f A\u70b9\u4ee5\u4e0b\u3001\n    2\u554f\u76ee\u306e\u914d\u70b9\u306f A+1\u70b9\u4ee5\u4e0a B\u70b9\u4ee5\u4e0b\u3001\n    3\u554f\u76ee\u306e\u914d\u70b9\u306f  B+1\u70b9\u4ee5\u4e0a\u3067\u3042\u308b\u3002\n    \"\"\"\n    S = input()\n    ans = f(S)\n    if ans:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n\ndef f(S):\n    n = len(S)\n    ok = False\n    target = \"keyence\"\n    for i in range(n):\n        for j in range(i, n):\n            # print(S[:i], S[i:j], S[j:])\n            if S[:i] == target:\n                return True\n            elif S[:i] + S[j:] == target:\n                return True\n            elif S[j:] == target:\n                return True\n\n    return False\n\n\nif __name__ == '__main__':\n    main()\n","S = input()\n\nhead = 0\nback = 0\n\nkey = 'keyence'\n\nfor i in range(len(key)):\n    if S[:i+1] == key[:i+1]:\n        head = i+1\n\nfor i in range(len(key)):\n    if S[len(S)-i-1:] == key[len(key)-i-1:]:\n        back = i+1\n\nif head + back >= len(key):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n","s = input()\nans = 'keyence'\nj = 0\nfor i in range(len(s)):\n    if(ans[j] == s[i]):\n        j += 1\nprint(['NO','YES'][j==7])","S = input()\nans = \"NO\"\nN = len(S)\n\nfor i in range(N):\n    for j in range(i, N + 1):\n        tmp = (S[:i] + S[j:])\n        if tmp == \"keyence\":\n            ans = \"YES\"\n\nprint(ans)\n","import sys\n\ninput = sys.stdin.readline\n\ndef main():\n    ans = 'NO'\n    k = 'keyence'\n    S = input().rstrip('\\n')\n    if S[:7] == k or S[-7:] == k:\n        ans = 'YES'\n    elif S[0] == k[0]:\n        for i in range(1,len(k)):\n            if S[i] != k[i]:\n                if S[-(7-i):] == k[i:]:\n                    ans = 'YES'\n                    break\n                else:\n                  break\n    print(ans)\n\nif __name__ == '__main__':\n    main()","s = input()\nkey = \"keyence\"\nj = 0\nword = key[j]\nfor i in range(len(s)):\n    if s[i] == key[j]:\n        j +=1\n    if j == 7:\n        break\nif j == 7:\n    print(\"YES\")\nelse:\n    print(\"NO\")","S = input()\noriginal_str = \"keyence\"\n\nfor i in range(len(S)):\n  for j in range(i,len(S)):\n    s = \"\".join([S[:i],S[j:]])\n    if s == original_str:\n      print(\"YES\")\n      exit()\n    \nprint(\"NO\")","s=input()\n\nfor i in range(len(s)-6):\n    for j in range(len(s)-i+1):\n        p=s[:j]+s[j+i:]\n        if p==\"keyence\":\n            print(\"YES\")\n            exit()\nprint(\"NO\")","s = input()\nn = len(s)\nk = 'keyence'\na = 0\nb = 6\n\nfor i in range(n):\n    if k[a] == s[i]:\n        a += 1\n    else:\n        break\n    if a == 7:\n        break\n\nfor i in range(n)[::-1]:\n    if k[b] == s[i]:\n        b -= 1\n    else:\n        break\n    if b == -1:\n        break\n\nb = 7 - b + 1\nif a + b >= 7:\n    print('YES')\nelse:\n    print('NO')","S=str(input())\n\nans='keyence'\n\nif S[-7:]=='keyence':\n    print('YES')\n    exit()\n   \nfor i in range(1,7):\n    if S[:i]==ans[:i] and S[-7+i:]==ans[i:]:\n        print('YES')\n        exit()\n\nif S[:8]=='keyence':\n    print('YES')\n    exit()\n\nprint('NO')\n\n\n        \n\n\n\n\n\n","S = input()\n\ntarget = \"keyence\"\nnow = 0\nstart = None\nend = None\nfor i in range(len(S)):\n    if target[now] == S[i]:\n        now += 1\n        if start is not None and end is None:\n            end = i\n    elif start is not None:\n        continue\n    else:\n        start = i\n\nif start is None:\n    pred = S\nelif end is None:\n    pred = S[:start]\nelse:\n    pred = S[:start] + S[end:]\n\nif pred == target:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n","s = input()\nl = []\ni = 0\n\nfor w in 'keyence':\n    if w in s:\n        i += s[i:].find(w)\n        l.append(i)\n        i += 1\n\nif len(l) == len('keyence') and l== sorted(l):\n    cnt = 0\n    for i in range(len(l)-1):\n        if l[i+1] - l[i] > 1:\n            cnt += 1\n    if cnt < 2:\n        print('YES')\n        exit()\n\nprint('NO')","def main():\n  s = str(input())\n  keyence = 'keyence'\n  for i in range(len(keyence)+1):\n    prefix = keyence[:i]\n    postfix = keyence[i:]\n    if s.startswith(prefix) and s.endswith(postfix):\n      print('YES')\n      return\n  print('NO')\n\n\nif __name__ == '__main__':\n  main()\n","S=input()\nflag=0\nfor i in range(len(S)):\n    for j in range(i+1,len(S)):\n        if S[0:i]+S[j:] == 'keyence':\n            flag=1\nif flag==1:\n    print(\"YES\")\nelse:\n    print(\"NO\")","S=input()\ncount= 0\nfor i in range(len(S)):\n    for j in range(len(S)):\n        if S[:i]+S[j:]==\"keyence\":\n            count += 1\nif count == 0:\n    print(\"NO\")\nelse:\n    print(\"YES\")","import itertools\n\nS = input()\nif S == 'keyence':\n    print(\"YES\")\nelse:\n    cands = [S[:i]+S[j:] for i, j in itertools.combinations(range(len(S)), 2)]\n    if 'keyence' in cands:\n        print(\"YES\")\n    else:\n        print(\"NO\")","def solve():\n    S = input()\n    N = len(S)\n    for i in range(N-(N-8)):\n        if S[:i] + S[i+(N-7):] == 'keyence':\n            print('YES')\n            exit()\n    print('NO')\n\n\nif __name__ == '__main__':\n    solve()\n","S = input()\nans = False\nif(S.find(\"keyence\") == 0 or S.find(\"keyence\") == len(S) - 7):\n  ans = True\nelse:\n  for i in range(7):\n    if(S[0: i + 1] + S[len(S) - 6  +i : len(S)]  == \"keyence\"):\n      ans = True\n      break\nif ans:\n  print(\"YES\")\nelse:\n  print(\"NO\")","S = input()\nK = 'keyence'\n\nkn = 0\nbf = False\nlas = False\n\ntmp = \"\"\nfor i in range(len(S)):\n    # \u3082\u3057K\u306eindex\u304c6\u3092\u8d85\u3048\u308b\uff08\u5168\u3066OK\uff09\u306e\u5834\u5408\u629c\u3051\u308b\n    if kn == 7:\n        break\n\n    # \u3082\u3057\u4eca\u898b\u3066\u308bS\u3068K\u304c\u540c\u3058\u3060\u3063\u305f\u3089K\u306eindex\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\n    # \u3082\u3057\u90e8\u5206\u6587\u5b57\u5217\u3092\u524a\u9664\u6e08\u307f\u306a\u3089\u3082\u3046\u524a\u9664\u3059\u308b\u90e8\u5206\u6587\u5b57\u5217\u306f\u7121\u3044    \n    if S[i] == K[kn]:\n        kn += 1\n        if bf == True:\n            bf = False\n            las = True\n    else:\n        if bf == False:\n            tmp += S[i]\n            bf = True\n            continue\n        elif bf == True and las == False:\n            tmp += S[i]\n            continue\n        elif bf == True and las == True:\n            break\n\nif kn == 7 or S.replace(tmp, ''):\n    print('YES')\nelse:\n    a = 0\n    b = 6\n    St = 0\n    La = len(S)\n    for i in range(St, len(S)):\n        if a >= b:\n            break\n        if S[i] == K[a]:\n            a += 1\n            for j in range(La-1, 0, -1):\n                if S[j] == K[b]:\n                    b -= 1\n                    if a == b:\n                        print(\"YES\")\n                        exit()\n    print(\"NO\")\n    exit()","S = input()\nst = 'keyence'\nans = 'NO'\nfor i in range(len(st)):\n  if st[:i]==S[:i] and st[i:]==S[-(7-i):]:\n    ans='YES'\n    break\nprint(ans)","import sys\nS = input()\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if \"keyence\" == S[:i] + S[j:]:\n            print('YES')\n            sys.exit()\nprint('NO')","S=input()\nN=len(S)\n\nK='keyence'\n\nfor n in range(7):\n    if S[n]!=K[n]:\n        if S[N-7+n:N]==K[n:7]:\n            print('YES')\n            break\n        else:\n            print('NO')\n            break\n\n    if n==6:\n        print('YES')  ","S = input()\nremove_num = len(S) - 7\nyes = False\nfor i in range(len(S) - remove_num):\n    tmp = S[:i] + S[i + remove_num:]\n    if tmp == \"keyence\":\n        yes = True\n        break\n\nif yes:\n    print(\"YES\")\nelse:\n    print(\"NO\")","S = input()\n\nkey = list(\"keyence\")\n\nflg = False\nfor i in range(len(S)):\n    for j in range(len(S)):\n        tmp = S[0:i]+S[j:]\n\n        if tmp == key and not flg:\n            print(\"YES\")\n            flg = True\n            break\n\nif not flg:\n    print(\"NO\")\n","need = \"keyence\"\ns = input()\nn = len(s)\nm = len(need)\nir = set()\nir.add(s)\nfor i in range(1, m+1):\n    if n >= i and n - m + i + 1 >= i:\n        ir.add(s[0:i] + s[n - m + i:])\n#for i in ir:\n    #print(i)\nif need in ir:\n    print(\"YES\")\nelse:\n    print(\"NO\")","S = input()\n\nP = \"keyence\"\na = 0\nc = 0\n\ni = 0\nj = 0\n\nwhile i < 7 and j < len(S):\n  if S[j] == P[i]:\n    i += 1\n    a = 0\n  elif a == 0:\n    a = 1\n    c += 1\n  j += 1\n\nif c == 0 and i == 7:\n  print(\"YES\")\nelif c == 1 and j == len(S) and i == 7:\n  print(\"YES\")\nelse:\n  print(\"NO\")\n","s = input()\nlen_s = len(s)\nw = list(\"keyence\")\n\nans = \"NO\"\nif s[0:7] == \"keyence\":\n    ans = \"YES\"\nelif s[0] == \"k\" and s[len_s-6:] == \"eyence\":\n    ans = \"YES\"\nelif s[0:2] == \"ke\" and s[len_s-5:] == \"yence\":\n    ans = \"YES\"\nelif s[0:3] == \"key\" and s[len_s-4:] == \"ence\":\n    ans = \"YES\"\nelif s[0:4] == \"keye\" and s[len_s-3:] == \"nce\":\n    ans = \"YES\"\nelif s[0:5] == \"keyen\" and s[len_s-2:] == \"ce\":\n    ans = \"YES\"\nelif s[0:6] == \"keyenc\" and s[len_s-1:] == \"e\":\n    ans = \"YES\"\nelif s[len_s-7:] == \"keyence\":\n    ans = \"YES\"\n\nprint(ans)","S = input()\n\nkeyence = 'keyence'\n\nif keyence in S:\n    print('YES')\nelse:\n    result = 'NO'\n    for i in range(1, len(keyence)):\n        delimiters = keyence[:i], keyence[i:]\n        if S.startswith(delimiters[0]) and S.endswith(delimiters[1]):\n            result = 'YES'\n            break\n    print(result)","S=input()\n\nif S.startswith(\"keyence\") or S.endswith(\"Keyence\"):\n  print(\"YES\")\nelif S.startswith(\"k\") and S.endswith(\"eyence\"):\n  print(\"YES\")\nelif S.startswith(\"ke\") and S.endswith(\"yence\"):\n  print(\"YES\")\nelif S.startswith(\"key\") and S.endswith(\"ence\"):\n  print(\"YES\")\nelif S.startswith(\"keye\") and S.endswith(\"nce\"):\n  print(\"YES\")\nelif S.startswith(\"keyen\") and S.endswith(\"ce\"):\n  print(\"YES\")\nelif S.startswith(\"keyenc\") and S.endswith(\"e\"):\n  print(\"YES\")\nelse:\n  print(\"NO\")\n  ","S = list(input())\nn = len(S)\n\nfor i in range(n):\n    for j in range(i, n):\n        if S[:i] + S[j:] == list('keyence'):\n            print('YES')\n            exit()\nprint('NO')\n","s = input()\nkey = \"\"\n\nfor i in range(8):\n  if i == 0:\n    key = s[len(s)-7:]\n    if key == \"keyence\":\n      break\n  if 0 < i < 7:\n    key = s[:i] + s[len(s) - 7 + i:]\n    if key == \"keyence\":\n      break\n  if i == 7:\n    key = s[:7]\n    if key == \"keyence\":\n      break\n\nif key == \"keyence\":\n  print(\"YES\")\nelse:\n  print(\"NO\")\n    ","S = input()\ntarget = \"keyence\"\nlength = len(target)+1\n\nfor i in range(length):\n  first = target[:i]\n  second = target[i:]\n  if first in S and second in S and S.find(first) <= S.find(second):\n    print(\"YES\")\n    exit()\nprint(\"NO\")","S = input()\n\nbl = False\nfor L in range(8):\n  T = S[:L] + S[len(S)-(7-L):]\n  if T == 'keyence':\n    bl = True\n    break\n\nanswer = 'YES' if bl else 'NO'\nprint(answer)","# coding: utf-8\n# Your code here!\n\n#a = [int(i) for i  in input().split()]\n\ns = input()\na = len(s)\nok=0\nfor i in range(a):\n    for j in range(i,a):\n        c = s[:i]+s[j:]\n#        print(c)\n        if c == 'keyence':\n            ok = 1\n        \nif ok:\n    print('YES')\nelse:\n    print('NO')\n","s = input()\nfor i in range(len(s)):\n    for j in range(i, len(s)):\n        a = s[:i] + s[j:]\n        if a == \"keyence\":\n            print(\"YES\")\n            exit()\nprint(\"NO\")","S=input()\nS=S.replace(\"keyence\",\"A\")\nif S==\"A\":\n    print(\"YES\")\nelif S[0]==\"A\" and S[len(S)-1]!=\"A\":\n    print(\"YES\")\nelif S[len(S)-1]!=\"A\":\n    print(\"YES\")\n    \nS1=S.replace(\"K\",\"A\")\nS1=S1.replace(\"eyence\",\"B\")\nif S1[0]==\"A\" and S1[len(S1)-1]==\"B\":\n    print(\"YES\")\nS2=S.replace(\"Ke\",\"A\")\nS2=S2.replace(\"yence\",\"B\")\nif S2[0]==\"A\" and S2[len(S2)-1]==\"B\":\n    print(\"YES\")\nS3=S.replace(\"Key\",\"A\")\nS3=S3.replace(\"ence\",\"B\")\nif S3[0]==\"A\" and S3[len(S3)-1]==\"B\":\n    print(\"YES\")\nS4=S.replace(\"Keye\",\"A\")\nS4=S4.replace(\"nce\",\"B\")\nif S4[0]==\"A\" and S4[len(S4)-1]==\"B\":\n    print(\"YES\")\nS5=S.replace(\"Keyen\",\"A\")\nS5=S5.replace(\"ce\",\"B\")\nif S5[0]==\"A\" and S5[len(S5)-1]==\"B\":\n    print(\"YES\")\nS6=S.replace(\"Keyenc\",\"A\")\nS6=S6.replace(\"e\",\"B\")\nif S6[0]==\"A\" and S6[len(S6)-1]==\"B\":\n    print(\"YES\")\n","import sys\nS = list(input())\nAns_list=['k','e','y','e','n','c','e']\nAns = 'NO'\nfor i in range(len(S)):\n    for j in range(i,len(S),+1):\n        \n        if (S[:i:]+S[j::]) == Ans_list:\n           Ans = 'YES'\n           print(Ans)\n           sys.exit()\nprint(Ans)\n","import re\nstr = input()\nk1 = re.compile(\".*keyence$\")\nk2 = re.compile(\"^k.*eyence$\")\nk3 = re.compile(\"^ke.*yence$\")\nk4 = re.compile(\"^key.*ence$\")\nk5 = re.compile(\"^keye.*nce$\")\nk6 = re.compile(\"^keyen.*ce$\")\nk7 = re.compile(\"^keyenc.*e$\")\nk8 = re.compile(\"^keyence.*\")\n\nif (re.match(k1, str) is not None) or (re.match(k2, str) is not None) or (re.match(k3, str) is not None) or (re.match(k4, str) is not None) or (re.match(k5, str) is not None) or (re.match(k6, str) is not None) or (re.match(k7, str) is not None) or (re.match(k8, str) is not None):\n  print(\"YES\")\nelse:\n  print(\"NO\")","import sys\n\ns = input()\ntmp = len(s) - 7\nif s == \"keyence\":\n    print(\"YES\")\n    sys.exit()\nif s.count(\"k\") >= 1 and s.count(\"e\") >= 3 and s.count(\"y\") >= 1 and s.count(\"n\") >= 1 and s.count(\"c\") >= 1:\n    for i in range(len(s)):\n        if s[i] == 'k':\n            for j in range(i, len(s)):\n                if s[j] == 'e':\n                    for k in range(j, len(s)):\n                        if s[k] == 'y':\n                            for x in range(k, len(s)):\n                                if s[x] == 'e':\n                                    for y in range(x, len(s)):\n                                        if s[y] == 'n':\n                                            for z in range(y, len(s)):\n                                                if s[z] == 'c':\n                                                    for b in range(z, len(s)):\n                                                        if s[b] == 'e':\n                                                            print(\"YES\")\n                                                            sys.exit()\n\n\nprint(\"NO\")\n","# https:\/\/atcoder.jp\/contests\/keyence2019\/tasks\/keyence2019_b\n\nimport re\n\n\nS = input()\n\nif \"keyence\" in S:\n    print(\"YES\")\nelse:\n    patterns = [\"k*eyence\", \"ke*yence\", \"key*ence\", \"keye*nce\", \"keyen*ce\", \"keyenc*e\"]\n\n    matched = False\n    for pattern in patterns:\n        matchOB = re.search(pattern, S)\n        if matchOB:\n            matched = True\n            break\n    if matched:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n        \n\n","s=input()\nans=False\nfor x in range(len(s)):\n    for y in range(x,len(s)):\n        if (s[:x]+s[y:])=='keyence':\n            ans=True\nif ans:\n    print('YES')\nelse:\n    print('NO')","s=str(input())\nst=list(s)\nl=len(st)\nif st[0]==\"k\" and st[1]==\"e\" and st[2]==\"y\" and st[3]==\"e\" and st[4]==\"n\" and st[5]==\"c\" and st[6]==\"e\":\n  print(\"YES\")\nelif st[l-7]==\"k\" and st[l-6]==\"e\" and st[l-5]==\"y\" and st[l-4]==\"e\" and st[l-3]==\"n\" and st[l-2]==\"c\" and st[l-1]==\"e\":\n  print(\"YES\")\nelif st[0]==\"k\" and st[l-6]==\"e\" and st[l-5]==\"y\" and st[l-4]==\"e\" and st[l-3]==\"n\" and st[l-2]==\"c\" and st[l-1]==\"e\":\n  print(\"YES\")\nelif st[0]==\"k\" and st[1]==\"e\" and st[l-5]==\"y\" and st[l-4]==\"e\" and st[l-3]==\"n\" and st[l-2]==\"c\" and st[l-1]==\"e\":\n  print(\"YES\")\nelif st[0]==\"k\" and st[1]==\"e\" and st[2]==\"y\" and st[l-4]==\"e\" and st[l-3]==\"n\" and st[l-2]==\"c\" and st[l-1]==\"e\":\n  print(\"YES\")\nelif st[0]==\"k\" and st[1]==\"e\" and st[2]==\"y\" and st[3]==\"e\" and st[l-3]==\"n\" and st[l-2]==\"c\" and st[l-1]==\"e\":\n  print(\"YES\")\nelif st[0]==\"k\" and st[1]==\"e\" and st[2]==\"y\" and st[3]==\"e\" and st[4]==\"n\" and st[l-2]==\"c\" and st[l-1]==\"e\":\n  print(\"YES\")\nelif st[0]==\"k\" and st[1]==\"e\" and st[2]==\"y\" and st[3]==\"e\" and st[4]==\"n\" and st[5]==\"c\" and st[l-1]==\"e\":\n  print(\"YES\")\nelse:\n  ptint(\"NO\")","str = input()\nn = len(str)\nflag = \"NO\"\nfor i in range(8):\n\tbuf = str[:i]+str[n-7+i:]\n\tif(buf == \"keyence\"):\n\t\tflag = \"YES\"\n\t#print(str[n-i-7:])\nprint(flag)","# coding: utf-8\n# Your code here!\n\ns = input()\na = [\"k\", \"ke\", \"key\", \"keye\", \"keyen\", \"keyenc\"]\nb = [\"eyence\", \"yence\", \"ence\", \"nce\", \"ce\", \"e\"]\nif s == \"keyence\":\n    print(\"YES\")\n    exit(0)\nif len(s) > 7:\n    if s[7:] == \"keyence\":\n        print(\"YES\")\n        exit(0)\n    if s[:7] == \"keyence\":\n        print(\"YES\")\n        exit(0)\n    else:\n        for i in range(6):\n            if a[i] in s and b[i] in s:\n                if s.find(a[i])==0 and s.rfind(b[i])+len(b[i])==len(s):\n                    print(\"YES\")\n                    exit(0)\n                else:\n                    print(\"NO\")\n                    exit(0)\n            else:\n                print(\"NO\")\n                exit(0)","var =input()\nb =\"\"\nflg = False\nfor a in var:\n \n    if \"k\" in var:\n        b= var.find(\"k\")+1\n        if \"e\" in var and var.find(\"e\",b,len(var))+1 > b:\n            b= var.find(\"e\",b,len(var))+1\n            if \"y\" in var and var.find(\"y\",b,len(var))+1 > b:\n                b= var.find(\"y\",b,len(var))+1\n                if \"e\" in var and var.find(\"e\",b,len(var))+1 > b:\n                     b= var.find(\"e\",b,len(var))+1\n                     if \"n\" in var and var.find(\"n\",b,len(var))+1 > b:\n                         b= var.find(\"n\",b,len(var))+1\n                         if \"c\" in var and var.find(\"c\",b,len(var))+1 > b:\n                             b= var.find(\"c\",b,len(var))+1\n                             if \"e\" in var and var.find(\"e\",b,len(var))+1 > b:\n                                 flg = True\nif flg:\n    print(\"YES\")\nelse:\n    print(\"NO\")","s = input()\n\nif s == 'keyence':\n    print('YES')\n    exit()\n\nfor i in range(0,len(s)-1):\n    for j in range(i+1,len(s)):\n        if s[:i]+s[j:] == 'keyence':\n            print('YES')\n            exit()\nprint('NO')","import sys\n\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninm = lambda: map(int, sys.stdin.readline().split())\ninl = lambda: list(inm())\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\nS = ins()\nK = \"keyence\"\n\n\ndef solve():\n    if len(S) < len(K):\n        return False\n    f = b = True\n    x = y = 0\n    ns = len(S)\n    nk = len(K)\n    for i in range(len(S)):\n        if i < nk and S[i] == K[i]:\n            if f:\n                x += 1\n        else:\n            f = False\n        if nk - 1 - i >= 0 and S[ns - 1 - i] == K[nk - 1 - i]:\n            if b:\n                y += 1\n        else:\n            b = False\n    # debug(f\"{x=} {y=}\")\n    return x + y >= nk\n\n\nprint(\"YES\" if solve() else \"NO\")\n","\ndef solve(s):\n  t = 'keyence'\n  if t in s[0:7] or t in s[-7:]:\n    return 'YES'\n\n  p = 0\n  for i in range(len(s)):\n    if t[p] == s[i]:\n      p = p + 1\n    else:\n      if t[p:] in s[-7+p:]:\n        return 'YES'\n      else:\n        return 'NO'\n  return 'NO'\n\nprint(solve(input()))","S = input()\n\nif S[0] != \"k\":\n    if S[-7:] == \"keyence\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nelif S[-1] != \"e\":\n    if S[:7] == \"keyence\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nelse:\n    if S[:1] == \"k\" and S[-6:] == \"eyence\":\n        print(\"YES\")\n    elif S[:2] == \"ke\" and S[-5:] == \"yence\":\n        print(\"YES\")\n    elif S[:3] == \"key\" and S[-4:] == \"ence\":\n        print(\"YES\")\n    elif S[:4] == \"keye\" and S[-3:] == \"nce\":\n        print(\"YES\")\n    elif S[:5] == \"keyen\" and S[-2:] == \"ce\":\n        print(\"YES\")\n    elif S[:6] == \"keyenc\" and S[-1:] == \"e\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\n","s=input()\n\nkey1=s.find('k')\nflag=0\nif key1==-1:\n    flag=1\nelse:\n    s=s[key1+1:]\n\nkey1=s.find('e')\nif key1==-1:\n    flag=1\nelse:\n    s=s[key1+1:]\n\nkey1=s.find('y')\nif key1==-1:\n    flag=1\nelse:\n    s=s[key1+1:]\n\nkey1=s.find('e')\nif key1==-1:\n    flag=1\nelse:\n    s=s[key1+1:]\n\nkey1=s.find('n')\nif key1==-1:\n    flag=1\nelse:\n    s=s[key1+1:]\n    \nkey1=s.find('c')\nif key1==-1:\n    flag=1\nelse:\n    s=s[key1+1:]\n\nkey2=s.count('e')\nif key2==-1:\n    flag=1\n    \nif flag==1:\n  print('NO')\nelse:\n  print('YES')\n    ","def main():\n    s = input()\n\n    good = 'keyence'\n\n    for start in range(len(s)):\n        for end in range(len(s)):\n            if s.replace(s[start:end],'') == good:\n                print('YES')\n                exit()\n\n    print('NO')\n\nif __name__ == '__main__':\n    main()\n","s = input()\n\nfor i in range(len(s)):\n    if s[:i] + s[i+len(s)-7:] == 'keyence':\n        print('YES')\n        break\nelse:\n    print('NO')","S = list(input())\nkeyword = list('keyence')\n\ncur = 0\nans = \"NO\"\nwhile cur < len(S):\n    target = keyword[0]\n    if S[cur] == target:\n        keyword.pop(0)\n    if len(keyword) == 0:\n        ans = \"YES\"\n        break\n    cur += 1\n    \nprint(ans)","S = input()\nN = len(S)\nok = 0\nfor i in range(N):\n    for j in range(i, N+1):\n        if S[:i] + S[j:] == 'keyence':\n            ok = 1\nprint(\"YES\" if ok else \"NO\")","string = input()\nN = len(string)\nN0 = 7\njudge = 0\n\nif string == \"keyence\":\n\tjudge = 1\n\nfor i in range(0,N0):\n\tstringnew = string[0:i]+string[i+N-N0:N]\n\tif stringnew == \"keyence\":\n\t\tjudge = 1\n\nif judge == 1:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n","import sys, re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, tan, asin, acos, atan, radians, degrees#, log2\nfrom itertools import accumulate, permutations, combinations, combinations_with_replacement, product, groupby\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left, insort, insort_left\nfrom fractions import gcd\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\ndef ZIP(n): return zip(*(MAP() for _ in range(n)))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10**9 + 7\n#from decimal import *\n\nS = input()\nN = len(S)\n\nfor l in range(N):\n\tfor r in range(l, N):\n\t\tif S[:l] + S[r:] == \"keyence\":\n\t\t\tprint(\"YES\")\n\t\t\tbreak\nelse:\n\tprint(\"NO\")\n","S = input()\nk = \"keyence\"\nn = 0\nans = False\nfor i in range(8):\n    if i==0:\n        if S[-7:] == k:\n            ans = True\n    elif i==7:\n        if S[:7]==k:\n            ans = True\n    else:\n        if S[:i]==k[:i] and S[-(7-i):]==k[-(7-i):]:\n            ans = True\nif ans:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n","import sys\nsys.setrecursionlimit(10**6)\ninput=sys.stdin.readline\n\ns=input().rstrip()\nt=\"keyence\"\ni,j=0,0\nwhile len(s)>i:\n    if j>=7:break\n    if s[i]==t[j]:\n        j+=1\n    i+=1\nprint(\"YES\"if j==7 else \"NO\")","S=input()\ns=\"keyence\"\nl=len(S)\nfor i in range(l):\n    for j in range(i,l+1):\n        if s==S[:i]+S[j:]:\n            print(\"YES\")\n            break\n    else:\n        continue\n    break\nelse:\n    print(\"NO\")","#!\/usr\/bin\/env python\n# coding: utf-8\n\n# In[22]:\n\n\nS = input()\n\n\n# In[24]:\n\n\nkeyence = \"keyence\"\nlength = len(keyence)\nflag = True\nfor i in range(len(keyence)):\n#     print(S[:i+1], keyence[:i+1], S[-length+i+1:], keyence[-length+i+1:])\n    if S[:i+1] == keyence[:i+1]:\n        if S[-length+i+1:] == keyence[-length+i+1:]:\n            print(\"YES\")\n            flag = False\n            break\nif flag:\n    print(\"NO\")\n\n\n# In[ ]:\n\n\n\n\n","s = input()\nn = len(s)\nfor i in range(n):\n\tfor j in range(i, n):\n\t\tif s[:i] + s[j:] == \"keyence\":\n\t\t\tprint(\"YES\")\n\t\t\texit()\nprint(\"NO\")","S = input()\nfor i in range(8):\n    if S[:i]+S[-7:][i:] == \"keyence\":\n        print(\"YES\")\n        break\nelse:\n    print(\"NO\")\n","S = list(input())\n\nS_rev = S[::-1]\n\nkey_front = [False] * 7\n\nkey_back = [False] * 7\n\ns_key = [\"k\", \"e\", \"y\", \"e\", \"n\", \"c\", \"e\"]\ns_key_rev = s_key[::-1]\n\ni = 0\nwhile S[i] == s_key[i] and i < 6:\n    key_front[i] = True\n    i += 1\n\ni = 0\nwhile S_rev[i] == s_key_rev[i] and i < 6:\n    key_back[i] = True\n    i += 1\nans = 0\nfor b in key_front:\n    if b:\n        ans += 1\nfor b in key_back:\n    if b:\n        ans += 1\n\nif ans >= 7:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n","#!\/usr\/bin\/env python\n# -*- coding: utf-8 -*-\n\ndef solve():\n    s = input()\n    k = 'keyence'\n    if s.startswith(k) or s.endswith(k):\n        print(\"YES\")\n        return\n\n    for i in range(len(k)):\n        start = k[:i]\n        end = k[i:]\n        if s.startswith(start) and s.endswith(end):\n            print(\"YES\")\n            return\n    print(\"NO\")\n\nif __name__==\"__main__\":\n    solve()\n","s=input()\nans=0\nt=\"keyence\"\nif s[:7]==t or s[-7:]==t:\n    ans=1\nfor i in range(1,7):\n    if s[:i]==t[:i] and s[-7+i:]==t[-7+i:]:\n        ans=1\nprint([\"NO\",\"YES\"][ans])","s = input()\nif 'keyence' in s:\n    print(\"YES\")\nelif 'keyenc' in s:\n    index = s.find('keyenc')\n    index2 = s.find('e',index+4)\n    if index2 != -1:\n        print(\"YES\")\nelif 'keyen' in s:\n    index = s.find('keyen')\n    index2 = s.find('ce',index+3)\n    if index2 != -1:\n        print(\"YES\")\nelif 'keye' in s:\n    index = s.find('keye')\n    index2 = s.find('nce',index+2)\n    if index2 != -1:\n        print(\"YES\")\nelif 'key' in s:\n    index = s.find('key')\n    index2 = s.find('ence',index+1)\n    if index2 != -1:\n        print(\"YES\")\nelif 'ke' in s:\n    index = s.find('ke')\n    index2 = s.find('yence',index)\n    if index2 != -1:\n        print(\"YES\")\nelif 'k' in s:\n    index = s.find('k')\n    index2 = s.find('eyence',index)\n    if index2 != -1:\n        print(\"YES\")\nelse:\n    print(\"NO\")\n","s = input()\nkey = \"keyence\"\nfor i in range(len(key)):\n    if key[: i] in s and key[i:] in s:\n        print(\"Yes\")\n        exit()\n\nprint(\"No\")","S = input()\n\nN = len(S)\nstr = \"keyence\"\nans = False\n\nif S[-1]+S[N-7:] == str:\n    ans = True\nfor i in range(8):\n    if S[:i]+S[N-7+i:] == str:\n        ans = True\n\nprint(\"YES\") if ans else print(\"NO\")","s = input()\nb = s[:7]\ne = s[-7:]\nflg = 0\nfor i in range(7):\n  if b[:i] + e[i:] == \"keyence\":\n    flg = 1\nif flg:\n  print(\"YES\")\nelse:\n  print(\"NO\")","def main():\n  s=input()\n  k=\"keyence\"\n  if len(s)<7:\n    print(\"NO\")\n    return\n  if s[:7]==k or s[-7:]==k:\n    print(\"YES\")\n    return\n  for i in range(1,7):\n    if s[:i]==k[:i] and s[i-7:]==k[i-7:]:\n      print(\"YES\")\n      return\n  print(\"NO\")\nmain()","# keyence\u304c\u5148\u982d\u306b\u3042\u308b\u5834\u5408\u3068\u6700\u5f8c\u306b\u3042\u308b\u5834\u5408\u3001\u305d\u308c\u4ee5\u5916\u306f\u771f\u3093\u4e2d\u306b\u3042\u308b\u5834\u5408\ns = input()\nkeyence = \"keyence\"\nfor i in range(len(keyence)):\n    if s[: i + 1] == keyence[: i + 1] and s[-i + 1 :] == keyence[-i + 1]:\n        print(\"YES\")\n        exit()\nprint(\"NO\")\n","S=input()\nk='keyence'\nfor i in range(1,7):\n    if S.find(k[:i]) != -1 and S.rfind(k[i:]) != -1 and S.find(k[:i]) < S.rfind(k[i:]):\n        print('YES')\n        exit()\nprint('NO')\n","stringEnter = input()\ntarget = \"keyence\"\ncounter = 0\ntargetCounter = 0\nwhile(counter < len(stringEnter) and targetCounter < len(target)):\n if(stringEnter[counter] == target[targetCounter]):\n  targetCounter += 1\n counter += 1\nif(targetCounter == len(target)):\n print(\"YES\");\nelse:\n print(\"NO\");\n","s = input()\n\nif s.startswith('k') and s.startswith('eyence'):\n  print('YES')\nelif s.startswith('ke') and s.startswith('yence'):\n  print('YES')\nelif s.startswith('key') and s.startswith('ence'):\n  print('YES')\nelif s.startswith('keye') and s.startswith('nce'):\n  print('YES')\nelif s.startswith('keyen') and s.startswith('ce'):\n  print('YES')\nelif s.startswith('keyenc') and s.startswith('e'):\n  print('YES')\nelse:\n  print('NO')","def is_keyence(s):\n    KEYENCE = \"keyence\"\n    if s[:7] == KEYENCE or s[-7:] == KEYENCE:\n        return True\n    for index, string in enumerate(KEYENCE):\n        if s[:index] == KEYENCE[:index] and s[-index:] == KEYENCE[-index:]:\n            return True\n    return False\n\ninp = input()\nif is_keyence(inp):\n    print(\"YES\")\nelse:\n    print(\"NO\")","moji = input()\nif moji.find('k') >= 0 and moji.find(\"eyence\") >= 0 and moji.find('k')<moji.find(\"eyence\"):\n    print(\"YES\")\nelif moji.find('ke') >= 0 and moji.find(\"yence\") >= 0 and moji.find('ke')<moji.find(\"yence\"):\n    print(\"YES\")\nelif moji.find('key') >= 0 and moji.find(\"ence\") >= 0 and moji.find('key')<moji.find(\"ence\"):\n    print(\"YES\")\nelif moji.find('keye') >= 0 and moji.find(\"nce\") >= 0 and moji.find('keye')<moji.find(\"nce\"):\n    print(\"YES\")\nelif moji.find('keyen') >= 0 and moji.find(\"ce\") >= 0 and moji.find('keyen')<moji.find(\"ce\"):\n    print(\"YES\")\nelif moji.find('keyenc') >= 0 and moji.find(\"e\") >= 0 and moji.find('keyenc')<moji.find(\"e\"):\n    print(\"YES\")\nelif \"keyence\" in moji:\n    print(\"YES\")\nelse:\n    print(\"NO\")","import sys\nfrom sys import exit\nfrom collections import deque\nfrom bisect import bisect_left, bisect_right, insort_left, insort_right #func(\u30ea\u30b9\u30c8,\u5024)\nfrom heapq import heapify, heappop, heappush\nfrom math import *\n\nsys.setrecursionlimit(10**6)\nINF = 10**20\nMOD = 10**9+7\n\ndef mint():\n    return map(int,input().split())\ndef lint():\n    return map(int,input().split())\ndef judge(x, l=['Yes', 'No']):\n    print(l[0] if x else l[1])\ndef lprint(l, sep='\\n'):\n    for x in l:\n        print(x, end=sep)\n\nS = input()\nT = 'keyence'\nN = len(S)\n\ni = 0\nwhile i<7 and S[i]==T[i]:\n    i += 1\nj = 0\nwhile j<7 and S[N-1-j]==T[6-j]:\n    j += 1\njudge(i+j>=7,['YES','NO'])","import sys\n\nsys.setrecursionlimit(10 ** 7)\nf_inf = float('inf')\nmod = 10 ** 9 + 7\n\n\ndef resolve():\n    s = input()\n    n = len(s)\n    key = list(\"keyence\")\n\n    cnt = 0\n    flg = True\n    for i in range(n):\n        if len(key) != 0 and s[i] == key[0]:\n            key.pop(0)\n            flg = True\n        else:\n            if flg:\n                cnt += 1\n                flg = False\n\n    if cnt > 1 or len(key) != 0:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\n\nif __name__ == '__main__':\n    resolve()\n","S=input()\nkey_='keyence'\n\nans='NO'\nfor i in range(len(S)):\n  if S[:i]+S[i+len(S)-7:]==key_:\n    ans='YES'\n    break\n\nprint(ans)","import sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef input(): return sys.stdin.readline().strip()\n\ndef resolve():\n    def main():\n        S=str(input())\n        ls=len(S)\n\n        if S=='keyence':\n            return 'YES'\n        else:\n\n\n\n            for i in range(ls):\n                for j in range(i+1,ls):\n                    if S[:i]+S[j:]=='keyence':\n                        return 'YES'\n            return 'NO'\n    print(main())\n\n\n\nresolve()","s = input()\nfor i in range(8):\n    if s[:i] + s[i - 7:] == \"keyence\":\n        print(\"YES\")\n        exit()\nprint(\"NO\")","S = input()\nN = len(S)\nfor i in range(N + 1):\n    for j in range(N + 1):\n        tmp = S[:i] + S[j:]\n        if tmp == 'keyence':\n            print('YES')\n            exit()\n\nprint('NO')\n","s = list(input())\nk_index = []\nk = list('keyence')\n\nfor i in range(len(s)):\n    if s[i] == k[0]:\n        k_index.append(i)\n\nans = 'NO'\nfor i in k_index:\n    j = 0\n    flag = 0\n    for a in s[i:]:\n        if a == k[j]:\n            j += 1\n            if flag == 0:\n                flag = 1 # reading 1st half\n            elif flag == 2:\n                flag = 3 # reading 2nd half\n            if j == len(k):\n                ans = 'YES'\n        elif flag == 1: # end of 1st half\n            flag = 2 # reading middle\n        elif flag == 3:\n            break\n\nprint(ans)","S = str(input())\n\nif S[:7] == \"keyence\" or S[-7:] == \"keyence\":\n    print(\"YES\")\n    exit()\n\nelif S[:1] + S[-6:] == \"keyence\" or S[:2] + S[-5:] == \"keyence\" or S[:3] + S[-4:] == \"keyence\" or S[:4] + S[-3:] == \"keyence\" or S[:5] + S[-2:] == \"keyence\" or S[:6] + S[-1:] == \"keyence\":\n    print(\"YES\")\n    exit()\n\nelse:\n    print(\"NO\")\n","s = input()\nkey = 'keyence'\nif len(s) < len(key):\n    print(\"NO\")\nelif s[:len(key)] == key:\n    print(\"YES\")\nelif s[-len(key):] == key:\n    print(\"YES\")\nelse:\n    for i in range(1, len(key)):\n        head = s.startswith(key[0:i])\n        hip = s.endswith(key[i:])\n        if head and hip:\n            print(\"YES\")\n            break\n    else:\n        print(\"NO\")\n","s=input()\nkey=\"keyence\"\n\nl=len(s)\n\nfor i in range(l):\n    for j in range(i,l):\n        mo = s[:i] + s[j:]\n        if mo == key:\n            print(\"YES\")\n            exit()\nprint(\"NO\")","# -*- coding: utf-8 -*-\n# B\n# \n# input\ns = input()\n# calc\nif s[0:7] == 'keyence' or s[-7:] == 'keyence':\n  print('YES')\nelif s[0:1]+s[-6:] == 'keyence':\n  print('YES')\nelif s[0:2]+s[-5:] == 'keyence':\n  print('YES')\nelif s[0:3]+s[-4:] == 'keyence':\n  print('YES')  \nelif s[0:4]+s[-3:] == 'keyence':\n  print('YES')\nelif s[0:5]+s[-2:] == 'keyence':\n  print('YES')  \nelif s[0:6]+s[-1:] == 'keyence':\n  print('YES')\nelse:\n  print('NO')","s=input()\nfor i in range(8):\n    if s[:i]+s[-(7-i):]==\"keyence\":\n        print(\"YES\")\n        exit(0)\nprint(\"NO\")","S = input()\n\nKEYENCE = 'keyence'\nAnswer = 'NO'\nif S[0:7] == KEYENCE:\n  Answer = 'YES'\nelif S[0] == 'k':\n  counter = 1\n  for i in range(6):\n    if S[i+1]==KEYENCE[i+1]:\n      counter +=1\n  if S[-(7-counter):] ==KEYENCE[counter:]:\n    Answer = 'YES'\n\nelif S[-7:] == KEYENCE:\n  Answer = 'YES'\n\nprint(Answer)","s=input()\u00df\ns=list(s)\na=list('keyence')\nfor i in range(8):\n    if s[:i]==a[:i] and s[i-7:]==a[i-7:]:\n        print('YES')\n        quit()\nprint('NO')","import re\nS = input()\nflag = False\nres = re.match(r'.*keyence$',S)\nif res :\n  flag = True\nres = re.match(r'^k.*eyence$',S)\nif res :\n  flag = True\nres = re.match(r'^ke.*yence$',S)\nif res :\n  flag = True\nres = re.match(r'^key.*ence$',S)\nif res :\n  flag = True\nres = re.match(r'^keye.*nce$',S)\nif res :\n  flag = True\nres = re.match(r'^keyen.*ce$',S)\nif res :\n  flag = True\nres = re.match(r'^keyenc.*e$',S)\nif res :\n  flag = True\nres = re.match(r'^keyence.*',S)\nif res :\n  flag = True\nif flag :\n  print('YES')\nelse :\n  print('NO')","import copy\nS = list(input())\ndiff = len(S)-len(\"keyence\")\nfor i in range(len(S)-diff):\n    S_tmp = copy.deepcopy(S)\n    #print(i)\n    del S_tmp[i:(i+diff)]\n    #print(str(S_tmp))\n    if \"keyence\" == \"\".join(S_tmp):\n        print(\"YES\")\n        exit(0)\nprint(\"NO\")"],"formatted_programs":["S = input()\nK = 'keyence'\n\nfor i in range(8):\n  #print(S[:i], S[len(S)-7+i:], K[:i], K[i:])\n  if S[:i] == K[:i] and S[len(S)-7+i:] == K[i:]:\n    print('YES')\n    break\n  else:\n    continue\nelse:\n  print('NO')","s = input()\nif len(s) < 7:\n    print(\"NO\")\nif s[0] != \"k\":\n    if s[-7] == \"k\" and s[-6] == \"e\" and s[-5] == \"y\" and s[-4] == \"e\" and s[-3] == \"n\" and s[-2] == \"c\" and s[-1] == \"e\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelif s[1] != \"e\":\n    if s[-6] == \"e\" and s[-5] == \"y\" and s[-4] == \"e\" and s[-3] == \"n\" and s[-2] == \"c\" and s[-1] == \"e\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelif s[2] != \"y\":\n    if s[-5] == \"y\" and s[-4] == \"e\" and s[-3] == \"n\" and s[-2] == \"c\" and s[-1] == \"e\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelif s[3] != \"e\":\n    if s[-4] == \"e\" and s[-3] == \"n\" and s[-2] == \"c\" and s[-1] == \"e\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelif s[4] != \"n\":\n    if s[-3] == \"n\" and s[-2] == \"c\" and s[-1] == \"e\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelif s[5] != \"c\":\n    if s[-2] == \"c\" and s[-1] == \"e\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelif s[6] != \"e\":\n    if s[-1] == \"e\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    print(\"YES\")\n","S=list(input())\nstr1=\"\"\nstr2=\"\"\nflag=0\nfor i in range(7):\n    str1+=S[i]\n    str2+=S[len(S)-7]\n\nif str1==\"keyence\"or str2==\"keyence\":\n    flag=1\ns=\"\"\nt=\"\"\nfor i in range(7):\n    for j in range(i):\n        s+=S[j]\n    for j in range(7-i):\n        t+=S[len(S)-7+i+j]\n    if s+t==\"keyence\":\n        flag=1\n    s=\"\"\n    t=\"\"\nif flag==1:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\n","S = input()\n\np = 0\nkeyence = list(\"keyence\")\n# print(keyence)\nid = []\n\nfor s in S:\n    if p > 6:\n        id.append(p)\n        continue\n    if s != keyence[p]:\n        id.append(p)\n        continue\n    if p <= 6:\n        p += 1\n\n# print(p, id)\nif p == 7 and (len(set(id)) == 1 or len(id) == 0):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\n","S=input()\nlen_S=len(S)\nlen_SS=len_S-7\nans='keyence'\n\nif len_S==7:\n    if S==ans:\n        print('YES')\n        exit()\n    else:\n        print('NO')\n        exit()\n\nS_lst=list(S)\n\nfor i in range(len_S):\n    for j in range(len_SS+1):\n        lst=S_lst[:]\n        del lst[i:i+j]\n        if ''.join(lst)==ans:\n            print('YES')\n            exit()\nprint('NO')","import sys\nstr = list(input())\n\nn = len(str)\n\nfor i in range(8):\n    edit = str[0:i] + str[n - 7 + i:]\n    if edit == ['k', 'e', 'y', 'e', 'n', 'c', 'e']:\n        print('YES')\n        sys.exit()\nprint('NO')\n","s = input()\n\ndef main(string):\n    c = \"keyence\"\n    head = string[:7]\n\n    idx = 0\n    for s in head:\n        if s == c[idx]: idx += 1\n        else: break\n    if idx == 7:\n        print(\"YES\")\n        return\n\n    tail = string[-7+idx:]\n    for s in tail:\n        if s == c[idx]: idx += 1\n        else: break        \n    \n    if idx == 7:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nmain(s)","s = input()\nif s == 'keyence':\n    print('YES')\n    exit()\nfor i in range(len(s)+1):\n    for j in range(i):\n        if s[:j] + s[i:] == 'keyence':\n            print('YES')\n            exit()\nprint('NO')\n","def main():\n    \"\"\"\n    \u554f\u984c\u304c 3\u554f\u51fa\u984c\u3055\u308c\u3001\n    1\u554f\u76ee\u306e\u914d\u70b9\u306f A\u70b9\u4ee5\u4e0b\u3001\n    2\u554f\u76ee\u306e\u914d\u70b9\u306f A+1\u70b9\u4ee5\u4e0a B\u70b9\u4ee5\u4e0b\u3001\n    3\u554f\u76ee\u306e\u914d\u70b9\u306f  B+1\u70b9\u4ee5\u4e0a\u3067\u3042\u308b\u3002\n    \"\"\"\n    S = input()\n    ans = f(S)\n    if ans:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\n\ndef f(S):\n    n = len(S)\n    ok = False\n    target = \"keyence\"\n    for i in range(n):\n        for j in range(i, n):\n            # print(S[:i], S[i:j], S[j:])\n            if S[:i] == target:\n                return True\n            elif S[:i] + S[j:] == target:\n                return True\n            elif S[j:] == target:\n                return True\n\n    return False\n\n\nif __name__ == '__main__':\n    main()\n","S = input()\n\nhead = 0\nback = 0\n\nkey = 'keyence'\n\nfor i in range(len(key)):\n    if S[:i+1] == key[:i+1]:\n        head = i+1\n\nfor i in range(len(key)):\n    if S[len(S)-i-1:] == key[len(key)-i-1:]:\n        back = i+1\n\nif head + back >= len(key):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n","s = input()\nans = 'keyence'\nj = 0\nfor i in range(len(s)):\n    if(ans[j] == s[i]):\n        j += 1\nprint(['NO','YES'][j==7])","S = input()\nans = \"NO\"\nN = len(S)\n\nfor i in range(N):\n    for j in range(i, N + 1):\n        tmp = (S[:i] + S[j:])\n        if tmp == \"keyence\":\n            ans = \"YES\"\n\nprint(ans)\n","import sys\n\ninput = sys.stdin.readline\n\ndef main():\n    ans = 'NO'\n    k = 'keyence'\n    S = input().rstrip('\\n')\n    if S[:7] == k or S[-7:] == k:\n        ans = 'YES'\n    elif S[0] == k[0]:\n        for i in range(1,len(k)):\n            if S[i] != k[i]:\n                if S[-(7-i):] == k[i:]:\n                    ans = 'YES'\n                    break\n                else:\n                  break\n    print(ans)\n\nif __name__ == '__main__':\n    main()","s = input()\nkey = \"keyence\"\nj = 0\nword = key[j]\nfor i in range(len(s)):\n    if s[i] == key[j]:\n        j +=1\n    if j == 7:\n        break\nif j == 7:\n    print(\"YES\")\nelse:\n    print(\"NO\")","S = input()\noriginal_str = \"keyence\"\n\nfor i in range(len(S)):\n  for j in range(i,len(S)):\n    s = \"\".join([S[:i],S[j:]])\n    if s == original_str:\n      print(\"YES\")\n      exit()\n    \nprint(\"NO\")","s=input()\n\nfor i in range(len(s)-6):\n    for j in range(len(s)-i+1):\n        p=s[:j]+s[j+i:]\n        if p==\"keyence\":\n            print(\"YES\")\n            exit()\nprint(\"NO\")","s = input()\nn = len(s)\nk = 'keyence'\na = 0\nb = 6\n\nfor i in range(n):\n    if k[a] == s[i]:\n        a += 1\n    else:\n        break\n    if a == 7:\n        break\n\nfor i in range(n)[::-1]:\n    if k[b] == s[i]:\n        b -= 1\n    else:\n        break\n    if b == -1:\n        break\n\nb = 7 - b + 1\nif a + b >= 7:\n    print('YES')\nelse:\n    print('NO')","S=str(input())\n\nans='keyence'\n\nif S[-7:]=='keyence':\n    print('YES')\n    exit()\n   \nfor i in range(1,7):\n    if S[:i]==ans[:i] and S[-7+i:]==ans[i:]:\n        print('YES')\n        exit()\n\nif S[:8]=='keyence':\n    print('YES')\n    exit()\n\nprint('NO')\n\n\n        \n\n\n\n\n\n","S = input()\n\ntarget = \"keyence\"\nnow = 0\nstart = None\nend = None\nfor i in range(len(S)):\n    if target[now] == S[i]:\n        now += 1\n        if start is not None and end is None:\n            end = i\n    elif start is not None:\n        continue\n    else:\n        start = i\n\nif start is None:\n    pred = S\nelif end is None:\n    pred = S[:start]\nelse:\n    pred = S[:start] + S[end:]\n\nif pred == target:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n","s = input()\nl = []\ni = 0\n\nfor w in 'keyence':\n    if w in s:\n        i += s[i:].find(w)\n        l.append(i)\n        i += 1\n\nif len(l) == len('keyence') and l== sorted(l):\n    cnt = 0\n    for i in range(len(l)-1):\n        if l[i+1] - l[i] > 1:\n            cnt += 1\n    if cnt < 2:\n        print('YES')\n        exit()\n\nprint('NO')","def main():\n  s = str(input())\n  keyence = 'keyence'\n  for i in range(len(keyence)+1):\n    prefix = keyence[:i]\n    postfix = keyence[i:]\n    if s.startswith(prefix) and s.endswith(postfix):\n      print('YES')\n      return\n  print('NO')\n\n\nif __name__ == '__main__':\n  main()\n","S=input()\nflag=0\nfor i in range(len(S)):\n    for j in range(i+1,len(S)):\n        if S[0:i]+S[j:] == 'keyence':\n            flag=1\nif flag==1:\n    print(\"YES\")\nelse:\n    print(\"NO\")","S=input()\ncount= 0\nfor i in range(len(S)):\n    for j in range(len(S)):\n        if S[:i]+S[j:]==\"keyence\":\n            count += 1\nif count == 0:\n    print(\"NO\")\nelse:\n    print(\"YES\")","import itertools\n\nS = input()\nif S == 'keyence':\n    print(\"YES\")\nelse:\n    cands = [S[:i]+S[j:] for i, j in itertools.combinations(range(len(S)), 2)]\n    if 'keyence' in cands:\n        print(\"YES\")\n    else:\n        print(\"NO\")","def solve():\n    S = input()\n    N = len(S)\n    for i in range(N-(N-8)):\n        if S[:i] + S[i+(N-7):] == 'keyence':\n            print('YES')\n            exit()\n    print('NO')\n\n\nif __name__ == '__main__':\n    solve()\n","S = input()\nans = False\nif(S.find(\"keyence\") == 0 or S.find(\"keyence\") == len(S) - 7):\n  ans = True\nelse:\n  for i in range(7):\n    if(S[0: i + 1] + S[len(S) - 6  +i : len(S)]  == \"keyence\"):\n      ans = True\n      break\nif ans:\n  print(\"YES\")\nelse:\n  print(\"NO\")","S = input()\nK = 'keyence'\n\nkn = 0\nbf = False\nlas = False\n\ntmp = \"\"\nfor i in range(len(S)):\n    # \u3082\u3057K\u306eindex\u304c6\u3092\u8d85\u3048\u308b\uff08\u5168\u3066OK\uff09\u306e\u5834\u5408\u629c\u3051\u308b\n    if kn == 7:\n        break\n\n    # \u3082\u3057\u4eca\u898b\u3066\u308bS\u3068K\u304c\u540c\u3058\u3060\u3063\u305f\u3089K\u306eindex\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\n    # \u3082\u3057\u90e8\u5206\u6587\u5b57\u5217\u3092\u524a\u9664\u6e08\u307f\u306a\u3089\u3082\u3046\u524a\u9664\u3059\u308b\u90e8\u5206\u6587\u5b57\u5217\u306f\u7121\u3044    \n    if S[i] == K[kn]:\n        kn += 1\n        if bf == True:\n            bf = False\n            las = True\n    else:\n        if bf == False:\n            tmp += S[i]\n            bf = True\n            continue\n        elif bf == True and las == False:\n            tmp += S[i]\n            continue\n        elif bf == True and las == True:\n            break\n\nif kn == 7 or S.replace(tmp, ''):\n    print('YES')\nelse:\n    a = 0\n    b = 6\n    St = 0\n    La = len(S)\n    for i in range(St, len(S)):\n        if a >= b:\n            break\n        if S[i] == K[a]:\n            a += 1\n            for j in range(La-1, 0, -1):\n                if S[j] == K[b]:\n                    b -= 1\n                    if a == b:\n                        print(\"YES\")\n                        exit()\n    print(\"NO\")\n    exit()","S = input()\nst = 'keyence'\nans = 'NO'\nfor i in range(len(st)):\n  if st[:i]==S[:i] and st[i:]==S[-(7-i):]:\n    ans='YES'\n    break\nprint(ans)","import sys\nS = input()\nfor i in range(len(S)):\n    for j in range(i, len(S)):\n        if \"keyence\" == S[:i] + S[j:]:\n            print('YES')\n            sys.exit()\nprint('NO')","S=input()\nN=len(S)\n\nK='keyence'\n\nfor n in range(7):\n    if S[n]!=K[n]:\n        if S[N-7+n:N]==K[n:7]:\n            print('YES')\n            break\n        else:\n            print('NO')\n            break\n\n    if n==6:\n        print('YES')  ","S = input()\nremove_num = len(S) - 7\nyes = False\nfor i in range(len(S) - remove_num):\n    tmp = S[:i] + S[i + remove_num:]\n    if tmp == \"keyence\":\n        yes = True\n        break\n\nif yes:\n    print(\"YES\")\nelse:\n    print(\"NO\")","S = input()\n\nkey = list(\"keyence\")\n\nflg = False\nfor i in range(len(S)):\n    for j in range(len(S)):\n        tmp = S[0:i]+S[j:]\n\n        if tmp == key and not flg:\n            print(\"YES\")\n            flg = True\n            break\n\nif not flg:\n    print(\"NO\")\n","need = \"keyence\"\ns = input()\nn = len(s)\nm = len(need)\nir = set()\nir.add(s)\nfor i in range(1, m+1):\n    if n >= i and n - m + i + 1 >= i:\n        ir.add(s[0:i] + s[n - m + i:])\n#for i in ir:\n    #print(i)\nif need in ir:\n    print(\"YES\")\nelse:\n    print(\"NO\")","S = input()\n\nP = \"keyence\"\na = 0\nc = 0\n\ni = 0\nj = 0\n\nwhile i < 7 and j < len(S):\n  if S[j] == P[i]:\n    i += 1\n    a = 0\n  elif a == 0:\n    a = 1\n    c += 1\n  j += 1\n\nif c == 0 and i == 7:\n  print(\"YES\")\nelif c == 1 and j == len(S) and i == 7:\n  print(\"YES\")\nelse:\n  print(\"NO\")\n","s = input()\nlen_s = len(s)\nw = list(\"keyence\")\n\nans = \"NO\"\nif s[0:7] == \"keyence\":\n    ans = \"YES\"\nelif s[0] == \"k\" and s[len_s-6:] == \"eyence\":\n    ans = \"YES\"\nelif s[0:2] == \"ke\" and s[len_s-5:] == \"yence\":\n    ans = \"YES\"\nelif s[0:3] == \"key\" and s[len_s-4:] == \"ence\":\n    ans = \"YES\"\nelif s[0:4] == \"keye\" and s[len_s-3:] == \"nce\":\n    ans = \"YES\"\nelif s[0:5] == \"keyen\" and s[len_s-2:] == \"ce\":\n    ans = \"YES\"\nelif s[0:6] == \"keyenc\" and s[len_s-1:] == \"e\":\n    ans = \"YES\"\nelif s[len_s-7:] == \"keyence\":\n    ans = \"YES\"\n\nprint(ans)","S = input()\n\nkeyence = 'keyence'\n\nif keyence in S:\n    print('YES')\nelse:\n    result = 'NO'\n    for i in range(1, len(keyence)):\n        delimiters = keyence[:i], keyence[i:]\n        if S.startswith(delimiters[0]) and S.endswith(delimiters[1]):\n            result = 'YES'\n            break\n    print(result)","S=input()\n\nif S.startswith(\"keyence\") or S.endswith(\"Keyence\"):\n  print(\"YES\")\nelif S.startswith(\"k\") and S.endswith(\"eyence\"):\n  print(\"YES\")\nelif S.startswith(\"ke\") and S.endswith(\"yence\"):\n  print(\"YES\")\nelif S.startswith(\"key\") and S.endswith(\"ence\"):\n  print(\"YES\")\nelif S.startswith(\"keye\") and S.endswith(\"nce\"):\n  print(\"YES\")\nelif S.startswith(\"keyen\") and S.endswith(\"ce\"):\n  print(\"YES\")\nelif S.startswith(\"keyenc\") and S.endswith(\"e\"):\n  print(\"YES\")\nelse:\n  print(\"NO\")\n  ","S = list(input())\nn = len(S)\n\nfor i in range(n):\n    for j in range(i, n):\n        if S[:i] + S[j:] == list('keyence'):\n            print('YES')\n            exit()\nprint('NO')\n","s = input()\nkey = \"\"\n\nfor i in range(8):\n  if i == 0:\n    key = s[len(s)-7:]\n    if key == \"keyence\":\n      break\n  if 0 < i < 7:\n    key = s[:i] + s[len(s) - 7 + i:]\n    if key == \"keyence\":\n      break\n  if i == 7:\n    key = s[:7]\n    if key == \"keyence\":\n      break\n\nif key == \"keyence\":\n  print(\"YES\")\nelse:\n  print(\"NO\")\n    ","S = input()\ntarget = \"keyence\"\nlength = len(target)+1\n\nfor i in range(length):\n  first = target[:i]\n  second = target[i:]\n  if first in S and second in S and S.find(first) <= S.find(second):\n    print(\"YES\")\n    exit()\nprint(\"NO\")","S = input()\n\nbl = False\nfor L in range(8):\n  T = S[:L] + S[len(S)-(7-L):]\n  if T == 'keyence':\n    bl = True\n    break\n\nanswer = 'YES' if bl else 'NO'\nprint(answer)","# coding: utf-8\n# Your code here!\n\n#a = [int(i) for i  in input().split()]\n\ns = input()\na = len(s)\nok=0\nfor i in range(a):\n    for j in range(i,a):\n        c = s[:i]+s[j:]\n#        print(c)\n        if c == 'keyence':\n            ok = 1\n        \nif ok:\n    print('YES')\nelse:\n    print('NO')\n","s = input()\nfor i in range(len(s)):\n    for j in range(i, len(s)):\n        a = s[:i] + s[j:]\n        if a == \"keyence\":\n            print(\"YES\")\n            exit()\nprint(\"NO\")","S=input()\nS=S.replace(\"keyence\",\"A\")\nif S==\"A\":\n    print(\"YES\")\nelif S[0]==\"A\" and S[len(S)-1]!=\"A\":\n    print(\"YES\")\nelif S[len(S)-1]!=\"A\":\n    print(\"YES\")\n    \nS1=S.replace(\"K\",\"A\")\nS1=S1.replace(\"eyence\",\"B\")\nif S1[0]==\"A\" and S1[len(S1)-1]==\"B\":\n    print(\"YES\")\nS2=S.replace(\"Ke\",\"A\")\nS2=S2.replace(\"yence\",\"B\")\nif S2[0]==\"A\" and S2[len(S2)-1]==\"B\":\n    print(\"YES\")\nS3=S.replace(\"Key\",\"A\")\nS3=S3.replace(\"ence\",\"B\")\nif S3[0]==\"A\" and S3[len(S3)-1]==\"B\":\n    print(\"YES\")\nS4=S.replace(\"Keye\",\"A\")\nS4=S4.replace(\"nce\",\"B\")\nif S4[0]==\"A\" and S4[len(S4)-1]==\"B\":\n    print(\"YES\")\nS5=S.replace(\"Keyen\",\"A\")\nS5=S5.replace(\"ce\",\"B\")\nif S5[0]==\"A\" and S5[len(S5)-1]==\"B\":\n    print(\"YES\")\nS6=S.replace(\"Keyenc\",\"A\")\nS6=S6.replace(\"e\",\"B\")\nif S6[0]==\"A\" and S6[len(S6)-1]==\"B\":\n    print(\"YES\")\n","import sys\nS = list(input())\nAns_list=['k','e','y','e','n','c','e']\nAns = 'NO'\nfor i in range(len(S)):\n    for j in range(i,len(S),+1):\n        \n        if (S[:i:]+S[j::]) == Ans_list:\n           Ans = 'YES'\n           print(Ans)\n           sys.exit()\nprint(Ans)\n","import re\nstr = input()\nk1 = re.compile(\".*keyence$\")\nk2 = re.compile(\"^k.*eyence$\")\nk3 = re.compile(\"^ke.*yence$\")\nk4 = re.compile(\"^key.*ence$\")\nk5 = re.compile(\"^keye.*nce$\")\nk6 = re.compile(\"^keyen.*ce$\")\nk7 = re.compile(\"^keyenc.*e$\")\nk8 = re.compile(\"^keyence.*\")\n\nif (re.match(k1, str) is not None) or (re.match(k2, str) is not None) or (re.match(k3, str) is not None) or (re.match(k4, str) is not None) or (re.match(k5, str) is not None) or (re.match(k6, str) is not None) or (re.match(k7, str) is not None) or (re.match(k8, str) is not None):\n  print(\"YES\")\nelse:\n  print(\"NO\")","import sys\n\ns = input()\ntmp = len(s) - 7\nif s == \"keyence\":\n    print(\"YES\")\n    sys.exit()\nif s.count(\"k\") >= 1 and s.count(\"e\") >= 3 and s.count(\"y\") >= 1 and s.count(\"n\") >= 1 and s.count(\"c\") >= 1:\n    for i in range(len(s)):\n        if s[i] == 'k':\n            for j in range(i, len(s)):\n                if s[j] == 'e':\n                    for k in range(j, len(s)):\n                        if s[k] == 'y':\n                            for x in range(k, len(s)):\n                                if s[x] == 'e':\n                                    for y in range(x, len(s)):\n                                        if s[y] == 'n':\n                                            for z in range(y, len(s)):\n                                                if s[z] == 'c':\n                                                    for b in range(z, len(s)):\n                                                        if s[b] == 'e':\n                                                            print(\"YES\")\n                                                            sys.exit()\n\n\nprint(\"NO\")\n","# https:\/\/atcoder.jp\/contests\/keyence2019\/tasks\/keyence2019_b\n\nimport re\n\n\nS = input()\n\nif \"keyence\" in S:\n    print(\"YES\")\nelse:\n    patterns = [\"k*eyence\", \"ke*yence\", \"key*ence\", \"keye*nce\", \"keyen*ce\", \"keyenc*e\"]\n\n    matched = False\n    for pattern in patterns:\n        matchOB = re.search(pattern, S)\n        if matchOB:\n            matched = True\n            break\n    if matched:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n        \n\n","s=input()\nans=False\nfor x in range(len(s)):\n    for y in range(x,len(s)):\n        if (s[:x]+s[y:])=='keyence':\n            ans=True\nif ans:\n    print('YES')\nelse:\n    print('NO')","s=str(input())\nst=list(s)\nl=len(st)\nif st[0]==\"k\" and st[1]==\"e\" and st[2]==\"y\" and st[3]==\"e\" and st[4]==\"n\" and st[5]==\"c\" and st[6]==\"e\":\n  print(\"YES\")\nelif st[l-7]==\"k\" and st[l-6]==\"e\" and st[l-5]==\"y\" and st[l-4]==\"e\" and st[l-3]==\"n\" and st[l-2]==\"c\" and st[l-1]==\"e\":\n  print(\"YES\")\nelif st[0]==\"k\" and st[l-6]==\"e\" and st[l-5]==\"y\" and st[l-4]==\"e\" and st[l-3]==\"n\" and st[l-2]==\"c\" and st[l-1]==\"e\":\n  print(\"YES\")\nelif st[0]==\"k\" and st[1]==\"e\" and st[l-5]==\"y\" and st[l-4]==\"e\" and st[l-3]==\"n\" and st[l-2]==\"c\" and st[l-1]==\"e\":\n  print(\"YES\")\nelif st[0]==\"k\" and st[1]==\"e\" and st[2]==\"y\" and st[l-4]==\"e\" and st[l-3]==\"n\" and st[l-2]==\"c\" and st[l-1]==\"e\":\n  print(\"YES\")\nelif st[0]==\"k\" and st[1]==\"e\" and st[2]==\"y\" and st[3]==\"e\" and st[l-3]==\"n\" and st[l-2]==\"c\" and st[l-1]==\"e\":\n  print(\"YES\")\nelif st[0]==\"k\" and st[1]==\"e\" and st[2]==\"y\" and st[3]==\"e\" and st[4]==\"n\" and st[l-2]==\"c\" and st[l-1]==\"e\":\n  print(\"YES\")\nelif st[0]==\"k\" and st[1]==\"e\" and st[2]==\"y\" and st[3]==\"e\" and st[4]==\"n\" and st[5]==\"c\" and st[l-1]==\"e\":\n  print(\"YES\")\nelse:\n  ptint(\"NO\")","str = input()\nn = len(str)\nflag = \"NO\"\nfor i in range(8):\n\tbuf = str[:i]+str[n-7+i:]\n\tif(buf == \"keyence\"):\n\t\tflag = \"YES\"\n\t#print(str[n-i-7:])\nprint(flag)","# coding: utf-8\n# Your code here!\n\ns = input()\na = [\"k\", \"ke\", \"key\", \"keye\", \"keyen\", \"keyenc\"]\nb = [\"eyence\", \"yence\", \"ence\", \"nce\", \"ce\", \"e\"]\nif s == \"keyence\":\n    print(\"YES\")\n    exit(0)\nif len(s) > 7:\n    if s[7:] == \"keyence\":\n        print(\"YES\")\n        exit(0)\n    if s[:7] == \"keyence\":\n        print(\"YES\")\n        exit(0)\n    else:\n        for i in range(6):\n            if a[i] in s and b[i] in s:\n                if s.find(a[i])==0 and s.rfind(b[i])+len(b[i])==len(s):\n                    print(\"YES\")\n                    exit(0)\n                else:\n                    print(\"NO\")\n                    exit(0)\n            else:\n                print(\"NO\")\n                exit(0)","var =input()\nb =\"\"\nflg = False\nfor a in var:\n \n    if \"k\" in var:\n        b= var.find(\"k\")+1\n        if \"e\" in var and var.find(\"e\",b,len(var))+1 > b:\n            b= var.find(\"e\",b,len(var))+1\n            if \"y\" in var and var.find(\"y\",b,len(var))+1 > b:\n                b= var.find(\"y\",b,len(var))+1\n                if \"e\" in var and var.find(\"e\",b,len(var))+1 > b:\n                     b= var.find(\"e\",b,len(var))+1\n                     if \"n\" in var and var.find(\"n\",b,len(var))+1 > b:\n                         b= var.find(\"n\",b,len(var))+1\n                         if \"c\" in var and var.find(\"c\",b,len(var))+1 > b:\n                             b= var.find(\"c\",b,len(var))+1\n                             if \"e\" in var and var.find(\"e\",b,len(var))+1 > b:\n                                 flg = True\nif flg:\n    print(\"YES\")\nelse:\n    print(\"NO\")","s = input()\n\nif s == 'keyence':\n    print('YES')\n    exit()\n\nfor i in range(0,len(s)-1):\n    for j in range(i+1,len(s)):\n        if s[:i]+s[j:] == 'keyence':\n            print('YES')\n            exit()\nprint('NO')","import sys\n\nsys.setrecursionlimit(10 ** 8)\nini = lambda: int(sys.stdin.readline())\ninm = lambda: map(int, sys.stdin.readline().split())\ninl = lambda: list(inm())\nins = lambda: sys.stdin.readline().rstrip()\ndebug = lambda *a, **kw: print(\"\\033[33m\", *a, \"\\033[0m\", **dict(file=sys.stderr, **kw))\n\nS = ins()\nK = \"keyence\"\n\n\ndef solve():\n    if len(S) < len(K):\n        return False\n    f = b = True\n    x = y = 0\n    ns = len(S)\n    nk = len(K)\n    for i in range(len(S)):\n        if i < nk and S[i] == K[i]:\n            if f:\n                x += 1\n        else:\n            f = False\n        if nk - 1 - i >= 0 and S[ns - 1 - i] == K[nk - 1 - i]:\n            if b:\n                y += 1\n        else:\n            b = False\n    # debug(f\"{x=} {y=}\")\n    return x + y >= nk\n\n\nprint(\"YES\" if solve() else \"NO\")\n","\ndef solve(s):\n  t = 'keyence'\n  if t in s[0:7] or t in s[-7:]:\n    return 'YES'\n\n  p = 0\n  for i in range(len(s)):\n    if t[p] == s[i]:\n      p = p + 1\n    else:\n      if t[p:] in s[-7+p:]:\n        return 'YES'\n      else:\n        return 'NO'\n  return 'NO'\n\nprint(solve(input()))","S = input()\n\nif S[0] != \"k\":\n    if S[-7:] == \"keyence\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nelif S[-1] != \"e\":\n    if S[:7] == \"keyence\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nelse:\n    if S[:1] == \"k\" and S[-6:] == \"eyence\":\n        print(\"YES\")\n    elif S[:2] == \"ke\" and S[-5:] == \"yence\":\n        print(\"YES\")\n    elif S[:3] == \"key\" and S[-4:] == \"ence\":\n        print(\"YES\")\n    elif S[:4] == \"keye\" and S[-3:] == \"nce\":\n        print(\"YES\")\n    elif S[:5] == \"keyen\" and S[-2:] == \"ce\":\n        print(\"YES\")\n    elif S[:6] == \"keyenc\" and S[-1:] == \"e\":\n        print(\"YES\")\n    else:\n        print(\"NO\")\n","s=input()\n\nkey1=s.find('k')\nflag=0\nif key1==-1:\n    flag=1\nelse:\n    s=s[key1+1:]\n\nkey1=s.find('e')\nif key1==-1:\n    flag=1\nelse:\n    s=s[key1+1:]\n\nkey1=s.find('y')\nif key1==-1:\n    flag=1\nelse:\n    s=s[key1+1:]\n\nkey1=s.find('e')\nif key1==-1:\n    flag=1\nelse:\n    s=s[key1+1:]\n\nkey1=s.find('n')\nif key1==-1:\n    flag=1\nelse:\n    s=s[key1+1:]\n    \nkey1=s.find('c')\nif key1==-1:\n    flag=1\nelse:\n    s=s[key1+1:]\n\nkey2=s.count('e')\nif key2==-1:\n    flag=1\n    \nif flag==1:\n  print('NO')\nelse:\n  print('YES')\n    ","def main():\n    s = input()\n\n    good = 'keyence'\n\n    for start in range(len(s)):\n        for end in range(len(s)):\n            if s.replace(s[start:end],'') == good:\n                print('YES')\n                exit()\n\n    print('NO')\n\nif __name__ == '__main__':\n    main()\n","s = input()\n\nfor i in range(len(s)):\n    if s[:i] + s[i+len(s)-7:] == 'keyence':\n        print('YES')\n        break\nelse:\n    print('NO')","S = list(input())\nkeyword = list('keyence')\n\ncur = 0\nans = \"NO\"\nwhile cur < len(S):\n    target = keyword[0]\n    if S[cur] == target:\n        keyword.pop(0)\n    if len(keyword) == 0:\n        ans = \"YES\"\n        break\n    cur += 1\n    \nprint(ans)","S = input()\nN = len(S)\nok = 0\nfor i in range(N):\n    for j in range(i, N+1):\n        if S[:i] + S[j:] == 'keyence':\n            ok = 1\nprint(\"YES\" if ok else \"NO\")","string = input()\nN = len(string)\nN0 = 7\njudge = 0\n\nif string == \"keyence\":\n\tjudge = 1\n\nfor i in range(0,N0):\n\tstringnew = string[0:i]+string[i+N-N0:N]\n\tif stringnew == \"keyence\":\n\t\tjudge = 1\n\nif judge == 1:\n\tprint(\"YES\")\nelse:\n\tprint(\"NO\")\n","import sys, re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, tan, asin, acos, atan, radians, degrees#, log2\nfrom itertools import accumulate, permutations, combinations, combinations_with_replacement, product, groupby\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left, insort, insort_left\nfrom fractions import gcd\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\ndef ZIP(n): return zip(*(MAP() for _ in range(n)))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10**9 + 7\n#from decimal import *\n\nS = input()\nN = len(S)\n\nfor l in range(N):\n\tfor r in range(l, N):\n\t\tif S[:l] + S[r:] == \"keyence\":\n\t\t\tprint(\"YES\")\n\t\t\tbreak\nelse:\n\tprint(\"NO\")\n","S = input()\nk = \"keyence\"\nn = 0\nans = False\nfor i in range(8):\n    if i==0:\n        if S[-7:] == k:\n            ans = True\n    elif i==7:\n        if S[:7]==k:\n            ans = True\n    else:\n        if S[:i]==k[:i] and S[-(7-i):]==k[-(7-i):]:\n            ans = True\nif ans:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n","import sys\nsys.setrecursionlimit(10**6)\ninput=sys.stdin.readline\n\ns=input().rstrip()\nt=\"keyence\"\ni,j=0,0\nwhile len(s)>i:\n    if j>=7:break\n    if s[i]==t[j]:\n        j+=1\n    i+=1\nprint(\"YES\"if j==7 else \"NO\")","S=input()\ns=\"keyence\"\nl=len(S)\nfor i in range(l):\n    for j in range(i,l+1):\n        if s==S[:i]+S[j:]:\n            print(\"YES\")\n            break\n    else:\n        continue\n    break\nelse:\n    print(\"NO\")","#!\/usr\/bin\/env python\n# coding: utf-8\n\n# In[22]:\n\n\nS = input()\n\n\n# In[24]:\n\n\nkeyence = \"keyence\"\nlength = len(keyence)\nflag = True\nfor i in range(len(keyence)):\n#     print(S[:i+1], keyence[:i+1], S[-length+i+1:], keyence[-length+i+1:])\n    if S[:i+1] == keyence[:i+1]:\n        if S[-length+i+1:] == keyence[-length+i+1:]:\n            print(\"YES\")\n            flag = False\n            break\nif flag:\n    print(\"NO\")\n\n\n# In[ ]:\n\n\n\n\n","s = input()\nn = len(s)\nfor i in range(n):\n\tfor j in range(i, n):\n\t\tif s[:i] + s[j:] == \"keyence\":\n\t\t\tprint(\"YES\")\n\t\t\texit()\nprint(\"NO\")","S = input()\nfor i in range(8):\n    if S[:i]+S[-7:][i:] == \"keyence\":\n        print(\"YES\")\n        break\nelse:\n    print(\"NO\")\n","S = list(input())\n\nS_rev = S[::-1]\n\nkey_front = [False] * 7\n\nkey_back = [False] * 7\n\ns_key = [\"k\", \"e\", \"y\", \"e\", \"n\", \"c\", \"e\"]\ns_key_rev = s_key[::-1]\n\ni = 0\nwhile S[i] == s_key[i] and i < 6:\n    key_front[i] = True\n    i += 1\n\ni = 0\nwhile S_rev[i] == s_key_rev[i] and i < 6:\n    key_back[i] = True\n    i += 1\nans = 0\nfor b in key_front:\n    if b:\n        ans += 1\nfor b in key_back:\n    if b:\n        ans += 1\n\nif ans >= 7:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n","#!\/usr\/bin\/env python\n# -*- coding: utf-8 -*-\n\ndef solve():\n    s = input()\n    k = 'keyence'\n    if s.startswith(k) or s.endswith(k):\n        print(\"YES\")\n        return\n\n    for i in range(len(k)):\n        start = k[:i]\n        end = k[i:]\n        if s.startswith(start) and s.endswith(end):\n            print(\"YES\")\n            return\n    print(\"NO\")\n\nif __name__==\"__main__\":\n    solve()\n","s=input()\nans=0\nt=\"keyence\"\nif s[:7]==t or s[-7:]==t:\n    ans=1\nfor i in range(1,7):\n    if s[:i]==t[:i] and s[-7+i:]==t[-7+i:]:\n        ans=1\nprint([\"NO\",\"YES\"][ans])","s = input()\nif 'keyence' in s:\n    print(\"YES\")\nelif 'keyenc' in s:\n    index = s.find('keyenc')\n    index2 = s.find('e',index+4)\n    if index2 != -1:\n        print(\"YES\")\nelif 'keyen' in s:\n    index = s.find('keyen')\n    index2 = s.find('ce',index+3)\n    if index2 != -1:\n        print(\"YES\")\nelif 'keye' in s:\n    index = s.find('keye')\n    index2 = s.find('nce',index+2)\n    if index2 != -1:\n        print(\"YES\")\nelif 'key' in s:\n    index = s.find('key')\n    index2 = s.find('ence',index+1)\n    if index2 != -1:\n        print(\"YES\")\nelif 'ke' in s:\n    index = s.find('ke')\n    index2 = s.find('yence',index)\n    if index2 != -1:\n        print(\"YES\")\nelif 'k' in s:\n    index = s.find('k')\n    index2 = s.find('eyence',index)\n    if index2 != -1:\n        print(\"YES\")\nelse:\n    print(\"NO\")\n","s = input()\nkey = \"keyence\"\nfor i in range(len(key)):\n    if key[: i] in s and key[i:] in s:\n        print(\"Yes\")\n        exit()\n\nprint(\"No\")","S = input()\n\nN = len(S)\nstr = \"keyence\"\nans = False\n\nif S[-1]+S[N-7:] == str:\n    ans = True\nfor i in range(8):\n    if S[:i]+S[N-7+i:] == str:\n        ans = True\n\nprint(\"YES\") if ans else print(\"NO\")","s = input()\nb = s[:7]\ne = s[-7:]\nflg = 0\nfor i in range(7):\n  if b[:i] + e[i:] == \"keyence\":\n    flg = 1\nif flg:\n  print(\"YES\")\nelse:\n  print(\"NO\")","def main():\n  s=input()\n  k=\"keyence\"\n  if len(s)<7:\n    print(\"NO\")\n    return\n  if s[:7]==k or s[-7:]==k:\n    print(\"YES\")\n    return\n  for i in range(1,7):\n    if s[:i]==k[:i] and s[i-7:]==k[i-7:]:\n      print(\"YES\")\n      return\n  print(\"NO\")\nmain()","# keyence\u304c\u5148\u982d\u306b\u3042\u308b\u5834\u5408\u3068\u6700\u5f8c\u306b\u3042\u308b\u5834\u5408\u3001\u305d\u308c\u4ee5\u5916\u306f\u771f\u3093\u4e2d\u306b\u3042\u308b\u5834\u5408\ns = input()\nkeyence = \"keyence\"\nfor i in range(len(keyence)):\n    if s[: i + 1] == keyence[: i + 1] and s[-i + 1 :] == keyence[-i + 1]:\n        print(\"YES\")\n        exit()\nprint(\"NO\")\n","S=input()\nk='keyence'\nfor i in range(1,7):\n    if S.find(k[:i]) != -1 and S.rfind(k[i:]) != -1 and S.find(k[:i]) < S.rfind(k[i:]):\n        print('YES')\n        exit()\nprint('NO')\n","stringEnter = input()\ntarget = \"keyence\"\ncounter = 0\ntargetCounter = 0\nwhile(counter < len(stringEnter) and targetCounter < len(target)):\n if(stringEnter[counter] == target[targetCounter]):\n  targetCounter += 1\n counter += 1\nif(targetCounter == len(target)):\n print(\"YES\");\nelse:\n print(\"NO\");\n","s = input()\n\nif s.startswith('k') and s.startswith('eyence'):\n  print('YES')\nelif s.startswith('ke') and s.startswith('yence'):\n  print('YES')\nelif s.startswith('key') and s.startswith('ence'):\n  print('YES')\nelif s.startswith('keye') and s.startswith('nce'):\n  print('YES')\nelif s.startswith('keyen') and s.startswith('ce'):\n  print('YES')\nelif s.startswith('keyenc') and s.startswith('e'):\n  print('YES')\nelse:\n  print('NO')","def is_keyence(s):\n    KEYENCE = \"keyence\"\n    if s[:7] == KEYENCE or s[-7:] == KEYENCE:\n        return True\n    for index, string in enumerate(KEYENCE):\n        if s[:index] == KEYENCE[:index] and s[-index:] == KEYENCE[-index:]:\n            return True\n    return False\n\ninp = input()\nif is_keyence(inp):\n    print(\"YES\")\nelse:\n    print(\"NO\")","moji = input()\nif moji.find('k') >= 0 and moji.find(\"eyence\") >= 0 and moji.find('k')<moji.find(\"eyence\"):\n    print(\"YES\")\nelif moji.find('ke') >= 0 and moji.find(\"yence\") >= 0 and moji.find('ke')<moji.find(\"yence\"):\n    print(\"YES\")\nelif moji.find('key') >= 0 and moji.find(\"ence\") >= 0 and moji.find('key')<moji.find(\"ence\"):\n    print(\"YES\")\nelif moji.find('keye') >= 0 and moji.find(\"nce\") >= 0 and moji.find('keye')<moji.find(\"nce\"):\n    print(\"YES\")\nelif moji.find('keyen') >= 0 and moji.find(\"ce\") >= 0 and moji.find('keyen')<moji.find(\"ce\"):\n    print(\"YES\")\nelif moji.find('keyenc') >= 0 and moji.find(\"e\") >= 0 and moji.find('keyenc')<moji.find(\"e\"):\n    print(\"YES\")\nelif \"keyence\" in moji:\n    print(\"YES\")\nelse:\n    print(\"NO\")","import sys\nfrom sys import exit\nfrom collections import deque\nfrom bisect import bisect_left, bisect_right, insort_left, insort_right #func(\u30ea\u30b9\u30c8,\u5024)\nfrom heapq import heapify, heappop, heappush\nfrom math import *\n\nsys.setrecursionlimit(10**6)\nINF = 10**20\nMOD = 10**9+7\n\ndef mint():\n    return map(int,input().split())\ndef lint():\n    return map(int,input().split())\ndef judge(x, l=['Yes', 'No']):\n    print(l[0] if x else l[1])\ndef lprint(l, sep='\\n'):\n    for x in l:\n        print(x, end=sep)\n\nS = input()\nT = 'keyence'\nN = len(S)\n\ni = 0\nwhile i<7 and S[i]==T[i]:\n    i += 1\nj = 0\nwhile j<7 and S[N-1-j]==T[6-j]:\n    j += 1\njudge(i+j>=7,['YES','NO'])","import sys\n\nsys.setrecursionlimit(10 ** 7)\nf_inf = float('inf')\nmod = 10 ** 9 + 7\n\n\ndef resolve():\n    s = input()\n    n = len(s)\n    key = list(\"keyence\")\n\n    cnt = 0\n    flg = True\n    for i in range(n):\n        if len(key) != 0 and s[i] == key[0]:\n            key.pop(0)\n            flg = True\n        else:\n            if flg:\n                cnt += 1\n                flg = False\n\n    if cnt > 1 or len(key) != 0:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n\n\nif __name__ == '__main__':\n    resolve()\n","S=input()\nkey_='keyence'\n\nans='NO'\nfor i in range(len(S)):\n  if S[:i]+S[i+len(S)-7:]==key_:\n    ans='YES'\n    break\n\nprint(ans)","import sys\nsys.setrecursionlimit(10 ** 5 + 10)\ndef input(): return sys.stdin.readline().strip()\n\ndef resolve():\n    def main():\n        S=str(input())\n        ls=len(S)\n\n        if S=='keyence':\n            return 'YES'\n        else:\n\n\n\n            for i in range(ls):\n                for j in range(i+1,ls):\n                    if S[:i]+S[j:]=='keyence':\n                        return 'YES'\n            return 'NO'\n    print(main())\n\n\n\nresolve()","s = input()\nfor i in range(8):\n    if s[:i] + s[i - 7:] == \"keyence\":\n        print(\"YES\")\n        exit()\nprint(\"NO\")","S = input()\nN = len(S)\nfor i in range(N + 1):\n    for j in range(N + 1):\n        tmp = S[:i] + S[j:]\n        if tmp == 'keyence':\n            print('YES')\n            exit()\n\nprint('NO')\n","s = list(input())\nk_index = []\nk = list('keyence')\n\nfor i in range(len(s)):\n    if s[i] == k[0]:\n        k_index.append(i)\n\nans = 'NO'\nfor i in k_index:\n    j = 0\n    flag = 0\n    for a in s[i:]:\n        if a == k[j]:\n            j += 1\n            if flag == 0:\n                flag = 1 # reading 1st half\n            elif flag == 2:\n                flag = 3 # reading 2nd half\n            if j == len(k):\n                ans = 'YES'\n        elif flag == 1: # end of 1st half\n            flag = 2 # reading middle\n        elif flag == 3:\n            break\n\nprint(ans)","S = str(input())\n\nif S[:7] == \"keyence\" or S[-7:] == \"keyence\":\n    print(\"YES\")\n    exit()\n\nelif S[:1] + S[-6:] == \"keyence\" or S[:2] + S[-5:] == \"keyence\" or S[:3] + S[-4:] == \"keyence\" or S[:4] + S[-3:] == \"keyence\" or S[:5] + S[-2:] == \"keyence\" or S[:6] + S[-1:] == \"keyence\":\n    print(\"YES\")\n    exit()\n\nelse:\n    print(\"NO\")\n","s = input()\nkey = 'keyence'\nif len(s) < len(key):\n    print(\"NO\")\nelif s[:len(key)] == key:\n    print(\"YES\")\nelif s[-len(key):] == key:\n    print(\"YES\")\nelse:\n    for i in range(1, len(key)):\n        head = s.startswith(key[0:i])\n        hip = s.endswith(key[i:])\n        if head and hip:\n            print(\"YES\")\n            break\n    else:\n        print(\"NO\")\n","s=input()\nkey=\"keyence\"\n\nl=len(s)\n\nfor i in range(l):\n    for j in range(i,l):\n        mo = s[:i] + s[j:]\n        if mo == key:\n            print(\"YES\")\n            exit()\nprint(\"NO\")","# -*- coding: utf-8 -*-\n# B\n# \n# input\ns = input()\n# calc\nif s[0:7] == 'keyence' or s[-7:] == 'keyence':\n  print('YES')\nelif s[0:1]+s[-6:] == 'keyence':\n  print('YES')\nelif s[0:2]+s[-5:] == 'keyence':\n  print('YES')\nelif s[0:3]+s[-4:] == 'keyence':\n  print('YES')  \nelif s[0:4]+s[-3:] == 'keyence':\n  print('YES')\nelif s[0:5]+s[-2:] == 'keyence':\n  print('YES')  \nelif s[0:6]+s[-1:] == 'keyence':\n  print('YES')\nelse:\n  print('NO')","s=input()\nfor i in range(8):\n    if s[:i]+s[-(7-i):]==\"keyence\":\n        print(\"YES\")\n        exit(0)\nprint(\"NO\")","S = input()\n\nKEYENCE = 'keyence'\nAnswer = 'NO'\nif S[0:7] == KEYENCE:\n  Answer = 'YES'\nelif S[0] == 'k':\n  counter = 1\n  for i in range(6):\n    if S[i+1]==KEYENCE[i+1]:\n      counter +=1\n  if S[-(7-counter):] ==KEYENCE[counter:]:\n    Answer = 'YES'\n\nelif S[-7:] == KEYENCE:\n  Answer = 'YES'\n\nprint(Answer)","s=input()\u00df\ns=list(s)\na=list('keyence')\nfor i in range(8):\n    if s[:i]==a[:i] and s[i-7:]==a[i-7:]:\n        print('YES')\n        quit()\nprint('NO')","import re\nS = input()\nflag = False\nres = re.match(r'.*keyence$',S)\nif res :\n  flag = True\nres = re.match(r'^k.*eyence$',S)\nif res :\n  flag = True\nres = re.match(r'^ke.*yence$',S)\nif res :\n  flag = True\nres = re.match(r'^key.*ence$',S)\nif res :\n  flag = True\nres = re.match(r'^keye.*nce$',S)\nif res :\n  flag = True\nres = re.match(r'^keyen.*ce$',S)\nif res :\n  flag = True\nres = re.match(r'^keyenc.*e$',S)\nif res :\n  flag = True\nres = re.match(r'^keyence.*',S)\nif res :\n  flag = True\nif flag :\n  print('YES')\nelse :\n  print('NO')","import copy\nS = list(input())\ndiff = len(S)-len(\"keyence\")\nfor i in range(len(S)-diff):\n    S_tmp = copy.deepcopy(S)\n    #print(i)\n    del S_tmp[i:(i+diff)]\n    #print(str(S_tmp))\n    if \"keyence\" == \"\".join(S_tmp):\n        print(\"YES\")\n        exit(0)\nprint(\"NO\")"]}
{"description_html":"<h1>Red Dragonfly<\/h1>\n\u3000\n<p>\n  It\u2019s still hot every day, but September has already come. It\u2019s autumn according to the calendar. Looking around, I see two red dragonflies at rest on the wall in front of me. It\u2019s autumn indeed.\n<\/p>\n\n<p>\n  When two red dragonflies\u2019 positional information as measured from the end of the wall is given, make a program to calculate the distance between their heads.\n<\/p>\n\n<h2>Input<\/h2>\n<p>\n  The input is given in the following format.\n<\/p>\n<pre>\n$x_1$ $x_2$\n<\/pre>\n\n<p>\n  The input line provides dragonflies\u2019 head positions $x_1$ and $x_2$ ($0 \\leq x_1, x_2 \\leq 100$) as integers.\n<\/p>\n\n<h2>Output<\/h2>\n<p>\n  Output the distance between the two red dragonflies in a line.\n<\/p>\n\n<h2>Sample Input 1<\/h2>\n<pre>\n20 30\n<\/pre>\n<h2>Sample Output 1<\/h2>\n<pre>\n10\n<\/pre>\n\n<h2>Sample Input 2<\/h2>\n\n<pre>\n50 25\n\n<\/pre>\n<h2>Sample Output 2<\/h2>\n<pre>\n25\n<\/pre>\n\n<h2>Sample Input 3<\/h2>\n<pre>\n25 25\n<\/pre>\n<h2>Sample output 3<\/h2>\n<pre>\n0\n<\/pre>\n","description_string":"Red Dragonfly\n\u3000\n\n  It\u2019s still hot every day, but September has already come. It\u2019s autumn according to the calendar. Looking around, I see two red dragonflies at rest on the wall in front of me. It\u2019s autumn indeed.\n\n\n  When two red dragonflies\u2019 positional information as measured from the end of the wall is given, make a program to calculate the distance between their heads.\n\nInput\n\n  The input is given in the following format.\n\n\n$x_1$ $x_2$\n\n\n  The input line provides dragonflies\u2019 head positions $x_1$ and $x_2$ ($0 \\leq x_1, x_2 \\leq 100$) as integers.\n\nOutput\n\n  Output the distance between the two red dragonflies in a line.\n\nSample Input 1\n\n20 30\n\nSample Output 1\n\n10\n\nSample Input 2\n\n50 25\n\n\nSample Output 2\n\n25\n\nSample Input 3\n\n25 25\n\nSample output 3\n\n0\n\n","orig_lang_html":"<h1>Red Dragonfly<\/h1>\n\u3000\n<p>\n  It\u2019s still hot every day, but September has already come. It\u2019s autumn according to the calendar. Looking around, I see two red dragonflies at rest on the wall in front of me. It\u2019s autumn indeed.\n<\/p>\n\n<p>\n  When two red dragonflies\u2019 positional information as measured from the end of the wall is given, make a program to calculate the distance between their heads.\n<\/p>\n\n<h2>Input<\/h2>\n<p>\n  The input is given in the following format.\n<\/p>\n<pre>\n$x_1$ $x_2$\n<\/pre>\n\n<p>\n  The input line provides dragonflies\u2019 head positions $x_1$ and $x_2$ ($0 \\leq x_1, x_2 \\leq 100$) as integers.\n<\/p>\n\n<h2>Output<\/h2>\n<p>\n  Output the distance between the two red dragonflies in a line.\n<\/p>\n\n<h2>Sample Input 1<\/h2>\n<pre>\n20 30\n<\/pre>\n<h2>Sample Output 1<\/h2>\n<pre>\n10\n<\/pre>\n\n<h2>Sample Input 2<\/h2>\n\n<pre>\n50 25\n\n<\/pre>\n<h2>Sample Output 2<\/h2>\n<pre>\n25\n<\/pre>\n\n<h2>Sample Input 3<\/h2>\n<pre>\n25 25\n<\/pre>\n<h2>Sample output 3<\/h2>\n<pre>\n0\n<\/pre>\n","orig_lang_string":"Red Dragonfly\n\u3000\n\n  It\u2019s still hot every day, but September has already come. It\u2019s autumn according to the calendar. Looking around, I see two red dragonflies at rest on the wall in front of me. It\u2019s autumn indeed.\n\n\n  When two red dragonflies\u2019 positional information as measured from the end of the wall is given, make a program to calculate the distance between their heads.\n\nInput\n\n  The input is given in the following format.\n\n\n$x_1$ $x_2$\n\n\n  The input line provides dragonflies\u2019 head positions $x_1$ and $x_2$ ($0 \\leq x_1, x_2 \\leq 100$) as integers.\n\nOutput\n\n  Output the distance between the two red dragonflies in a line.\n\nSample Input 1\n\n20 30\n\nSample Output 1\n\n10\n\nSample Input 2\n\n50 25\n\n\nSample Output 2\n\n25\n\nSample Input 3\n\n25 25\n\nSample output 3\n\n0\n\n","solve_rate":0.9605055292,"codenet_problem_id":"p00376","input_testcases":{"8":"27 37","61":"1 77","35":"85 6","13":"50 14","4":"25 17","31":"85 4","100":"50 25","7":"25 11","5":"27 22","21":"84 0","60":"0 77","48":"17 0","37":"60 12","40":"1 17","10":"50 11","28":"50 15","1":"25 13","30":"40 15","9":"26 0","22":"33 13","16":"50 6","24":"21 0","11":"35 37","102":"20 30","32":"0 0","33":"85 5","103":"25 25","46":"18 0","29":"85 2","23":"87 0","19":"22 13","38":"1 12","18":"84 6","6":"58 0","36":"85 12","3":"50 0","62":"2 77","101":"20 30","47":"31 0","0":"50 12","63":"1 33","14":"15 37","39":"4 19","25":"32 8","2":"27 30"},"output_testcases":{"8":"10\n","61":"76\n","35":"79\n","13":"36\n","4":"8\n","31":"81\n","100":"25\n","7":"14\n","5":"5\n","21":"84\n","60":"77\n","48":"17\n","37":"48\n","40":"16\n","10":"39\n","28":"35\n","1":"12\n","30":"25\n","9":"26\n","22":"20\n","16":"44\n","24":"21\n","11":"2\n","102":"10\n","32":"0\n","33":"80\n","103":"0\n","46":"18\n","29":"83\n","23":"87\n","19":"9\n","38":"11\n","18":"78\n","6":"58\n","36":"73\n","3":"50\n","62":"75\n","101":"10\n","47":"31\n","0":"38\n","63":"32\n","14":"22\n","39":"15\n","25":"24\n","2":"3\n"},"n_missing":59,"programs":["a,b = map(int, input().split())\nans = abs(a-b)\nprint(ans)\n","a,b=map(int,input().split())\n\nprint(abs(a-b))\n","a,b=map(int,input().split())\nif a>b:\n    print(int(a-b))\nelse:\n    print(int(b-a))\n\n","x1,x2=map(int,input().split())\nprint(abs(x2-x1))\n","x1, x2 = map(int, input().split())\nprint(abs(x1 - x2))\n","a,b = map(int,input().split())\nif a < b:\n    print(b-a)\nelse:\n    print(a-b)\n","a,b=map(int,input().split())\nif a>b:print(a-b)\nelif a<b:print(b-a)\nelif a==b:print(0)\n\n","x1,x2 =map(int,input().split())\n\nprint (abs(x1 - x2))\n","x1,x2=map(int,input().split())\nif x1<x2:\n    print(x2 - x1)\nelif x1>x2:\n    print(x1 - x2)\nelif x1==x2:\n    print(x1 - x2)\n\n","x1,x2 = (int(x) for x in input().split())\nprint(abs(x1 - x2))\n","x_1,x_2=map(int,input().split())\nprint(abs(x_2-x_1))\n\n","a,b=map(int,input().split())\nif a>=b:\n    print(int(a-b))\nelif b>a:\n    print(int(b-a))\n","a, b = map(int, input().split())\nprint(abs(a-b))\n","x1,x2=map(int,input().split())\nif 0<=x1<=100 and 0<=x2<=100:\n    if x1>=x2:\n        print(x1-x2)\n    else:\n        print(x2-x1)\nelse:\n    pass\n\n","x1,x2 = map(int, input().split())\nprint(abs(x1-x2))\n","x1,x2=map(int,input().split())\nif x1>=x2:\n    print(x1-x2)\nelif x1<x2:\n    print(x2-x1)\n","x,y=map(int,input().split())\nprint(abs(x-y))\n","x1,x2 = map(int,input().split())\nprint(abs(x1 - x2))\n","x1,x2 = map(int,input().split())\nprint(abs(x2-x1))\n\n","x1,x2=map(int,input().split())\nif x1>x2:\n    print(x1-x2)\nelse:\n    print(x2-x1)\n\n","a,b=map(int,input().split())\nprint(abs(a-b))\n","x1,x2=map(int,input().split())\nif x1<x2:\n    print(x2-x1)\nif x1>x2:\n    print(x1-x2)\nif x1==x2:\n    print('0')\n","def main():\n     x = list(map(int,input().split()))\n     print(abs(x[0]-x[1]))\n\nif __name__ == '__main__':\n    main()\n","x1,x2=map(int,input().split())\nif x1>x2:\n print(x1-x2)\nelif x1<x2:\n print(x2-x1)\nelse:\n print(0)\n","x1, x2 = map(int, input().split())\n\nprint(abs(x1 - x2))\n","a,b = map(int,input().split())\nprint(abs(a-b))\n","x,y=(int(x)for x in input().split())\n\nif x>y:\n    print(x-y)\n    \nelif x<y:\n    print(y-x)\n    \nelif x==y:\n    print('0')\n","x1,x2=map(int,input().split())\nprint(abs(x1-x2))\n","a,b=map(int,input().split())\nif a<b:\n    t=a\n    a=b\n    b=t\nprint(a-b)\n","a,b=map(int,input().split())\nif a<b:\n    print(b-a)\nelif a>b:\n    print(a-b)\nelse:\n    print(0)\n","x1,x2=map(int,input().split())\nif x1>=x2:\n    print(x1-x2)\nelse:\n    print(x2-x1)\n","# coding: utf-8\n\nx1, x2 = list(map(int, input().split(' ')))\ndist = abs(x1-x2)\nprint(dist)\n","a,b=map(int,input().split())\nprint(abs(a-b))\n","x1 ,x2 = map(int, input() . split())\nprint(abs(x1 - x2))\n\n","a,b=map(int,input().split())\nif b>a:\n    s=b - a\nelse:\n    s=a - b\nprint(int(s))\n","a,b=map(int,input().split())\nif a<b:\n    print(b-a)\nelse:\n    print(a-b)\n\n","# coding: utf-8\n# Your code here!\n\nx1, x2 = map(int, input().split())\nif x1 >= x2:\n   print(x1 - x2)\nelse:\n   print(x2 - x1)\n\n","# coding:utf-8\n\nx = list(map(int, input().split(\" \")))\nif x[0] >= x[1]:\n    print(x[0] - x[1])\nelse:\n    print(x[1] - x[0])\n","a,b=map(int,input().split())\nif a<=b:\n    print(b-a)\nelse:\n    print(a-b)\n","x1, x2 = map(int, input().split())\nprint(abs(x1-x2))\n","a, b= map(int, input().split())\nif b > a :\n    a, b = b, a\nprint(a - b)\n","a,b=map(int,input().split())\n\nif a>=b:\n    print(a-b)\nelse:\n    print(b-a)\n\n","x1,x2 = map(int,input().split())\nif x1 > x2:\n    print(x1-x2)\nelif x2 > x1:\n    print(x2-x1)\nelse:\n    print(\"0\")\n","x1,x2=map(int,input().split())\nif (x1>=x2):\n   print(x1-x2)\nelse:\n   print(x2-x1)\n\n","x1,x2=map(int,input().split())\nif x1<=x2:\n    print(x2 - x1)\nelse:\n    print(x1 - x2)\n","x, y = input().split(' ')\nprint(abs(int(x) - int(y)))\n","a,b=map(int,input().split())\n\nif a<b:\n    print(b-a)\nelse:\n    print(a-b)\n","import math\na,b=map(int,input().split())\nc=math.fabs(a-b)\nprint(math.floor(c))\n","x_1,x_2=map(int,input().split())\nprint(abs(x_2-x_1))\n","a,b=map(int,input().split())\nif a>b:\n    print(int(a-b))\nelse:\n    print(int(b-a))\n","a,b= map(int,input().split())\nif a < b:\n    print(b-a)\nelse:\n    print(a-b)\n","\nx1,x2=map(int,input().split())\n\nif x1>=x2:\n    print(x1-x2)\nelse:\n    print(x2-x1)\n\n\n","a,b=map(int,input().split())\nprint(abs(a-b))\n","a,b=(int(x) for x in input().split())\n\nif 0<=a<=b<=100:\n    print(b-a)\n     \nelif 0<=b<=a<=100:\n    print(a-b)\n","import math\na,b=map(int,input().split())\nc=int(a-b)\nd=abs(c)\nprint(d)\n","# coding: utf-8\n# Your code here!\n\na,b=map(int,input().split())\nA = int()\nif(a>b):\n    A = a-b\nelse:\n    A = b-a\nprint('%d'%A)\n","x1,x2=map(int,input().split())\nif x1<=x2:\n    print(x2-x1)\nelse:\n    print(x1-x2)\n","x1, x2 = map(int, input().split())\nprint(abs(x1 - x2))\n","a,b = map(int,input().split(\" \"))\nif a > b:\n  print(a-b)\nelse:\n  print(b-a)\n","x1, x2 = map(int, input().split())\n\nif x1<=x2:\n    d = x2-x1\nelse:\n    d = x1-x2\n    \nprint(d)\n","a,b = map(int,input().split())\nprint(abs(a-b))\n\n","a,b=map(int,input().split())\nprint(abs(a-b))\n","x=input().split()\ny=list(map(int,x))\na=y[0]\nb=y[1]\nc=abs(a-b)\nprint(c)\n","m,n = [ int(s) for s in input().split() ]\n  \nif m > n:\n    print(m-n)\nelse:\n    print(n-m)\n","a,b=map(int,input().split())\nif(a>b):\n    print(a-b)\nelse:\n    print(b-a)\n","x1, x2 = [int(x) for x in input().split()]\nprint(abs(x1-x2))\n","x1,x2 = map(int,input().split())\nif x1>x2:\n    print(x1-x2)\nelse:\n    print(x2-x1)\n","a,b=(int(x) for x in input().split())\nc=abs(a-b)\nprint(c)\n","x1,x2=(int(x) for x in input().split())\nif x2>x1:\n    print(int(x2-x1))\nelse:\n    print(int(x1-x2))\n","x1, x2 = map(int, input().split())\nprint(abs(x2-x1))\n","x1,x2 = map(int,input().split())\nif x1 > x2 :\n    print(int(x1-x2))\nelse :\n    print(int(x2-x1))\n","a, b = map(int, input().split())\nprint(abs(a - b))\n","import math\na, b = (int(x) for x in input().split())\nprint(int ( math.sqrt((a-b)**2) ) )\n","a,b=map(int,input().split())\nif a>b:\n  print(a-b)\nelse:\n  print(b-a)\n","x1, x2 = map(int, input().split())\nprint(abs(x2-x1))\n","x1,x2 = list(map(int, input().split()))\nprint(abs(x1-x2))\n","# coding: utf-8\n# Your code here!\na,b = map(int,input().split())\nif a>b:\n    print(a-b)\nelif a<b:\n    print(b-a)\nelse:\n    print(a-b)\n","x1,x2=map(int,input().split())\nif x1>x2:\n    print(x1-x2)\nelse:\n    print(x2-x1)\n","x_1,x_2=map(int,input().split())\nif x_1<x_2:\n    print(x_2-x_1)\nelse:\n    print(x_1-x_2)\n","x1,x2=map(int,input().split())\nprint(abs(x1-x2))\n","# coding: utf-8\n# Your code here!\n\na,b=map(int,input().split())\ny = abs(a-b)\nprint(y)\n","x1, x2 = map(int, input().split())\nprint(abs(x1 - x2))\n","x1, x2 = map(int, input().split()) \nif x1 >= x2:   \n    print(x1 - x2) \n\nelse:    print(x2 - x1)\n\n","x1,x2=map(int,input().split())\na=abs(x1-x2)\nprint(a)\n\n","a,b=map(int,input().split())\nprint(abs(a-b))\n","#\u6a19\u6e96\u5165\u529b\u3092\u3057\u3001\u8ddd\u96e2\u306e\u5dee\u3092\u6c42\u3081\u308b\na,b = map(int,input().split())\nprint(abs(b - a))\n","x1,x2=map(int,input().split())\ny= abs(x1-x2)\nprint(y)\n\n","# coding: utf-8\n# Your code here!\nx1,x2=map(int,input().split())\n\nx1,x2=sorted([x1,x2])\nprint(x2-x1)\n","x1,x2=map(int,input().split())\nprint(abs(x1-x2))\n","a,b=map(int,input().split())\nif a<b:\n    print(b-a)\nelse :\n    print(a-b)\n","\na,b=(int(x) for x in input().split())\n\nc=abs(a-b)\nprint(c)\n","x1, x2 = map(int, input().split())\n\nif x1 > x2:\n    a = x1 - x2\nelse:\n    a = x2 - x1\n\nprint(a)\n","a, b = map(int, input().split())\nprint(abs(a-b))\n","a , b = map(int,input().split())\nx = a - b\ny = abs(x)\nprint(y)\n","x1, x2 = map(int, input().split())\ny = x1-x2\nif y <=0:\n    print(-y)\nelse:\n    print(y)\n","x1,x2=map(int,input().split())\nprint(abs(x1-x2))\n\n","a,b=map(int,input().split())\nif a<b:\n    print(int(b-a))\nelif a>b:\n    print(int(a-b))\nelse:\n    print(\"0\")\n","import math\na , b = map(int,input().split())\nif a<b:\n    print(b-a)\nelif a>b:\n    print(a-b)\nelse:\n    print(\"0\")\n","x,y=map(int,input().split())\nprint(abs(x-y))\n\n","import math\nx1, x2=map(int,input().split())\nprint(int(math.fabs(x1-x2)))\n"],"raw_generations":["a,b = map(int, input().split())\nans = abs(a-b)\nprint(ans)\n","a,b=map(int,input().split())\n\nprint(abs(a-b))\n","a,b=map(int,input().split())\nif a>b:\n    print(int(a-b))\nelse:\n    print(int(b-a))\n\n","x1,x2=map(int,input().split())\nprint(abs(x2-x1))\n","x1, x2 = map(int, input().split())\nprint(abs(x1 - x2))\n","a,b = map(int,input().split())\nif a < b:\n    print(b-a)\nelse:\n    print(a-b)\n","a,b=map(int,input().split())\nif a>b:print(a-b)\nelif a<b:print(b-a)\nelif a==b:print(0)\n\n","x1,x2 =map(int,input().split())\n\nprint (abs(x1 - x2))\n","x1,x2=map(int,input().split())\nif x1<x2:\n    print(x2 - x1)\nelif x1>x2:\n    print(x1 - x2)\nelif x1==x2:\n    print(x1 - x2)\n\n","x1,x2 = (int(x) for x in input().split())\nprint(abs(x1 - x2))\n","x_1,x_2=map(int,input().split())\nprint(abs(x_2-x_1))\n\n","a,b=map(int,input().split())\nif a>=b:\n    print(int(a-b))\nelif b>a:\n    print(int(b-a))\n","a, b = map(int, input().split())\nprint(abs(a-b))\n","x1,x2=map(int,input().split())\nif 0<=x1<=100 and 0<=x2<=100:\n    if x1>=x2:\n        print(x1-x2)\n    else:\n        print(x2-x1)\nelse:\n    pass\n\n","x1,x2 = map(int, input().split())\nprint(abs(x1-x2))\n","x1,x2=map(int,input().split())\nif x1>=x2:\n    print(x1-x2)\nelif x1<x2:\n    print(x2-x1)\n","x,y=map(int,input().split())\nprint(abs(x-y))\n","x1,x2 = map(int,input().split())\nprint(abs(x1 - x2))\n","x1,x2 = map(int,input().split())\nprint(abs(x2-x1))\n\n","x1,x2=map(int,input().split())\nif x1>x2:\n    print(x1-x2)\nelse:\n    print(x2-x1)\n\n","a,b=map(int,input().split())\nprint(abs(a-b))\n","x1,x2=map(int,input().split())\nif x1<x2:\n    print(x2-x1)\nif x1>x2:\n    print(x1-x2)\nif x1==x2:\n    print('0')\n","def main():\n     x = list(map(int,input().split()))\n     print(abs(x[0]-x[1]))\n\nif __name__ == '__main__':\n    main()\n","x1,x2=map(int,input().split())\nif x1>x2:\n print(x1-x2)\nelif x1<x2:\n print(x2-x1)\nelse:\n print(0)\n","x1, x2 = map(int, input().split())\n\nprint(abs(x1 - x2))\n","a,b = map(int,input().split())\nprint(abs(a-b))\n","x,y=(int(x)for x in input().split())\n\nif x>y:\n    print(x-y)\n    \nelif x<y:\n    print(y-x)\n    \nelif x==y:\n    print('0')\n","x1,x2=map(int,input().split())\nprint(abs(x1-x2))\n","a,b=map(int,input().split())\nif a<b:\n    t=a\n    a=b\n    b=t\nprint(a-b)\n","a,b=map(int,input().split())\nif a<b:\n    print(b-a)\nelif a>b:\n    print(a-b)\nelse:\n    print(0)\n","x1,x2=map(int,input().split())\nif x1>=x2:\n    print(x1-x2)\nelse:\n    print(x2-x1)\n","# coding: utf-8\n\nx1, x2 = list(map(int, input().split(' ')))\ndist = abs(x1-x2)\nprint(dist)\n","a,b=map(int,input().split())\nprint(abs(a-b))\n","x1 ,x2 = map(int, input() . split())\nprint(abs(x1 - x2))\n\n","a,b=map(int,input().split())\nif b>a:\n    s=b - a\nelse:\n    s=a - b\nprint(int(s))\n","a,b=map(int,input().split())\nif a<b:\n    print(b-a)\nelse:\n    print(a-b)\n\n","# coding: utf-8\n# Your code here!\n\nx1, x2 = map(int, input().split())\nif x1 >= x2:\n   print(x1 - x2)\nelse:\n   print(x2 - x1)\n\n","# coding:utf-8\n\nx = list(map(int, input().split(\" \")))\nif x[0] >= x[1]:\n    print(x[0] - x[1])\nelse:\n    print(x[1] - x[0])\n","a,b=map(int,input().split())\nif a<=b:\n    print(b-a)\nelse:\n    print(a-b)\n","x1, x2 = map(int, input().split())\nprint(abs(x1-x2))\n","a, b= map(int, input().split())\nif b > a :\n    a, b = b, a\nprint(a - b)\n","a,b=map(int,input().split())\n\nif a>=b:\n    print(a-b)\nelse:\n    print(b-a)\n\n","x1,x2 = map(int,input().split())\nif x1 > x2:\n    print(x1-x2)\nelif x2 > x1:\n    print(x2-x1)\nelse:\n    print(\"0\")\n","x1,x2=map(int,input().split())\nif (x1>=x2):\n   print(x1-x2)\nelse:\n   print(x2-x1)\n\n","x1,x2=map(int,input().split())\nif x1<=x2:\n    print(x2 - x1)\nelse:\n    print(x1 - x2)\n","x, y = input().split(' ')\nprint(abs(int(x) - int(y)))\n","a,b=map(int,input().split())\n\nif a<b:\n    print(b-a)\nelse:\n    print(a-b)\n","import math\na,b=map(int,input().split())\nc=math.fabs(a-b)\nprint(math.floor(c))\n","x_1,x_2=map(int,input().split())\nprint(abs(x_2-x_1))\n","a,b=map(int,input().split())\nif a>b:\n    print(int(a-b))\nelse:\n    print(int(b-a))\n","a,b= map(int,input().split())\nif a < b:\n    print(b-a)\nelse:\n    print(a-b)\n","\nx1,x2=map(int,input().split())\n\nif x1>=x2:\n    print(x1-x2)\nelse:\n    print(x2-x1)\n\n\n","a,b=map(int,input().split())\nprint(abs(a-b))\n","a,b=(int(x) for x in input().split())\n\nif 0<=a<=b<=100:\n    print(b-a)\n     \nelif 0<=b<=a<=100:\n    print(a-b)\n","import math\na,b=map(int,input().split())\nc=int(a-b)\nd=abs(c)\nprint(d)\n","# coding: utf-8\n# Your code here!\n\na,b=map(int,input().split())\nA = int()\nif(a>b):\n    A = a-b\nelse:\n    A = b-a\nprint('%d'%A)\n","x1,x2=map(int,input().split())\nif x1<=x2:\n    print(x2-x1)\nelse:\n    print(x1-x2)\n","x1, x2 = map(int, input().split())\nprint(abs(x1 - x2))\n","a,b = map(int,input().split(\" \"))\nif a > b:\n  print(a-b)\nelse:\n  print(b-a)\n","x1, x2 = map(int, input().split())\n\nif x1<=x2:\n    d = x2-x1\nelse:\n    d = x1-x2\n    \nprint(d)\n","a,b = map(int,input().split())\nprint(abs(a-b))\n\n","a,b=map(int,input().split())\nprint(abs(a-b))\n","x=input().split()\ny=list(map(int,x))\na=y[0]\nb=y[1]\nc=abs(a-b)\nprint(c)\n","m,n = [ int(s) for s in input().split() ]\n  \nif m > n:\n    print(m-n)\nelse:\n    print(n-m)\n","a,b=map(int,input().split())\nif(a>b):\n    print(a-b)\nelse:\n    print(b-a)\n","x1, x2 = [int(x) for x in input().split()]\nprint(abs(x1-x2))\n","x1,x2 = map(int,input().split())\nif x1>x2:\n    print(x1-x2)\nelse:\n    print(x2-x1)\n","a,b=(int(x) for x in input().split())\nc=abs(a-b)\nprint(c)\n","x1,x2=(int(x) for x in input().split())\nif x2>x1:\n    print(int(x2-x1))\nelse:\n    print(int(x1-x2))\n","x1, x2 = map(int, input().split())\nprint(abs(x2-x1))\n","x1,x2 = map(int,input().split())\nif x1 > x2 :\n    print(int(x1-x2))\nelse :\n    print(int(x2-x1))\n","a, b = map(int, input().split())\nprint(abs(a - b))\n","import math\na, b = (int(x) for x in input().split())\nprint(int ( math.sqrt((a-b)**2) ) )\n","a,b=map(int,input().split())\nif a>b:\n  print(a-b)\nelse:\n  print(b-a)\n","x1, x2 = map(int, input().split())\nprint(abs(x2-x1))\n","x1,x2 = list(map(int, input().split()))\nprint(abs(x1-x2))\n","# coding: utf-8\n# Your code here!\na,b = map(int,input().split())\nif a>b:\n    print(a-b)\nelif a<b:\n    print(b-a)\nelse:\n    print(a-b)\n","x1,x2=map(int,input().split())\nif x1>x2:\n    print(x1-x2)\nelse:\n    print(x2-x1)\n","x_1,x_2=map(int,input().split())\nif x_1<x_2:\n    print(x_2-x_1)\nelse:\n    print(x_1-x_2)\n","x1,x2=map(int,input().split())\nprint(abs(x1-x2))\n","# coding: utf-8\n# Your code here!\n\na,b=map(int,input().split())\ny = abs(a-b)\nprint(y)\n","x1, x2 = map(int, input().split())\nprint(abs(x1 - x2))\n","x1, x2 = map(int, input().split()) \nif x1 >= x2:   \n    print(x1 - x2) \n\nelse:    print(x2 - x1)\n\n","x1,x2=map(int,input().split())\na=abs(x1-x2)\nprint(a)\n\n","a,b=map(int,input().split())\nprint(abs(a-b))\n","#\u6a19\u6e96\u5165\u529b\u3092\u3057\u3001\u8ddd\u96e2\u306e\u5dee\u3092\u6c42\u3081\u308b\na,b = map(int,input().split())\nprint(abs(b - a))\n","x1,x2=map(int,input().split())\ny= abs(x1-x2)\nprint(y)\n\n","# coding: utf-8\n# Your code here!\nx1,x2=map(int,input().split())\n\nx1,x2=sorted([x1,x2])\nprint(x2-x1)\n","x1,x2=map(int,input().split())\nprint(abs(x1-x2))\n","a,b=map(int,input().split())\nif a<b:\n    print(b-a)\nelse :\n    print(a-b)\n","\na,b=(int(x) for x in input().split())\n\nc=abs(a-b)\nprint(c)\n","x1, x2 = map(int, input().split())\n\nif x1 > x2:\n    a = x1 - x2\nelse:\n    a = x2 - x1\n\nprint(a)\n","a, b = map(int, input().split())\nprint(abs(a-b))\n","a , b = map(int,input().split())\nx = a - b\ny = abs(x)\nprint(y)\n","x1, x2 = map(int, input().split())\ny = x1-x2\nif y <=0:\n    print(-y)\nelse:\n    print(y)\n","x1,x2=map(int,input().split())\nprint(abs(x1-x2))\n\n","a,b=map(int,input().split())\nif a<b:\n    print(int(b-a))\nelif a>b:\n    print(int(a-b))\nelse:\n    print(\"0\")\n","import math\na , b = map(int,input().split())\nif a<b:\n    print(b-a)\nelif a>b:\n    print(a-b)\nelse:\n    print(\"0\")\n","x,y=map(int,input().split())\nprint(abs(x-y))\n\n","import math\nx1, x2=map(int,input().split())\nprint(int(math.fabs(x1-x2)))\n"],"formatted_programs":["a,b = map(int, input().split())\nans = abs(a-b)\nprint(ans)\n","a,b=map(int,input().split())\n\nprint(abs(a-b))\n","a,b=map(int,input().split())\nif a>b:\n    print(int(a-b))\nelse:\n    print(int(b-a))\n\n","x1,x2=map(int,input().split())\nprint(abs(x2-x1))\n","x1, x2 = map(int, input().split())\nprint(abs(x1 - x2))\n","a,b = map(int,input().split())\nif a < b:\n    print(b-a)\nelse:\n    print(a-b)\n","a,b=map(int,input().split())\nif a>b:print(a-b)\nelif a<b:print(b-a)\nelif a==b:print(0)\n\n","x1,x2 =map(int,input().split())\n\nprint (abs(x1 - x2))\n","x1,x2=map(int,input().split())\nif x1<x2:\n    print(x2 - x1)\nelif x1>x2:\n    print(x1 - x2)\nelif x1==x2:\n    print(x1 - x2)\n\n","x1,x2 = (int(x) for x in input().split())\nprint(abs(x1 - x2))\n","x_1,x_2=map(int,input().split())\nprint(abs(x_2-x_1))\n\n","a,b=map(int,input().split())\nif a>=b:\n    print(int(a-b))\nelif b>a:\n    print(int(b-a))\n","a, b = map(int, input().split())\nprint(abs(a-b))\n","x1,x2=map(int,input().split())\nif 0<=x1<=100 and 0<=x2<=100:\n    if x1>=x2:\n        print(x1-x2)\n    else:\n        print(x2-x1)\nelse:\n    pass\n\n","x1,x2 = map(int, input().split())\nprint(abs(x1-x2))\n","x1,x2=map(int,input().split())\nif x1>=x2:\n    print(x1-x2)\nelif x1<x2:\n    print(x2-x1)\n","x,y=map(int,input().split())\nprint(abs(x-y))\n","x1,x2 = map(int,input().split())\nprint(abs(x1 - x2))\n","x1,x2 = map(int,input().split())\nprint(abs(x2-x1))\n\n","x1,x2=map(int,input().split())\nif x1>x2:\n    print(x1-x2)\nelse:\n    print(x2-x1)\n\n","a,b=map(int,input().split())\nprint(abs(a-b))\n","x1,x2=map(int,input().split())\nif x1<x2:\n    print(x2-x1)\nif x1>x2:\n    print(x1-x2)\nif x1==x2:\n    print('0')\n","def main():\n     x = list(map(int,input().split()))\n     print(abs(x[0]-x[1]))\n\nif __name__ == '__main__':\n    main()\n","x1,x2=map(int,input().split())\nif x1>x2:\n print(x1-x2)\nelif x1<x2:\n print(x2-x1)\nelse:\n print(0)\n","x1, x2 = map(int, input().split())\n\nprint(abs(x1 - x2))\n","a,b = map(int,input().split())\nprint(abs(a-b))\n","x,y=(int(x)for x in input().split())\n\nif x>y:\n    print(x-y)\n    \nelif x<y:\n    print(y-x)\n    \nelif x==y:\n    print('0')\n","x1,x2=map(int,input().split())\nprint(abs(x1-x2))\n","a,b=map(int,input().split())\nif a<b:\n    t=a\n    a=b\n    b=t\nprint(a-b)\n","a,b=map(int,input().split())\nif a<b:\n    print(b-a)\nelif a>b:\n    print(a-b)\nelse:\n    print(0)\n","x1,x2=map(int,input().split())\nif x1>=x2:\n    print(x1-x2)\nelse:\n    print(x2-x1)\n","# coding: utf-8\n\nx1, x2 = list(map(int, input().split(' ')))\ndist = abs(x1-x2)\nprint(dist)\n","a,b=map(int,input().split())\nprint(abs(a-b))\n","x1 ,x2 = map(int, input() . split())\nprint(abs(x1 - x2))\n\n","a,b=map(int,input().split())\nif b>a:\n    s=b - a\nelse:\n    s=a - b\nprint(int(s))\n","a,b=map(int,input().split())\nif a<b:\n    print(b-a)\nelse:\n    print(a-b)\n\n","# coding: utf-8\n# Your code here!\n\nx1, x2 = map(int, input().split())\nif x1 >= x2:\n   print(x1 - x2)\nelse:\n   print(x2 - x1)\n\n","# coding:utf-8\n\nx = list(map(int, input().split(\" \")))\nif x[0] >= x[1]:\n    print(x[0] - x[1])\nelse:\n    print(x[1] - x[0])\n","a,b=map(int,input().split())\nif a<=b:\n    print(b-a)\nelse:\n    print(a-b)\n","x1, x2 = map(int, input().split())\nprint(abs(x1-x2))\n","a, b= map(int, input().split())\nif b > a :\n    a, b = b, a\nprint(a - b)\n","a,b=map(int,input().split())\n\nif a>=b:\n    print(a-b)\nelse:\n    print(b-a)\n\n","x1,x2 = map(int,input().split())\nif x1 > x2:\n    print(x1-x2)\nelif x2 > x1:\n    print(x2-x1)\nelse:\n    print(\"0\")\n","x1,x2=map(int,input().split())\nif (x1>=x2):\n   print(x1-x2)\nelse:\n   print(x2-x1)\n\n","x1,x2=map(int,input().split())\nif x1<=x2:\n    print(x2 - x1)\nelse:\n    print(x1 - x2)\n","x, y = input().split(' ')\nprint(abs(int(x) - int(y)))\n","a,b=map(int,input().split())\n\nif a<b:\n    print(b-a)\nelse:\n    print(a-b)\n","import math\na,b=map(int,input().split())\nc=math.fabs(a-b)\nprint(math.floor(c))\n","x_1,x_2=map(int,input().split())\nprint(abs(x_2-x_1))\n","a,b=map(int,input().split())\nif a>b:\n    print(int(a-b))\nelse:\n    print(int(b-a))\n","a,b= map(int,input().split())\nif a < b:\n    print(b-a)\nelse:\n    print(a-b)\n","\nx1,x2=map(int,input().split())\n\nif x1>=x2:\n    print(x1-x2)\nelse:\n    print(x2-x1)\n\n\n","a,b=map(int,input().split())\nprint(abs(a-b))\n","a,b=(int(x) for x in input().split())\n\nif 0<=a<=b<=100:\n    print(b-a)\n     \nelif 0<=b<=a<=100:\n    print(a-b)\n","import math\na,b=map(int,input().split())\nc=int(a-b)\nd=abs(c)\nprint(d)\n","# coding: utf-8\n# Your code here!\n\na,b=map(int,input().split())\nA = int()\nif(a>b):\n    A = a-b\nelse:\n    A = b-a\nprint('%d'%A)\n","x1,x2=map(int,input().split())\nif x1<=x2:\n    print(x2-x1)\nelse:\n    print(x1-x2)\n","x1, x2 = map(int, input().split())\nprint(abs(x1 - x2))\n","a,b = map(int,input().split(\" \"))\nif a > b:\n  print(a-b)\nelse:\n  print(b-a)\n","x1, x2 = map(int, input().split())\n\nif x1<=x2:\n    d = x2-x1\nelse:\n    d = x1-x2\n    \nprint(d)\n","a,b = map(int,input().split())\nprint(abs(a-b))\n\n","a,b=map(int,input().split())\nprint(abs(a-b))\n","x=input().split()\ny=list(map(int,x))\na=y[0]\nb=y[1]\nc=abs(a-b)\nprint(c)\n","m,n = [ int(s) for s in input().split() ]\n  \nif m > n:\n    print(m-n)\nelse:\n    print(n-m)\n","a,b=map(int,input().split())\nif(a>b):\n    print(a-b)\nelse:\n    print(b-a)\n","x1, x2 = [int(x) for x in input().split()]\nprint(abs(x1-x2))\n","x1,x2 = map(int,input().split())\nif x1>x2:\n    print(x1-x2)\nelse:\n    print(x2-x1)\n","a,b=(int(x) for x in input().split())\nc=abs(a-b)\nprint(c)\n","x1,x2=(int(x) for x in input().split())\nif x2>x1:\n    print(int(x2-x1))\nelse:\n    print(int(x1-x2))\n","x1, x2 = map(int, input().split())\nprint(abs(x2-x1))\n","x1,x2 = map(int,input().split())\nif x1 > x2 :\n    print(int(x1-x2))\nelse :\n    print(int(x2-x1))\n","a, b = map(int, input().split())\nprint(abs(a - b))\n","import math\na, b = (int(x) for x in input().split())\nprint(int ( math.sqrt((a-b)**2) ) )\n","a,b=map(int,input().split())\nif a>b:\n  print(a-b)\nelse:\n  print(b-a)\n","x1, x2 = map(int, input().split())\nprint(abs(x2-x1))\n","x1,x2 = list(map(int, input().split()))\nprint(abs(x1-x2))\n","# coding: utf-8\n# Your code here!\na,b = map(int,input().split())\nif a>b:\n    print(a-b)\nelif a<b:\n    print(b-a)\nelse:\n    print(a-b)\n","x1,x2=map(int,input().split())\nif x1>x2:\n    print(x1-x2)\nelse:\n    print(x2-x1)\n","x_1,x_2=map(int,input().split())\nif x_1<x_2:\n    print(x_2-x_1)\nelse:\n    print(x_1-x_2)\n","x1,x2=map(int,input().split())\nprint(abs(x1-x2))\n","# coding: utf-8\n# Your code here!\n\na,b=map(int,input().split())\ny = abs(a-b)\nprint(y)\n","x1, x2 = map(int, input().split())\nprint(abs(x1 - x2))\n","x1, x2 = map(int, input().split()) \nif x1 >= x2:   \n    print(x1 - x2) \n\nelse:    print(x2 - x1)\n\n","x1,x2=map(int,input().split())\na=abs(x1-x2)\nprint(a)\n\n","a,b=map(int,input().split())\nprint(abs(a-b))\n","#\u6a19\u6e96\u5165\u529b\u3092\u3057\u3001\u8ddd\u96e2\u306e\u5dee\u3092\u6c42\u3081\u308b\na,b = map(int,input().split())\nprint(abs(b - a))\n","x1,x2=map(int,input().split())\ny= abs(x1-x2)\nprint(y)\n\n","# coding: utf-8\n# Your code here!\nx1,x2=map(int,input().split())\n\nx1,x2=sorted([x1,x2])\nprint(x2-x1)\n","x1,x2=map(int,input().split())\nprint(abs(x1-x2))\n","a,b=map(int,input().split())\nif a<b:\n    print(b-a)\nelse :\n    print(a-b)\n","\na,b=(int(x) for x in input().split())\n\nc=abs(a-b)\nprint(c)\n","x1, x2 = map(int, input().split())\n\nif x1 > x2:\n    a = x1 - x2\nelse:\n    a = x2 - x1\n\nprint(a)\n","a, b = map(int, input().split())\nprint(abs(a-b))\n","a , b = map(int,input().split())\nx = a - b\ny = abs(x)\nprint(y)\n","x1, x2 = map(int, input().split())\ny = x1-x2\nif y <=0:\n    print(-y)\nelse:\n    print(y)\n","x1,x2=map(int,input().split())\nprint(abs(x1-x2))\n\n","a,b=map(int,input().split())\nif a<b:\n    print(int(b-a))\nelif a>b:\n    print(int(a-b))\nelse:\n    print(\"0\")\n","import math\na , b = map(int,input().split())\nif a<b:\n    print(b-a)\nelif a>b:\n    print(a-b)\nelse:\n    print(\"0\")\n","x,y=map(int,input().split())\nprint(abs(x-y))\n\n","import math\nx1, x2=map(int,input().split())\nprint(int(math.fabs(x1-x2)))\n"]}
{"description_html":"<span class=\"lang-en\">\n<p>Score : <var>300<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>Given are an integer <var>X<\/var> and an integer sequence of length <var>N<\/var>: <var>p_1, \\ldots, p_N<\/var>.<\/p>\n<p>Among the integers not contained in the sequence <var>p_1, \\ldots, p_N<\/var> (not necessarily positive), find the integer nearest to <var>X<\/var>, that is, find the integer whose absolute difference with <var>X<\/var> is the minimum. If there are multiple such integers, report the smallest such integer.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li><var>1 \\leq X \\leq 100<\/var><\/li>\n<li><var>0 \\leq N \\leq 100<\/var><\/li>\n<li><var>1 \\leq p_i \\leq 100<\/var><\/li>\n<li><var>p_1, \\ldots, p_N<\/var> are all distinct.<\/li>\n<li>All values in input are integers.<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>X<\/var> <var>N<\/var>\n<var>p_1<\/var> <var>...<\/var> <var>p_N<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>Print the answer.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>6 5\n4 7 10 6 5\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>8\n<\/pre>\n<p>Among the integers not contained in the sequence <var>4, 7, 10, 6, 5<\/var>, the one nearest to <var>6<\/var> is <var>8<\/var>.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>10 5\n4 7 10 6 5\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>9\n<\/pre>\n<p>Among the integers not contained in the sequence <var>4, 7, 10, 6, 5<\/var>, the ones nearest to <var>10<\/var> are <var>9<\/var> and <var>11<\/var>. We should print the smaller one, <var>9<\/var>.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>100 0\n\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>100\n<\/pre>\n<p>When <var>N = 0<\/var>, the second line in the input will be empty. Also, as seen here, <var>X<\/var> itself can be the answer.<\/p><\/section>\n<\/div>\n<\/span>","description_string":"\nScore : 300 points\n\n\nProblem StatementGiven are an integer X and an integer sequence of length N: p_1, \\ldots, p_N.\nAmong the integers not contained in the sequence p_1, \\ldots, p_N (not necessarily positive), find the integer nearest to X, that is, find the integer whose absolute difference with X is the minimum. If there are multiple such integers, report the smallest such integer.\n\n\n\n\nConstraints\n1 \\leq X \\leq 100\n0 \\leq N \\leq 100\n1 \\leq p_i \\leq 100\np_1, \\ldots, p_N are all distinct.\nAll values in input are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nX N\np_1 ... p_N\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 16 5\n4 7 10 6 5\n\n\n\n\n\nSample Output 18\n\nAmong the integers not contained in the sequence 4, 7, 10, 6, 5, the one nearest to 6 is 8.\n\n\n\n\n\nSample Input 210 5\n4 7 10 6 5\n\n\n\n\n\nSample Output 29\n\nAmong the integers not contained in the sequence 4, 7, 10, 6, 5, the ones nearest to 10 are 9 and 11. We should print the smaller one, 9.\n\n\n\n\n\nSample Input 3100 0\n\n\n\n\n\n\nSample Output 3100\n\nWhen N = 0, the second line in the input will be empty. Also, as seen here, X itself can be the answer.\n\n","orig_lang_html":"<span class=\"lang-en\">\n<p>Score : <var>300<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>Given are an integer <var>X<\/var> and an integer sequence of length <var>N<\/var>: <var>p_1, \\ldots, p_N<\/var>.<\/p>\n<p>Among the integers not contained in the sequence <var>p_1, \\ldots, p_N<\/var> (not necessarily positive), find the integer nearest to <var>X<\/var>, that is, find the integer whose absolute difference with <var>X<\/var> is the minimum. If there are multiple such integers, report the smallest such integer.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li><var>1 \\leq X \\leq 100<\/var><\/li>\n<li><var>0 \\leq N \\leq 100<\/var><\/li>\n<li><var>1 \\leq p_i \\leq 100<\/var><\/li>\n<li><var>p_1, \\ldots, p_N<\/var> are all distinct.<\/li>\n<li>All values in input are integers.<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>X<\/var> <var>N<\/var>\n<var>p_1<\/var> <var>...<\/var> <var>p_N<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>Print the answer.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>6 5\n4 7 10 6 5\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>8\n<\/pre>\n<p>Among the integers not contained in the sequence <var>4, 7, 10, 6, 5<\/var>, the one nearest to <var>6<\/var> is <var>8<\/var>.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>10 5\n4 7 10 6 5\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>9\n<\/pre>\n<p>Among the integers not contained in the sequence <var>4, 7, 10, 6, 5<\/var>, the ones nearest to <var>10<\/var> are <var>9<\/var> and <var>11<\/var>. We should print the smaller one, <var>9<\/var>.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>100 0\n\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>100\n<\/pre>\n<p>When <var>N = 0<\/var>, the second line in the input will be empty. Also, as seen here, <var>X<\/var> itself can be the answer.<\/p><\/section>\n<\/div>\n<\/span>","orig_lang_string":"\nScore : 300 points\n\n\nProblem StatementGiven are an integer X and an integer sequence of length N: p_1, \\ldots, p_N.\nAmong the integers not contained in the sequence p_1, \\ldots, p_N (not necessarily positive), find the integer nearest to X, that is, find the integer whose absolute difference with X is the minimum. If there are multiple such integers, report the smallest such integer.\n\n\n\n\nConstraints\n1 \\leq X \\leq 100\n0 \\leq N \\leq 100\n1 \\leq p_i \\leq 100\np_1, \\ldots, p_N are all distinct.\nAll values in input are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nX N\np_1 ... p_N\n\n\n\n\n\nOutputPrint the answer.\n\n\n\n\n\n\nSample Input 16 5\n4 7 10 6 5\n\n\n\n\n\nSample Output 18\n\nAmong the integers not contained in the sequence 4, 7, 10, 6, 5, the one nearest to 6 is 8.\n\n\n\n\n\nSample Input 210 5\n4 7 10 6 5\n\n\n\n\n\nSample Output 29\n\nAmong the integers not contained in the sequence 4, 7, 10, 6, 5, the ones nearest to 10 are 9 and 11. We should print the smaller one, 9.\n\n\n\n\n\nSample Input 3100 0\n\n\n\n\n\n\nSample Output 3100\n\nWhen N = 0, the second line in the input will be empty. Also, as seen here, X itself can be the answer.\n\n","solve_rate":0.4471230687,"codenet_problem_id":"p02641","input_testcases":{"67":"2 0\n3 6 1 8 0","103":"10 5\n4 7 10 6 5","52":"15 1\n7 5 3 16 11","92":"12 1\n2 5 3 16 13","91":"15 1\n2 5 6 16 11","40":"6 2\n4 7 15 16 2","53":"6 0\n4 8 14 16 7","7":"6 5\n3 7 10 6 5","101":"6 5\n4 7 10 6 5","100":"6 5\n4 7 10 6 5","90":"6 0\n4 14 11 16 7","56":"15 1\n2 5 3 16 11","48":"15 3\n7 5 3 16 8","66":"2 0\n4 6 1 8 0","74":"6 3\n4 7 15 8 2","84":"15 3\n7 5 3 16 9","80":"6 0\n8 3 15 16 2","2":"6 2\n4 7 10 8 5","54":"15 1\n1 5 3 16 11","89":"15 1\n1 8 3 16 11","43":"6 0\n4 3 15 16 2","68":"2 0\n3 6 1 8 -1","38":"6 2\n4 7 15 8 2","36":"6 2\n4 7 10 8 2","50":"15 3\n7 5 3 16 11","87":"15 1\n7 5 2 16 11","71":"6 2\n4 7 10 14 5","55":"6 0\n4 8 11 16 7","88":"6 0\n4 8 2 16 7"},"output_testcases":{"67":"2\n","103":"9\n","52":"15\n","92":"12\n","91":"15\n","40":"6\n","53":"6\n","7":"4\n","101":"8\n","100":"8\n","90":"6\n","56":"15\n","48":"15\n","66":"2\n","74":"6\n","84":"15\n","80":"6\n","2":"6\n","54":"15\n","89":"15\n","43":"6\n","68":"2\n","38":"6\n","36":"6\n","50":"15\n","87":"15\n","71":"6\n","55":"6\n","88":"6\n"},"n_missing":75,"programs":["x,n=map(int,input().split())\np=list(map(int,input().split()))\na=[0 for i in range(102)]\nfor i in range(n):\n    a[p[i]]+=1\nk=0\nwhile True:\n    if a[x-k]==0:\n        print(x-k)\n        break\n    \n    if a[x+k]==0:\n        print(x+k)\n        break\n    k+=1","import math\ndef facts(n):\n    ans = []\n    for  i in range(1, int(math.sqrt(n)+1)):\n        if(n%i==0):\n            ans.append(i)\n            ans.append(n\/\/i)\n    ans = sorted(list(dict.fromkeys(ans)))\n    if(ans[-1]==n):\n        ans = ans[:-1]\n    return ans\n\nx,n = map(int, input().split())\nnums = sorted(list(map(int, input().split())))\nans = 101\nbfnd, ffnd = False, False\ns1, s2 = 0,0\na, b = x,x\nwhile(not bfnd):\n    if(x-s1 not in nums):\n        a = x-s1\n        bfnd = True\n        break\n    else:\n        s1+=1\nwhile(not ffnd):\n    if(x+s2 not in nums):\n        b = x+s2\n        ffnd = True\n        break\n    else:\n        s2+=1\nans = 0\nif(abs(x-a) <= abs(x-b)):\n    ans = a\nelse:\n    ans = b\nprint(ans)","X, N = map(int, input().split())\nP = list(map(int, input().split()))\n\nlis = [1] * 100\nfor p in P: lis[p-1] -= 1\n\nfor i in range(50):\n    up = X+i\n    down = X-i\n    if lis[down-1] == 1:\n        print(down)\n        exit()\n    elif lis[up-1] == 1:\n        print(up)\n        exit()\n\n","x, n = map(int, input().split(\" \"))\n\np = input()\nif p:\n    p =list(map(int,p.split(\" \")))\n    result = 1000\n    a = 1000\n    for i in range(-1, 102):\n        if i in p:\n            continue\n        else:\n            tmp = abs(i - x)\n            if tmp < result:\n                result = tmp\n                a = i\n            elif tmp == result:\n                if i <= a:\n                    a = i\n    print(a)\n\nelse:\n    print(x)\n\n","x, n = map(int, input().split())\nlist_P = list(map(int, input().split()))\nlist_P = set(list_P)\nans = pow(10, 10)\n\nfor i in range(-110, 111):\n    if abs(i-x) < abs(x-ans):\n        if i not in list_P:\n            ans = i\n\nprint(ans)","X, N = map(int, input().split())\np_list = sorted(list(map(int, input().split())), reverse = True)\n\n\n\nif (not X in p_list) or (N == 0):\n    ans = X\nelse:\n    p_min, p_max = p_list[-1], p_list[0]\n    if X < p_min:\n        ans = p_min - 1\n    else:\n        m = min(abs(X - p_min), abs(X - p_max))\n        for i in range(1, m + 2):\n            if not X - i in p_list:\n                ans = X - i\n                break\n            if not X + i in p_list:\n                ans = X + i\n                break\n\nprint(ans)\n\n\n\n\n\n","x, n = map(int, input().split())\nif n!=0:\n    lst = [i for i in range(102)]\n    a = list(map(int, input().split()))\n\n    for i in range(n):\n        lst.remove(a[i])\n    \n    if x in lst:\n        print(x)\n    else:\n        b=x\n        c=x\n        for i in range(100):\n            b-=1\n            c+=1\n            if b in lst:\n                print(b)\n                break\n            elif c in lst:\n                print(c)\n                break\n    \nelse:\n    print(x)","x, n = map(int,input().split())\nif n != 0:\n  p = list(map(int,input().split()))\nelse:\n  print(x)\n  exit()\n\nfor j in range(100):\n  if all(x-j != i for i in p):\n    print(x-j)\n    exit()\n  elif all(x+j != i for i in p):\n    print(x+j)\n    exit()","x,n = map(int,input().split())\nif n == 0:\n  print(x)\n  exit()\n  \np = list(map(int,input().split()))\n\nmin_num = None\nmax_num = None\n\nfor i in range(x,-1000, -1):\n  if i not in p:\n    min_num = i\n    break\n    \nfor i in range(x, 1000):\n  if i not in p:\n    max_num = i\n    break\n    \nprint(abs(max_num -x ) , abs(min_num -x ))\nif abs(max_num -x ) >=abs(min_num -x ):\n  print(min_num)\nelse :\n  print(max_num)\n  ","# x,n = map(int, input().split())\nx,n = map(int, \"100 0\".split())\n# line = list(map(int, input().split()))\nline = list(map(int, \"\".split()))\n\nplus = x\nminus = x\n\nif not x in line:\n    print(x)\n    exit()\n\nwhile True:\n\n    if plus <= 100:\n        plus += 1\n\n    if minus >= 0:\n        minus -=1\n\n\n    if not minus in line:\n        print(minus)\n        exit()\n\n    if not plus in line:\n        print(plus)\n        exit()\n\n    if plus > 100 and minus < 0:\n      exit()\n","import numpy as np\nx,n =map(int,input().split())\n\nif  n==0:\n print(x)\nelse:\n P =list(map(int,input().split()))\n l = list(range(2*x))\n result = list(set(l) - set(P))\n abs = list(np.abs(np.array(result)-x))\n abs.remove(0)\n min = min(abs)\n print(abs)\n print(result[abs.index(min)])","x, n = map(int, input().split())\np = set(map(int, input().split()))\nINF = 10**10\n\ndist = []\nfor i in range(102):\n    if i in p:\n        dist.append((i, INF))\n    else:\n        dist.append((i, abs(x - i)))\n\ndist.sort(key=lambda x: x[1])\nprint(dist[0][0])\n","X, N = map(int, input().split())\n\nif N == 0:\n  print(X)\n  exit()\n\nP = list(map(int, input().split()))\n\n\n\nfor i in range (100+1):\n  if(X-i) not in P:\n    print(X-i)\n    exit()\n  elif (X+i) not in P:\n    print(X+i)\n    exit()\n      \n  else:\n    continue","x,y=map(int,input().split())\na=list(map(int,input().split()))\na=set(a)\nfor i in range(101):\n  \n  if x-i not in a:\n        print(x-i)\n        exit()\n  elif x+i not in a:\n      print(x+i)\n      exit()\n","X, N = list(map(int, input().split()))\nif N == 0:\n  print(X)\n  exit()\np = list(map(int, input().split()))\n\np_ = [i for i in range(101)]\np_ = list(set(p_) - set(p))\nif p_.count(X) != 0:\n  p_.remove(X)\nlist = []\nlist_ = []\nfor j in p_:\n  C = abs(X-j)\n  list.append(C)\n  list_.append(X-j)\nlist.sort()\nif list_.count(list[0]) == 0:\n  print(X+list[0])\nelse:\n  print(X-list[0])","import math\nimport pprint\nimport fractions\nimport collections\nimport itertools\nfrom decimal import *\nX,N=map(int,input().split())\np=list(map(int,input().split()))\nn=len(p)\nd={}\nl=[i-1 for i in range(104)]\n#print(l)\ni=0\nwhile i<n:\n    for j in range(len(l)):\n        if p[i]==l[j]:\n            l.pop(j)\n            break\n    #print(l)\n    #input()\n    i=i+1\nminim=float(\"inf\")\nl2=[]\nfor i in range(len(l)):\n    if minim>abs(l[i]-X):\n        minim=abs(l[i]-X)\n        l2=[]\n        l2.append(l[i])\n    elif minim==abs(l[i]-X):\n        l2.append(l[i])\n#l2=list(l2)\n#print(type(l2))\nprint(min(l2))\n\n","# -*- coding: utf-8 -*-\n\nimport sys\nimport math\nfrom decimal import Decimal, ROUND_DOWN\n\n\ndebug = False\n\ndef log(text):\n    if debug:\n        print(text)\n\ndef parse_input(lines_as_string = None):\n\n    global debug\n    lines = []\n    if lines_as_string is None:\n        debug = False\n        # for line in sys.stdin:\n        #     lines.append(line)\n        lines.append(input())\n        lines.append(input())\n    else:\n        debug = True\n        lines = [e for e in lines_as_string.split(\"\\n\")][1:-1]\n\n    (x, n) = [int(e) for e in lines[0].split(' ')]\n    if n >= 1:\n        p = [int(e) for e in lines[1].split(' ')]\n    else:\n        p = []\n\n    return (x, n, p)\n\n\ndef solve(x, n, p):\n    \n    pp = set(p)\n    result = None\n    for i in range(0, 99):\n        xa = x - i\n        xb = x + i\n\n        if xa in pp:\n            pass\n        else:\n            result = xa\n            break\n\n        if xb in pp:\n            pass\n        else:\n            result = xb\n            break\n\n\n    return result\n    \n\n\ndef main():\n    # \u51fa\u529b\n    result = solve(*parse_input())\n    if isinstance(result, list):\n        for r in result:\n            print(\"%s\" % r, sep='')\n    else:\n        print(\"%s\" % result, sep='')\n\nif __name__ == '__main__':\n\n    main()\n\t","import sys\nX,N=map(int, input().split())\np=set(list(map(int, input().split())))\ncount=0\nif N==0:\n    print(X)\n    sys.exit()\n\nwhile(True):\n    x1=X-count\n    x2=X+count\n    if x1 not in p:\n        print(x1)\n        sys.exit()\n    if x2 not in p:\n        print(x2)\n        sys.exit()    \n    count+=1\n","X, N = map(int, input().split())\np = list(map(int, input().split()))\ntmp = 101\nans = 101\nfor i in range(1, 101):\n    if i not in p:\n        if tmp == abs(X-i):\n            if ans > i:\n                ans = i\n        elif tmp >= abs(X-i):\n            ans = i\n            tmp = abs(X-i)\nprint(ans)\n","x, n = map(int, input().split())\np = list(map(int ,input().split()))\np.sort()\nans = []\nfor i in range(100):\n    x_left = x-i\n    x_right = x + i\n    if x_left not in p:\n        print(x_left)\n        exit()\n    elif x_right not in p:\n        print(x_right)\n        exit()\n","x,n = map(int, input().split())\nl = list(map(int, input().split()))\n\nl.sort()\n\nif x not in l:\n    print(x)\n    exit()\nelse:\n    a = l.index(x)\n\nif a == n-1:\n    if l[a-1] == x-1:\n        print(x+1)\n        exit()\n    else:\n        print(x-1)\n        exit()\nelif a == 0:\n    print(x-1)\n    exit()\n    \np=a-1\nf=a+1\nwhile p >= 0 and f <= n-1:\n    if l[p] < x-(a-p):\n        print(x-(a-p))\n        exit()\n    elif l[f] > x+(f-a):\n        print(x+(f-a))\n        exit()\n    p -= 1\n    f += 1\n\nif p == -1:\n    print(l[0]-1)\nelif f == n:\n    print(l[-1]+1)","X, N = map(int, input().split())\nif N == 0:\n  print(X)\n  exit()\np = list(map(int, input().split()))\nnumlist = []\n\nfor i in range(102):\n  if not i in p:\n    numlist.append(i)\nm = 500\nfor j in numlist:\n  sa = abs(X-j)\n  if sa < m:\n    m = sa\n    num = j\n\nprint(num)","x, n = map(int, input().split())\n\nif n!=0:\n  p_list = list(map(int, input().split()))\n\n  res = set(range(102)) - set(p_list)\n  res = [(abs(r-x), r) if r<=x else (abs(r-x)+0.5, r)\n         for r in res]\n  res = sorted(res, key=lambda r: r[0])\n\n  print(res[0][1])\nelse:\n  print(x)","import collections\nx,n=map(int,input().split())\nif n!=0:\n    l=list(map(int,input().split()))\n    v=collections.Counter(l)\nif n==0:\n    print(x)\nelse:\n    for i in  range(101):\n        if x not in v:\n            ans=x\n            break\n            \n        if x+i not in v:\n            ans=x+i\n            break\n        if x-i not in v:\n            ans=x-i\n            break\n    print(ans)\n        \n\n        ","X, N = map(int, input().split())\np = list(map(int, input().split()))\n\ndiff = 123456\nans = -1\nfor i in range(102):\n    if i in p: continue\n    if diff > i - X:\n        diff = abs(i - X)\n        ans = i\nprint(ans)","x,n=map(int,input().split())\np=set(map(int,input().split()))\n\nif len(p)==0:\n  print(x)\n  exit(0)\n\nans=1\nwhile True:\n  if x-ans not in p:\n    print(x-ans)\n    exit(0)\n  elif x+ans not in p:\n    print(x+ans)\n    exit(0)\n  ans+=1\n","X,N=map(int,input().split())\nif N==0:\n  print(X)\nelse:\n  p=list(map(int,input().split()))\n  q=[i-X for i in p]\n  qs=set(q)\n  print(q)\n\n  for i in range(N):\n    if -i not in qs:\n      print(X-i)\n      break\n    elif i not in qs:\n      print(X+i)\n      break","x, n = map(int, input().split())\nif n == 0:\n    print(x)\nelse:\n    p = set(list(map(int, input().split())))\n    \n    i = 0\n    while(True):\n        cand1 = x - i\n        cand2 = x + i\n        if cand1 not in p:\n            print(cand1)\n            break\n        elif cand2 not in p:\n            print(cand2)\n            break\n        i += 1","X,N = [int(x) for x in input().split()]\np = [int(x) for x in input().split()]\n\nif N != 0:\n    if X in p:\n        sorted_p = sorted(p)\n\n        x = sorted_p.index(X)\n            \n        def checknum(d,loweridx,upperidx):\n            upper = sorted_p[upperidx]\n            lower = sorted_p[loweridx]\n            if X-d == lower:\n                if X+d == upper:\n                    if loweridx == 0:\n                        print(X-d-1)\n                    elif upperidx == N-1 and sorted_p[loweridx-1] == X-d-1:\n                        print(X+d+1)\n                    else:\n                        checknum(d+1,loweridx-1,upperidx+1)\n                else:\n                    print(X+d)        \n            else:\n                return print(X-d)\n\n        if x == 0:\n            print(X-1)\n        elif x == N-1:\n            if sorted_p[x-1] != X-1:\n                print(X-1)\n            else:\n                print(X+1)\n        else:\n            checknum(1,x-1,x+1)\n    else:\n        print(X)\nelse:\n    print(X)","x, n = map(int, input().split())\narr = list(map(int, input().split()))\nxSet = set(arr)\n\nnotInc = [i for i in range(-1, 102) if i not in xSet]\nprint(sorted(notInc, key = lambda i : abs(i - x))[0])\n","import sys\nx,n = list(map(int, input().split()))\n\nif n==0:\n    print(x)\n    sys.exit()\n    \nli = sorted(list(map(int, input().split())))\nli2 = [i for i in range(1,101)]\n\nif n == 100 and x <= 50:\n    print(0)\nelif n == 100 and 50 < x:\n    print(101)\nelse:\n    li3 = list(set(li2)-set(li))\n    li4 = [i-x for i in li3]\n    li5 = [abs(i) for i in li4]    \n    print(li3[li5.index(min(li5))])    ","x,n = map(int, input().split())\nseq = [int(x) for x in input().split()]\n\ndef solve(x, n, seq):\n    if n == 0:\n        print(x)\n        return\n\n    lower = x - 1\n    higher = x + 1\n\n    seq_set = set()\n\n    for i in range(n):\n        current = seq[i]\n        seq_set.add(current)\n    \n    while lower in seq_set and lower > 1:\n        lower -= 1\n    \n    while higher in seq_set and higher < 100:\n        higher += 1\n    \n    lower_diff = abs(lower - x)\n    higher_diff = abs(higher - x)\n\n    if lower_diff <= higher_diff and lower not in seq_set:\n        print(lower)\n    elif higher not in seq_set:\n        print(higher)\n    else:\n        print(x)\n    \n\nsolve(x,n,seq)\n    \n\n","x, n = map(int, input().split())\nif n:\n\tp = list(map(int, input().split()))\n\n\tfor i in range(n+1):\n\t\tif x - i in p:\n\t\t\tprint(x-1)\n\t\t\tbreak\n\t\tif x + i in p:\n\t\t\tprint(x+1)\n\t\t\tbreak\nelse:\n\tprint(x)","x, n = map(int, input().split())\np = set(list(map(int, input().split())))\na = set(list(range(102)))\na = list(a - p)\na.sort()\n\ntmp = 10 ** 10\nfor i in a:\n    if tmp > abs(x - i):\n        tmp = abs(x - i)\n        ans = i\nprint(ans)","import sys\n\nX, N = map(int, input().split())\nlist_p = list(map(int, input().split()))\n\nif N == 0:\n    print(X)\n    sys.exit()\n\nall_list = [int(x) for x in range(min(list_p), max(list_p) + 1)]\ntarget_list = sorted(list(set(list_p) ^ set(all_list)))\n\nans = [abs(num - X) for num in target_list]\n# print(ans)\n# print(min(ans))\n# print(ans.index(min(ans)))\nprint(target_list[ans.index(min(ans))])\n","x, n = list(map(int, input().split()))\nif not n:\n  print(x) \nelse:\n  l = list(map(int, input().split()))\n  dic = {} \n  for ll in l: dic[ll] = 1\n  i = 0\n  while true:\n    if not dic.get(x-i,0):\n      print(x-i)\n      break\n    elif not dic.get(x+i, 0):\n      print(x+i) \n      break\n    i+=1","X, N = [int(x) for x in input().split()]\nif N:\n    P  = [int(x) for x in input().split()]\n    P = set(P)\nelse:\n    P = set()\nbest = (float('inf'), )\nfor i in range(0, 102):\n    if i not in P:\n        best = min(best, (abs(i - X), i))\nprint(best[1])","#\u30c7\u30d5\u30a9\u30eb\u30c8\nimport itertools\nfrom collections import defaultdict\nimport collections\nimport math\nimport sys\nsys.setrecursionlimit(200000)\nmod = 1000000007\n\nx, n = map(int, input().split())\np = list(map(int, input().split()))\n\nsub = [False] * 210\nfor i in range(n):\n    sub[p[i] + 105] = True\nsub[x] = True\n\nans = mod\nnn = 0\nfor i in range(210):\n    if not sub[i]:\n        if ans > abs((i - 105) - x):\n            nn = i - 105\n            ans = abs((i - 105) - x)\n            \n\nprint(nn)","x,n = [int(j) for j in input().split()]\nl = set([int(j) for j in input().split()])\nans1 = x+n\nfor i in range(x, x+n):\n    if i not in l:\n        ans1 = i\n        break\nfor i in range(x, -1, -1):\n    if i not in l:\n        ans2 = i\n        break\nif abs(ans1-x)<abs(ans2-x):\n    print(ans1)\nelse:\n    print(ans2)\n\n","x,n=map(int,input().split())\nQ=list(map(int,input().split()))\n\nif n==0:\n  print(x);exit()\n\nA=[]\nfor i in range(1,107):\n  A.append(-i)\n  A.append(i)\nfor i in A:\n  if not i in Q:\n    print(i)\n    exit()","x, n = map(int, input().split())\nif n == 0:\n    champ = x\nelse:\n    p = list(map(int, input().split()))\n    p.sort()\n    min = 100\n    sa = 0\n    champ = 0\n    for i in range(-100, 100):\n        if i in p:\n            continue\n        sa = abs(x - i)\n        if min == sa:\n            break\n        elif min > sa:\n            min = sa\n            champ = i\n            \nprint(champ)\n    ","x,n=map(int,input().split())\nif n==0:\n  print(x)\n  exit()\nP=set(list(map(int,input().split())))\n\ndiff= 1000\nans = 0\nfor i in range(101):\n  if i in P: continue\n  if abs(x-i)<diff:\n    diff = abs(x-i)\n    #print(diff,i)\n    ans = i\nprint(ans)","X, N = map(int, input().split())\nif N == 0:\n    print(X)\nelse:\n    P = list(map(int, input().split()))\n    for i in range(1,1000):\n        if (X-i) not in P:\n            print(X-i)\n            break\n        elif (X+i) not in P:\n            print(X+i)\n            break","from collections import defaultdict as dd\nx,n=map(int, input().split())\nar=list(map(int,input().split()))\nd=dd(int)\nfor i in ar:\n    d[i]=1\nlow,high=0,0\nfor i in range(x,-2,-1):\n    if d[i]==0:\n        low=i\n        break\nfor i in range(x,102):\n    if d[i]==0:\n        high=i\n        break    \nif high-x<x-low: print(high)\nelse: print(low)\n","X, N = map(int,input().split(' '))\nif N == 0:\n    print(X)\n    exit()\n\np = input().split(' ')\np =[int(i) for i in p]\nif X not in p:\n    print(X)\n    exit()\n\nnum_list = [int(i-99) for i in range(200)]\n[num_list.remove(p[i]) for i in range(N)]\ntmp = [0] * int(len(num_list))\n\n\nfor i in range(len(num_list)):\n    tmp[i] = abs(num_list[i] - X)\n\nans = tmp.index(min(tmp))\n# print(num_list)\n# print(ans)\nprint(num_list[ans])\n","x,n=map(int,input().split())\np=list(map(int,input().split()))\n\na=[0]*102\nfor i in range(n):\n    a[p[i]]+=1\nl=x\ns=x\nwhile True:\n    if a[s]==0:\n        ans=s\n        break\n    s-=1\n    if a[l]==0:\n        ans=l\n        break\n    l+=1\n    \nprint(ans)","def main():\n    x, n = map(int, input().split())\n    p = set(map(int, input().split()))\n    diff = float(\"inf\")\n    answer = 0\n    for i in range(102):\n        if i not in p:\n            if abs(i - x) < diff:\n                diff = abs(i - x)\n                answer = i\n    print(answer)\n\n\nif __name__ == '__main__':\n    main()\n\n","#!\/usr\/bin\/env python3\nimport sys\n\n\ndef solve(X: int, N: int, p: \"List[int]\"):\n    if not X in p:\n        print(X)\n        return\n    for i in range(1, 100):\n        left = X - i\n        if not left in p:\n            print(left)\n            return\n        right = X + i\n        if not right in p:\n            print(right)\n            return\n    return\n\n\n# Generated by 1.1.7.1 https:\/\/github.com\/kyuridenamida\/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    X = int(next(tokens))  # type: int\n    N = int(next(tokens))  # type: int\n    p = [int(next(tokens)) for _ in range(N)]  # type: \"List[int]\"\n    solve(X, N, p)\n\nif __name__ == '__main__':\n    main()\n","import numpy as np\n[x, N] = list(map(int, input().split()))\nif N != 0:\n  P = list(map(int, input().split()))\n  if x < 50:\n    X = list(range(2 * x + 1))\n  else:\n    th = 2 * x - 101\n    X = [i for i in range(th, 100)]\n    P = [p for p in P if p >= th]\n  X = np.delete(X, P)\n  delta = [np.abs(x - p) for p in X]\n  ind = delta.index(min(delta))\n  ans = X[ind]\nelse:\n  ans = x\nprint(ans)","X,N = map(int,input().split())\n\nif N==0:\n  print(X)\nelse:\n  P = list(map(int,input().split()))\n  Q = [n for n in range(-1000,1000) if n not in P]\n  a = 10000\n  d1 = 10000\n  \n  for q in Q:\n    d2 = abs(q-X)\n    if d2<d1:\n      d1 = d2\n      a = q\n  \n  print(a)\n","import sys\nx,n = map(int, sys.stdin.readline().rstrip(\"\\n\").split())\np = [int(s) for s in sys.stdin.readline().rstrip(\"\\n\").split()]\nnum = [i for i in range(1,101)]\nfor i in range(n):\n    num.remove(p[i])\nif not num:\n    pass\nelif x in num:\n    print(x)\nelse:\n    d = 1\n    while True:\n        if x-d in num:\n            print(x-d)\n            break\n        elif x+d in num:\n            print(x+d)\n            break\n        else:\n            d += 1","import sys\n\nx,n = map(int,input().split())\np = list(map(int,input().split()))\n\nsa = 300\n\nfor i in range(101):\n    if abs(i-x+1) < sa:\n        if not((i+1) in p):\n            sa = abs(i-x+1)\n            ans = i+1\nprint(ans)","def main():\n    X, N = map(int, input().split())\n    if N == 0:\n        print(X)\n        return\n\n    A = [int(i) for i in input().split()]\n    C = [False] * 102\n    for v in A:\n        C[v] = True\n\n    d = 1000000\n    ans = 0\n    for i in range(102):\n        if C[i] == False:\n            if d > abs(X - i):\n                d = abs(X - i)\n                ans = i\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()","import sys\nX, N = map(int, input().split())\np = list(map(int, input().split()))\n\nfor i in range(X+1):\n    for j in [-1, 1]:\n        a = X + i * j\n        if a not in p:\n            print(a)\n            exit(0)","X, N = map(int,input().split())\np = set(list(map(int,input().split())))\nif N == 0:\n    print(X)\n    exit(0)\n\nL = []\nfor k in range(0,200):\n    if k not in p:\n        L.append(k)\n\ntemp = 100000\nans = -1\nfor e in L:\n    if temp > abs(e-X):\n        temp = abs(e-X)\n        ans = e\nprint(ans)\n","X,N = map(int,input().split())\n\nif N==0:\n    print(X)\n    exit()\n\np = list(map(int,input().split()))\nq = [i for i in range(-100,101)]\nli = set(p) ^ set(q)\ntmp = 1\nans = 0\nwhile(1):\n    if X-tmp in li:\n        ans = X-tmp\n        break\n    elif X+tmp in li:\n        ans = X+tmp\n        break\n    tmp += 1\nprint(ans)\n","X, N = map(int,input().split())\nPs =  set(map(int, input().split()))\nfor i in range(N+1):\n    if (X-i) not in Ps:\n        print(X-i)\n        exit()\n    elif (X+i) not in Ps:\n        print(X+i)\n        exit()\n","# C\n\nX, N = map(int,input().split())\n\nP = list(map(int,input().split()))\n\nans = X\ntemp1 = X\ntemp2 = X\n\nfor i in range(N):\n  temp1 = temp1 - 1\n  temp2 = temp2 + 1\n  if not temp1 in P:\n    ans = temp1\n    break\n  elif not temp2 in P:\n    ans = temp2\n    break\n\nprint(ans)\n\n\n\n","x, n=map(int, input().split())\nif n==0:\n    print(x)\n    exit()\nelse:\n    dic=list(map(int, input().split()))\n\nif x not in dic:\n    print(n)\nelse:\n    for i in range(1, 101):\n        a=x-i\n        b=x+i\n        if a not in dic and b not in dic:\n            print(min(a,b))\n            exit()\n        if a not in dic:\n            print(a)\n            exit()\n        if b not in dic:\n            print(b)\n            exit()","import sys\nx, n = list(map(int,input().split()))\nif n>0:\n    p = list(map(int,input().split()))\nelse:\n    print(x)\n    sys.exit()\np.sort()\nxmin = x\nwhile True:\n    if xmin in p:\n        xmin -= 1\n    else:\n        break\nxmax = x\nwhile True:\n    if xmax in p:\n        xmax += 1\n    else:\n        break\n# print(xmin,xmax)\nprint(xmin if abs(x-xmin)<=abs(x-xmax) else xmax)","x,n=map(int,input().split())\np = list(map(int,input().split()))\np.sort()\nb = []\nfor i in range(1,101):\n    if not (i in p):\n        b.append((i,abs(i-x)))\n\nb.sort(key=lambda x:x[1])\nprint(b[0][0])","x,y = map(int,input().split(\" \"))\nif y == 0:\n    print(x)\n    exit()\nar = list(map(int,input().split(\" \")))\nif x not in ar:\n    print(x)\nelse:\n    a = x\n    b = x\n    while True:\n        a -= 1\n        if a not in ar:\n            print(a)\n            exit()\n        b += 1\n        if b not in ar:\n            print(b)\n            exit()","import sys\n# X\u306f\u3082\u3063\u3068\u3082\u8fd1\u3044\u6574\u6570\uff0cN\u306f\u4e0e\u3048\u3089\u308c\u308bP\nX,N = map(int, input().split())\n\nif N == 0:\n  print(X)\n  sys.exit()\n\narr = list(map(int, input().split()))\n\ndef saiki():\n  mainasu = X - 1\n  purasu = X + 1\n  if X in arr:\n    if mainasu in arr:\n      if purasu in arr:\n        saiki()\n      else:\n        print(purasu)\n    else:\n      print(mainasu)\n  else:\n    print(X)\n\nsaiki()","def main():\n\tx, n = map(int, input().split())\n\tarr = set(list(map(int, input().split())))\n\tfor d in range(0, 1000):\n\t\tfor m in range(-1, 2, 2):\n\t\t\ty = x + m * d\n\t\t\tif y not in arr:\n\t\t\t\tprint(y)\n\t\t\t\treturn\n\nmain()","X,N=map(int, input().split())\np_ls=list(map(int, input().split()))\n\ni=0\nwhile True:\n\tans_n=X-i\n\tif ans_n not in p_ls:\n\t\tprint(ans_n)\n\t\tbreak\n\t\n\tans_p=X+i\n\tif ans_p not in p_ls:\n\t\tprint(ans_p)\n\t\tbreak\n\t\n\ti+=1\n\n\n\n# 2darray [[0] * 4 for i in range(3)]","# C\nX, N = map(int, input().split())\nA = list(map(int, input().split()))\ndct = {i: [] for i in range(101)}\nfor i in A:\n    num = abs(X - i)\n    dct[num].append(i)\nfor k,v in dct.items():\n    if (k == 0):\n        if (len(v) == 0):\n            print(X)\n            break\n    elif (len(v) == 0):\n        if (X >= k):\n            print(X - k)\n            break\n        else:\n            print(k - X)\n            break\n    elif (len(v) == 1):\n        if (X - k == v[0]):\n            print(X + k)\n            break\n        else:\n            print(X - k)\n            break","x,n = map(int,input().split())\nif n == 0:\n  print(x)\n  quit()\nlis = list(map(int,input().split()))\nans = 9999999\nfor y in range(x-101,x+101):\n  if not(y in lis) and abs(x - y) < abs(x - ans):\n    ans = y\n  if not(y in lis) and abs(x - y) == abs(x - ans):\n    if ans > y:\n      ans = y\nprint(ans)","X, N = list(map(int, input().split()))\nif N != 0:\n    p = list(map(int, input().split()))\nif N == 0:\n    p = []\nif X in p:\n    Xp = X + 1\n    Xm = X - 1\n    while True:\n        if Xm in p:\n            Xm -= 1\n        else:\n            print(Xm)\n            break\n        if Xp in p:\n            Xp += 1\n        else:\n            print(Xp)\n            break\nelse:\n    print(X)\n","X,N =map(int, input().split())\n\nif(N>0):\n  P = list(map(int,input().split()))\n  #P = list(range(1,101))\n  PP = []\n  for i in range(1,101):\n    if i not in P:\n      PP.append(i)\n  if len(PP)>0:\n    lo = 0\n    hi = len(PP)-1\n    while(lo<hi):\n      mid = lo + ((hi - lo)\/\/2)\n      if PP[mid]<= X:\n        lo = mid + 1\n      else:\n        hi = mid\n    n1 = PP[lo]\n    n2 = PP[lo-1]\n    if abs(X-n1)<abs(X-n2):\n      print(n1)\n    else:\n      print(n2)\n  else:\n    print(X)\nelse:\n  print(X)\n","X,N = map(int,input().split())\nif N == 0:\n  print(X)\n  exit()\nA = list(map(int,input().split()))\nfor i in range(N):\n  if (X - i) not in A:\n    print(X-i)\n    exit()\n  elif (X + i ) not in A:\n    print(X+i)\n    exit()","X, N = list(map(int,input().split()))\nif N >0:\n    P =  list(map(int,input().split()))\nelse:\n    print(X)\n    exit()\n# \n# ans = 1000\n# P.sort()\n# ok = len(P)\n# ng = 0\n# \n# while (ok - ng)> 1:\n#     mid = (ok + ng) \/\/2\n#     if P[mid] > X:\n#         ok = mid\n#     else:\n#         ng = mid\n# \n# threshold = P[ok]\nans = None\nfor n in range(100):\n    plus = X +n\n    if plus not in P:\n        ans = plus\n    minus = X -n\n    if minus not in P:\n        ans = minus\n    if ans is not None:\n        print(ans)\n        exit()","X,N = map(int,input().split())\np = list(map(int, input().split()))\nn =max(X,N)\n\nfor i in range(n):\n  if X-i not in p:\n    print(X-i)\n    break\n  elif X+i not in p:\n    print(X+i)\n    break\n  else:\n    continue","import bisect\nimport copy\nimport heapq\nimport sys\nimport itertools\nimport math\nimport queue\nfrom functools import lru_cache\ninput = sys.stdin.readline\nsys.setrecursionlimit(1000000)\nmod = 10 ** 9 + 7 \n\ndef read_values(): return map(int, input().split())\ndef read_index(): return map(lambda x: int(x) - 1, input().split())\ndef read_list(): return list(read_values())\ndef read_lists(N): return [read_list() for n in range(N)]\n\n\ndef main():\n    X, N = read_values()\n    if N == 0:\n        input()\n        print(X)\n    else:\n        P = set(read_list())\n        for d in range(10000):\n            if X - d not in P:\n                print(X - d)\n                return\n            elif X + d not in P:\n                print(X + d)\n                return\n        \n\nif __name__ == \"__main__\":\n    main()\n\n","import os\nimport sys\nfrom io import BytesIO, IOBase\nimport math\ndef inputIntArray():\n    return list(map(int, input().rstrip().split()))\n\n\ndef inputArray():\n    return input().rstrip().split()\n\n\ndef inputVars():\n    return map(int, input().rstrip().split())\n\n\ndef inputNum():\n    return int(input())\n\n\ndef main():\n    x, n = inputVars()\n    if n == 0:\n        print(x)\n        return\n    arr = inputIntArray()\n    minRes = x\n    if x not in arr:\n        print(x)\n        return\n    minRes = float('inf')\n    dup = float('inf')\n    arr.sort()\n    if arr[0] >= x:\n        print(x-1)\n    else:\n        for num in range(-1, 110):\n            if num not in arr:\n                minRes = num if abs(num-x) < abs(x-minRes) else minRes\n    print(minRes)\n\n\n#.........................................FAST INPUT OUTPUT.......................................\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n#....................................END OF FAST I\/O............................................\n\nif __name__ == \"__main__\":\n    main()","import numpy as np\n\ndef main():\n    x, n = map(int, input().split())\n    p = list(map(int, input().split()))\n\n    p.sort()\n    q = p\n    ans = list(map(lambda _: abs(_ - x), q))\n\n    cnt = 0\n    while cnt <= 101:\n        if ans.count(cnt) == 2 and cnt != 0:\n            pass\n        elif ans.count(cnt) == 1 and cnt == 0:\n            pass\n        else:\n            if (x - cnt) in ans:\n                return x + cnt\n            else:\n                return x - cnt\n\n        cnt += 1    \n    \n\n\nif __name__ == \"__main__\":\n    print(main())","x, n = map(int, input().split())\nplist = list(map(int, input().split()))\n\nif n == 0:\n    print(x)\n    exit()\n\nfor i in range(1, 101):\n    if (x - i) not in plist:\n        print(x - i)\n        exit()\n    if (x + i) not in plist:\n        print(x + i)\n        exit()","x,n = map(int,input().split())\nP = list(map(int,input().split()))\nA = []\na = 0\nfor i in range(200):\n    if x+a in P:\n        a += 1\n    else:\n        A.append(x+a)\n        break\na = -1\nfor i in range(200):\n    if x+a in P:\n        a -= 1\n    else:\n        A.append(x+a)\n        break\n\nif abs(x-A[0]) < abs(x-A[1]):\n    print(A[0])\n    exit()\nelif abs(x-A[0]) > abs(x-A[1]):\n    print(A[1])\n    exit()\nelse:\n    print(min(A[0],A[1]))","X,N=map(int, input().split())\nif N==0:\n  print(X)\nelse:\n  p_list=list(map(int, input().split()))\n\n  i=0\n  while(True):\n\n    Xi = X - i\n    if Xi not in p_list:\n      break\n\n    Xi = X + i\n    if Xi not in p_list:\n      break\n\n    i = i + 1\n\n  print(Xi)","x, n = map(int, input().split())\nif n == 0:\n    print(x)\n    quit()\n\nps = list(map(int, input().split()))\n\nmin_near = 0\nbig_near = 0\n\nm = x\nwhile min_near == 0:\n    m -= 1\n    if not m in ps:\n        min_near = m\n\nb = x\nwhile big_near == 0:\n    b += 1\n    if not b in ps:\n        big_near = b\n\n\nmin_diff = x - min_near\nbig_diff = big_near - x\n\nif (min_diff > big_diff):\n    # big_diff\u306e\u65b9\u304c\u5dee\u304c\u5c0f\u3055\u3051\u308c\u3070big_near\n    print(big_near)\nelse:\n    # \u305d\u308c\u4ee5\u5916\u306fmin_near\n    print(min_near)\n","# arr=input().strip().split(' ')\ndef aa():\n    x,n=[int(i) for i in input().strip().split(' ')]\n    if n==0:\n        print(x)\n        return \n    arr=[int(i) for i in input().strip().split(' ')]\n    # neg,pos=[],[]\n    # for i in arr:\n    # \tif x-i >0 :\n    # \t\tpos.append(x-i)\n    # \telse:\n    # \t\tneg.append(i-x)\n    # pos=sorted(pos)\n    # neg=sorted(neg)\n    \n    diff=[]\n    for i in arr:\n\n        diff.append(x-i)\n    i=-1\n    j=0\n    while i in diff:\n        i=i-1\n    while j in diff:\n        j=j+1\n    if abs(i)<abs(j):\n        print(x-i)\n    else:\n        print(x-j)\n    # print(x+)\naa()","x, n = map(int, input().split())\nP = list(map(int, input().split()))\nif P == []:\n    print(x)\nfor i in range(n):\n    if x - i not in P:\n        print(x - i)\n        exit()\n    elif x + i not in P:\n        print(x + i)\n        exit()","import sys\ninput = sys.stdin.readline\n\nx,n = map(int,input().split())\nL=list(map(int,input().split()))\nif n==0:\n    print(x)\n    sys.exit()\nif x not in L:\n    print(x)\n    sys.exit()\nelse:\n    L.sort()\n    for i in range(1,2*x):\n        if x-i not in L:\n            print(x-i)\n            break\n        if x+i not in L:\n            print(x+i)\n            break\n\n\n        \n\n","line = list(map(int,input().split()))\nN = line[0]\nM = line[1]\ni=0\nif M==0:\n    print(N)\nelse:\n    numbers = list(map(int,input().split()))\n    while True:\n        if bool(N-i in numbers)==0:\n            print(N-i)\n            break\n        elif bool(N+i in numbers)==0:\n            print(N+i)\n            break\n        i+=1","import sys\n\nreadline = sys.stdin.readline\n\nx, n = map(int, readline().split())\nif n == 0:\n    ans = x\nelse:\n    p = list(map(int, readline().split()))\n    for i in range(100):\n        if (x - i not in p):\n            ans = x-i\n            break\n        if (x + i not in p):\n            ans = x+i\n            break\nprint(ans)","import sys\nx,n=map(int,input().split())\np=set(list(map(int,input().split())))\n\nfor i in range(100):\n    if x-i not in p:\n        print(x-i)\n        sys.exit()\n    if x+i not in p:\n        print(x+i)\n        sys.exit()\n    ","x,n=map(int,input().split())\nif n==0:\n    print(x)\n    exit()\np=list(map(int,input().split()))\nfor i in range(200):\n    if x-i not in p:\n        print(x-i)\n        break\n    elif x+i not in p:\n        print(x+i)\n        break\n","X, N = map(int, input().split())\n\nif N == 0:\n  print(X)\n  exit()\n\nimport numpy as np\np = np.array(list(map(int, input().split())))\np = p-X\n\nfor i in range(100):\n  if i in p and -1*i in p:\n    continue\n  if -1*i not in p:\n    print(X-i)\n    break\n  else:\n    print(X+i)\n    break","X, n = map(int, input().strip().split())\nif not n:\n    print(X)\n    exit()\n\nL = list(map(int, input().strip().split()))\ndist=0\nwhile True:\n    if X-dist not in L:\n        ans=X-dist\n        break\n    elif X+dist not in L:\n        ans=X+dist\n        break\n    dist+=1\nprint(ans)","X, N = map(int, input().split())\nP = list(map(int, input().split()))\n \nans = X\nfor i in range(N+1):\n    a = X + i\n    b = X - i\n    if a not in P:\n        ans = a\n        if b not in P:\n            ans = b\n        break\n    if b not in P:\n        ans = b\n        break\nprint(ans)","#! env\/bin\/local python3\nimport sys\n\nx, n = map(int, input().split())\ntry:\n    p = list(map(int, input().split()))\nexcept EOFError:\n    print(x)\n    sys.exit()\n\nsorted_p = sorted(p)\nexcept_p = [i for i in range(-101, 101) if i not in sorted_p]\n\nmemory_min = 1000\nmemory_index = None\n\nfor k, ep in enumerate(except_p):\n    if abs(ep - x) < memory_min:\n        memory_min = abs(ep - x)\n        memory_index = k\n\nprint(except_p[memory_index])\n","X, N = map(int, input().split())\n\nif N == 0:\n\tprint(X)\n\texit()\n\nP =  list(map(int, input().split()))\n\nSa = []\n\nBa = list(range(-1, 102))\nCha = list(range(-1, 102))\n\nfor i in range (0, N):\n\tif Ba.count(P[i]) > 0:\n\t\tCha.remove(P[i])\n\nDenbaba = len(Cha)\n\nfor i in range (0, Denbaba):\n\tSa.append(abs(Cha[i]-X))\n\nDa = min(Sa)\n\nfor i in range (0, Denbaba):\n\tif Sa[i] != Da:\n\t\tCha[i]=1000000\n\n\nprint(min(Cha))","# -*- coding: utf-8 -*-\nimport numpy as np\nx,n=map(int,input().split())\nif n==0:\n  print(x)\nelse:\n  plist=list(map(int,input().split()))\n  newplist=sorted(plist)\n#\u30ea\u30b9\u30c8\u304b\u3089\uff58\u306e\u5024\u3092\u5f15\u3044\u3066\u7d76\u5bfe\u5024\u3092\u3068\u3063\u305f\u3082\u306e\u3092\u30ea\u30b9\u30c8\u5316\u3059\u308b\n  p_list=[]\n  for i in newplist:\n    k=abs(i-x)\n    p_list.append(k)\n#\u6700\u5c0f\u5024\u3068\u306a\u308b\u3068\u304d\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u63a2\u3059\n  ind=np.argmin(p_list)\n  moto=newplist[ind]\n  gap=0\n  while True:\n    gap+=1\n    if (moto-gap) in newplist:\n      pass\n    else:\n      print(moto-gap)\n      break\n    if (moto+gap) in newplist:\n      pass\n    else:\n      print(moto+gap)\n      break    ","import sys\ndef getmax():\n    max = 0\n    for i in p:\n        if i > max:\n            max = i\n    return max\ndef getmin():\n    min = p[0]\n    for i in p:\n        if i < min:\n            min = i\n    return min\nX,N = map(int,input().split())\nif N ==0:\n    print(X)\n    sys.exit()\nif N == 1:\n    p = int(input())\n    print(p)\n    sys.exit()\np = list(map(int,input().split()))  #\nMIN = 101   #\nminnum = 0\nfor i in range(-101,102):\n    if not i in p:\n        if abs(i-X) < MIN:\n            MIN = abs(i-X)\n            minnum = i\nprint(minnum)\n","x, n = map(int, input().split())\nif(n == 0):\n  print(x)\n  exit()\n\np = set(map(int, input().split()))\na = set([i for i in range(105)])\nnp = a-p\n\nans = 0\ndist = 1000000\nfor i in np:\n  if(abs(x-i) < dist):\n    dist = abs(x-i)\n    ans = i\n  elif(abs(x-i) == dist):\n    ans = min(i, ans)\n  else:\n    pass\n  \nprint(ans)","import sys\nx, n = map(int, input().split())\np = []\nif n != 0:\n    p = sorted(map(int, input().split()))\nq = []\nt = 0\nfor t in range(102):\n    if t not in p:\n        q.append(t)\nm = 100000000\nans = 0\nfor i in q:\n    if abs(x - i) < m:\n        m = abs(x - i)\n        ans = i\nprint(ans)\n","x,n = map(int, input().split())\n\nif n == 0:\n    print(x)\n    exit()\n\np = list(map(int,input().split()))\n\nallList=[]\n\nfor i in range(-200,301):\n    allList.append(i)\n\ndiff = set(allList) ^ set(p)\n\n\n\ndiff = list(diff)\ndiff.append(x)\ndiff = sorted(diff)\n\n# print(diff)\n\nind = diff.index(x)\n# print(ind)\n\n# if x == 100:\n    \n\na = diff[ind-1]\nb = diff[ind+1]\n\nax = abs(a-x)\nbx = abs(b-x)\n\n# print(ax,bx)\n\nif ax==bx:\n    if a < b:\n        print(a)\n    else:\n        print(b)\n\nif ax > bx:\n    print(b)\n    exit()","X,N = map(int,input().split())\nA = list(map(int,input().split()))\nfor d in range(X+1):\n  for i in [1,-1]:\n    B = X + d*i\n    if A.count(B) == 0:\n      print(B)\n      exit(0)","x, n = input().split()\n\nif (int(n)>0):\n  add = 1\n  count = 0\n  p = list(map(int,input().split()))\n\n  if (int(x) not in p):\n    print(int(x))\n    count=1\n\n\n  while (count==0):\n    for i in range(int(n)):\n      if (abs(int(p[i])-int(x)) == add):\n        count = count+1\n    if (count==2):\n        add = add+1\n        count=0\n    if (count==1):\n      if (int(x)-add in p):\n        print(int(x)+add)\n      else:\n        print(int(x)-add)\n    if (count==0):\n      print(int(x)-add)\n      count=1\nelse:\n  print(int(x))","x, n = [int(i) for i in input().split()]\nps = [int(i) for i in input().split()]\nans = 0\nd = 100\nfor i in range(1, 101):\n    if i not in ps:\n        tmp = abs(i-x)\n        if d > tmp:\n            d = tmp\n            ans = i\n\nprint(ans)\n","x,n = map(int,input().split())\nif(n==0):\n    print(x)\n    exit()\n\np = set(map(int,input().split()))\n\nans = -2\ndif = 1000\nfor i in range(-1,102):\n    if(i in p):\n        continue\n    dif_i = abs(i-x)\n    if(dif > dif_i):\n        dif = dif_i\n        ans = i\n\nprint(ans)"],"raw_generations":["x,n=map(int,input().split())\np=list(map(int,input().split()))\na=[0 for i in range(102)]\nfor i in range(n):\n    a[p[i]]+=1\nk=0\nwhile True:\n    if a[x-k]==0:\n        print(x-k)\n        break\n    \n    if a[x+k]==0:\n        print(x+k)\n        break\n    k+=1","import math\ndef facts(n):\n    ans = []\n    for  i in range(1, int(math.sqrt(n)+1)):\n        if(n%i==0):\n            ans.append(i)\n            ans.append(n\/\/i)\n    ans = sorted(list(dict.fromkeys(ans)))\n    if(ans[-1]==n):\n        ans = ans[:-1]\n    return ans\n\nx,n = map(int, input().split())\nnums = sorted(list(map(int, input().split())))\nans = 101\nbfnd, ffnd = False, False\ns1, s2 = 0,0\na, b = x,x\nwhile(not bfnd):\n    if(x-s1 not in nums):\n        a = x-s1\n        bfnd = True\n        break\n    else:\n        s1+=1\nwhile(not ffnd):\n    if(x+s2 not in nums):\n        b = x+s2\n        ffnd = True\n        break\n    else:\n        s2+=1\nans = 0\nif(abs(x-a) <= abs(x-b)):\n    ans = a\nelse:\n    ans = b\nprint(ans)","X, N = map(int, input().split())\nP = list(map(int, input().split()))\n\nlis = [1] * 100\nfor p in P: lis[p-1] -= 1\n\nfor i in range(50):\n    up = X+i\n    down = X-i\n    if lis[down-1] == 1:\n        print(down)\n        exit()\n    elif lis[up-1] == 1:\n        print(up)\n        exit()\n\n","x, n = map(int, input().split(\" \"))\n\np = input()\nif p:\n    p =list(map(int,p.split(\" \")))\n    result = 1000\n    a = 1000\n    for i in range(-1, 102):\n        if i in p:\n            continue\n        else:\n            tmp = abs(i - x)\n            if tmp < result:\n                result = tmp\n                a = i\n            elif tmp == result:\n                if i <= a:\n                    a = i\n    print(a)\n\nelse:\n    print(x)\n\n","x, n = map(int, input().split())\nlist_P = list(map(int, input().split()))\nlist_P = set(list_P)\nans = pow(10, 10)\n\nfor i in range(-110, 111):\n    if abs(i-x) < abs(x-ans):\n        if i not in list_P:\n            ans = i\n\nprint(ans)","X, N = map(int, input().split())\np_list = sorted(list(map(int, input().split())), reverse = True)\n\n\n\nif (not X in p_list) or (N == 0):\n    ans = X\nelse:\n    p_min, p_max = p_list[-1], p_list[0]\n    if X < p_min:\n        ans = p_min - 1\n    else:\n        m = min(abs(X - p_min), abs(X - p_max))\n        for i in range(1, m + 2):\n            if not X - i in p_list:\n                ans = X - i\n                break\n            if not X + i in p_list:\n                ans = X + i\n                break\n\nprint(ans)\n\n\n\n\n\n","x, n = map(int, input().split())\nif n!=0:\n    lst = [i for i in range(102)]\n    a = list(map(int, input().split()))\n\n    for i in range(n):\n        lst.remove(a[i])\n    \n    if x in lst:\n        print(x)\n    else:\n        b=x\n        c=x\n        for i in range(100):\n            b-=1\n            c+=1\n            if b in lst:\n                print(b)\n                break\n            elif c in lst:\n                print(c)\n                break\n    \nelse:\n    print(x)","x, n = map(int,input().split())\nif n != 0:\n  p = list(map(int,input().split()))\nelse:\n  print(x)\n  exit()\n\nfor j in range(100):\n  if all(x-j != i for i in p):\n    print(x-j)\n    exit()\n  elif all(x+j != i for i in p):\n    print(x+j)\n    exit()","x,n = map(int,input().split())\nif n == 0:\n  print(x)\n  exit()\n  \np = list(map(int,input().split()))\n\nmin_num = None\nmax_num = None\n\nfor i in range(x,-1000, -1):\n  if i not in p:\n    min_num = i\n    break\n    \nfor i in range(x, 1000):\n  if i not in p:\n    max_num = i\n    break\n    \nprint(abs(max_num -x ) , abs(min_num -x ))\nif abs(max_num -x ) >=abs(min_num -x ):\n  print(min_num)\nelse :\n  print(max_num)\n  ","# x,n = map(int, input().split())\nx,n = map(int, \"100 0\".split())\n# line = list(map(int, input().split()))\nline = list(map(int, \"\".split()))\n\nplus = x\nminus = x\n\nif not x in line:\n    print(x)\n    exit()\n\nwhile True:\n\n    if plus <= 100:\n        plus += 1\n\n    if minus >= 0:\n        minus -=1\n\n\n    if not minus in line:\n        print(minus)\n        exit()\n\n    if not plus in line:\n        print(plus)\n        exit()\n\n    if plus > 100 and minus < 0:\n      exit()\n","import numpy as np\nx,n =map(int,input().split())\n\nif  n==0:\n print(x)\nelse:\n P =list(map(int,input().split()))\n l = list(range(2*x))\n result = list(set(l) - set(P))\n abs = list(np.abs(np.array(result)-x))\n abs.remove(0)\n min = min(abs)\n print(abs)\n print(result[abs.index(min)])","x, n = map(int, input().split())\np = set(map(int, input().split()))\nINF = 10**10\n\ndist = []\nfor i in range(102):\n    if i in p:\n        dist.append((i, INF))\n    else:\n        dist.append((i, abs(x - i)))\n\ndist.sort(key=lambda x: x[1])\nprint(dist[0][0])\n","X, N = map(int, input().split())\n\nif N == 0:\n  print(X)\n  exit()\n\nP = list(map(int, input().split()))\n\n\n\nfor i in range (100+1):\n  if(X-i) not in P:\n    print(X-i)\n    exit()\n  elif (X+i) not in P:\n    print(X+i)\n    exit()\n      \n  else:\n    continue","x,y=map(int,input().split())\na=list(map(int,input().split()))\na=set(a)\nfor i in range(101):\n  \n  if x-i not in a:\n        print(x-i)\n        exit()\n  elif x+i not in a:\n      print(x+i)\n      exit()\n","X, N = list(map(int, input().split()))\nif N == 0:\n  print(X)\n  exit()\np = list(map(int, input().split()))\n\np_ = [i for i in range(101)]\np_ = list(set(p_) - set(p))\nif p_.count(X) != 0:\n  p_.remove(X)\nlist = []\nlist_ = []\nfor j in p_:\n  C = abs(X-j)\n  list.append(C)\n  list_.append(X-j)\nlist.sort()\nif list_.count(list[0]) == 0:\n  print(X+list[0])\nelse:\n  print(X-list[0])","import math\nimport pprint\nimport fractions\nimport collections\nimport itertools\nfrom decimal import *\nX,N=map(int,input().split())\np=list(map(int,input().split()))\nn=len(p)\nd={}\nl=[i-1 for i in range(104)]\n#print(l)\ni=0\nwhile i<n:\n    for j in range(len(l)):\n        if p[i]==l[j]:\n            l.pop(j)\n            break\n    #print(l)\n    #input()\n    i=i+1\nminim=float(\"inf\")\nl2=[]\nfor i in range(len(l)):\n    if minim>abs(l[i]-X):\n        minim=abs(l[i]-X)\n        l2=[]\n        l2.append(l[i])\n    elif minim==abs(l[i]-X):\n        l2.append(l[i])\n#l2=list(l2)\n#print(type(l2))\nprint(min(l2))\n\n","# -*- coding: utf-8 -*-\n\nimport sys\nimport math\nfrom decimal import Decimal, ROUND_DOWN\n\n\ndebug = False\n\ndef log(text):\n    if debug:\n        print(text)\n\ndef parse_input(lines_as_string = None):\n\n    global debug\n    lines = []\n    if lines_as_string is None:\n        debug = False\n        # for line in sys.stdin:\n        #     lines.append(line)\n        lines.append(input())\n        lines.append(input())\n    else:\n        debug = True\n        lines = [e for e in lines_as_string.split(\"\\n\")][1:-1]\n\n    (x, n) = [int(e) for e in lines[0].split(' ')]\n    if n >= 1:\n        p = [int(e) for e in lines[1].split(' ')]\n    else:\n        p = []\n\n    return (x, n, p)\n\n\ndef solve(x, n, p):\n    \n    pp = set(p)\n    result = None\n    for i in range(0, 99):\n        xa = x - i\n        xb = x + i\n\n        if xa in pp:\n            pass\n        else:\n            result = xa\n            break\n\n        if xb in pp:\n            pass\n        else:\n            result = xb\n            break\n\n\n    return result\n    \n\n\ndef main():\n    # \u51fa\u529b\n    result = solve(*parse_input())\n    if isinstance(result, list):\n        for r in result:\n            print(\"%s\" % r, sep='')\n    else:\n        print(\"%s\" % result, sep='')\n\nif __name__ == '__main__':\n\n    main()\n\t","import sys\nX,N=map(int, input().split())\np=set(list(map(int, input().split())))\ncount=0\nif N==0:\n    print(X)\n    sys.exit()\n\nwhile(True):\n    x1=X-count\n    x2=X+count\n    if x1 not in p:\n        print(x1)\n        sys.exit()\n    if x2 not in p:\n        print(x2)\n        sys.exit()    \n    count+=1\n","X, N = map(int, input().split())\np = list(map(int, input().split()))\ntmp = 101\nans = 101\nfor i in range(1, 101):\n    if i not in p:\n        if tmp == abs(X-i):\n            if ans > i:\n                ans = i\n        elif tmp >= abs(X-i):\n            ans = i\n            tmp = abs(X-i)\nprint(ans)\n","x, n = map(int, input().split())\np = list(map(int ,input().split()))\np.sort()\nans = []\nfor i in range(100):\n    x_left = x-i\n    x_right = x + i\n    if x_left not in p:\n        print(x_left)\n        exit()\n    elif x_right not in p:\n        print(x_right)\n        exit()\n","x,n = map(int, input().split())\nl = list(map(int, input().split()))\n\nl.sort()\n\nif x not in l:\n    print(x)\n    exit()\nelse:\n    a = l.index(x)\n\nif a == n-1:\n    if l[a-1] == x-1:\n        print(x+1)\n        exit()\n    else:\n        print(x-1)\n        exit()\nelif a == 0:\n    print(x-1)\n    exit()\n    \np=a-1\nf=a+1\nwhile p >= 0 and f <= n-1:\n    if l[p] < x-(a-p):\n        print(x-(a-p))\n        exit()\n    elif l[f] > x+(f-a):\n        print(x+(f-a))\n        exit()\n    p -= 1\n    f += 1\n\nif p == -1:\n    print(l[0]-1)\nelif f == n:\n    print(l[-1]+1)","X, N = map(int, input().split())\nif N == 0:\n  print(X)\n  exit()\np = list(map(int, input().split()))\nnumlist = []\n\nfor i in range(102):\n  if not i in p:\n    numlist.append(i)\nm = 500\nfor j in numlist:\n  sa = abs(X-j)\n  if sa < m:\n    m = sa\n    num = j\n\nprint(num)","x, n = map(int, input().split())\n\nif n!=0:\n  p_list = list(map(int, input().split()))\n\n  res = set(range(102)) - set(p_list)\n  res = [(abs(r-x), r) if r<=x else (abs(r-x)+0.5, r)\n         for r in res]\n  res = sorted(res, key=lambda r: r[0])\n\n  print(res[0][1])\nelse:\n  print(x)","import collections\nx,n=map(int,input().split())\nif n!=0:\n    l=list(map(int,input().split()))\n    v=collections.Counter(l)\nif n==0:\n    print(x)\nelse:\n    for i in  range(101):\n        if x not in v:\n            ans=x\n            break\n            \n        if x+i not in v:\n            ans=x+i\n            break\n        if x-i not in v:\n            ans=x-i\n            break\n    print(ans)\n        \n\n        ","X, N = map(int, input().split())\np = list(map(int, input().split()))\n\ndiff = 123456\nans = -1\nfor i in range(102):\n    if i in p: continue\n    if diff > i - X:\n        diff = abs(i - X)\n        ans = i\nprint(ans)","x,n=map(int,input().split())\np=set(map(int,input().split()))\n\nif len(p)==0:\n  print(x)\n  exit(0)\n\nans=1\nwhile True:\n  if x-ans not in p:\n    print(x-ans)\n    exit(0)\n  elif x+ans not in p:\n    print(x+ans)\n    exit(0)\n  ans+=1\n","X,N=map(int,input().split())\nif N==0:\n  print(X)\nelse:\n  p=list(map(int,input().split()))\n  q=[i-X for i in p]\n  qs=set(q)\n  print(q)\n\n  for i in range(N):\n    if -i not in qs:\n      print(X-i)\n      break\n    elif i not in qs:\n      print(X+i)\n      break","x, n = map(int, input().split())\nif n == 0:\n    print(x)\nelse:\n    p = set(list(map(int, input().split())))\n    \n    i = 0\n    while(True):\n        cand1 = x - i\n        cand2 = x + i\n        if cand1 not in p:\n            print(cand1)\n            break\n        elif cand2 not in p:\n            print(cand2)\n            break\n        i += 1","X,N = [int(x) for x in input().split()]\np = [int(x) for x in input().split()]\n\nif N != 0:\n    if X in p:\n        sorted_p = sorted(p)\n\n        x = sorted_p.index(X)\n            \n        def checknum(d,loweridx,upperidx):\n            upper = sorted_p[upperidx]\n            lower = sorted_p[loweridx]\n            if X-d == lower:\n                if X+d == upper:\n                    if loweridx == 0:\n                        print(X-d-1)\n                    elif upperidx == N-1 and sorted_p[loweridx-1] == X-d-1:\n                        print(X+d+1)\n                    else:\n                        checknum(d+1,loweridx-1,upperidx+1)\n                else:\n                    print(X+d)        \n            else:\n                return print(X-d)\n\n        if x == 0:\n            print(X-1)\n        elif x == N-1:\n            if sorted_p[x-1] != X-1:\n                print(X-1)\n            else:\n                print(X+1)\n        else:\n            checknum(1,x-1,x+1)\n    else:\n        print(X)\nelse:\n    print(X)","x, n = map(int, input().split())\narr = list(map(int, input().split()))\nxSet = set(arr)\n\nnotInc = [i for i in range(-1, 102) if i not in xSet]\nprint(sorted(notInc, key = lambda i : abs(i - x))[0])\n","import sys\nx,n = list(map(int, input().split()))\n\nif n==0:\n    print(x)\n    sys.exit()\n    \nli = sorted(list(map(int, input().split())))\nli2 = [i for i in range(1,101)]\n\nif n == 100 and x <= 50:\n    print(0)\nelif n == 100 and 50 < x:\n    print(101)\nelse:\n    li3 = list(set(li2)-set(li))\n    li4 = [i-x for i in li3]\n    li5 = [abs(i) for i in li4]    \n    print(li3[li5.index(min(li5))])    ","x,n = map(int, input().split())\nseq = [int(x) for x in input().split()]\n\ndef solve(x, n, seq):\n    if n == 0:\n        print(x)\n        return\n\n    lower = x - 1\n    higher = x + 1\n\n    seq_set = set()\n\n    for i in range(n):\n        current = seq[i]\n        seq_set.add(current)\n    \n    while lower in seq_set and lower > 1:\n        lower -= 1\n    \n    while higher in seq_set and higher < 100:\n        higher += 1\n    \n    lower_diff = abs(lower - x)\n    higher_diff = abs(higher - x)\n\n    if lower_diff <= higher_diff and lower not in seq_set:\n        print(lower)\n    elif higher not in seq_set:\n        print(higher)\n    else:\n        print(x)\n    \n\nsolve(x,n,seq)\n    \n\n","x, n = map(int, input().split())\nif n:\n\tp = list(map(int, input().split()))\n\n\tfor i in range(n+1):\n\t\tif x - i in p:\n\t\t\tprint(x-1)\n\t\t\tbreak\n\t\tif x + i in p:\n\t\t\tprint(x+1)\n\t\t\tbreak\nelse:\n\tprint(x)","x, n = map(int, input().split())\np = set(list(map(int, input().split())))\na = set(list(range(102)))\na = list(a - p)\na.sort()\n\ntmp = 10 ** 10\nfor i in a:\n    if tmp > abs(x - i):\n        tmp = abs(x - i)\n        ans = i\nprint(ans)","import sys\n\nX, N = map(int, input().split())\nlist_p = list(map(int, input().split()))\n\nif N == 0:\n    print(X)\n    sys.exit()\n\nall_list = [int(x) for x in range(min(list_p), max(list_p) + 1)]\ntarget_list = sorted(list(set(list_p) ^ set(all_list)))\n\nans = [abs(num - X) for num in target_list]\n# print(ans)\n# print(min(ans))\n# print(ans.index(min(ans)))\nprint(target_list[ans.index(min(ans))])\n","x, n = list(map(int, input().split()))\nif not n:\n  print(x) \nelse:\n  l = list(map(int, input().split()))\n  dic = {} \n  for ll in l: dic[ll] = 1\n  i = 0\n  while true:\n    if not dic.get(x-i,0):\n      print(x-i)\n      break\n    elif not dic.get(x+i, 0):\n      print(x+i) \n      break\n    i+=1","X, N = [int(x) for x in input().split()]\nif N:\n    P  = [int(x) for x in input().split()]\n    P = set(P)\nelse:\n    P = set()\nbest = (float('inf'), )\nfor i in range(0, 102):\n    if i not in P:\n        best = min(best, (abs(i - X), i))\nprint(best[1])","#\u30c7\u30d5\u30a9\u30eb\u30c8\nimport itertools\nfrom collections import defaultdict\nimport collections\nimport math\nimport sys\nsys.setrecursionlimit(200000)\nmod = 1000000007\n\nx, n = map(int, input().split())\np = list(map(int, input().split()))\n\nsub = [False] * 210\nfor i in range(n):\n    sub[p[i] + 105] = True\nsub[x] = True\n\nans = mod\nnn = 0\nfor i in range(210):\n    if not sub[i]:\n        if ans > abs((i - 105) - x):\n            nn = i - 105\n            ans = abs((i - 105) - x)\n            \n\nprint(nn)","x,n = [int(j) for j in input().split()]\nl = set([int(j) for j in input().split()])\nans1 = x+n\nfor i in range(x, x+n):\n    if i not in l:\n        ans1 = i\n        break\nfor i in range(x, -1, -1):\n    if i not in l:\n        ans2 = i\n        break\nif abs(ans1-x)<abs(ans2-x):\n    print(ans1)\nelse:\n    print(ans2)\n\n","x,n=map(int,input().split())\nQ=list(map(int,input().split()))\n\nif n==0:\n  print(x);exit()\n\nA=[]\nfor i in range(1,107):\n  A.append(-i)\n  A.append(i)\nfor i in A:\n  if not i in Q:\n    print(i)\n    exit()","x, n = map(int, input().split())\nif n == 0:\n    champ = x\nelse:\n    p = list(map(int, input().split()))\n    p.sort()\n    min = 100\n    sa = 0\n    champ = 0\n    for i in range(-100, 100):\n        if i in p:\n            continue\n        sa = abs(x - i)\n        if min == sa:\n            break\n        elif min > sa:\n            min = sa\n            champ = i\n            \nprint(champ)\n    ","x,n=map(int,input().split())\nif n==0:\n  print(x)\n  exit()\nP=set(list(map(int,input().split())))\n\ndiff= 1000\nans = 0\nfor i in range(101):\n  if i in P: continue\n  if abs(x-i)<diff:\n    diff = abs(x-i)\n    #print(diff,i)\n    ans = i\nprint(ans)","X, N = map(int, input().split())\nif N == 0:\n    print(X)\nelse:\n    P = list(map(int, input().split()))\n    for i in range(1,1000):\n        if (X-i) not in P:\n            print(X-i)\n            break\n        elif (X+i) not in P:\n            print(X+i)\n            break","from collections import defaultdict as dd\nx,n=map(int, input().split())\nar=list(map(int,input().split()))\nd=dd(int)\nfor i in ar:\n    d[i]=1\nlow,high=0,0\nfor i in range(x,-2,-1):\n    if d[i]==0:\n        low=i\n        break\nfor i in range(x,102):\n    if d[i]==0:\n        high=i\n        break    \nif high-x<x-low: print(high)\nelse: print(low)\n","X, N = map(int,input().split(' '))\nif N == 0:\n    print(X)\n    exit()\n\np = input().split(' ')\np =[int(i) for i in p]\nif X not in p:\n    print(X)\n    exit()\n\nnum_list = [int(i-99) for i in range(200)]\n[num_list.remove(p[i]) for i in range(N)]\ntmp = [0] * int(len(num_list))\n\n\nfor i in range(len(num_list)):\n    tmp[i] = abs(num_list[i] - X)\n\nans = tmp.index(min(tmp))\n# print(num_list)\n# print(ans)\nprint(num_list[ans])\n","x,n=map(int,input().split())\np=list(map(int,input().split()))\n\na=[0]*102\nfor i in range(n):\n    a[p[i]]+=1\nl=x\ns=x\nwhile True:\n    if a[s]==0:\n        ans=s\n        break\n    s-=1\n    if a[l]==0:\n        ans=l\n        break\n    l+=1\n    \nprint(ans)","def main():\n    x, n = map(int, input().split())\n    p = set(map(int, input().split()))\n    diff = float(\"inf\")\n    answer = 0\n    for i in range(102):\n        if i not in p:\n            if abs(i - x) < diff:\n                diff = abs(i - x)\n                answer = i\n    print(answer)\n\n\nif __name__ == '__main__':\n    main()\n\n","#!\/usr\/bin\/env python3\nimport sys\n\n\ndef solve(X: int, N: int, p: \"List[int]\"):\n    if not X in p:\n        print(X)\n        return\n    for i in range(1, 100):\n        left = X - i\n        if not left in p:\n            print(left)\n            return\n        right = X + i\n        if not right in p:\n            print(right)\n            return\n    return\n\n\n# Generated by 1.1.7.1 https:\/\/github.com\/kyuridenamida\/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    X = int(next(tokens))  # type: int\n    N = int(next(tokens))  # type: int\n    p = [int(next(tokens)) for _ in range(N)]  # type: \"List[int]\"\n    solve(X, N, p)\n\nif __name__ == '__main__':\n    main()\n","import numpy as np\n[x, N] = list(map(int, input().split()))\nif N != 0:\n  P = list(map(int, input().split()))\n  if x < 50:\n    X = list(range(2 * x + 1))\n  else:\n    th = 2 * x - 101\n    X = [i for i in range(th, 100)]\n    P = [p for p in P if p >= th]\n  X = np.delete(X, P)\n  delta = [np.abs(x - p) for p in X]\n  ind = delta.index(min(delta))\n  ans = X[ind]\nelse:\n  ans = x\nprint(ans)","X,N = map(int,input().split())\n\nif N==0:\n  print(X)\nelse:\n  P = list(map(int,input().split()))\n  Q = [n for n in range(-1000,1000) if n not in P]\n  a = 10000\n  d1 = 10000\n  \n  for q in Q:\n    d2 = abs(q-X)\n    if d2<d1:\n      d1 = d2\n      a = q\n  \n  print(a)\n","import sys\nx,n = map(int, sys.stdin.readline().rstrip(\"\\n\").split())\np = [int(s) for s in sys.stdin.readline().rstrip(\"\\n\").split()]\nnum = [i for i in range(1,101)]\nfor i in range(n):\n    num.remove(p[i])\nif not num:\n    pass\nelif x in num:\n    print(x)\nelse:\n    d = 1\n    while True:\n        if x-d in num:\n            print(x-d)\n            break\n        elif x+d in num:\n            print(x+d)\n            break\n        else:\n            d += 1","import sys\n\nx,n = map(int,input().split())\np = list(map(int,input().split()))\n\nsa = 300\n\nfor i in range(101):\n    if abs(i-x+1) < sa:\n        if not((i+1) in p):\n            sa = abs(i-x+1)\n            ans = i+1\nprint(ans)","def main():\n    X, N = map(int, input().split())\n    if N == 0:\n        print(X)\n        return\n\n    A = [int(i) for i in input().split()]\n    C = [False] * 102\n    for v in A:\n        C[v] = True\n\n    d = 1000000\n    ans = 0\n    for i in range(102):\n        if C[i] == False:\n            if d > abs(X - i):\n                d = abs(X - i)\n                ans = i\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()","import sys\nX, N = map(int, input().split())\np = list(map(int, input().split()))\n\nfor i in range(X+1):\n    for j in [-1, 1]:\n        a = X + i * j\n        if a not in p:\n            print(a)\n            exit(0)","X, N = map(int,input().split())\np = set(list(map(int,input().split())))\nif N == 0:\n    print(X)\n    exit(0)\n\nL = []\nfor k in range(0,200):\n    if k not in p:\n        L.append(k)\n\ntemp = 100000\nans = -1\nfor e in L:\n    if temp > abs(e-X):\n        temp = abs(e-X)\n        ans = e\nprint(ans)\n","X,N = map(int,input().split())\n\nif N==0:\n    print(X)\n    exit()\n\np = list(map(int,input().split()))\nq = [i for i in range(-100,101)]\nli = set(p) ^ set(q)\ntmp = 1\nans = 0\nwhile(1):\n    if X-tmp in li:\n        ans = X-tmp\n        break\n    elif X+tmp in li:\n        ans = X+tmp\n        break\n    tmp += 1\nprint(ans)\n","X, N = map(int,input().split())\nPs =  set(map(int, input().split()))\nfor i in range(N+1):\n    if (X-i) not in Ps:\n        print(X-i)\n        exit()\n    elif (X+i) not in Ps:\n        print(X+i)\n        exit()\n","# C\n\nX, N = map(int,input().split())\n\nP = list(map(int,input().split()))\n\nans = X\ntemp1 = X\ntemp2 = X\n\nfor i in range(N):\n  temp1 = temp1 - 1\n  temp2 = temp2 + 1\n  if not temp1 in P:\n    ans = temp1\n    break\n  elif not temp2 in P:\n    ans = temp2\n    break\n\nprint(ans)\n\n\n\n","x, n=map(int, input().split())\nif n==0:\n    print(x)\n    exit()\nelse:\n    dic=list(map(int, input().split()))\n\nif x not in dic:\n    print(n)\nelse:\n    for i in range(1, 101):\n        a=x-i\n        b=x+i\n        if a not in dic and b not in dic:\n            print(min(a,b))\n            exit()\n        if a not in dic:\n            print(a)\n            exit()\n        if b not in dic:\n            print(b)\n            exit()","import sys\nx, n = list(map(int,input().split()))\nif n>0:\n    p = list(map(int,input().split()))\nelse:\n    print(x)\n    sys.exit()\np.sort()\nxmin = x\nwhile True:\n    if xmin in p:\n        xmin -= 1\n    else:\n        break\nxmax = x\nwhile True:\n    if xmax in p:\n        xmax += 1\n    else:\n        break\n# print(xmin,xmax)\nprint(xmin if abs(x-xmin)<=abs(x-xmax) else xmax)","x,n=map(int,input().split())\np = list(map(int,input().split()))\np.sort()\nb = []\nfor i in range(1,101):\n    if not (i in p):\n        b.append((i,abs(i-x)))\n\nb.sort(key=lambda x:x[1])\nprint(b[0][0])","x,y = map(int,input().split(\" \"))\nif y == 0:\n    print(x)\n    exit()\nar = list(map(int,input().split(\" \")))\nif x not in ar:\n    print(x)\nelse:\n    a = x\n    b = x\n    while True:\n        a -= 1\n        if a not in ar:\n            print(a)\n            exit()\n        b += 1\n        if b not in ar:\n            print(b)\n            exit()","import sys\n# X\u306f\u3082\u3063\u3068\u3082\u8fd1\u3044\u6574\u6570\uff0cN\u306f\u4e0e\u3048\u3089\u308c\u308bP\nX,N = map(int, input().split())\n\nif N == 0:\n  print(X)\n  sys.exit()\n\narr = list(map(int, input().split()))\n\ndef saiki():\n  mainasu = X - 1\n  purasu = X + 1\n  if X in arr:\n    if mainasu in arr:\n      if purasu in arr:\n        saiki()\n      else:\n        print(purasu)\n    else:\n      print(mainasu)\n  else:\n    print(X)\n\nsaiki()","def main():\n\tx, n = map(int, input().split())\n\tarr = set(list(map(int, input().split())))\n\tfor d in range(0, 1000):\n\t\tfor m in range(-1, 2, 2):\n\t\t\ty = x + m * d\n\t\t\tif y not in arr:\n\t\t\t\tprint(y)\n\t\t\t\treturn\n\nmain()","X,N=map(int, input().split())\np_ls=list(map(int, input().split()))\n\ni=0\nwhile True:\n\tans_n=X-i\n\tif ans_n not in p_ls:\n\t\tprint(ans_n)\n\t\tbreak\n\t\n\tans_p=X+i\n\tif ans_p not in p_ls:\n\t\tprint(ans_p)\n\t\tbreak\n\t\n\ti+=1\n\n\n\n# 2darray [[0] * 4 for i in range(3)]","# C\nX, N = map(int, input().split())\nA = list(map(int, input().split()))\ndct = {i: [] for i in range(101)}\nfor i in A:\n    num = abs(X - i)\n    dct[num].append(i)\nfor k,v in dct.items():\n    if (k == 0):\n        if (len(v) == 0):\n            print(X)\n            break\n    elif (len(v) == 0):\n        if (X >= k):\n            print(X - k)\n            break\n        else:\n            print(k - X)\n            break\n    elif (len(v) == 1):\n        if (X - k == v[0]):\n            print(X + k)\n            break\n        else:\n            print(X - k)\n            break","x,n = map(int,input().split())\nif n == 0:\n  print(x)\n  quit()\nlis = list(map(int,input().split()))\nans = 9999999\nfor y in range(x-101,x+101):\n  if not(y in lis) and abs(x - y) < abs(x - ans):\n    ans = y\n  if not(y in lis) and abs(x - y) == abs(x - ans):\n    if ans > y:\n      ans = y\nprint(ans)","X, N = list(map(int, input().split()))\nif N != 0:\n    p = list(map(int, input().split()))\nif N == 0:\n    p = []\nif X in p:\n    Xp = X + 1\n    Xm = X - 1\n    while True:\n        if Xm in p:\n            Xm -= 1\n        else:\n            print(Xm)\n            break\n        if Xp in p:\n            Xp += 1\n        else:\n            print(Xp)\n            break\nelse:\n    print(X)\n","X,N =map(int, input().split())\n\nif(N>0):\n  P = list(map(int,input().split()))\n  #P = list(range(1,101))\n  PP = []\n  for i in range(1,101):\n    if i not in P:\n      PP.append(i)\n  if len(PP)>0:\n    lo = 0\n    hi = len(PP)-1\n    while(lo<hi):\n      mid = lo + ((hi - lo)\/\/2)\n      if PP[mid]<= X:\n        lo = mid + 1\n      else:\n        hi = mid\n    n1 = PP[lo]\n    n2 = PP[lo-1]\n    if abs(X-n1)<abs(X-n2):\n      print(n1)\n    else:\n      print(n2)\n  else:\n    print(X)\nelse:\n  print(X)\n","X,N = map(int,input().split())\nif N == 0:\n  print(X)\n  exit()\nA = list(map(int,input().split()))\nfor i in range(N):\n  if (X - i) not in A:\n    print(X-i)\n    exit()\n  elif (X + i ) not in A:\n    print(X+i)\n    exit()","X, N = list(map(int,input().split()))\nif N >0:\n    P =  list(map(int,input().split()))\nelse:\n    print(X)\n    exit()\n# \n# ans = 1000\n# P.sort()\n# ok = len(P)\n# ng = 0\n# \n# while (ok - ng)> 1:\n#     mid = (ok + ng) \/\/2\n#     if P[mid] > X:\n#         ok = mid\n#     else:\n#         ng = mid\n# \n# threshold = P[ok]\nans = None\nfor n in range(100):\n    plus = X +n\n    if plus not in P:\n        ans = plus\n    minus = X -n\n    if minus not in P:\n        ans = minus\n    if ans is not None:\n        print(ans)\n        exit()","X,N = map(int,input().split())\np = list(map(int, input().split()))\nn =max(X,N)\n\nfor i in range(n):\n  if X-i not in p:\n    print(X-i)\n    break\n  elif X+i not in p:\n    print(X+i)\n    break\n  else:\n    continue","import bisect\nimport copy\nimport heapq\nimport sys\nimport itertools\nimport math\nimport queue\nfrom functools import lru_cache\ninput = sys.stdin.readline\nsys.setrecursionlimit(1000000)\nmod = 10 ** 9 + 7 \n\ndef read_values(): return map(int, input().split())\ndef read_index(): return map(lambda x: int(x) - 1, input().split())\ndef read_list(): return list(read_values())\ndef read_lists(N): return [read_list() for n in range(N)]\n\n\ndef main():\n    X, N = read_values()\n    if N == 0:\n        input()\n        print(X)\n    else:\n        P = set(read_list())\n        for d in range(10000):\n            if X - d not in P:\n                print(X - d)\n                return\n            elif X + d not in P:\n                print(X + d)\n                return\n        \n\nif __name__ == \"__main__\":\n    main()\n\n","import os\nimport sys\nfrom io import BytesIO, IOBase\nimport math\ndef inputIntArray():\n    return list(map(int, input().rstrip().split()))\n\n\ndef inputArray():\n    return input().rstrip().split()\n\n\ndef inputVars():\n    return map(int, input().rstrip().split())\n\n\ndef inputNum():\n    return int(input())\n\n\ndef main():\n    x, n = inputVars()\n    if n == 0:\n        print(x)\n        return\n    arr = inputIntArray()\n    minRes = x\n    if x not in arr:\n        print(x)\n        return\n    minRes = float('inf')\n    dup = float('inf')\n    arr.sort()\n    if arr[0] >= x:\n        print(x-1)\n    else:\n        for num in range(-1, 110):\n            if num not in arr:\n                minRes = num if abs(num-x) < abs(x-minRes) else minRes\n    print(minRes)\n\n\n#.........................................FAST INPUT OUTPUT.......................................\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n#....................................END OF FAST I\/O............................................\n\nif __name__ == \"__main__\":\n    main()","import numpy as np\n\ndef main():\n    x, n = map(int, input().split())\n    p = list(map(int, input().split()))\n\n    p.sort()\n    q = p\n    ans = list(map(lambda _: abs(_ - x), q))\n\n    cnt = 0\n    while cnt <= 101:\n        if ans.count(cnt) == 2 and cnt != 0:\n            pass\n        elif ans.count(cnt) == 1 and cnt == 0:\n            pass\n        else:\n            if (x - cnt) in ans:\n                return x + cnt\n            else:\n                return x - cnt\n\n        cnt += 1    \n    \n\n\nif __name__ == \"__main__\":\n    print(main())","x, n = map(int, input().split())\nplist = list(map(int, input().split()))\n\nif n == 0:\n    print(x)\n    exit()\n\nfor i in range(1, 101):\n    if (x - i) not in plist:\n        print(x - i)\n        exit()\n    if (x + i) not in plist:\n        print(x + i)\n        exit()","x,n = map(int,input().split())\nP = list(map(int,input().split()))\nA = []\na = 0\nfor i in range(200):\n    if x+a in P:\n        a += 1\n    else:\n        A.append(x+a)\n        break\na = -1\nfor i in range(200):\n    if x+a in P:\n        a -= 1\n    else:\n        A.append(x+a)\n        break\n\nif abs(x-A[0]) < abs(x-A[1]):\n    print(A[0])\n    exit()\nelif abs(x-A[0]) > abs(x-A[1]):\n    print(A[1])\n    exit()\nelse:\n    print(min(A[0],A[1]))","X,N=map(int, input().split())\nif N==0:\n  print(X)\nelse:\n  p_list=list(map(int, input().split()))\n\n  i=0\n  while(True):\n\n    Xi = X - i\n    if Xi not in p_list:\n      break\n\n    Xi = X + i\n    if Xi not in p_list:\n      break\n\n    i = i + 1\n\n  print(Xi)","x, n = map(int, input().split())\nif n == 0:\n    print(x)\n    quit()\n\nps = list(map(int, input().split()))\n\nmin_near = 0\nbig_near = 0\n\nm = x\nwhile min_near == 0:\n    m -= 1\n    if not m in ps:\n        min_near = m\n\nb = x\nwhile big_near == 0:\n    b += 1\n    if not b in ps:\n        big_near = b\n\n\nmin_diff = x - min_near\nbig_diff = big_near - x\n\nif (min_diff > big_diff):\n    # big_diff\u306e\u65b9\u304c\u5dee\u304c\u5c0f\u3055\u3051\u308c\u3070big_near\n    print(big_near)\nelse:\n    # \u305d\u308c\u4ee5\u5916\u306fmin_near\n    print(min_near)\n","# arr=input().strip().split(' ')\ndef aa():\n    x,n=[int(i) for i in input().strip().split(' ')]\n    if n==0:\n        print(x)\n        return \n    arr=[int(i) for i in input().strip().split(' ')]\n    # neg,pos=[],[]\n    # for i in arr:\n    # \tif x-i >0 :\n    # \t\tpos.append(x-i)\n    # \telse:\n    # \t\tneg.append(i-x)\n    # pos=sorted(pos)\n    # neg=sorted(neg)\n    \n    diff=[]\n    for i in arr:\n\n        diff.append(x-i)\n    i=-1\n    j=0\n    while i in diff:\n        i=i-1\n    while j in diff:\n        j=j+1\n    if abs(i)<abs(j):\n        print(x-i)\n    else:\n        print(x-j)\n    # print(x+)\naa()","x, n = map(int, input().split())\nP = list(map(int, input().split()))\nif P == []:\n    print(x)\nfor i in range(n):\n    if x - i not in P:\n        print(x - i)\n        exit()\n    elif x + i not in P:\n        print(x + i)\n        exit()","import sys\ninput = sys.stdin.readline\n\nx,n = map(int,input().split())\nL=list(map(int,input().split()))\nif n==0:\n    print(x)\n    sys.exit()\nif x not in L:\n    print(x)\n    sys.exit()\nelse:\n    L.sort()\n    for i in range(1,2*x):\n        if x-i not in L:\n            print(x-i)\n            break\n        if x+i not in L:\n            print(x+i)\n            break\n\n\n        \n\n","line = list(map(int,input().split()))\nN = line[0]\nM = line[1]\ni=0\nif M==0:\n    print(N)\nelse:\n    numbers = list(map(int,input().split()))\n    while True:\n        if bool(N-i in numbers)==0:\n            print(N-i)\n            break\n        elif bool(N+i in numbers)==0:\n            print(N+i)\n            break\n        i+=1","import sys\n\nreadline = sys.stdin.readline\n\nx, n = map(int, readline().split())\nif n == 0:\n    ans = x\nelse:\n    p = list(map(int, readline().split()))\n    for i in range(100):\n        if (x - i not in p):\n            ans = x-i\n            break\n        if (x + i not in p):\n            ans = x+i\n            break\nprint(ans)","import sys\nx,n=map(int,input().split())\np=set(list(map(int,input().split())))\n\nfor i in range(100):\n    if x-i not in p:\n        print(x-i)\n        sys.exit()\n    if x+i not in p:\n        print(x+i)\n        sys.exit()\n    ","x,n=map(int,input().split())\nif n==0:\n    print(x)\n    exit()\np=list(map(int,input().split()))\nfor i in range(200):\n    if x-i not in p:\n        print(x-i)\n        break\n    elif x+i not in p:\n        print(x+i)\n        break\n","X, N = map(int, input().split())\n\nif N == 0:\n  print(X)\n  exit()\n\nimport numpy as np\np = np.array(list(map(int, input().split())))\np = p-X\n\nfor i in range(100):\n  if i in p and -1*i in p:\n    continue\n  if -1*i not in p:\n    print(X-i)\n    break\n  else:\n    print(X+i)\n    break","X, n = map(int, input().strip().split())\nif not n:\n    print(X)\n    exit()\n\nL = list(map(int, input().strip().split()))\ndist=0\nwhile True:\n    if X-dist not in L:\n        ans=X-dist\n        break\n    elif X+dist not in L:\n        ans=X+dist\n        break\n    dist+=1\nprint(ans)","X, N = map(int, input().split())\nP = list(map(int, input().split()))\n \nans = X\nfor i in range(N+1):\n    a = X + i\n    b = X - i\n    if a not in P:\n        ans = a\n        if b not in P:\n            ans = b\n        break\n    if b not in P:\n        ans = b\n        break\nprint(ans)","#! env\/bin\/local python3\nimport sys\n\nx, n = map(int, input().split())\ntry:\n    p = list(map(int, input().split()))\nexcept EOFError:\n    print(x)\n    sys.exit()\n\nsorted_p = sorted(p)\nexcept_p = [i for i in range(-101, 101) if i not in sorted_p]\n\nmemory_min = 1000\nmemory_index = None\n\nfor k, ep in enumerate(except_p):\n    if abs(ep - x) < memory_min:\n        memory_min = abs(ep - x)\n        memory_index = k\n\nprint(except_p[memory_index])\n","X, N = map(int, input().split())\n\nif N == 0:\n\tprint(X)\n\texit()\n\nP =  list(map(int, input().split()))\n\nSa = []\n\nBa = list(range(-1, 102))\nCha = list(range(-1, 102))\n\nfor i in range (0, N):\n\tif Ba.count(P[i]) > 0:\n\t\tCha.remove(P[i])\n\nDenbaba = len(Cha)\n\nfor i in range (0, Denbaba):\n\tSa.append(abs(Cha[i]-X))\n\nDa = min(Sa)\n\nfor i in range (0, Denbaba):\n\tif Sa[i] != Da:\n\t\tCha[i]=1000000\n\n\nprint(min(Cha))","# -*- coding: utf-8 -*-\nimport numpy as np\nx,n=map(int,input().split())\nif n==0:\n  print(x)\nelse:\n  plist=list(map(int,input().split()))\n  newplist=sorted(plist)\n#\u30ea\u30b9\u30c8\u304b\u3089\uff58\u306e\u5024\u3092\u5f15\u3044\u3066\u7d76\u5bfe\u5024\u3092\u3068\u3063\u305f\u3082\u306e\u3092\u30ea\u30b9\u30c8\u5316\u3059\u308b\n  p_list=[]\n  for i in newplist:\n    k=abs(i-x)\n    p_list.append(k)\n#\u6700\u5c0f\u5024\u3068\u306a\u308b\u3068\u304d\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u63a2\u3059\n  ind=np.argmin(p_list)\n  moto=newplist[ind]\n  gap=0\n  while True:\n    gap+=1\n    if (moto-gap) in newplist:\n      pass\n    else:\n      print(moto-gap)\n      break\n    if (moto+gap) in newplist:\n      pass\n    else:\n      print(moto+gap)\n      break    ","import sys\ndef getmax():\n    max = 0\n    for i in p:\n        if i > max:\n            max = i\n    return max\ndef getmin():\n    min = p[0]\n    for i in p:\n        if i < min:\n            min = i\n    return min\nX,N = map(int,input().split())\nif N ==0:\n    print(X)\n    sys.exit()\nif N == 1:\n    p = int(input())\n    print(p)\n    sys.exit()\np = list(map(int,input().split()))  #\nMIN = 101   #\nminnum = 0\nfor i in range(-101,102):\n    if not i in p:\n        if abs(i-X) < MIN:\n            MIN = abs(i-X)\n            minnum = i\nprint(minnum)\n","x, n = map(int, input().split())\nif(n == 0):\n  print(x)\n  exit()\n\np = set(map(int, input().split()))\na = set([i for i in range(105)])\nnp = a-p\n\nans = 0\ndist = 1000000\nfor i in np:\n  if(abs(x-i) < dist):\n    dist = abs(x-i)\n    ans = i\n  elif(abs(x-i) == dist):\n    ans = min(i, ans)\n  else:\n    pass\n  \nprint(ans)","import sys\nx, n = map(int, input().split())\np = []\nif n != 0:\n    p = sorted(map(int, input().split()))\nq = []\nt = 0\nfor t in range(102):\n    if t not in p:\n        q.append(t)\nm = 100000000\nans = 0\nfor i in q:\n    if abs(x - i) < m:\n        m = abs(x - i)\n        ans = i\nprint(ans)\n","x,n = map(int, input().split())\n\nif n == 0:\n    print(x)\n    exit()\n\np = list(map(int,input().split()))\n\nallList=[]\n\nfor i in range(-200,301):\n    allList.append(i)\n\ndiff = set(allList) ^ set(p)\n\n\n\ndiff = list(diff)\ndiff.append(x)\ndiff = sorted(diff)\n\n# print(diff)\n\nind = diff.index(x)\n# print(ind)\n\n# if x == 100:\n    \n\na = diff[ind-1]\nb = diff[ind+1]\n\nax = abs(a-x)\nbx = abs(b-x)\n\n# print(ax,bx)\n\nif ax==bx:\n    if a < b:\n        print(a)\n    else:\n        print(b)\n\nif ax > bx:\n    print(b)\n    exit()","X,N = map(int,input().split())\nA = list(map(int,input().split()))\nfor d in range(X+1):\n  for i in [1,-1]:\n    B = X + d*i\n    if A.count(B) == 0:\n      print(B)\n      exit(0)","x, n = input().split()\n\nif (int(n)>0):\n  add = 1\n  count = 0\n  p = list(map(int,input().split()))\n\n  if (int(x) not in p):\n    print(int(x))\n    count=1\n\n\n  while (count==0):\n    for i in range(int(n)):\n      if (abs(int(p[i])-int(x)) == add):\n        count = count+1\n    if (count==2):\n        add = add+1\n        count=0\n    if (count==1):\n      if (int(x)-add in p):\n        print(int(x)+add)\n      else:\n        print(int(x)-add)\n    if (count==0):\n      print(int(x)-add)\n      count=1\nelse:\n  print(int(x))","x, n = [int(i) for i in input().split()]\nps = [int(i) for i in input().split()]\nans = 0\nd = 100\nfor i in range(1, 101):\n    if i not in ps:\n        tmp = abs(i-x)\n        if d > tmp:\n            d = tmp\n            ans = i\n\nprint(ans)\n","x,n = map(int,input().split())\nif(n==0):\n    print(x)\n    exit()\n\np = set(map(int,input().split()))\n\nans = -2\ndif = 1000\nfor i in range(-1,102):\n    if(i in p):\n        continue\n    dif_i = abs(i-x)\n    if(dif > dif_i):\n        dif = dif_i\n        ans = i\n\nprint(ans)"],"formatted_programs":["x,n=map(int,input().split())\np=list(map(int,input().split()))\na=[0 for i in range(102)]\nfor i in range(n):\n    a[p[i]]+=1\nk=0\nwhile True:\n    if a[x-k]==0:\n        print(x-k)\n        break\n    \n    if a[x+k]==0:\n        print(x+k)\n        break\n    k+=1","import math\ndef facts(n):\n    ans = []\n    for  i in range(1, int(math.sqrt(n)+1)):\n        if(n%i==0):\n            ans.append(i)\n            ans.append(n\/\/i)\n    ans = sorted(list(dict.fromkeys(ans)))\n    if(ans[-1]==n):\n        ans = ans[:-1]\n    return ans\n\nx,n = map(int, input().split())\nnums = sorted(list(map(int, input().split())))\nans = 101\nbfnd, ffnd = False, False\ns1, s2 = 0,0\na, b = x,x\nwhile(not bfnd):\n    if(x-s1 not in nums):\n        a = x-s1\n        bfnd = True\n        break\n    else:\n        s1+=1\nwhile(not ffnd):\n    if(x+s2 not in nums):\n        b = x+s2\n        ffnd = True\n        break\n    else:\n        s2+=1\nans = 0\nif(abs(x-a) <= abs(x-b)):\n    ans = a\nelse:\n    ans = b\nprint(ans)","X, N = map(int, input().split())\nP = list(map(int, input().split()))\n\nlis = [1] * 100\nfor p in P: lis[p-1] -= 1\n\nfor i in range(50):\n    up = X+i\n    down = X-i\n    if lis[down-1] == 1:\n        print(down)\n        exit()\n    elif lis[up-1] == 1:\n        print(up)\n        exit()\n\n","x, n = map(int, input().split(\" \"))\n\np = input()\nif p:\n    p =list(map(int,p.split(\" \")))\n    result = 1000\n    a = 1000\n    for i in range(-1, 102):\n        if i in p:\n            continue\n        else:\n            tmp = abs(i - x)\n            if tmp < result:\n                result = tmp\n                a = i\n            elif tmp == result:\n                if i <= a:\n                    a = i\n    print(a)\n\nelse:\n    print(x)\n\n","x, n = map(int, input().split())\nlist_P = list(map(int, input().split()))\nlist_P = set(list_P)\nans = pow(10, 10)\n\nfor i in range(-110, 111):\n    if abs(i-x) < abs(x-ans):\n        if i not in list_P:\n            ans = i\n\nprint(ans)","X, N = map(int, input().split())\np_list = sorted(list(map(int, input().split())), reverse = True)\n\n\n\nif (not X in p_list) or (N == 0):\n    ans = X\nelse:\n    p_min, p_max = p_list[-1], p_list[0]\n    if X < p_min:\n        ans = p_min - 1\n    else:\n        m = min(abs(X - p_min), abs(X - p_max))\n        for i in range(1, m + 2):\n            if not X - i in p_list:\n                ans = X - i\n                break\n            if not X + i in p_list:\n                ans = X + i\n                break\n\nprint(ans)\n\n\n\n\n\n","x, n = map(int, input().split())\nif n!=0:\n    lst = [i for i in range(102)]\n    a = list(map(int, input().split()))\n\n    for i in range(n):\n        lst.remove(a[i])\n    \n    if x in lst:\n        print(x)\n    else:\n        b=x\n        c=x\n        for i in range(100):\n            b-=1\n            c+=1\n            if b in lst:\n                print(b)\n                break\n            elif c in lst:\n                print(c)\n                break\n    \nelse:\n    print(x)","x, n = map(int,input().split())\nif n != 0:\n  p = list(map(int,input().split()))\nelse:\n  print(x)\n  exit()\n\nfor j in range(100):\n  if all(x-j != i for i in p):\n    print(x-j)\n    exit()\n  elif all(x+j != i for i in p):\n    print(x+j)\n    exit()","x,n = map(int,input().split())\nif n == 0:\n  print(x)\n  exit()\n  \np = list(map(int,input().split()))\n\nmin_num = None\nmax_num = None\n\nfor i in range(x,-1000, -1):\n  if i not in p:\n    min_num = i\n    break\n    \nfor i in range(x, 1000):\n  if i not in p:\n    max_num = i\n    break\n    \nprint(abs(max_num -x ) , abs(min_num -x ))\nif abs(max_num -x ) >=abs(min_num -x ):\n  print(min_num)\nelse :\n  print(max_num)\n  ","# x,n = map(int, input().split())\nx,n = map(int, \"100 0\".split())\n# line = list(map(int, input().split()))\nline = list(map(int, \"\".split()))\n\nplus = x\nminus = x\n\nif not x in line:\n    print(x)\n    exit()\n\nwhile True:\n\n    if plus <= 100:\n        plus += 1\n\n    if minus >= 0:\n        minus -=1\n\n\n    if not minus in line:\n        print(minus)\n        exit()\n\n    if not plus in line:\n        print(plus)\n        exit()\n\n    if plus > 100 and minus < 0:\n      exit()\n","import numpy as np\nx,n =map(int,input().split())\n\nif  n==0:\n print(x)\nelse:\n P =list(map(int,input().split()))\n l = list(range(2*x))\n result = list(set(l) - set(P))\n abs = list(np.abs(np.array(result)-x))\n abs.remove(0)\n min = min(abs)\n print(abs)\n print(result[abs.index(min)])","x, n = map(int, input().split())\np = set(map(int, input().split()))\nINF = 10**10\n\ndist = []\nfor i in range(102):\n    if i in p:\n        dist.append((i, INF))\n    else:\n        dist.append((i, abs(x - i)))\n\ndist.sort(key=lambda x: x[1])\nprint(dist[0][0])\n","X, N = map(int, input().split())\n\nif N == 0:\n  print(X)\n  exit()\n\nP = list(map(int, input().split()))\n\n\n\nfor i in range (100+1):\n  if(X-i) not in P:\n    print(X-i)\n    exit()\n  elif (X+i) not in P:\n    print(X+i)\n    exit()\n      \n  else:\n    continue","x,y=map(int,input().split())\na=list(map(int,input().split()))\na=set(a)\nfor i in range(101):\n  \n  if x-i not in a:\n        print(x-i)\n        exit()\n  elif x+i not in a:\n      print(x+i)\n      exit()\n","X, N = list(map(int, input().split()))\nif N == 0:\n  print(X)\n  exit()\np = list(map(int, input().split()))\n\np_ = [i for i in range(101)]\np_ = list(set(p_) - set(p))\nif p_.count(X) != 0:\n  p_.remove(X)\nlist = []\nlist_ = []\nfor j in p_:\n  C = abs(X-j)\n  list.append(C)\n  list_.append(X-j)\nlist.sort()\nif list_.count(list[0]) == 0:\n  print(X+list[0])\nelse:\n  print(X-list[0])","import math\nimport pprint\nimport fractions\nimport collections\nimport itertools\nfrom decimal import *\nX,N=map(int,input().split())\np=list(map(int,input().split()))\nn=len(p)\nd={}\nl=[i-1 for i in range(104)]\n#print(l)\ni=0\nwhile i<n:\n    for j in range(len(l)):\n        if p[i]==l[j]:\n            l.pop(j)\n            break\n    #print(l)\n    #input()\n    i=i+1\nminim=float(\"inf\")\nl2=[]\nfor i in range(len(l)):\n    if minim>abs(l[i]-X):\n        minim=abs(l[i]-X)\n        l2=[]\n        l2.append(l[i])\n    elif minim==abs(l[i]-X):\n        l2.append(l[i])\n#l2=list(l2)\n#print(type(l2))\nprint(min(l2))\n\n","# -*- coding: utf-8 -*-\n\nimport sys\nimport math\nfrom decimal import Decimal, ROUND_DOWN\n\n\ndebug = False\n\ndef log(text):\n    if debug:\n        print(text)\n\ndef parse_input(lines_as_string = None):\n\n    global debug\n    lines = []\n    if lines_as_string is None:\n        debug = False\n        # for line in sys.stdin:\n        #     lines.append(line)\n        lines.append(input())\n        lines.append(input())\n    else:\n        debug = True\n        lines = [e for e in lines_as_string.split(\"\\n\")][1:-1]\n\n    (x, n) = [int(e) for e in lines[0].split(' ')]\n    if n >= 1:\n        p = [int(e) for e in lines[1].split(' ')]\n    else:\n        p = []\n\n    return (x, n, p)\n\n\ndef solve(x, n, p):\n    \n    pp = set(p)\n    result = None\n    for i in range(0, 99):\n        xa = x - i\n        xb = x + i\n\n        if xa in pp:\n            pass\n        else:\n            result = xa\n            break\n\n        if xb in pp:\n            pass\n        else:\n            result = xb\n            break\n\n\n    return result\n    \n\n\ndef main():\n    # \u51fa\u529b\n    result = solve(*parse_input())\n    if isinstance(result, list):\n        for r in result:\n            print(\"%s\" % r, sep='')\n    else:\n        print(\"%s\" % result, sep='')\n\nif __name__ == '__main__':\n\n    main()\n\t","import sys\nX,N=map(int, input().split())\np=set(list(map(int, input().split())))\ncount=0\nif N==0:\n    print(X)\n    sys.exit()\n\nwhile(True):\n    x1=X-count\n    x2=X+count\n    if x1 not in p:\n        print(x1)\n        sys.exit()\n    if x2 not in p:\n        print(x2)\n        sys.exit()    \n    count+=1\n","X, N = map(int, input().split())\np = list(map(int, input().split()))\ntmp = 101\nans = 101\nfor i in range(1, 101):\n    if i not in p:\n        if tmp == abs(X-i):\n            if ans > i:\n                ans = i\n        elif tmp >= abs(X-i):\n            ans = i\n            tmp = abs(X-i)\nprint(ans)\n","x, n = map(int, input().split())\np = list(map(int ,input().split()))\np.sort()\nans = []\nfor i in range(100):\n    x_left = x-i\n    x_right = x + i\n    if x_left not in p:\n        print(x_left)\n        exit()\n    elif x_right not in p:\n        print(x_right)\n        exit()\n","x,n = map(int, input().split())\nl = list(map(int, input().split()))\n\nl.sort()\n\nif x not in l:\n    print(x)\n    exit()\nelse:\n    a = l.index(x)\n\nif a == n-1:\n    if l[a-1] == x-1:\n        print(x+1)\n        exit()\n    else:\n        print(x-1)\n        exit()\nelif a == 0:\n    print(x-1)\n    exit()\n    \np=a-1\nf=a+1\nwhile p >= 0 and f <= n-1:\n    if l[p] < x-(a-p):\n        print(x-(a-p))\n        exit()\n    elif l[f] > x+(f-a):\n        print(x+(f-a))\n        exit()\n    p -= 1\n    f += 1\n\nif p == -1:\n    print(l[0]-1)\nelif f == n:\n    print(l[-1]+1)","X, N = map(int, input().split())\nif N == 0:\n  print(X)\n  exit()\np = list(map(int, input().split()))\nnumlist = []\n\nfor i in range(102):\n  if not i in p:\n    numlist.append(i)\nm = 500\nfor j in numlist:\n  sa = abs(X-j)\n  if sa < m:\n    m = sa\n    num = j\n\nprint(num)","x, n = map(int, input().split())\n\nif n!=0:\n  p_list = list(map(int, input().split()))\n\n  res = set(range(102)) - set(p_list)\n  res = [(abs(r-x), r) if r<=x else (abs(r-x)+0.5, r)\n         for r in res]\n  res = sorted(res, key=lambda r: r[0])\n\n  print(res[0][1])\nelse:\n  print(x)","import collections\nx,n=map(int,input().split())\nif n!=0:\n    l=list(map(int,input().split()))\n    v=collections.Counter(l)\nif n==0:\n    print(x)\nelse:\n    for i in  range(101):\n        if x not in v:\n            ans=x\n            break\n            \n        if x+i not in v:\n            ans=x+i\n            break\n        if x-i not in v:\n            ans=x-i\n            break\n    print(ans)\n        \n\n        ","X, N = map(int, input().split())\np = list(map(int, input().split()))\n\ndiff = 123456\nans = -1\nfor i in range(102):\n    if i in p: continue\n    if diff > i - X:\n        diff = abs(i - X)\n        ans = i\nprint(ans)","x,n=map(int,input().split())\np=set(map(int,input().split()))\n\nif len(p)==0:\n  print(x)\n  exit(0)\n\nans=1\nwhile True:\n  if x-ans not in p:\n    print(x-ans)\n    exit(0)\n  elif x+ans not in p:\n    print(x+ans)\n    exit(0)\n  ans+=1\n","X,N=map(int,input().split())\nif N==0:\n  print(X)\nelse:\n  p=list(map(int,input().split()))\n  q=[i-X for i in p]\n  qs=set(q)\n  print(q)\n\n  for i in range(N):\n    if -i not in qs:\n      print(X-i)\n      break\n    elif i not in qs:\n      print(X+i)\n      break","x, n = map(int, input().split())\nif n == 0:\n    print(x)\nelse:\n    p = set(list(map(int, input().split())))\n    \n    i = 0\n    while(True):\n        cand1 = x - i\n        cand2 = x + i\n        if cand1 not in p:\n            print(cand1)\n            break\n        elif cand2 not in p:\n            print(cand2)\n            break\n        i += 1","X,N = [int(x) for x in input().split()]\np = [int(x) for x in input().split()]\n\nif N != 0:\n    if X in p:\n        sorted_p = sorted(p)\n\n        x = sorted_p.index(X)\n            \n        def checknum(d,loweridx,upperidx):\n            upper = sorted_p[upperidx]\n            lower = sorted_p[loweridx]\n            if X-d == lower:\n                if X+d == upper:\n                    if loweridx == 0:\n                        print(X-d-1)\n                    elif upperidx == N-1 and sorted_p[loweridx-1] == X-d-1:\n                        print(X+d+1)\n                    else:\n                        checknum(d+1,loweridx-1,upperidx+1)\n                else:\n                    print(X+d)        \n            else:\n                return print(X-d)\n\n        if x == 0:\n            print(X-1)\n        elif x == N-1:\n            if sorted_p[x-1] != X-1:\n                print(X-1)\n            else:\n                print(X+1)\n        else:\n            checknum(1,x-1,x+1)\n    else:\n        print(X)\nelse:\n    print(X)","x, n = map(int, input().split())\narr = list(map(int, input().split()))\nxSet = set(arr)\n\nnotInc = [i for i in range(-1, 102) if i not in xSet]\nprint(sorted(notInc, key = lambda i : abs(i - x))[0])\n","import sys\nx,n = list(map(int, input().split()))\n\nif n==0:\n    print(x)\n    sys.exit()\n    \nli = sorted(list(map(int, input().split())))\nli2 = [i for i in range(1,101)]\n\nif n == 100 and x <= 50:\n    print(0)\nelif n == 100 and 50 < x:\n    print(101)\nelse:\n    li3 = list(set(li2)-set(li))\n    li4 = [i-x for i in li3]\n    li5 = [abs(i) for i in li4]    \n    print(li3[li5.index(min(li5))])    ","x,n = map(int, input().split())\nseq = [int(x) for x in input().split()]\n\ndef solve(x, n, seq):\n    if n == 0:\n        print(x)\n        return\n\n    lower = x - 1\n    higher = x + 1\n\n    seq_set = set()\n\n    for i in range(n):\n        current = seq[i]\n        seq_set.add(current)\n    \n    while lower in seq_set and lower > 1:\n        lower -= 1\n    \n    while higher in seq_set and higher < 100:\n        higher += 1\n    \n    lower_diff = abs(lower - x)\n    higher_diff = abs(higher - x)\n\n    if lower_diff <= higher_diff and lower not in seq_set:\n        print(lower)\n    elif higher not in seq_set:\n        print(higher)\n    else:\n        print(x)\n    \n\nsolve(x,n,seq)\n    \n\n","x, n = map(int, input().split())\nif n:\n\tp = list(map(int, input().split()))\n\n\tfor i in range(n+1):\n\t\tif x - i in p:\n\t\t\tprint(x-1)\n\t\t\tbreak\n\t\tif x + i in p:\n\t\t\tprint(x+1)\n\t\t\tbreak\nelse:\n\tprint(x)","x, n = map(int, input().split())\np = set(list(map(int, input().split())))\na = set(list(range(102)))\na = list(a - p)\na.sort()\n\ntmp = 10 ** 10\nfor i in a:\n    if tmp > abs(x - i):\n        tmp = abs(x - i)\n        ans = i\nprint(ans)","import sys\n\nX, N = map(int, input().split())\nlist_p = list(map(int, input().split()))\n\nif N == 0:\n    print(X)\n    sys.exit()\n\nall_list = [int(x) for x in range(min(list_p), max(list_p) + 1)]\ntarget_list = sorted(list(set(list_p) ^ set(all_list)))\n\nans = [abs(num - X) for num in target_list]\n# print(ans)\n# print(min(ans))\n# print(ans.index(min(ans)))\nprint(target_list[ans.index(min(ans))])\n","x, n = list(map(int, input().split()))\nif not n:\n  print(x) \nelse:\n  l = list(map(int, input().split()))\n  dic = {} \n  for ll in l: dic[ll] = 1\n  i = 0\n  while true:\n    if not dic.get(x-i,0):\n      print(x-i)\n      break\n    elif not dic.get(x+i, 0):\n      print(x+i) \n      break\n    i+=1","X, N = [int(x) for x in input().split()]\nif N:\n    P  = [int(x) for x in input().split()]\n    P = set(P)\nelse:\n    P = set()\nbest = (float('inf'), )\nfor i in range(0, 102):\n    if i not in P:\n        best = min(best, (abs(i - X), i))\nprint(best[1])","#\u30c7\u30d5\u30a9\u30eb\u30c8\nimport itertools\nfrom collections import defaultdict\nimport collections\nimport math\nimport sys\nsys.setrecursionlimit(200000)\nmod = 1000000007\n\nx, n = map(int, input().split())\np = list(map(int, input().split()))\n\nsub = [False] * 210\nfor i in range(n):\n    sub[p[i] + 105] = True\nsub[x] = True\n\nans = mod\nnn = 0\nfor i in range(210):\n    if not sub[i]:\n        if ans > abs((i - 105) - x):\n            nn = i - 105\n            ans = abs((i - 105) - x)\n            \n\nprint(nn)","x,n = [int(j) for j in input().split()]\nl = set([int(j) for j in input().split()])\nans1 = x+n\nfor i in range(x, x+n):\n    if i not in l:\n        ans1 = i\n        break\nfor i in range(x, -1, -1):\n    if i not in l:\n        ans2 = i\n        break\nif abs(ans1-x)<abs(ans2-x):\n    print(ans1)\nelse:\n    print(ans2)\n\n","x,n=map(int,input().split())\nQ=list(map(int,input().split()))\n\nif n==0:\n  print(x);exit()\n\nA=[]\nfor i in range(1,107):\n  A.append(-i)\n  A.append(i)\nfor i in A:\n  if not i in Q:\n    print(i)\n    exit()","x, n = map(int, input().split())\nif n == 0:\n    champ = x\nelse:\n    p = list(map(int, input().split()))\n    p.sort()\n    min = 100\n    sa = 0\n    champ = 0\n    for i in range(-100, 100):\n        if i in p:\n            continue\n        sa = abs(x - i)\n        if min == sa:\n            break\n        elif min > sa:\n            min = sa\n            champ = i\n            \nprint(champ)\n    ","x,n=map(int,input().split())\nif n==0:\n  print(x)\n  exit()\nP=set(list(map(int,input().split())))\n\ndiff= 1000\nans = 0\nfor i in range(101):\n  if i in P: continue\n  if abs(x-i)<diff:\n    diff = abs(x-i)\n    #print(diff,i)\n    ans = i\nprint(ans)","X, N = map(int, input().split())\nif N == 0:\n    print(X)\nelse:\n    P = list(map(int, input().split()))\n    for i in range(1,1000):\n        if (X-i) not in P:\n            print(X-i)\n            break\n        elif (X+i) not in P:\n            print(X+i)\n            break","from collections import defaultdict as dd\nx,n=map(int, input().split())\nar=list(map(int,input().split()))\nd=dd(int)\nfor i in ar:\n    d[i]=1\nlow,high=0,0\nfor i in range(x,-2,-1):\n    if d[i]==0:\n        low=i\n        break\nfor i in range(x,102):\n    if d[i]==0:\n        high=i\n        break    \nif high-x<x-low: print(high)\nelse: print(low)\n","X, N = map(int,input().split(' '))\nif N == 0:\n    print(X)\n    exit()\n\np = input().split(' ')\np =[int(i) for i in p]\nif X not in p:\n    print(X)\n    exit()\n\nnum_list = [int(i-99) for i in range(200)]\n[num_list.remove(p[i]) for i in range(N)]\ntmp = [0] * int(len(num_list))\n\n\nfor i in range(len(num_list)):\n    tmp[i] = abs(num_list[i] - X)\n\nans = tmp.index(min(tmp))\n# print(num_list)\n# print(ans)\nprint(num_list[ans])\n","x,n=map(int,input().split())\np=list(map(int,input().split()))\n\na=[0]*102\nfor i in range(n):\n    a[p[i]]+=1\nl=x\ns=x\nwhile True:\n    if a[s]==0:\n        ans=s\n        break\n    s-=1\n    if a[l]==0:\n        ans=l\n        break\n    l+=1\n    \nprint(ans)","def main():\n    x, n = map(int, input().split())\n    p = set(map(int, input().split()))\n    diff = float(\"inf\")\n    answer = 0\n    for i in range(102):\n        if i not in p:\n            if abs(i - x) < diff:\n                diff = abs(i - x)\n                answer = i\n    print(answer)\n\n\nif __name__ == '__main__':\n    main()\n\n","#!\/usr\/bin\/env python3\nimport sys\n\n\ndef solve(X: int, N: int, p: \"List[int]\"):\n    if not X in p:\n        print(X)\n        return\n    for i in range(1, 100):\n        left = X - i\n        if not left in p:\n            print(left)\n            return\n        right = X + i\n        if not right in p:\n            print(right)\n            return\n    return\n\n\n# Generated by 1.1.7.1 https:\/\/github.com\/kyuridenamida\/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    X = int(next(tokens))  # type: int\n    N = int(next(tokens))  # type: int\n    p = [int(next(tokens)) for _ in range(N)]  # type: \"List[int]\"\n    solve(X, N, p)\n\nif __name__ == '__main__':\n    main()\n","import numpy as np\n[x, N] = list(map(int, input().split()))\nif N != 0:\n  P = list(map(int, input().split()))\n  if x < 50:\n    X = list(range(2 * x + 1))\n  else:\n    th = 2 * x - 101\n    X = [i for i in range(th, 100)]\n    P = [p for p in P if p >= th]\n  X = np.delete(X, P)\n  delta = [np.abs(x - p) for p in X]\n  ind = delta.index(min(delta))\n  ans = X[ind]\nelse:\n  ans = x\nprint(ans)","X,N = map(int,input().split())\n\nif N==0:\n  print(X)\nelse:\n  P = list(map(int,input().split()))\n  Q = [n for n in range(-1000,1000) if n not in P]\n  a = 10000\n  d1 = 10000\n  \n  for q in Q:\n    d2 = abs(q-X)\n    if d2<d1:\n      d1 = d2\n      a = q\n  \n  print(a)\n","import sys\nx,n = map(int, sys.stdin.readline().rstrip(\"\\n\").split())\np = [int(s) for s in sys.stdin.readline().rstrip(\"\\n\").split()]\nnum = [i for i in range(1,101)]\nfor i in range(n):\n    num.remove(p[i])\nif not num:\n    pass\nelif x in num:\n    print(x)\nelse:\n    d = 1\n    while True:\n        if x-d in num:\n            print(x-d)\n            break\n        elif x+d in num:\n            print(x+d)\n            break\n        else:\n            d += 1","import sys\n\nx,n = map(int,input().split())\np = list(map(int,input().split()))\n\nsa = 300\n\nfor i in range(101):\n    if abs(i-x+1) < sa:\n        if not((i+1) in p):\n            sa = abs(i-x+1)\n            ans = i+1\nprint(ans)","def main():\n    X, N = map(int, input().split())\n    if N == 0:\n        print(X)\n        return\n\n    A = [int(i) for i in input().split()]\n    C = [False] * 102\n    for v in A:\n        C[v] = True\n\n    d = 1000000\n    ans = 0\n    for i in range(102):\n        if C[i] == False:\n            if d > abs(X - i):\n                d = abs(X - i)\n                ans = i\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()","import sys\nX, N = map(int, input().split())\np = list(map(int, input().split()))\n\nfor i in range(X+1):\n    for j in [-1, 1]:\n        a = X + i * j\n        if a not in p:\n            print(a)\n            exit(0)","X, N = map(int,input().split())\np = set(list(map(int,input().split())))\nif N == 0:\n    print(X)\n    exit(0)\n\nL = []\nfor k in range(0,200):\n    if k not in p:\n        L.append(k)\n\ntemp = 100000\nans = -1\nfor e in L:\n    if temp > abs(e-X):\n        temp = abs(e-X)\n        ans = e\nprint(ans)\n","X,N = map(int,input().split())\n\nif N==0:\n    print(X)\n    exit()\n\np = list(map(int,input().split()))\nq = [i for i in range(-100,101)]\nli = set(p) ^ set(q)\ntmp = 1\nans = 0\nwhile(1):\n    if X-tmp in li:\n        ans = X-tmp\n        break\n    elif X+tmp in li:\n        ans = X+tmp\n        break\n    tmp += 1\nprint(ans)\n","X, N = map(int,input().split())\nPs =  set(map(int, input().split()))\nfor i in range(N+1):\n    if (X-i) not in Ps:\n        print(X-i)\n        exit()\n    elif (X+i) not in Ps:\n        print(X+i)\n        exit()\n","# C\n\nX, N = map(int,input().split())\n\nP = list(map(int,input().split()))\n\nans = X\ntemp1 = X\ntemp2 = X\n\nfor i in range(N):\n  temp1 = temp1 - 1\n  temp2 = temp2 + 1\n  if not temp1 in P:\n    ans = temp1\n    break\n  elif not temp2 in P:\n    ans = temp2\n    break\n\nprint(ans)\n\n\n\n","x, n=map(int, input().split())\nif n==0:\n    print(x)\n    exit()\nelse:\n    dic=list(map(int, input().split()))\n\nif x not in dic:\n    print(n)\nelse:\n    for i in range(1, 101):\n        a=x-i\n        b=x+i\n        if a not in dic and b not in dic:\n            print(min(a,b))\n            exit()\n        if a not in dic:\n            print(a)\n            exit()\n        if b not in dic:\n            print(b)\n            exit()","import sys\nx, n = list(map(int,input().split()))\nif n>0:\n    p = list(map(int,input().split()))\nelse:\n    print(x)\n    sys.exit()\np.sort()\nxmin = x\nwhile True:\n    if xmin in p:\n        xmin -= 1\n    else:\n        break\nxmax = x\nwhile True:\n    if xmax in p:\n        xmax += 1\n    else:\n        break\n# print(xmin,xmax)\nprint(xmin if abs(x-xmin)<=abs(x-xmax) else xmax)","x,n=map(int,input().split())\np = list(map(int,input().split()))\np.sort()\nb = []\nfor i in range(1,101):\n    if not (i in p):\n        b.append((i,abs(i-x)))\n\nb.sort(key=lambda x:x[1])\nprint(b[0][0])","x,y = map(int,input().split(\" \"))\nif y == 0:\n    print(x)\n    exit()\nar = list(map(int,input().split(\" \")))\nif x not in ar:\n    print(x)\nelse:\n    a = x\n    b = x\n    while True:\n        a -= 1\n        if a not in ar:\n            print(a)\n            exit()\n        b += 1\n        if b not in ar:\n            print(b)\n            exit()","import sys\n# X\u306f\u3082\u3063\u3068\u3082\u8fd1\u3044\u6574\u6570\uff0cN\u306f\u4e0e\u3048\u3089\u308c\u308bP\nX,N = map(int, input().split())\n\nif N == 0:\n  print(X)\n  sys.exit()\n\narr = list(map(int, input().split()))\n\ndef saiki():\n  mainasu = X - 1\n  purasu = X + 1\n  if X in arr:\n    if mainasu in arr:\n      if purasu in arr:\n        saiki()\n      else:\n        print(purasu)\n    else:\n      print(mainasu)\n  else:\n    print(X)\n\nsaiki()","def main():\n\tx, n = map(int, input().split())\n\tarr = set(list(map(int, input().split())))\n\tfor d in range(0, 1000):\n\t\tfor m in range(-1, 2, 2):\n\t\t\ty = x + m * d\n\t\t\tif y not in arr:\n\t\t\t\tprint(y)\n\t\t\t\treturn\n\nmain()","X,N=map(int, input().split())\np_ls=list(map(int, input().split()))\n\ni=0\nwhile True:\n\tans_n=X-i\n\tif ans_n not in p_ls:\n\t\tprint(ans_n)\n\t\tbreak\n\t\n\tans_p=X+i\n\tif ans_p not in p_ls:\n\t\tprint(ans_p)\n\t\tbreak\n\t\n\ti+=1\n\n\n\n# 2darray [[0] * 4 for i in range(3)]","# C\nX, N = map(int, input().split())\nA = list(map(int, input().split()))\ndct = {i: [] for i in range(101)}\nfor i in A:\n    num = abs(X - i)\n    dct[num].append(i)\nfor k,v in dct.items():\n    if (k == 0):\n        if (len(v) == 0):\n            print(X)\n            break\n    elif (len(v) == 0):\n        if (X >= k):\n            print(X - k)\n            break\n        else:\n            print(k - X)\n            break\n    elif (len(v) == 1):\n        if (X - k == v[0]):\n            print(X + k)\n            break\n        else:\n            print(X - k)\n            break","x,n = map(int,input().split())\nif n == 0:\n  print(x)\n  quit()\nlis = list(map(int,input().split()))\nans = 9999999\nfor y in range(x-101,x+101):\n  if not(y in lis) and abs(x - y) < abs(x - ans):\n    ans = y\n  if not(y in lis) and abs(x - y) == abs(x - ans):\n    if ans > y:\n      ans = y\nprint(ans)","X, N = list(map(int, input().split()))\nif N != 0:\n    p = list(map(int, input().split()))\nif N == 0:\n    p = []\nif X in p:\n    Xp = X + 1\n    Xm = X - 1\n    while True:\n        if Xm in p:\n            Xm -= 1\n        else:\n            print(Xm)\n            break\n        if Xp in p:\n            Xp += 1\n        else:\n            print(Xp)\n            break\nelse:\n    print(X)\n","X,N =map(int, input().split())\n\nif(N>0):\n  P = list(map(int,input().split()))\n  #P = list(range(1,101))\n  PP = []\n  for i in range(1,101):\n    if i not in P:\n      PP.append(i)\n  if len(PP)>0:\n    lo = 0\n    hi = len(PP)-1\n    while(lo<hi):\n      mid = lo + ((hi - lo)\/\/2)\n      if PP[mid]<= X:\n        lo = mid + 1\n      else:\n        hi = mid\n    n1 = PP[lo]\n    n2 = PP[lo-1]\n    if abs(X-n1)<abs(X-n2):\n      print(n1)\n    else:\n      print(n2)\n  else:\n    print(X)\nelse:\n  print(X)\n","X,N = map(int,input().split())\nif N == 0:\n  print(X)\n  exit()\nA = list(map(int,input().split()))\nfor i in range(N):\n  if (X - i) not in A:\n    print(X-i)\n    exit()\n  elif (X + i ) not in A:\n    print(X+i)\n    exit()","X, N = list(map(int,input().split()))\nif N >0:\n    P =  list(map(int,input().split()))\nelse:\n    print(X)\n    exit()\n# \n# ans = 1000\n# P.sort()\n# ok = len(P)\n# ng = 0\n# \n# while (ok - ng)> 1:\n#     mid = (ok + ng) \/\/2\n#     if P[mid] > X:\n#         ok = mid\n#     else:\n#         ng = mid\n# \n# threshold = P[ok]\nans = None\nfor n in range(100):\n    plus = X +n\n    if plus not in P:\n        ans = plus\n    minus = X -n\n    if minus not in P:\n        ans = minus\n    if ans is not None:\n        print(ans)\n        exit()","X,N = map(int,input().split())\np = list(map(int, input().split()))\nn =max(X,N)\n\nfor i in range(n):\n  if X-i not in p:\n    print(X-i)\n    break\n  elif X+i not in p:\n    print(X+i)\n    break\n  else:\n    continue","import bisect\nimport copy\nimport heapq\nimport sys\nimport itertools\nimport math\nimport queue\nfrom functools import lru_cache\ninput = sys.stdin.readline\nsys.setrecursionlimit(1000000)\nmod = 10 ** 9 + 7 \n\ndef read_values(): return map(int, input().split())\ndef read_index(): return map(lambda x: int(x) - 1, input().split())\ndef read_list(): return list(read_values())\ndef read_lists(N): return [read_list() for n in range(N)]\n\n\ndef main():\n    X, N = read_values()\n    if N == 0:\n        input()\n        print(X)\n    else:\n        P = set(read_list())\n        for d in range(10000):\n            if X - d not in P:\n                print(X - d)\n                return\n            elif X + d not in P:\n                print(X + d)\n                return\n        \n\nif __name__ == \"__main__\":\n    main()\n\n","import os\nimport sys\nfrom io import BytesIO, IOBase\nimport math\ndef inputIntArray():\n    return list(map(int, input().rstrip().split()))\n\n\ndef inputArray():\n    return input().rstrip().split()\n\n\ndef inputVars():\n    return map(int, input().rstrip().split())\n\n\ndef inputNum():\n    return int(input())\n\n\ndef main():\n    x, n = inputVars()\n    if n == 0:\n        print(x)\n        return\n    arr = inputIntArray()\n    minRes = x\n    if x not in arr:\n        print(x)\n        return\n    minRes = float('inf')\n    dup = float('inf')\n    arr.sort()\n    if arr[0] >= x:\n        print(x-1)\n    else:\n        for num in range(-1, 110):\n            if num not in arr:\n                minRes = num if abs(num-x) < abs(x-minRes) else minRes\n    print(minRes)\n\n\n#.........................................FAST INPUT OUTPUT.......................................\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n\n#....................................END OF FAST I\/O............................................\n\nif __name__ == \"__main__\":\n    main()","import numpy as np\n\ndef main():\n    x, n = map(int, input().split())\n    p = list(map(int, input().split()))\n\n    p.sort()\n    q = p\n    ans = list(map(lambda _: abs(_ - x), q))\n\n    cnt = 0\n    while cnt <= 101:\n        if ans.count(cnt) == 2 and cnt != 0:\n            pass\n        elif ans.count(cnt) == 1 and cnt == 0:\n            pass\n        else:\n            if (x - cnt) in ans:\n                return x + cnt\n            else:\n                return x - cnt\n\n        cnt += 1    \n    \n\n\nif __name__ == \"__main__\":\n    print(main())","x, n = map(int, input().split())\nplist = list(map(int, input().split()))\n\nif n == 0:\n    print(x)\n    exit()\n\nfor i in range(1, 101):\n    if (x - i) not in plist:\n        print(x - i)\n        exit()\n    if (x + i) not in plist:\n        print(x + i)\n        exit()","x,n = map(int,input().split())\nP = list(map(int,input().split()))\nA = []\na = 0\nfor i in range(200):\n    if x+a in P:\n        a += 1\n    else:\n        A.append(x+a)\n        break\na = -1\nfor i in range(200):\n    if x+a in P:\n        a -= 1\n    else:\n        A.append(x+a)\n        break\n\nif abs(x-A[0]) < abs(x-A[1]):\n    print(A[0])\n    exit()\nelif abs(x-A[0]) > abs(x-A[1]):\n    print(A[1])\n    exit()\nelse:\n    print(min(A[0],A[1]))","X,N=map(int, input().split())\nif N==0:\n  print(X)\nelse:\n  p_list=list(map(int, input().split()))\n\n  i=0\n  while(True):\n\n    Xi = X - i\n    if Xi not in p_list:\n      break\n\n    Xi = X + i\n    if Xi not in p_list:\n      break\n\n    i = i + 1\n\n  print(Xi)","x, n = map(int, input().split())\nif n == 0:\n    print(x)\n    quit()\n\nps = list(map(int, input().split()))\n\nmin_near = 0\nbig_near = 0\n\nm = x\nwhile min_near == 0:\n    m -= 1\n    if not m in ps:\n        min_near = m\n\nb = x\nwhile big_near == 0:\n    b += 1\n    if not b in ps:\n        big_near = b\n\n\nmin_diff = x - min_near\nbig_diff = big_near - x\n\nif (min_diff > big_diff):\n    # big_diff\u306e\u65b9\u304c\u5dee\u304c\u5c0f\u3055\u3051\u308c\u3070big_near\n    print(big_near)\nelse:\n    # \u305d\u308c\u4ee5\u5916\u306fmin_near\n    print(min_near)\n","# arr=input().strip().split(' ')\ndef aa():\n    x,n=[int(i) for i in input().strip().split(' ')]\n    if n==0:\n        print(x)\n        return \n    arr=[int(i) for i in input().strip().split(' ')]\n    # neg,pos=[],[]\n    # for i in arr:\n    # \tif x-i >0 :\n    # \t\tpos.append(x-i)\n    # \telse:\n    # \t\tneg.append(i-x)\n    # pos=sorted(pos)\n    # neg=sorted(neg)\n    \n    diff=[]\n    for i in arr:\n\n        diff.append(x-i)\n    i=-1\n    j=0\n    while i in diff:\n        i=i-1\n    while j in diff:\n        j=j+1\n    if abs(i)<abs(j):\n        print(x-i)\n    else:\n        print(x-j)\n    # print(x+)\naa()","x, n = map(int, input().split())\nP = list(map(int, input().split()))\nif P == []:\n    print(x)\nfor i in range(n):\n    if x - i not in P:\n        print(x - i)\n        exit()\n    elif x + i not in P:\n        print(x + i)\n        exit()","import sys\ninput = sys.stdin.readline\n\nx,n = map(int,input().split())\nL=list(map(int,input().split()))\nif n==0:\n    print(x)\n    sys.exit()\nif x not in L:\n    print(x)\n    sys.exit()\nelse:\n    L.sort()\n    for i in range(1,2*x):\n        if x-i not in L:\n            print(x-i)\n            break\n        if x+i not in L:\n            print(x+i)\n            break\n\n\n        \n\n","line = list(map(int,input().split()))\nN = line[0]\nM = line[1]\ni=0\nif M==0:\n    print(N)\nelse:\n    numbers = list(map(int,input().split()))\n    while True:\n        if bool(N-i in numbers)==0:\n            print(N-i)\n            break\n        elif bool(N+i in numbers)==0:\n            print(N+i)\n            break\n        i+=1","import sys\n\nreadline = sys.stdin.readline\n\nx, n = map(int, readline().split())\nif n == 0:\n    ans = x\nelse:\n    p = list(map(int, readline().split()))\n    for i in range(100):\n        if (x - i not in p):\n            ans = x-i\n            break\n        if (x + i not in p):\n            ans = x+i\n            break\nprint(ans)","import sys\nx,n=map(int,input().split())\np=set(list(map(int,input().split())))\n\nfor i in range(100):\n    if x-i not in p:\n        print(x-i)\n        sys.exit()\n    if x+i not in p:\n        print(x+i)\n        sys.exit()\n    ","x,n=map(int,input().split())\nif n==0:\n    print(x)\n    exit()\np=list(map(int,input().split()))\nfor i in range(200):\n    if x-i not in p:\n        print(x-i)\n        break\n    elif x+i not in p:\n        print(x+i)\n        break\n","X, N = map(int, input().split())\n\nif N == 0:\n  print(X)\n  exit()\n\nimport numpy as np\np = np.array(list(map(int, input().split())))\np = p-X\n\nfor i in range(100):\n  if i in p and -1*i in p:\n    continue\n  if -1*i not in p:\n    print(X-i)\n    break\n  else:\n    print(X+i)\n    break","X, n = map(int, input().strip().split())\nif not n:\n    print(X)\n    exit()\n\nL = list(map(int, input().strip().split()))\ndist=0\nwhile True:\n    if X-dist not in L:\n        ans=X-dist\n        break\n    elif X+dist not in L:\n        ans=X+dist\n        break\n    dist+=1\nprint(ans)","X, N = map(int, input().split())\nP = list(map(int, input().split()))\n \nans = X\nfor i in range(N+1):\n    a = X + i\n    b = X - i\n    if a not in P:\n        ans = a\n        if b not in P:\n            ans = b\n        break\n    if b not in P:\n        ans = b\n        break\nprint(ans)","#! env\/bin\/local python3\nimport sys\n\nx, n = map(int, input().split())\ntry:\n    p = list(map(int, input().split()))\nexcept EOFError:\n    print(x)\n    sys.exit()\n\nsorted_p = sorted(p)\nexcept_p = [i for i in range(-101, 101) if i not in sorted_p]\n\nmemory_min = 1000\nmemory_index = None\n\nfor k, ep in enumerate(except_p):\n    if abs(ep - x) < memory_min:\n        memory_min = abs(ep - x)\n        memory_index = k\n\nprint(except_p[memory_index])\n","X, N = map(int, input().split())\n\nif N == 0:\n\tprint(X)\n\texit()\n\nP =  list(map(int, input().split()))\n\nSa = []\n\nBa = list(range(-1, 102))\nCha = list(range(-1, 102))\n\nfor i in range (0, N):\n\tif Ba.count(P[i]) > 0:\n\t\tCha.remove(P[i])\n\nDenbaba = len(Cha)\n\nfor i in range (0, Denbaba):\n\tSa.append(abs(Cha[i]-X))\n\nDa = min(Sa)\n\nfor i in range (0, Denbaba):\n\tif Sa[i] != Da:\n\t\tCha[i]=1000000\n\n\nprint(min(Cha))","# -*- coding: utf-8 -*-\nimport numpy as np\nx,n=map(int,input().split())\nif n==0:\n  print(x)\nelse:\n  plist=list(map(int,input().split()))\n  newplist=sorted(plist)\n#\u30ea\u30b9\u30c8\u304b\u3089\uff58\u306e\u5024\u3092\u5f15\u3044\u3066\u7d76\u5bfe\u5024\u3092\u3068\u3063\u305f\u3082\u306e\u3092\u30ea\u30b9\u30c8\u5316\u3059\u308b\n  p_list=[]\n  for i in newplist:\n    k=abs(i-x)\n    p_list.append(k)\n#\u6700\u5c0f\u5024\u3068\u306a\u308b\u3068\u304d\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u63a2\u3059\n  ind=np.argmin(p_list)\n  moto=newplist[ind]\n  gap=0\n  while True:\n    gap+=1\n    if (moto-gap) in newplist:\n      pass\n    else:\n      print(moto-gap)\n      break\n    if (moto+gap) in newplist:\n      pass\n    else:\n      print(moto+gap)\n      break    ","import sys\ndef getmax():\n    max = 0\n    for i in p:\n        if i > max:\n            max = i\n    return max\ndef getmin():\n    min = p[0]\n    for i in p:\n        if i < min:\n            min = i\n    return min\nX,N = map(int,input().split())\nif N ==0:\n    print(X)\n    sys.exit()\nif N == 1:\n    p = int(input())\n    print(p)\n    sys.exit()\np = list(map(int,input().split()))  #\nMIN = 101   #\nminnum = 0\nfor i in range(-101,102):\n    if not i in p:\n        if abs(i-X) < MIN:\n            MIN = abs(i-X)\n            minnum = i\nprint(minnum)\n","x, n = map(int, input().split())\nif(n == 0):\n  print(x)\n  exit()\n\np = set(map(int, input().split()))\na = set([i for i in range(105)])\nnp = a-p\n\nans = 0\ndist = 1000000\nfor i in np:\n  if(abs(x-i) < dist):\n    dist = abs(x-i)\n    ans = i\n  elif(abs(x-i) == dist):\n    ans = min(i, ans)\n  else:\n    pass\n  \nprint(ans)","import sys\nx, n = map(int, input().split())\np = []\nif n != 0:\n    p = sorted(map(int, input().split()))\nq = []\nt = 0\nfor t in range(102):\n    if t not in p:\n        q.append(t)\nm = 100000000\nans = 0\nfor i in q:\n    if abs(x - i) < m:\n        m = abs(x - i)\n        ans = i\nprint(ans)\n","x,n = map(int, input().split())\n\nif n == 0:\n    print(x)\n    exit()\n\np = list(map(int,input().split()))\n\nallList=[]\n\nfor i in range(-200,301):\n    allList.append(i)\n\ndiff = set(allList) ^ set(p)\n\n\n\ndiff = list(diff)\ndiff.append(x)\ndiff = sorted(diff)\n\n# print(diff)\n\nind = diff.index(x)\n# print(ind)\n\n# if x == 100:\n    \n\na = diff[ind-1]\nb = diff[ind+1]\n\nax = abs(a-x)\nbx = abs(b-x)\n\n# print(ax,bx)\n\nif ax==bx:\n    if a < b:\n        print(a)\n    else:\n        print(b)\n\nif ax > bx:\n    print(b)\n    exit()","X,N = map(int,input().split())\nA = list(map(int,input().split()))\nfor d in range(X+1):\n  for i in [1,-1]:\n    B = X + d*i\n    if A.count(B) == 0:\n      print(B)\n      exit(0)","x, n = input().split()\n\nif (int(n)>0):\n  add = 1\n  count = 0\n  p = list(map(int,input().split()))\n\n  if (int(x) not in p):\n    print(int(x))\n    count=1\n\n\n  while (count==0):\n    for i in range(int(n)):\n      if (abs(int(p[i])-int(x)) == add):\n        count = count+1\n    if (count==2):\n        add = add+1\n        count=0\n    if (count==1):\n      if (int(x)-add in p):\n        print(int(x)+add)\n      else:\n        print(int(x)-add)\n    if (count==0):\n      print(int(x)-add)\n      count=1\nelse:\n  print(int(x))","x, n = [int(i) for i in input().split()]\nps = [int(i) for i in input().split()]\nans = 0\nd = 100\nfor i in range(1, 101):\n    if i not in ps:\n        tmp = abs(i-x)\n        if d > tmp:\n            d = tmp\n            ans = i\n\nprint(ans)\n","x,n = map(int,input().split())\nif(n==0):\n    print(x)\n    exit()\n\np = set(map(int,input().split()))\n\nans = -2\ndif = 1000\nfor i in range(-1,102):\n    if(i in p):\n        continue\n    dif_i = abs(i-x)\n    if(dif > dif_i):\n        dif = dif_i\n        ans = i\n\nprint(ans)"]}
{"description_html":"<span class=\"lang-en\">\n<p>Score : <var>300<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>There are <var>N<\/var> people numbered <var>1<\/var> to <var>N<\/var>. Each of them is either an <em>honest<\/em> person whose testimonies are always correct or an <em>unkind<\/em> person whose testimonies may be correct or not.<\/p>\n<p>Person <var>i<\/var> gives <var>A_i<\/var> testimonies. The <var>j<\/var>-th testimony by Person <var>i<\/var> is represented by two integers <var>x_{ij}<\/var> and <var>y_{ij}<\/var>. If <var>y_{ij} = 1<\/var>, the testimony says Person <var>x_{ij}<\/var> is honest; if <var>y_{ij} = 0<\/var>, it says Person <var>x_{ij}<\/var> is unkind.<\/p>\n<p>How many honest persons can be among those <var>N<\/var> people at most?<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li>All values in input are integers.<\/li>\n<li><var>1 \\leq N \\leq 15<\/var><\/li>\n<li><var>0 \\leq A_i \\leq N - 1<\/var><\/li>\n<li><var>1 \\leq x_{ij} \\leq N<\/var><\/li>\n<li><var>x_{ij} \\neq i<\/var><\/li>\n<li><var>x_{ij_1} \\neq x_{ij_2} (j_1 \\neq j_2)<\/var><\/li>\n<li><var>y_{ij} = 0, 1<\/var><\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>N<\/var>\n<var>A_1<\/var>\n<var>x_{11}<\/var> <var>y_{11}<\/var>\n<var>x_{12}<\/var> <var>y_{12}<\/var>\n<var>:<\/var>\n<var>x_{1A_1}<\/var> <var>y_{1A_1}<\/var>\n<var>A_2<\/var>\n<var>x_{21}<\/var> <var>y_{21}<\/var>\n<var>x_{22}<\/var> <var>y_{22}<\/var>\n<var>:<\/var>\n<var>x_{2A_2}<\/var> <var>y_{2A_2}<\/var>\n<var>:<\/var>\n<var>A_N<\/var>\n<var>x_{N1}<\/var> <var>y_{N1}<\/var>\n<var>x_{N2}<\/var> <var>y_{N2}<\/var>\n<var>:<\/var>\n<var>x_{NA_N}<\/var> <var>y_{NA_N}<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>Print the maximum possible number of honest persons among the <var>N<\/var> people.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>3\n1\n2 1\n1\n1 1\n1\n2 0\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>2\n<\/pre>\n<p>If Person <var>1<\/var> and Person <var>2<\/var> are honest and Person <var>3<\/var> is unkind, we have two honest persons without inconsistencies, which is the maximum possible number of honest persons.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>3\n2\n2 1\n3 0\n2\n3 1\n1 0\n2\n1 1\n2 0\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>0\n<\/pre>\n<p>Assuming that one or more of them are honest immediately leads to a contradiction.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>2\n1\n2 0\n1\n1 0\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>1\n<\/pre><\/section>\n<\/div>\n<\/span>","description_string":"\nScore : 300 points\n\n\nProblem StatementThere are N people numbered 1 to N. Each of them is either an honest person whose testimonies are always correct or an unkind person whose testimonies may be correct or not.\nPerson i gives A_i testimonies. The j-th testimony by Person i is represented by two integers x_{ij} and y_{ij}. If y_{ij} = 1, the testimony says Person x_{ij} is honest; if y_{ij} = 0, it says Person x_{ij} is unkind.\nHow many honest persons can be among those N people at most?\n\n\n\n\nConstraints\nAll values in input are integers.\n1 \\leq N \\leq 15\n0 \\leq A_i \\leq N - 1\n1 \\leq x_{ij} \\leq N\nx_{ij} \\neq i\nx_{ij_1} \\neq x_{ij_2} (j_1 \\neq j_2)\ny_{ij} = 0, 1\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nA_1\nx_{11} y_{11}\nx_{12} y_{12}\n:\nx_{1A_1} y_{1A_1}\nA_2\nx_{21} y_{21}\nx_{22} y_{22}\n:\nx_{2A_2} y_{2A_2}\n:\nA_N\nx_{N1} y_{N1}\nx_{N2} y_{N2}\n:\nx_{NA_N} y_{NA_N}\n\n\n\n\n\nOutputPrint the maximum possible number of honest persons among the N people.\n\n\n\n\n\n\nSample Input 13\n1\n2 1\n1\n1 1\n1\n2 0\n\n\n\n\n\nSample Output 12\n\nIf Person 1 and Person 2 are honest and Person 3 is unkind, we have two honest persons without inconsistencies, which is the maximum possible number of honest persons.\n\n\n\n\n\nSample Input 23\n2\n2 1\n3 0\n2\n3 1\n1 0\n2\n1 1\n2 0\n\n\n\n\n\nSample Output 20\n\nAssuming that one or more of them are honest immediately leads to a contradiction.\n\n\n\n\n\nSample Input 32\n1\n2 0\n1\n1 0\n\n\n\n\n\nSample Output 31\n\n\n","orig_lang_html":"<span class=\"lang-en\">\n<p>Score : <var>300<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>There are <var>N<\/var> people numbered <var>1<\/var> to <var>N<\/var>. Each of them is either an <em>honest<\/em> person whose testimonies are always correct or an <em>unkind<\/em> person whose testimonies may be correct or not.<\/p>\n<p>Person <var>i<\/var> gives <var>A_i<\/var> testimonies. The <var>j<\/var>-th testimony by Person <var>i<\/var> is represented by two integers <var>x_{ij}<\/var> and <var>y_{ij}<\/var>. If <var>y_{ij} = 1<\/var>, the testimony says Person <var>x_{ij}<\/var> is honest; if <var>y_{ij} = 0<\/var>, it says Person <var>x_{ij}<\/var> is unkind.<\/p>\n<p>How many honest persons can be among those <var>N<\/var> people at most?<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li>All values in input are integers.<\/li>\n<li><var>1 \\leq N \\leq 15<\/var><\/li>\n<li><var>0 \\leq A_i \\leq N - 1<\/var><\/li>\n<li><var>1 \\leq x_{ij} \\leq N<\/var><\/li>\n<li><var>x_{ij} \\neq i<\/var><\/li>\n<li><var>x_{ij_1} \\neq x_{ij_2} (j_1 \\neq j_2)<\/var><\/li>\n<li><var>y_{ij} = 0, 1<\/var><\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>N<\/var>\n<var>A_1<\/var>\n<var>x_{11}<\/var> <var>y_{11}<\/var>\n<var>x_{12}<\/var> <var>y_{12}<\/var>\n<var>:<\/var>\n<var>x_{1A_1}<\/var> <var>y_{1A_1}<\/var>\n<var>A_2<\/var>\n<var>x_{21}<\/var> <var>y_{21}<\/var>\n<var>x_{22}<\/var> <var>y_{22}<\/var>\n<var>:<\/var>\n<var>x_{2A_2}<\/var> <var>y_{2A_2}<\/var>\n<var>:<\/var>\n<var>A_N<\/var>\n<var>x_{N1}<\/var> <var>y_{N1}<\/var>\n<var>x_{N2}<\/var> <var>y_{N2}<\/var>\n<var>:<\/var>\n<var>x_{NA_N}<\/var> <var>y_{NA_N}<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>Print the maximum possible number of honest persons among the <var>N<\/var> people.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>3\n1\n2 1\n1\n1 1\n1\n2 0\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>2\n<\/pre>\n<p>If Person <var>1<\/var> and Person <var>2<\/var> are honest and Person <var>3<\/var> is unkind, we have two honest persons without inconsistencies, which is the maximum possible number of honest persons.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>3\n2\n2 1\n3 0\n2\n3 1\n1 0\n2\n1 1\n2 0\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>0\n<\/pre>\n<p>Assuming that one or more of them are honest immediately leads to a contradiction.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>2\n1\n2 0\n1\n1 0\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>1\n<\/pre><\/section>\n<\/div>\n<\/span>","orig_lang_string":"\nScore : 300 points\n\n\nProblem StatementThere are N people numbered 1 to N. Each of them is either an honest person whose testimonies are always correct or an unkind person whose testimonies may be correct or not.\nPerson i gives A_i testimonies. The j-th testimony by Person i is represented by two integers x_{ij} and y_{ij}. If y_{ij} = 1, the testimony says Person x_{ij} is honest; if y_{ij} = 0, it says Person x_{ij} is unkind.\nHow many honest persons can be among those N people at most?\n\n\n\n\nConstraints\nAll values in input are integers.\n1 \\leq N \\leq 15\n0 \\leq A_i \\leq N - 1\n1 \\leq x_{ij} \\leq N\nx_{ij} \\neq i\nx_{ij_1} \\neq x_{ij_2} (j_1 \\neq j_2)\ny_{ij} = 0, 1\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nA_1\nx_{11} y_{11}\nx_{12} y_{12}\n:\nx_{1A_1} y_{1A_1}\nA_2\nx_{21} y_{21}\nx_{22} y_{22}\n:\nx_{2A_2} y_{2A_2}\n:\nA_N\nx_{N1} y_{N1}\nx_{N2} y_{N2}\n:\nx_{NA_N} y_{NA_N}\n\n\n\n\n\nOutputPrint the maximum possible number of honest persons among the N people.\n\n\n\n\n\n\nSample Input 13\n1\n2 1\n1\n1 1\n1\n2 0\n\n\n\n\n\nSample Output 12\n\nIf Person 1 and Person 2 are honest and Person 3 is unkind, we have two honest persons without inconsistencies, which is the maximum possible number of honest persons.\n\n\n\n\n\nSample Input 23\n2\n2 1\n3 0\n2\n3 1\n1 0\n2\n1 1\n2 0\n\n\n\n\n\nSample Output 20\n\nAssuming that one or more of them are honest immediately leads to a contradiction.\n\n\n\n\n\nSample Input 32\n1\n2 0\n1\n1 0\n\n\n\n\n\nSample Output 31\n\n\n","solve_rate":0.5412831338,"codenet_problem_id":"p02837","input_testcases":{"19":"3\n1\n3 1\n1\n2 1\n1\n1 0","30":"3\n1\n3 0\n1\n2 1\n1\n1 0","49":"3\n2\n2 1\n3 1\n2\n3 1\n1 1\n2\n2 0\n1 0","57":"3\n2\n2 1\n3 1\n2\n3 1\n1 0\n2\n1 0\n2 1","95":"3\n2\n2 0\n3 0\n2\n2 1\n1 0\n2\n1 1\n2 0","77":"2\n1\n2 1\n1\n1 0","17":"3\n2\n2 0\n3 0\n2\n3 1\n2 0\n2\n2 1\n2 0","103":"3\n1\n2 1\n1\n1 1\n1\n2 0","42":"3\n2\n2 1\n3 1\n2\n3 1\n1 0\n2\n2 0\n1 0","9":"3\n1\n3 0\n1\n1 1\n1\n2 0","102":"2\n1\n2 0\n1\n1 0","37":"3\n2\n2 0\n3 0\n2\n3 1\n1 1\n2\n1 1\n2 0","13":"3\n1\n3 1\n1\n1 1\n1\n1 0","62":"3\n2\n2 0\n2 0\n2\n3 0\n1 0\n2\n1 1\n2 1","10":"3\n2\n2 0\n3 0\n2\n3 1\n2 0\n2\n1 1\n2 0","79":"3\n2\n2 1\n2 0\n2\n3 0\n1 0\n2\n1 1\n2 1","7":"3\n1\n2 1\n1\n2 1\n1\n2 0","32":"3\n1\n3 1\n1\n1 0\n1\n2 0","101":"3\n1\n2 1\n1\n1 1\n1\n2 0","12":"3\n2\n2 1\n3 1\n2\n3 1\n1 0\n2\n1 0\n2 0","100":"3\n2\n2 1\n3 0\n2\n3 1\n1 0\n2\n1 1\n2 0","66":"3\n1\n3 1\n1\n2 1\n1\n2 0","56":"3\n1\n2 0\n1\n1 1\n1\n2 0","22":"3\n1\n2 1\n1\n1 0\n1\n2 0","1":"2\n1\n2 0\n1\n1 1","24":"3\n2\n2 0\n3 0\n2\n3 1\n1 0\n2\n1 0\n2 0","25":"3\n2\n2 0\n3 0\n2\n2 1\n2 0\n2\n1 1\n2 0","2":"3\n1\n3 1\n1\n1 1\n1\n2 0","54":"2\n1\n2 1\n1\n1 1","58":"3\n1\n3 1\n1\n1 1\n1\n1 1","6":"3\n2\n2 0\n3 0\n2\n3 1\n1 0\n2\n1 1\n2 0","75":"3\n2\n2 0\n3 1\n2\n3 1\n1 1\n2\n2 0\n1 0","38":"3\n2\n2 1\n3 0\n2\n3 1\n1 0\n2\n1 0\n2 1","87":"3\n1\n3 1\n1\n1 1\n1\n2 1","71":"3\n2\n1 1\n3 1\n2\n3 1\n1 0\n2\n1 0\n2 1","55":"3\n1\n1 1\n1\n1 1\n1\n2 0","4":"3\n2\n2 1\n3 0\n2\n3 1\n1 0\n2\n1 0\n2 0"},"output_testcases":{"19":"2\n","30":"2\n","49":"1\n","57":"2\n","95":"1\n","77":"1\n","17":"1\n","103":"2\n","42":"1\n","9":"2\n","102":"1\n","37":"1\n","13":"1\n","62":"1\n","10":"1\n","79":"1\n","7":"2\n","32":"2\n","101":"2\n","12":"1\n","100":"0\n","66":"2\n","56":"2\n","22":"1\n","1":"1\n","24":"1\n","25":"1\n","2":"2\n","54":"2\n","58":"3\n","6":"1\n","75":"1\n","38":"2\n","87":"3\n","71":"2\n","55":"2\n","4":"1\n"},"n_missing":67,"programs":["N = int(input())\nT = [[] for x in range(N)]\n\nfor i in range(N):\n    for _ in range(int(input())):\n        idx, t = map(int, input().split())\n        T[i].append((idx-1, t))\n\nans = 0\nfor i in range(1, 2**N):\n    ok = True\n    ans_t = 0\n    for j in range(N):\n        if (i>>j) & 1 == 0:\n            continue\n        ans_t += 1\n        for (x,y) in T[j]:\n            if (i>>x) & 1 != y:\n                ok = False\n                break\n        if not ok:\n            break\n    if ok:\n        ans = max(ans, ans_t)\nprint(ans)\n","n = int(input())\ndata = [[] for i in range(n)]\nfor i in range(n):\n    a = int(input())\n    for _ in range(a):\n        data[i].append(list(map(int,input().split())))\n\n#print(data)\nans = 0\nfor i in range(1<<n):\n    truth = []\n    for x in range(n):\n        if i&(1<<x):\n            truth.append(x+1)\n\n    q = True\n    for j in truth:\n        for x,y in data[j-1]:\n            if x in truth and y == 0:\n                q = False\n                break\n            if x not in truth and y == 1:\n                q = False\n                break\n    if q:\n        ans = max(ans,len(truth))\n        #print(truth)\n\nprint(ans)","n = int(input())\nxy_ls = [0]*n\n\nfor i in range(n):\n    a = int(input())\n    ls = [list(map(int, input().split())) for _ in range(a)]\n    xy_ls[i] = ls \n\nok_ls = []\nfor i in range(2**n):\n    ok = 1\n    people = [0]*n\n    for j in range(n):\n        if i >> j & 1:\n            people[j] = 1\n    for j in range(n):\n        if people[j] == 1:\n            for xy in xy_ls[j]:\n                if xy[1] != people[xy[0]-1]:\n                    ok = 0\n    if ok:\n        ok_ls.append(len([i for i in people if i == 1]))\n\nprint(max(ok_ls))","import itertools\n\nn=int(input())\n\nlis=[]\nfor i in range(n):\n    ai=int(input())\n    lisi=[]\n    for _ in range(ai):\n        xi,yi=map(int,input().split())\n        lisi.append([xi-1,yi])\n    lis.append(lisi)\n\n#print(lis)\nans=0\nfor binary in itertools.product([0,1],repeat=n):\n    check=0\n    for i in range(n):\n        #print(\"bi\",binary[i])\n        if binary[i]==1:\n            for j in range(len(lis[i])):\n                #print(binary[lis[i][j][0]],lis[i][j][1])\n                if binary[lis[i][j][0]]!=lis[i][j][1]:\n                    check+=1\n        else:\n            for j in range(len(lis[i])):\n                #print(binary[lis[i][j][0]],lis[i][j][1])\n                if binary[lis[i][j][0]]==lis[i][j][1]:\n                    check+=1\n    if check==0:\n        #print(binary)\n        ans=max(ans,sum(binary))\n\nprint(ans)","#!\/usr\/bin\/env python3\nimport sys\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\n\ndef count_ones(num):\n    count = 0\n    while num:\n        count += num & 1\n        num >>= 1\n    return count\n\n\ndef main():\n    N = int(readline())\n    X = []\n    for i in range(N):\n        A = int(readline())\n        tmp = []\n        for _ in range(A):\n            tmp.append(tuple(map(int, readline().split())))\n        X.append(tmp)\n\n    ans = 0\n    for i in range(2**N):\n        OK = True\n        for j in range(N):\n            if ((i >> j) & 1):\n                for x in X[j]:\n                    if ((i >> (x[0] - 1)) & 1) != x[1]:\n                        OK = False\n                        break\n                if not OK:\n                    break\n        if OK:\n            ans = max(ans, count_ones(i))\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n","from itertools import product\n\ndef main():\n    n = int(input())\n    a = []\n    ls = []\n    ans = 0\n    for _ in range(n):\n        ai = int(input())\n        a.append(ai)\n        ls.append([tuple(map(int, input().split())) for i in range(ai)])\n    ptns = list(product([0,1], repeat=n))\n    for ptn in ptns:\n        flag = 0\n        lsls = list(ptn)\n        for j in range(n):\n            if ptn[j] == 1:\n                for i in range(a[j]):\n                    if ls[j][i][1] == 1 and lsls[ls[j][i][0]-1] == 1:\n                        lsls[ls[j][i][0]-1] *= ls[j][i][1]\n                    elif ls[j][i][1] == 0 and lsls[ls[j][i][0]-1] == 0:\n                        lsls[ls[j][i][0]-1] *= ls[j][i][1]\n                    else:\n                        flag = 1\n        if flag == 0:\n            if list(ptn) == lsls:\n                if ans < sum(ptn):\n                    ans = sum(ptn)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()","N = int(input())\nxs = [[] for i in range(N)]\nfor i in range(N):\n    a = int(input())\n    for j in range(a):\n        x,y = map(int,input().split())\n        xs[i].append((x-1,y))\nans = 0\nfor b in range(1<<N):\n    mujun = False\n    for k,z in enumerate(xs):\n        for x,y in z:\n            if b&(1<<x):\n                if y==0:\n                     mujun = True\n            else:\n                if y==1:\n                    mujun = True\n        if mujun:\n            break\n    if mujun:\n        break\n    if not mujun:\n        tmp = bin(b).count('1')\n        ans = max(ans, tmp)\nprint(ans)\n","#!\/usr\/bin\/env python3\n\nimport sys\n# import math\n# import re                                    # re.compile(pattern) => ptn obj; p.search(s), p.match(s), p.finditer(s) => match obj; p.sub(after, s)\n# from collections import deque                # deque class. deque(L): dq.append(x), dq.appendleft(x), dq.pop(), dq.popleft(), dq.rotate()\n# from collections import defaultdict          # subclass of dict. defaultdict(facroty)\n# from collections import Counter              # subclass of dict. Counter(iter): c.elements(), c.most_common(n), c.subtract(iter)\n# from heapq import heapify, heappush, heappop # built-in list. heapify(L) changes list in-place to min-heap in O(n), heappush(heapL, x) and heappop(heapL) in O(lgn).\n# from heapq import nlargest, nsmallest        # nlargest(n, iter[, key]) returns k-largest-list in O(n+klgn).\nfrom itertools import product                # product(iter, repeat=n)\n# from itertools import accumulate             # accumulate(iter[, f])\n# from functools import reduce                 # reduce(f, iter[, init])\n# from bisect import bisect_left, bisect_right # bisect_left(a, x, lo=0, hi=len(a)) returns i such that all(val<x for val in a[lo:i]) and all(val>-=x for val in a[i:hi]).\n# from fractions import gcd                    # for Python3.4.3\n\n\ndef main():\n    mod = 10000007                  # 10^9+7\n    inf = float('inf')\n    sys.setrecursionlimit(10**6)    # 1000 -> 1000000\n    def input(): return sys.stdin.readline().rstrip()\n    def ii():  return int(input())\n    def mi():  return map(int, input().split())\n    def mi_0(): return map(lambda x: int(x)-1, input().split())\n    def lmi(): return list(map(int, input().split()))\n    def lmi_0(): return list(map(lambda x: int(x)-1, input().split()))\n    def li():  return list(input())\n    \n\n    def check_no_contradict(case):\n        for i, person in enumerate(case):\n            if person == 1:\n                for comment in comments[i]:\n                    if case[comment[0]] != comment[1]:\n                        return False\n        return True\n\n\n    n = ii()\n    comments = [[] for _ in range(n)]\n    for i in range(n):\n        num = ii()\n        for _ in range(num):\n            a, b = mi()\n            comments[i].append(tuple([a-1, b]))\n    \n    ans = 0\n    for case in product([0, 1], repeat=n):\n        if check_no_contradict(case):\n            # print(f\"case: {case}\")\n            ans = max(ans, case.count(1))\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()","N=int(input())\nflag=0\nE=[]\ntotal=0\nmaxi=0\nfor i in range(N):\n    E.append([0]*N)\nfor i in range(N):\n    M=int(input())\n    for j in range(M):\n        C, D = map(int, input().split())\n        if D==1:\n            D=2\n        else:\n            D=1\n        E[i][C-1]+=D\n\n#print(E)\n\nA=[]\nfor i in range((2**N)):\n    s=format(i,'b')\n    A.append(s.zfill(N))\n#print(A)\n\nfor i in range(len(A)):\n    flag=0\n    total=0\n    S=A[i]\n    #print(S)\n    for j in range(len(S)):\n        if S[j]=='0':\n            for k in range(N):\n                #print(E[j][k],S[k])\n                if (E[j][k]==1 and S[k]=='0')or (E[j][k] == 2 and S[k] == '1'):\n                    #print('f')\n                    flag=1\n    if flag==0:\n        for o in range(len(S)):\n            if S[o]=='0':\n                total+=1\n        maxi=max(maxi,total)\nprint(maxi)","N = int(input())\nL = []\nfor _ in range(N):\n  L.append([list(map(int, input().split())) for _ in range(int(input()))])\nfor ls in L:\n  for l in ls:\n    l[0] -= 1\nM = 0\nfor i in range(1<<N):\n  A, Normal = [], True\n  for j in range(N):\n    if (i>>j)&1:\n      A.append(j)\n  for a in A:\n    for l in L[a]:\n      if l[0] in A and l[1]==0:\n        Normal = False\n      if l[1]==1 and l[0] not in A:\n        Normal = False\n  if Normal:\n    M = max(M, len(A))\nprint(M)","from collections import deque\nN = int(input())\nTlist = deque([])\nfor i in range(N):\n    list = []\n    n = int(input())\n    if n != 0:\n        for i in range(n): #\u56e0\u6570\u6ce8\u610f\uff01\n            o = input()    \n            m = o.split()\n            p = [int(j) for j in m] #1\u5217\u306e\u6570\u5217\u3092\u30ea\u30b9\u30c8\u5316\n            list.append(p)\n    Tlist.append(list)\nmax = 0\nfor i in range(2**N):\n    p = format(i,'0'+str(N)+'b')\n    print(p)\n    ALL = True\n    for j, value in enumerate(p):\n        if value == '0':\n            pass\n        else:\n            if len(Tlist[j]) == 0:\n                pass\n            else:\n                for k in Tlist[j]:\n                    if p[k[0]-1] == str(k[1]):\n                        pass\n                    else:\n                        ALL = False\n            if ALL:\n                pass\n            else:\n                break\n    else:\n        new = p.count('1')\n        if new > max:\n            max = new\n\nprint(max)","# import itertools\n# import math\n\nN = int(input())\n# S = input()\n# n, *a = map(int, open(0))\n# A, B, X = map(int, input().split())\n# A = list(map(int, input().split()))\n# S = input()\n\nin_list = []\n\nfor i in range(N):\n    A_i = int(input())\n    _list = []\n    for j in range(A_i):\n        x_ij, y_ij = map(int, input().split())\n        _list.append([x_ij, y_ij])\n    in_list.append(_list)\n\ncnt = 0\nfor i in range(2 ** N):\n    for j in range(N):\n        # print(i, end=\" \")\n        # print(bin(i)[2:].zfill(N), end=\" \")\n        # print(j, end=\" \")\n        # print((i>>j) & 1) # i >> j \u306fi\u3092j\u30d3\u30c3\u30c8\u53f3\u30b7\u30d5\u30c8\u3001x & y \u306fx\u3068y\u306e\u540c\u3058\u4f4d\u7f6e\u306e\u30d3\u30c3\u30c8\u304c\u4e21\u65b91\u306e\u5834\u54081\u3068\u3059\u308b\u21920110 & 1(0001) = 0000\n        flg = 0\n        if ((i>>j) & 1 == 0): # flg\u306f\u6b63\u76f40 \u56181\n            flg = 1\n        for l in in_list[j]:\n            if (((i>>l[0] - 1) ^ l[1]) ^ flg) & 1: # \u8a3c\u8a00\u4e0d\u4e00\u81f41, \u4e00\u81f40 -> \u4e0d\u4e00\u81f4\u3060\u304c\u3001\u6b63\u76f4\u306a\u3089\u3084\u3063\u3071\u308a\u30c0\u30e1\n                # print(i,bin(i)[2:].zfill(N),(i>>l[0] - 1),(i>>l[0] - 1) ^ l[1],((i>>l[0] - 1) ^ l[1]) ^ flg,l,flg)\n                break\n        else:\n            continue\n        break\n    else:\n        # print(i, bin(i))\n        _ = bin(i)[2:].zfill(N).count(\"1\")\n        cnt = max(cnt, _)\n    continue\n\nprint(cnt)","num = int(input())\n\n\ntemp2_list = []\n\nfor i in range(num):\n    A = int(input())\n\n    temp1_list = []\n    for j in range(A):\n        temp1_list.append([int(k) for k in input().split()])\n\n    temp2_list.append(temp1_list)\n\nright_agree = 0\nng_agree = 0\nun_agree = 0\nunknown = 0\n\n\ntemp4_list = []\nfor i in range(num):\n    temp3_list = [-1] * num\n    for k in range(len(temp2_list[i])):\n        # print(temp2_list[i][k][0])\n        temp3_list[temp2_list[i][k][0]-1] = temp2_list[i][k][1]\n    temp4_list.append(temp3_list)\n\nfor i in range(num):\n    for k in range(num):\n        if i !=k:\n            if temp4_list[i][k] == temp4_list[k][i] and temp4_list[i][k] == 1:\n                right_agree += 1\n            elif temp4_list[i][k] == temp4_list[k][i] and temp4_list[i][k] == 0:\n                ng_agree += 1\n            elif temp4_list[i][k] != temp4_list[k][i]:\n                un_agree += 1\n            else:\n                unknown += 0\n\n# print(right_agree, ng_agree, un_agree, unknown)\n# print(temp4_list)\n\nres1 = (right_agree - un_agree)\/\/2\nres2 = num - ng_agree\/\/2 - (un_agree\/\/2)\/\/2\n\nprint(max(res1,res2))","N = int(input())\n\nreply = [[-1] * N for _ in range(N)]\n\nfor i in range(N):\n    A = int(input())\n    for _ in range(A):\n        x, y = map(int, input().split())\n        x -= 1\n        reply[i][x] = y\n\nans = 0\n\nfor i in range(1<<N):\n    flag = True\n    for j in range(N):\n        if i>>j&1 == 1:\n            for k in range(N):\n                if reply[j][k] == 1:\n                    if i>>k&1 == 0:\n                        flag = False\n                        break\n                elif reply[j][k] == 0:\n                    if i>>k&1 == 1:\n                        flag = False\n                        break\n            if not flag:\n                break\n    if flag:\n        count = 0\n        for j in range(N):\n            if i>>j&1:\n                count += 1\n        ans = max(ans, count)\n\nprint(ans)","import sys\ninput = sys.stdin.readline\n\n#l = list(map(int, input().split()))\n#import numpy as np\n#arr = np.array([int(i) for i in input().split()])\n'''\na,b=[],[]\nfor i in range(n):\n    A, B = map(int, input().split())\n    a.append(A)   \n    b.append(B)'''\n\n\nn=int(input())\n\na,x=[],[]\nfor i in range(n):\n    A = int(input())\n    a.append(A)\n    B=[]\n    for j in range(A):\n        B.append(list(map(int, input().split())))\n    x.append(B)\n\nma=0\nfor i in range(2**n):\n    now=0\n    flg=True\n    e=[0]*n\n    for j in range(n):\n        if (i>>j)&1:\n            now+=1\n            e[j]=1\n\n    for j in range(n):\n        #print(e)\n        if (i>>j)&1:\n            \n            if e[j]==0:\n                flg=False\n                break\n            elif not flg:\n                break\n\n            for k in range(a[j]):\n                \"\"\"if e[x[j][k][0]-1]==-1: \n                    if x[j][k][1] and\n                    e[x[j][k][0]-1]=x[j][k][1]\"\"\"\n                \n                if (e[x[j][k][0]-1]==0 and x[j][k][1]==1) or (e[x[j][k][0]-1]==1 and x[j][k][1]==0):\n                    flg=False\n                    break\n\n    if flg and ma<now:\n        ma=now\n        #print(ma)\n\nprint(ma)\n\n","import bisect\nfrom itertools import chain, combinations\nfrom math import ceil, floor, sqrt\n\ndef powerset(iterable):\n    s = list(iterable)\n    return chain.from_iterable(combinations(s, r) for r in range(len(s)+1, 0, -1))\n\nN = int(input())\nlN = [n for n in range(N)]\nlA = []\nlxy = [[] for _ in range(N)]\nfor i in range(N):\n    ai = int(input())\n    lA.append(ai)\n    for _ in range(ai):\n        xij, yij = list(map(int, input().split()))\n        xij -= 1\n        lxy[i].append((xij, yij))\n\n# iter all of powersets inverse\nans = 0\nfor s in powerset(lN):\n    # print(s) # assumed polite\n    allflag = True\n    range = [None] * N\n    for elem in s:\n        range[elem] = True\n    for elem in s:\n        ai = lA[elem]\n        lxyi = lxy[elem]\n        flag = True\n        for xi, yi in lxyi:\n            if yi == 0:\n                if xi in s:\n                    flag = False\n                    break\n            if yi == 1:\n                # print(xi, yi, lxy[xi])\n                for xii, yii in lxy[xi]:\n                    if xii == elem and yii != 1:\n                        flag = False\n                        break\n        # print(\"  \", flag, lxy[elem])\n        if not flag:\n            allflag = False\n            break\n    if allflag:\n        ans = len(s)\n        break\n\nprint(ans)","n=int(input())\na=[]\nl=[0]*n\nans=0\nfor i in range(n):\n  a.append(int(input()))\n  l[i]=[list(map(int,input().split())) for i in range(a[-1])]\nfor i in range(2**n):\n  i=format(i,'b').zfill(n)\n  c=[]\n  for j in range(n):\n    if i[j]=='1':\n      c.append(j)\n  for j in c:#c\u306f\u6b63\u76f4\u8005\u3068\u4eee\u5b9a\u3057\u305f\u4eba\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u683c\u7d0d\u3057\u3066\u308b\n    for k in l[j]:#k\u306f1\u4eba\u3042\u305f\u308a\u306e\u8a3c\u8a00\u305f\u3061\u304b\u30891\u3064\u305a\u3064\u53d6\u308a\u51fa\u3059\n      if k[1]==1 and (k[0]-1 not in c):\n        break#\u6b63\u76f4\u8005(\u4eee)\u304c\u300c\u6b63\u76f4\u8005\u3060\uff01\u300d\u3063\u3066\u8a00\u3063\u305f\u4eba\u304c\u6b63\u76f4\u8005\u5019\u88dc\u306b\u3044\u306a\u3044\u5834\u5408\uff08\u3053\u306e\u4eba\u304c\u5618\u3064\u3044\u3066\u308b\uff09\n      elif k[1]==0 and (k[0]-1 in c):\n        break#\u6b63\u76f4\u8005(\u4eee)\u304c\u300c\u5618\u3064\u304d\u3060\uff01\u300d\u3063\u3066\u8a00\u3063\u305f\u4eba\u304c\u6b63\u76f4\u8005\u5019\u88dc\u306b\u3044\u308b\u5834\u5408\uff08\u3053\u306e\u4eba\u304c\u5618\u3064\u3044\u3066\u308b\uff09\n    else:\n      continue\n    break\n  else:#\u3053\u308c\u3089\u3092\u5207\u308a\u629c\u3051\u305f\u3089c\u306f\u3059\u3079\u3066\u6b63\u76f4\u8005\u3060\u3068\u8a00\u3048\u308b\n    ans=max(ans,len(c))\nprint(ans)","n = int(input())\n\ntimes = n\ntable = []\nfor _ in range(times):\n    a = int(input())\n    temp = []\n    for _ in range(a):\n        temp.append(list(map(int,input().split())))\n    table.append(temp)  # S += [input()] \u3068\u3082\u66f8\u3051\u308b\n    \ndef check(i,n):\n    honestOrUnkind = [None]*n\n    honestOrUnkind[i] = 1\n    for item in table[i]:\n        membernum = item[0]-1\n        honestOrUnkind[membernum] = item[1]\n    for idx,hOrU in enumerate(honestOrUnkind):\n        if hOrU == 1:\n            for item in table[idx]:\n                membernum = item[0]-1\n                if honestOrUnkind[membernum] != item[1]:\n                    return False,honestOrUnkind\n                else:\n                    honestOrUnkind[membernum] = item[1]\n        else:\n            continue    \n    return True,honestOrUnkind\n\nmember = [None]*n\nans = 0\nfor i in range(n):\n    flg , memberlist = check(i,n)\n    if flg:\n        member[i] = 1\n        ans = max(memberlist.count(1),ans)\n    else:\n        member[i] = 0\n    \nans = max(member.count(1),ans)\n\nprint(ans)\n","n=int(input())\nans=0\nA=[[] for _ in range(n)]\nfor i in range(n):\n  a=int(input())\n  for j in range(a):\n    A[i].append(tuple(map(int,input().split())))\nfor i in range(2**n):\n  ii=str(bin(i))[2:].zfill(n)\n  chk=True\n  cur=0\n  for j in range(n):\n    if ii[j]==\"0\":\n      continue\n    else:\n      cur+=1\n      for x,y in A[j]:\n        if y==1 and ii[x-1]==\"0\":\n          chk=False\n        elif y==0 and ii[x-1]==\"1\":\n          chk=False\n  if chk:\n    ans=max(ans,cur)\nprint(ans)\n","n = int(input())\n \nXY = []\nfor i in range(n):\n    a = int(input())\n    xy = []\n    for j in range(a):\n        xy.append(list(map(int, input().split())))\n    \n    XY.append(xy)\n    \ndef check(i, xiyj, HoU):\n    # \u77db\u76fe\u3057\u305f\u3089False \u6b63\u76f4\u8005\u3068\u4eee\u5b9a\u3057\u305f\u8a3c\u8a00\u3088\u308a \u6b63\u76f4&\u6b63\u76f4\u8005\u3068\u4eee\u5b9a\u3055\u308c\u3066\u3044\u308b \/ \u4e0d\u89aa\u5207&\u4e0d\u89aa\u5207\u3068\u4eee\u5b9a\u3055\u308c\u3066\u3044\u308b True\n    if ((i >> xiyj) & 1) ^ HoU:\n        return False\n \n    return True\n    \nmax_honest = 0\nfor i in range(2 ** len(XY)):\n    count = 0\n    honest = [0] * len(XY)\n    is_contradiction = True\n    for j in range(len(XY)):\n        # \u6b63\u76f4\u8005\u3068\u4eee\u5b9a\u3057\u305f\u3068\u304d\u3060\u3051\u63a1\u7528\n        if not ((i >> j) & 1): continue\n        for k in range(len(XY[j])):\n            xiyj = XY[j][k][0] - 1\n            HoU = XY[j][k][1]\n            \n            if not check(i, xiyj, HoU):\n                is_contradiction = False\n \n    if is_contradiction:\n        for j in range(len(XY)):\n            if ((i >> j) & 1): count+=1 \n                \n        if count > max_honest:\n            max_honest =count\n            \nprint(max_honest)","def main():\n\tN = int(input())\n\tA = [[] for i in range(N)]\n\t# A[i][j] -> i-th person's testimony of person's honesty (j makes no sense)\n\tfor i in range(N):\n\t\ta = int(input())\n\t\tfor j in range(a):\n\t\t\tx, y = [int(b) for b in input().split(\" \")]\n\t\t\tA[i].append([x - 1, str(y)])\n\n\tcand = []\n\tfor i in range(2 ** N):\n\t\thonest_flag = True\n\t\tbit = list(pad_zero(format(i, 'b'), N))\n\t\thonests = [int(p) for p, q in enumerate(bit) if q == \"1\"]\n\t\tfor honest in honests:\n\t\t\tw = A[honest]\n\t\t\tfor k in range(len(w)):\n\t\t\t\tif w[k][1] != bit[w[k][0]]:\n\t\t\t\t\thonest_flag = False\n\t\tif honest_flag:\n\t\t\tcand.append(len(honests))\n\n\tprint(max(cand))\n\n\ndef pad_zero(s, n):\n\ts = str(s)\n\treturn (\"0\" * n + s)[-n:]\n\nmain()","N=int(input())\ng=[[-1 for i in range(15)]for j in range(15)]\n\nfor i in range(N):\n  m=int(input())\n  for j in range(m):\n    x,y=map(int,input().split())\n    #\u4ebai\u306b\u3088\u308b\u4ebax\u306b\u3064\u3044\u3066\u306e\u8a3c\u8a00\u3092\u683c\u7d0d\n    g[i][x-1]=y\n\nans=0\nfor i in range(1<<N):\n  honests=[0 for _ in range(N)]\n  for j in range(N):\n    if (i>>j)&1==1:\n      honests[j]=1\n  judge=True\n  for k in range(N):\n    if honests[k]==1:\n      for l in range(N):\n        if g[k][l]==-1:\n          continue\n        if g[k][l]!=honests[l]:\n          judge=False\n  if judge:\n    ans=max(ans,honests.count(1))\n\nprint(ans)\n","import sys\nn = int(input())\nmaps = []\nfor i in range(n):\n    ud = []\n    a = int(sys.stdin.readline().rstrip())\n    for j in range(a):\n        x, y = map(int, sys.stdin.readline().split())\n        ud.append([x, y])\n    maps.append(ud)\nresult = 0\nfor i in range(2**n)[::-1]:\n    bf = False\n    for j in range(n):\n        if (i >> j) &1 > 0:\n            for k in maps[j]:\n                if (i >> (k[0]-1))&1 != k[1]:\n                    bf = True\n                    break\n        if bf:\n            break\n    if bf == False:\n        rc = bin(i).count('1')\n        if rc > result:\n            result = rc\n\n\nprint(result)","N = int(input())\nA = []\nXY = []\nfor i in range(N):\n    a = int(input())\n    A.append(a)\n    XY.append([list(map(int, input().split())) for _ in range(a)])\n\n\nans = 0\n# print(singi)\nfor i in range(2 ** N):\n    singi = [-1] * (N + 1)\n    bin_ = bin(i)[2:].zfill(N)\n    flag = True\n    for j in range(1, N + 1):\n        sin = bin_[j-1]\n        person = j\n        num = A[j-1]\n        questions = XY[j - 1]\n        singi[j] = int(sin)\n        w = 0\n\n        if sin == 0:\n            continue\n        else:\n            w = 1\n\n        for k in range(num):\n            hito, honto = questions[k]\n            # print(singi)\n            # print('a', hito, honto)\n            if singi[hito] == -1:\n                singi[hito] = int(honto)\n            else:\n                if singi[hito] == honto:\n                    continue\n                else:\n                    flag = False\n    if flag is True:\n        ans = max(ans, singi.count(1))\nprint(ans)\n\n\n        \n\n\n\n    \n","N = int(input())\nXY = [[] for _ in range(N)]\nfor i in range(N):\n    c = int(input())\n    XY[i] = [[int(j) for j in input().split()] for _ in range(c)]\n\n\"\"\"\n\u30fbN < 15\n\u30fbO(N * 2^N)\n\"\"\"\n\n\ndef popcnt(n):\n    return bin(n).count('1')\n\n\ndef func(bits):\n    for i in range(N):\n        if (bits >> i) & 1 == 0:\n            continue\n        for x, y in XY[i]:\n            x -= 1  # 0-indexed\n            if (bits >> x) & 1 != y:\n                return False\n    return True\n\n\nans = 0\nfor mask in range(1 << N):\n    if func(mask):\n        tmp = popcnt(mask)\n        ans = max(ans, tmp)\nprint(ans)\n","N = int(input())\nlista = []\nfor n in range(N):\n    listan = []\n    an = int(input())\n    for n in range(an):\n        listxy = tuple(map(int, input().split()))\n        listan.append(listxy)\n        listset = tuple(listan)\n    lista.append(listset)    \ntuplea = tuple(lista)    \n#print(lista)\nansfin = 0\nfor n in range(2**N):\n    bin2 = list(bin(n))[2:]\n    bin2.reverse()\n    #print(bin2)\n    l = len(bin2)\n    rightwrong = set()\n    #print(l)\n    setright = set()\n    for n in range(N):\n        if n<l:\n            #print(bin2[n])\n            if bin2[n] == str(1):\n                rightwrong.add((n+1, 1))\n                lo = len(tuplea[n])\n                for m in range(lo):\n                    setright.add(tuplea[n][m])\n            else:\n                rightwrong.add((n+1, 0))\n        else:\n            rightwrong.add((n+1, 0))  \n    #print('a')                     \n    #print(setright)\n    #print(rightwrong)\n    if setright.issubset(rightwrong):\n        ans = bin2.count(str(1))\n        if ansfin>=ans:\n            pass\n        else:\n            ansfin = ans\n    #print(ans)    \nprint(ansfin)    \n","#147C\nn=int(input())\na_li=[]\nxy_li=[]\nfor i in range(n):\n  a_li.append(int(input()))\n  xy_li_i=[list(map(int,input().split())) for j in range(a_li[i])]\n  xy_li.append(xy_li_i)\n  \nproof=[]  \nfor i in range(2**n):\n  li=[0]*n\n  for j in range(n):\n    if (i>>j)&1==1:\n      li[j]=1\n  proof.append(li)\n\nans=0  \nfor i in proof:\n  flag=True\n  for j in range(n):\n    if i[j]==1:\n      for k in range(a_li[j]):\n        x=xy_li[j][k][0]\n        y=xy_li[j][k][1]\n        if i[x-1]!=y:\n          flag=False\n          break\n  if flag:\n    count=(sum(i))\n    if ans<=count:\n      ans=count\n    \nprint(ans)","import itertools\nimport numpy as np\n\nN = int(input())\nstl = []\nfor i in range(N):\n    a = int(input())\n    for _ in range(a):\n        x, y = map(int, input().split())\n        stl.append((i, x-1, y))\ndl = np.array(list(itertools.product([0, 1], repeat=N)), np.bool)\nfor i, x, y in stl:\n    bl = (dl[:, i] == False) | (dl[:, x] == bool(y))\n    dl = dl[bl]\nres = dl.sum(axis=1).max()\nprint(res)\n","N = int(input())\ntesti = {}\nfor i in range(N):\n    T = []\n    for a in range(int(input())):\n        T.append(list(map(int, input().split())))\n    testi[i+1] = T\n\nans = 0\nfor i in range(2**N):\n    hypo = list(bin(i)[2:].zfill(N))\n    num = hypo.count(\"1\")\n    for j, h in enumerate(hypo):\n        if h == \"1\":\n            for t in testi[j+1]:\n                if hypo[t[0]-1] != str(t[1]):\n                    break\n            else:\n                continue\n            break\n    else:\n        if num > ans:\n            ans = num\n\nprint(ans)","N = int(input())\ntes = [[] for _ in range(N+1)]\nans = 0\n\nfor i in range(1, N+1):\n    for _ in range(int(input())):\n        x, y = map(int, input().split())\n        tes[x].append([i, y])\n\nfor x in range(1, 2**N):\n    HorU = [0] + [(x >> n) & 1 for n in range(N)]\n    cand = True\n    for i in range(1, N+1):\n        for j, y in tes[i]:\n            if HorU[j] == 1 and y != HorU[i]:\n                cand = False\n    if cand:\n        temp = (N+1) - sorted(HorU).index(1)\n        if ans < temp:\n            ans = temp\nprint(ans)","g = [[-1 for i in range(15)] for j in range(15)]\n# 15\u00d715\u306e\u884c\u5217g\u3092-1\u3067\u57cb\u3081\u3066\u304a\u304f\n\nn=int(input()) #\u53c2\u52a0\u4eba\u6570\nfor i in range(n):\n  m = int(input())\n  for j in range(m):\n    x, y= map(int, input().split())\n    g[i][x-1] = y\n#\u4eba\u306e\u756a\u53f7A\u306f1\u304b\u3089\u59cb\u307e\u308b\u306e\u3067x\u306e\u756a\u53f7\u30821\u3064\u524d\u5012\u3057\n# y==1\u306a\u3089\u6b63\u76f4, Y==0\u306a\u3089\u4e0d\u89aa\u5207\nans=0\n\nfor i in range (1<<n): #range(2**n)\u3067\u3082\u540c\u3058\u306f\u305a\n  honests = [0 for _ in range(n)] #\u6b63\u76f4\u8005\u306e\u756a\u53f7\u683c\u7d0d\u7528\u30010\u306e\u5217\n  for j in range(n):\n    if (i >> j) & 1:\n      honests[j] = 1 \n#\u6b63\u76f4\u3082\u306e\u304c1,3,5,6\u306a\u3089honests = [1,0,1,0,1,1,\u30fb\u30fb\u30fb]\u3068\u306a\u308b\n#\u3053\u308c\u3092\u5168bit\u3067\u4f5c\u6210\u3057\u305f\u3082\u306e\u304chonests[\u65bd\u884c\u756a\u53f7][\u30b9\u30a4\u30c3\u30c1\u884c\u5217]\n  hantei = True\n  for j in range(n):\n    if honests[j]==1: \n      #j\u756a\u76ee\u306e\u4eba\u306e\u8a3c\u8a00\u304c\u6b63\u3057\u3044\u3068\u3057\u305f\u3068\u304d\u306e\u5206\u5c90\n      for k in range(n):\n        if g[j][k] == -1: \n          continue #\u8a3c\u8a00\u306a\u3057\n        if g[j][k] != honests[k]:\n          #g[j][k]\u306fj\u756a\u76ee\u306e\u4eba\u304c\u8a71\u3057\u305fk\u756a\u76ee\u306e\u4eba\u306b\u5bfe\u3059\u308b\u8a3c\u8a00\n          #\u3053\u308c\u304c\u7570\u306a\u3063\u3066\u3044\u308b\u3068\u77db\u76fe\u304c\u751f\u3058\u3066\u3044\u308b\n          hantei = False\n  if hantei == True:\n    ans = max(ans, honests.count(1))\n                     \nprint(ans)","import math\nimport collections\nimport itertools\nimport sys\nimport bisect\nfrom heapq import heappop,heappush,heapify\nsys.setrecursionlimit(10**6)\ndef MAP(): return list(map(int,input().split()))\ndef INT(): return int(input())\ndef FLOAT(): return float(input())\nMOD = 10**9+7\n\nn = INT()\nll = [[] for _ in range(n)]\nl = [0]*n\n\nfor i in range(n):\n    tmp = INT()\n    for j in range(tmp):\n        x,y = MAP()\n        ll[i].append([x-1,y])\n\nans = 0\nfor bit in range(2**n):\n    ok = True\n    is_honest = [(bit>>i) & 1 for i in range(n)]\n    #print(is_honest)\n    for i in range(n):\n        if not is_honest[i]:\n            continue\n        for x,y in ll[i]:\n            if is_honest[x]!=y:\n                ok=False\n    if ok:\n        ans = max(ans,sum(is_honest))\nprint(ans)","N = int(input())\n \ntestimony = [[] for _ in range(N)]\n \nfor i in range(N):\n    num = int(input())\n    for j in range(num):\n        person, state = map(int, input().split())\n        testimony[i].append([person-1, state])\n \nhonest = 0\nfor i in range(1, 2**N):\n    flag = 0\n    for j in range(N):\n        if (i>>j)&1 == 1: \n            for x,y in testimony[j]:\n                if (i>>x)&1 != y: \n                    flag = 1\n                    print(flag)\n                    break\n    if flag == 0: \n        honest = max(honest, bin(i)[2:].count('1')) \nprint(honest)","n = int(input())\nxys = [[] for _ in range(n)]\nfor i in range(n):\n    a = int(input())\n    xys[i] = [list(map(int, input().split())) for _ in range(a)]\n\nmax_honest = 0\nfor i in range(2 ** n):\n    bin_i = format(i, '015b')[::-1]\n    ok = True\n\n    for j in range(n):\n        for x, y in xys[j]:\n            if bin_i[j] == \"1\" and y != int(bin_i[x - 1]):\n                ok = False\n                break\n        else:\n            continue\n        break\n\n    if ok:\n        honest = sum(int(x) for x in bin_i)\n        max_honest = max(max_honest, honest)\n\nprint(max_honest)\n\n","def p_c():\n    from itertools import combinations\n    n = int(input())\n    d = [[set() for _ in range(2)] for _ in range(n)]\n    for i in range(n):\n        a = int(input())\n        for _ in range(a):\n            x, y = map(int, input().split())\n            d[i][y].add(x-1)\n    ans = []\n    for i in reversed(range(1, n + 1)):\n        for cmb in combinations(range(n), i):\n            true_set = set()\n            false_set = set()\n            for j in range(n):\n                if j in cmb:\n                    true_set = true_set | d[j][1]\n                    false_set = false_set | d[j][0]\n                else:\n                    false_set.add(j)\n            if not true_set & false_set:\n                ans.append(n - len(false_set))\n    if ans:\n        print(max(ans))\n    else:\n        print(0)\n        \np_c()","# 2**15=32000\u3061\u3087\u3044\u306a\u306e\u3067\u3042\u3089\u304b\u3058\u3081\u8ab0\u304c\u6b63\u76f4\u8005\u3067\u8ab0\u304c\u305d\u3046\u3067\u306a\u3044\u304b\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u3001\u305d\u308c\u3092\u3082\u3068\u306b\u3057\u3066\u63a2\u7d22\u3002\n# \u77db\u76fe\u304c\u306a\u3044\u3053\u3068\u3092\u63a2\u7d22\u3057\u3066\u3044\u304f\u3088\u3046\u306a\u5224\u5b9a\u3068\u30c7\u30fc\u30bf\u69cb\u9020\u304c\u6d6e\u304b\u3070\u3093\n# \u6b63\u76f4\u8005\u3068\u3001\u771f\u507d\u4e0d\u660e\u306e\u4eba\u3001\u3068\u3044\u3046\u306e\u304c\u5473\u564c \u5618\u3064\u304d\u3067\u306f\u306a\u3044\n# bit\u64cd\u4f5c\u304c\u308f\u304b\u3089\u3093\u306e\u3067\u914d\u5217\u3067\u3084\u3063\u305f\n# \u307e\u3058\u3067\u5224\u5b9a\u3068\u30c7\u30fc\u30bf\u69cb\u9020\u3069\u3046\u3059\u3063\u304b\u308f\u304b\u3089\u3093\n\nn = int(input())\nsyougen = [[] for _ in range(n)]\nfor i in range(n):\n    a = int(input())\n    for _ in range(a):\n        x, y = map(int, input().split())\n        syougen[i].append((x - 1, y))\n\n\ndef f(n, cur=[]):\n    # 1\u30680\u304b\u3089\u306a\u308b\u9577\u3055N\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u51682**n\u500b\u51fa\u3059\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\n    if len(cur) == n:\n        yield cur\n    else:\n        for i in range(2):\n            _next = cur[:]\n            _next.append(i)\n            yield from f(n, _next)\n\n\ndef check(arr):\n    for i in range(n):\n        if arr[i] == 0:\n            continue\n        for x, y in syougen[i]:\n            if arr[x] == 1 and y == 0:\n                return False\n            if arr[x] == 0 and y == 1:\n                return False\n    return True\n\n\nans = 0\nfor g in f(n):\n    if check(g):\n        ans = max(ans, sum(g))\nprint(ans)\n","from itertools import product\nN=int(input())\nXYs = []\nfor i in range(N):\n    A = int(input())\n    XYs.append([tuple(map(int, input().split())) for _ in range(A)])\n\nn=0\nfor ts in product(*[[1, 0] for _ in range(N)]):\n    for i, t in enumerate(ts):\n        if t:\n            if not all(ts[x-1] == y for x, y in XYs[i]):\n                break\n    else:\n        n=max(n,sum(ts))\nprint(n)\n","#!\/usr\/bin\/env python3\nfrom itertools import*\nn = int(input())\nc = 0\ntry:z = [eval(\"[i] + list(map(int, input().split())),\"*int(input())) for i in range(n)]\nexcept SyntaxError:print(0);exit()\nfor j in product([0,1], repeat=n):\n    if all(j[i] == 0 or j[x-1] - y == 0 for i, x, y in chain.from_iterable(z)):\n        c = max(c, sum(j))\nprint(c)","def main():\n    # \u5165\u529b\n    n = int(input())\n\n    boolls = [[]]\n    for i in range(n):\n        tmpls = []\n        for x in boolls:\n            y = x.copy()\n            x.append(True)\n            y.append(False)\n            tmpls.append(x)\n            tmpls.append(y)\n        boolls = tmpls\n\n    boolls.sort(key=lambda _: _.count(True), reverse=True)\n\n    xyls = []\n    for i in range(n):\n        ai = int(input())\n        tuples = []\n        for j in range(ai):\n            x, y = map(int, input().split())\n            tuples.append((x, y == 1))\n        xyls.append(tuples)\n\n    tmpTrueCnt = n\n    max_cnt = 0\n    for boolx in boolls:\n        truecnt = boolx.count(True)\n        if truecnt == 0:\n            break\n        if max_cnt > truecnt:\n            break\n\n        if tmpTrueCnt > truecnt:\n            tmpTrueCnt = truecnt\n\n        ok = True\n        for i in range(len(boolx)):\n            tf = boolx[i]\n            if tf:\n                zz = xyls[i]\n            else:\n                zz = [(x[0], not x[1]) for x in xyls[i]]\n\n            for message in zz:\n                if boolx[message[0] - 1] != message[1]:\n                    ok = False\n                    break\n            if not ok:\n                break\n\n        if ok:\n            max_cnt = tmpTrueCnt\n            break\n\n    print(max_cnt)\n\n\nmain()\n","n = int(input())\npeople = [[] for i in range(n)]\nfor i in range(n):\n  a = int(input())\n  for j in range(a):\n    say = tuple(map(int,input().split()))\n    people[i].append(say)\n\nans = 0\nfor i in range(2**n):\n  TF = [ 1 & i >> j for j in range(n)]\n  bool = True\n  for j in range(n):\n    if TF[j] == 1:\n      for says in people[j]:\n        if TF[says[0]-1] == says[1]:\n          pass\n        else:\n          bool = False\n          break\n    else:\n      pass\n\n  if bool:\n    ans = max(ans,TF.count(1))\n\nprint(ans)\n    ","n = int(input())\n\na_list = []\nperson_list = []\nsyogen_list = []\nans = 0\n\nfor i in range(0, n):\n    w = []\n    v = []\n    a = int(input())\n    for j in range(0, a):\n        x,y = map(int,input().split())\n        w.append(x)\n        v.append(y)\n    person_list.append(w)\n    syogen_list.append(v)\n#print(person_list)\n#print(syogen_list)\n\nfor bit in range(1 << n):\n    break_flag = 0\n    bit_1_cnt = 0\n    for i in range(n):\n        if break_flag:\n            break\n        if (bit >> i) & 1: #\u4ebai\u304c\u6b63\u76f4\n            for j in range(len(syogen_list[i])):\n                if syogen_list[i][j] != ((bit>>(person_list[i][j]-1))&1): #\u77db\u76fe\u3000\uff1a\u3000\u6b63\u76f4\u3068\u3057\u3066\u3044\u308b\u306e\u306b\u8a3c\u8a00\u304c\u98df\u3044\u9055\u3048\u3070break\n                    break_flag = 1\n                    break\n            bit_1_cnt += 1\n        if break_flag==0 and i==n-1:\n            ans = max(ans, bit_1_cnt)\nprint(ans)\n","n = int(input())\ncomments = []\nfor _ in range(n):\n    a_i = int(input())\n    comments_a_i = []\n    for _ in range(a_i):\n        x, y = map(int, input().split())\n        comments_a_i.append([x - 1, y])\n    comments.append(comments_a_i)\n\nOK = 1\nNG = 0\nUNKNOWN = -1\nvalidation = [[UNKNOWN for _ in range(n)] for _ in range(n)]\nfor i, comments_a_i in enumerate(comments):\n    for comment in comments_a_i:\n        ret = UNKNOWN\n        if 1 == comment[1]:\n            ret = OK\n        elif 0 == comment[1]:\n            ret = NG\n        validation[i][comment[0]] = ret\n\nunknowns = []\nfor i in range(n):\n    is_unknown = True\n    for j in range(n):\n        if OK == validation[j][i] or NG == validation[j][i]:\n            is_unknown = False\n            break\n    if is_unknown:\n        unknowns.append(i)\n\nfor unknown in unknowns:\n    for j in range(n):\n        validation[unknown][j] = UNKNOWN\n\ncount = 0\nfor i in range(n):\n    for j in range(n):\n        if OK == validation[i][j] and OK == validation[j][i]:\n            count += 2\n        elif NG == validation[i][j] and NG == validation[j][i]:\n            count += 1\nprint(count \/\/ 2)\n","n = int(input())\nlis=[]\nfor _ in range(n):\n    m = int(input())\n    l = []\n    for i in range(m):\n        tmp = list(map(int,input().split()))\n        l.append(tmp)\n    lis.append(l)\n\nans_l=[]\nfor i in range(2 ** n):\n    people=[]\n    for j in range(n):\n        if (i >> j) & 1:\n            people.append(1)\n        else:\n            people.append(0)\n\n    fail=False\n    for num in range(len(people)):\n        if people[num] == 1: # check testimony\n            testi=lis[num]\n            for t in testi:\n                if people[t[0]-1] != t[1]: # contradict\n                    fail=True\n    if not fail:\n        ans_l.append(sum(people))\nprint(max(ans_l))","N = int(input())\nans = []\nA = [0 for i in range(N)]\nAxy = [0 for i in range(N)]\nfor i in range(N):\n    A[i] = int(input())\n    Axy[i] = [[int(i) for i in input().split()] for j in range(A[i])]\n\nfor i in range(1<<N):#2^N\u901a\u308a\u3084\u308b\n    Truth = []\n    maru = 0\n    for j in range(N):\n        Truth.append(((i>>j)&1)==1)\n        maru += ((i>>j)&1)#\u3007\u306e\u6570\n    syogen = [0 for i in range(N)]\n    for k in range(N):\n        if Truth[k]:\n            syogen[k] = 1\n    isMujun = True\n    for k in range(N):\n        if Truth[k] and isMujun:\n            for x,y in Axy[k]:\n                if syogen[x-1]==y:\n                    pass\n                else:#\u77db\u76fe\u767a\u751f\n                    ans.append(0)\n                    isMujun = False\n                    break\n    if isMujun:\n        ans.append(maru)\nprint(max(ans))","from itertools import product\n\n\ndef check(N, p, X):\n    for i in range(N):\n        if p[i] == 0:\n            continue\n        for j in range(N):\n            if X[i][j] is not None and X[i][j] != p[j]:\n                return False\n    return True\n\n\ndef main():\n    N = int(input())\n    X = [[None] * N for _ in range(N)]\n    for i in range(N):\n        A = int(input())\n        for j in range(A):\n            x, y = map(int, input().split())\n            X[i][x-1] = y\n    ans = 0\n    for p in product([0, 1], repeat=N):\n        if check(N, p, X):\n            ans = max(ans, sum(p))\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n","N = int(input())\ntf_dict = {}\nfor i, n in enumerate(range(N)):\n    A = int(input())\n    tmp_dict = {}\n    for a in range(A):\n        xy = input().split()\n        tmp_dict[int(xy[0])] = int(xy[1])\n    tf_dict[i+1] = tmp_dict\n\nTrue_set = set()\nFalse_set = set()\nfor key in tf_dict.keys():\n    for item in tf_dict[key].items():\n        if item[1] == 1:\n            if (item[0] not in True_set) & (item[0] not in False_set):\n                True_set.add(item[0])\n                True_set.add(key)\n            elif (item[0] in True_set):\n                True_set.add(key)\n            elif (item[0] in False_set):\n                False_set.add(key)\n        if item[1] == 0:\n            if (item[0] not in True_set) & (item[0] not in False_set):\n                False_set.add(item[0])\n                True_set.add(key)\n            elif (item[0] in True_set):\n                False_set.add(key)\n            elif (item[0] in False_set):\n                True_set.add(key)\n                \nif len(False_set & True_set) != 0:\n    print(\"0\")\nelse:\n    print(len(True_set))","n = int(input())\ncount = 0\nfor i in range(n):\n    a = int(input())\n    good_man = True\n    for j in range(a):\n        xy = list(map(int, input().split()))\n        if xy[1] == 0:\n            good_man = False\n    if good_man:\n        count += 1\nprint(count)\n","n = int(input())\n\nlist_a = []\ntestimonies = []\nanswer = 0\nflag = True\n\nfor i in range(n):\n\ttestimony = []\n\ta = int(input())\n\tlist_a.append(a)\n\tfor j in range(a):\n\t\ttestimony.append(list(map(int,input().split())))\n\ttestimonies.append(testimony)\n\nfor i in range(1 << n): # \u90e8\u5206\u548c\u306e\u8a08\u7b97\u3000i=2\u306f\"0b10\" \n\tresult = 0\n\tfor j in range(n): # \u5404\u6841\u3092\u78ba\u8a8d j\u306f\u6841\u6570\u3092\u8868\u3059\n\t\tif i & (1 << (j)): #true\u3060\u3063\u305f\u5834\u5408\u306fj\u6841\u76ee\u306f1\u3067\u3042\u308b(\u5f8c\u308d\u304b\u3089j\u756a\u76ee\u306f\u6b63\u76f4\u8005)\n\t\t\tfor k in range(list_a[-j]):\n\t\t\t\tif i & testimonies[-j][k][1] << (testimonies[-j][k][0]-1):\n\t\t\t\t\tflag = False\n\t\t\t\t\tbreak\n\t\t\tif flag == True:\n\t\t\t\tresult += 1\n\t\t\telse:\n\t\t\t\tflag = True\n\tif answer < result:\n\t\tanswer = result\n\nprint(answer)","#\u3086\u3046\u305f\u306e\u3084\u308a\u65b9\n\nn=int(input())\nxy=[[] for i in range(n)]\n\nfor i in range(n):\n    a=int(input())\n    for j in range(a):\n        xy[i].append(list(map(int, input().split())))\n#print(xy)\nbit=[]#1\u304c\u6b63\u76f40\u304c\u5618\nans=0\ndef bit_search(bit):\n    global ans\n    if len(bit)==n:#2**n\u6587\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u8abf\u3079\u308b\u52a0\u572710\u3092\u4ea4\u4e92\u306b\u5165\u308c\u308b\u305f\u3081\u306eif\n        for i in range(n):\n            jugh=bit[i]\n            if jugh==1:\n                for j in xy[i]:\n                    x,y=j\n                    if bit[x-1]==0:\n                        if y==1:\n                            return \n                    else:\n                        if y==0:\n                            return \n        ans=max(ans,sum(bit))\n    else:\n       #\u518d\u8d77\u5316\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u6700\u521d\u306bbit\u306e\u914d\u5217\u3092\u4f5c\u308b\u5fc5\u8981\u6027\u3092\u306a\u304f\u3057\u305f\n        bit_search(bit+[0])\n        bit_search(bit+[1])\nbit_search(bit)\nprint(ans)","import copy\n\nfrom sys import stdin\nimport itertools\nn = int(stdin.readline().rstrip())\nitems = []\nfor i in range(n):\n    a = int(stdin.readline().rstrip())\n    tmp = []\n    for i in range(a):\n        (x, y) = list(map(int, stdin.readline().rstrip().split(' ')))\n        tmp.append((x, y))\n    items.append(tmp)\nprint(items)\nmax_cnt = 0\n\ndef helper(mapping, index):\n    item = items[index][0]\n    if index in mapping.keys():\n        if mapping[index] != item[0]: # index\u306b\u3088\u3063\u3066\u5909\u5316\n            return -1\n    mapping[item[0]-1] = item[1]\n\nfor item in items:\n    mapping = {}\n    for i in item:\n        mapping[i[0]-1] = i[1]\n    tmp = copy.copy(mapping)\n    for key, value in tmp.items():\n        if value == 1:\n            res = helper(mapping, key)\n            if res == -1:\n                mapping = {}\n                break\n    max_cnt = max(len([item for item in list(mapping.values()) if item == 1]), max_cnt)\n\nprint(max_cnt)\n","N = int(input())\n\nA_list = []\nfor i in range(N):\n    A = int(input())\n    A_list.append([list(map(int, input().split())) for _ in range(A)])\n\n\ndef judge(mask):\n    for i in range(N):\n        if (mask>>i & 1)==0:\n            continue\n        for xy in A_list[i]:\n            x = xy[0]-1\n            y = xy[1]\n            if y==0 and (mask>>x & 1):\n                return False\n            if y==1 and (mask>>x & 1)==0:\n                return False\n    return True\n\n\nnum_max = 0\nfor mask in range(1<<N):\n    if judge(mask):\n        num = 0\n        for i in range(N):\n            num += mask>>i & 1\n        num_max = max(num, num_max)\n\nprint(num_max)","n = int(input())\ntests = []\nfor i in range(n):\n    a = int(input())\n    xys = [ list(map(int, input().split())) for j in range(a) ]\n    tests.append(xys)\n\npatterns = []\ndef dfs(N, li):\n    if len(li) == N:\n        patterns.append(li)\n        return\n    for i in range(2):\n        new = li[::]\n        new.append(i)\n        dfs(N, new)\ndfs(n, [])\nans = 0\nfor pattern in patterns:\n    contradict = False\n    for i in range(len(pattern)):\n        if pattern[i] == 0:\n            continue\n        test = tests[i]\n        for xy in test:\n            x = xy[0]-1\n            y = xy[1]\n            if pattern[x] != y:\n                contradict = True\n                break\n        if contradict:\n            break\n    if contradict:\n        continue\n    ans = max(ans, sum(pattern))\nprint(ans)","N = int(input())\nA = []\nfor i in range(N):\n    A.append([list(map(int, input().split())) for _ in range(int(input()))])\n\n# \u5f15\u6570\u306fN\u304c\u6b63\u76f4\u8005\u304b\u5618\u3064\u304d\u304b\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u8868\u3059\u30ea\u30b9\u30c8\n# \u623b\u308a\u5024\u306f\u77db\u76fe\u304c\u3042\u308b\u304b\u3001\u306a\u3044\u304b\ndef check(arr):\n    for idx, a in enumerate(A):\n        # \u5618\u3064\u304d\u3060\u3068\u5224\u65ad\u3055\u308c\u3066\u3044\u308b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u306e\u4eba\u7269\u306f\u7121\u8996\n        if arr[idx] == 0:\n            continue\n        # \u4e00\u3064\u4e00\u3064\u306e\u8a3c\u8a00\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n        for x, y in a:\n            if arr[x-1] != y:\n                return False\n    return True\n\nall_comb = []\nfor i in range(2**N):\n    comb = []\n    for j in range(N):\n        if (i >> j) & 1:\n            comb.append(1)\n        else:\n            comb.append(0)\n    all_comb.append(comb)\nret = 0\nfor comb in all_comb:\n    if check(comb):\n        ret = max(ret, sum(comb))\n\nprint(ret)\n","N=int(input())\n\nstatements=[]\nhonests=[0]\nfor i in range(N):\n  statement=[]\n  A=int(input())\n  for j in range(A):\n    x,y=map(int,input().split(' '))\n    statement.append([x-1,y]) \n  statements.append(statement)\n\n#print(statements)\nans=0\n\nfor honest in range(1<<N):\n  flag=True\n  for j in range(N):\n    statement=statements[j]\n    for x,y in statement:\n      if (honest&(1<<j))>>j ==1:\n        flag*=((honest&(1<<x))>>x ==y)\n\n\n    #print(flag)\n  if flag==True:\n    honests.append(honest)\n\nn_honests=[]\nfor honest in honests:\n  n_honest=0\n  for i in range(N):\n    n_honest+=(honest&(1<<i))>>i\n  n_honests.append(n_honest)\n\nprint(max(n_honests))\n","#!\/usr\/bin\/env python3\n# -*- coding: utf-8 -*-\n\n\ndef main():\n    N = int(input())\n    g = [[-1]*N for _ in range(N)]\n\n    for i in range(N):\n        A = int(input())\n        \n        for a in range(A):\n            x, y = map(int, input().split())\n            g[i][x-1] = y\n    \n    ans = 0\n    for i in range(2**N):\n        d = [0]*N\n        for j in range(N):\n            if i>>j & 1:\n                d[j] = 1\n        ok = True\n        for j in range(N):\n            if d[j] == 1:\n                for k in range(N):\n                    if g[j][k] == -1:\n                       continue \n                    if g[j][k] != d[k]:\n                        ok = False\n        if ok:\n            ans = max(ans, bin(i).count('1'))\n    \n    print(ans)\n\n\n\nif __name__ == '__main__':\n    main()","n = int(input())\npeople = {i:{} for i in range(1,n+1)}\nfor i in range(1,n+1):\n    a = int(input())\n    for j in range(a):\n        x,y = map(int,input().split())\n        people[i][x] = y\n\nans = 0\nfor i in range(2 << (n-1)):\n    bn = str(bin(i))[2:].zfill(n)\n    cnt = 0\n    for j in range(n):\n        for x,y in people[j+1].items():\n            if bn[x-1] != str(y):\n                break\n            if y == 0:\n                continue\n            for xx,yy in people[x].items():\n                if bn[xx-1] != str(yy):\n                    break\n            else:\n                continue\n            break\n        else :\n            cnt += 1\n    cnt = min(cnt, bn.count('1'))\n    if cnt > ans:\n        ans = cnt\n\nprint(ans)\n","#!\/usr\/bin\/env python3\n\nN = int(input())\ntestimony = [[None for _ in range(N)] for _ in range(N)]\nperson = [None] * N\n\nfor i in range(N):\n    person[i] = int(input())\n    for _ in range(person[i]):\n        j, good_or_bad = map(int, input().split())\n        j -= 1\n        testimony[i][j] = good_or_bad\n\n#\u3053\u3053\u307e\u3067\u304c\u5165\u529b\n\nans = 0\n\nfor i in range(1, 1<<N):\n    which_person = [None] * N\n    for j in range(N):\n        which_person[j] = i>>j & 1\n        #print(which_person[j])\n    ok = True\n    for j in range(N):\n        if which_person[j]:\n            for k in range(N):\n                if testimony[j][k] == None:\n                    continue\n                if testimony[j][k] != which_person[k]:\n                    ok = False\n    if ok:\n        ans = max(ans, which_person.count(1))\nprint(ans)","n = int(input()) # N\n\nnegs = [0 for _i in range(n)]\nfor i in range(n):\n    m = int(input())\n    for j in range(m):\n        pos, neg = tuple(map(int, input().split()))\n        negs[pos - 1] += neg - 1\n\nprint(sum([1 if x == 0 else 0 for x in negs]) if n > 2 else 1)\n","n = int(input())\nans = 0\nal = []\nxy = [[] for _ in range(n)]\nfor k in range(n):\n    a = int(input())\n    al.append(a)\n    for l in range(a):\n        x,y = map(int,input().split())\n        xy[k].append([x,y])\nfor i in range(2**n):\n    kinds = [0]*n\n    jud = 1\n    for j in range(n):\n        if (i >> j) & 1:\n            kinds[j] = 1\n    for k in range(n):\n        if kinds[k] == 1:\n            a = al[k]\n            for l in range(a):\n                x = xy[k][l][0]\n                y = xy[k][l][1]\n                if kinds[x-1] != y:\n                    jud = 0\n    if jud == 1:\n        ans = max(ans,kinds.count(1))\nprint(ans)\n","N = int(input())\nL = [ [] for _ in range(N)]\nfor i in range(N):\n    num = int(input())\n    for j in range(num):\n        person, state = map(int,input().split())\n        L[i].append([person - 1, state])\n\n# \u6b63\u76f4\u8005\u306e\u6700\u5927\u6570\u306e\u521d\u671f\u5316\nhonest = 0\n\nfor i in range(1,2**N):\n    flag = True\n    for j in range(N):\n        if (i>>j)&1 == 1: # j\u756a\u76ee\u304c\u6b63\u76f4\u8005\u3068\u4eee\u5b9a\u3057\u305f\u3068\u304d\n            for x, y in L[j]:\n                if (i>>x)&1 != y: # \u77db\u76fe\u3092\u767a\u898b(\u6b63\u76f4\u8005\u306ej\u3068\u3044\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u9055\u3046)\n                    flag = False\n                    break # \u77db\u76fe\u3092\u898b\u3064\u3051\u305f\u306e\u3067\u3001\u305d\u308c\u4ee5\u964d\u306ej\u306e\u8a3c\u8a00\u306f\u7121\u8996\n            if not flag:\n                break\n    if flag:\n        honest = max(honest, bin(i).count(\"1\"))\n\nprint(honest)","import itertools\n\nn = int(input())\nxy = []\nxyz =[]\na_list = []\nans = ['None']*n\ncount_list = []\ncount = 0\nfor _ in range(n):\n    a = int(input())\n    a_list.append(a)\n    for i in range(a):\n        x,y = map(lambda x: int(x),input().split())\n        xy.append([x,y])\n    xyz.append(xy)\n    xy = []\nxyz_all = list(itertools.permutations(xyz))\n\nfor i in range(len(list(itertools.permutations(xyz)))):\n    for j in range(n):\n        for k in range(a_list[j]) :\n            hoge = xyz_all[i][j][k][:]\n            if ans[hoge[0]-1] == 'None':\n                ans[hoge[0]-1] = hoge[1]\n            elif ans[hoge[0]-1] != hoge[1]:\n                count+= 1\n    count_list.append(count)\n\n\n\nif ans == [0]*n :\n    print(1)\nelse:\n    print(n - min(count_list))\n","output = 0\n\nN = int(input())\n\nstatement_all = []\nfor _ in range(N):\n    M = int(input())\n    statement = []\n    for _ in range(M):\n        temp = list(map(int,input().split()))\n        statement.append(temp)\n    statement_all.append(statement)\n\n\ndef check(a,b):\n    if hypo[a - 1] == b:\n        return True\n    else:\n        return False\n\n\npattern = 2 ** N\n\nfor p in range(pattern):\n    hypo = [0,0,0]\n    \n    for k in range(N):\n        if bin(p>>k & 1) == '0b1':\n            hypo[k] = 1    \n        if bin(p>>k & 1) == '0b0':\n            hypo[k] = 0\n    \n    result = 0        \n    for j in range(N):\n        if hypo[j] == 1:\n            for i in range(len(statement_all[j])):\n                if not check(statement_all[j][i][0],statement_all[j][i][1]):\n                    result += 1\n\n    if result == 0:\n        output = max(output,sum(hypo))\n\nprint(output)","import numpy as np\nimport itertools\n\nn = int(input())\n\np = []\n\nfor i in range(n):\n    a = int(input())\n    for _ in range(a):\n        x, y = map(int, input().split())\n        p.append([i, x - 1, y])\n\n# print(p)\n\na = np.array(list(itertools.product([0, 1], repeat=n)), dtype=\"bool\")\n\n# print(a)\n\nfor i, x, y in p:\n    cond = (~a[:, i]) | (a[:, x] == bool(y))\n    a = a[cond]\n# print(a)\n\nans = a.sum(axis=1).max()\nprint(ans)\n","N = int(input())\nA = [[-1 for i in range(N)] for i in range(N)]\nfor i in range(N):\n    m = int(input())\n    for j in range(m):\n        x,y = map(int,input().split())\n        A[i][x-1] = y\n#print(A)\nans = 0\nfor i in range(1<<N):\n    honets = [0 for i in range(N)]\n    for j in range(N):\n        if (i>>j) & 1:\n            honets[j] = 1\n    ok = True\n    for j in range(N):\n        if honets[j] == 1:\n            for k in range(N):\n                if A[j][k] == -1: continue\n                if A[j][k] != honets[k]: ok = False\n    if ok:\n        ans = max(ans, honets.count(1))\nprint(ans)\n","n = int(input())\ntest = []\ncount = 0\nfor i in range(0, n):\n    num_test = int(input())\n    for j in range(0, num_test):\n        answer = input().split()\n        a = answer[1]\n        if a == '1':\n            count += 1\n        else:\n            continue\nprint(count)","n=int(input())\n\nxy_list=[]\na_list=[]\nfor i in range(n):\n    a=int(input())\n    a_list.append(a)\n    xy=[]\n    for j in range(a):\n        xy.append(input().split(\" \"))\n\n    xy_list.append(xy)\n\nmaxn=0\nb=[0]*n\nfor i in range(2**n):\n    b=str(format(i,'b').zfill(n))\n    out=0\n    for j in range(n):\n        if b[j]==\"0\":continue\n        for k in range(a_list[j]):\n            x=int(xy_list[j][k][0])\n            y=str(xy_list[j][k][1])\n\n            if b[x-1]!=y:\n                out=1\n                break\n        \n        if out==1:\n            break\n    \n    if out == 0:\n        maxn=max(maxn,b.count(\"1\"))\n\nprint(maxn)","N = int(input())\nA = [0]*N\nx = [0]*N\ny = [0]*N\nfor _ in range(N):\n    a = int(input())\n    A[_] = a\n    x[_] = [0]*a\n    y[_] = [0]*a\n    for __ in range(a):\n        x[_][__],y[_][__] = map(int,input().split())\n        x[_][__] -= 1\n\ndef bi(x):\n    i = 0\n    o = [0]*N\n    while x > 0:\n        o[i] = x % 2\n        x \/\/= 2\n        i += 1\n    return o\n\ndef b(o):\n    for i in range(N):\n        # \u4e0d\u89aa\u5207\u306a\u4eba\u9593\u306e\u8a3c\u8a00\u306f\u771f\u507d\u4e0d\u660e\u306a\u306e\u3067\u7121\u8996\u3059\u308b\n        if o[i] == 0:\n            continue\n        # \u6b63\u76f4\u8005\u306e\u8a3c\u8a00\u306f\u77db\u76fe\u304c\u306a\u3051\u308c\u3070\u78ba\u5b9f\u306b\u6b63\u3057\u3044\n        for j in range(A[i]):\n            k = x[i][j]\n            if o[k] != y[i][j]:\n                return -1\n    return sum(o)\n\na = 0\nfor i in range(2 ** N):\n    # 2**N\u901a\u308a\u306e\u305d\u308c\u305e\u308c\u306b\u3064\u3044\u3066\u77db\u76fe\u304c\u306a\u3044\u304b\u78ba\u304b\u3081\u308b\n    o = bi(i)\n    a = max(a,b(o))\n\nprint(a)","N = int(input())\nA = [[] for i in range(N)]\n\nfor i in range(N):\n  a = int(input())\n  for j in range(a):\n    A[i].append(tuple(map(int, input().split())))\n\nans = 0\nfor bits in range(2**N):\n  l = [0] * N\n  for i in range(N):\n    l[i] = (bits >> i) % 2\n\n  fail = False\n  for i in range(N):\n    if fail: break\n    if l[i] == 0: continue # \u4e0d\u89aa\u5207\u306f\u30d1\u30b9\n    for x, y in A[i]:\n      if y != l[x-1]:\n        fail = True\n        break\n  else:\n    if not fail:\n      ans = max(ans, sum(l))\n\nprint(ans)","n = int(input())\nxy = []\nfor i in range(n):\n    a = int(input())\n    l = []\n    for j in range(a):\n        x, y = map(int, input().split())\n        l.append((x, y))\n    xy.append(l)\n\n# \u30d3\u30c3\u30c8\u5168\u63a2\u7d22\nbit = 0\nans = 0\nfor X in range(2 ** n):\n    # 1010\u306a\u3069\n    flag = False\n    count = 0\n    for num in range(n):\n        f = True\n        if X & (2 ** num) >= 1:\n            for x, y in xy[num]:\n                t = 1 if X & 2 ** (x-1) >= 1 else 0\n                if t != y:\n                    f = False\n                    break\n            if f == False:\n                count = 0\n                break\n            count += 1\n    ans = max(count, ans)\nprint(ans)","N = int(input())\nA =[0]*N\nS =[[] for i in range(N)]\nans = 0\nfor i in range(N):\n    A[i] = int(input())\n    for j in range(A[i]):\n        S[i].append(list(map(int, input().split())))\nform = \"0\" + str(N) + \"b\"\nfor i in range(2**N):\n    p = list(map(int, list(format(i,form))))\n#    print([[p[j] == 0 or p[S[j][k][0]-1] == S[j][k][1] for k in range(len(S[j]))] for j in range(N)])\n    if all([all([p[j] == 0 or p[S[j][k][0]-1] == S[j][k][1] for k in range(len(S[j]))]) for j in range(N)]):\n        ans = max(ans,sum(p))\nprint(ans)","N = int(input())\n\np = []\nt = []\n\nfor n in range(N):\n  a = int(input())\n  p.append(a)\n\n  t.append([list(map(int, input().split())) for k in range(a)])\n\nans = 0\n\nfor bit in range(1 << N):\n  flag = True\n\n  for i in range(N):\n    if not (bit & (1 << i)):\n      continue\n    \n    for x in t[i]:\n      if x[1] == 1 and not (bit & (1 << (x[0] - 1))):\n        flag = False\n      if x[1] == 0 and (bit & (1 << (x[0] - 1))):\n        flag = False\n\n  if flag:\n    count = 0\n    for s in range(N):\n      if bit & (1 << s):\n        count += 1\n\n    if count > ans:\n      ans = count\n\nprint(ans)","import itertools\nimport numpy as np\nn = int(input())\ndic_ = {}\nfor i in range(n):\n    m = int(input())\n    for j in range(m):\n        x, y = map(int, input().split())\n        dic_[(i,x)] = y\n\nok = []\nfor i in itertools.product([0,1],repeat=n):\n    for k in dic_.keys():\n        if i[k[0]] == 0:\n            continue\n        if dic_[k] != i[k[1]-1]:\n            break\n    else:\n        ok += [i]\nmm = 0\nfor i in ok:\n    mm = max(mm, sum(i))\nprint(mm)","# -*- coding: utf-8 -*-\nimport numpy as np\nimport random\n\nN = int(input())\nR = np.full((N, N), 2, dtype=np.uint8)\nS = np.full((N, N), 2, dtype=np.uint8)\nA = []\nfor i in range(N):\n  A.append(int(input()))\n  for j in range(A[i]):\n    x, y = map(int, input().split())\n    R[i, x-1] = y\n\nl = []\nfor i in range(N):\n  l.append(str(i))\n\ndef contra(M, N, st):\n  for i in range(N):\n    if(st[i] == '1' and sum(M[:,i] == 0) != 0):\n      return False;\n    elif(st[i] == '0' and sum(M[:,i] == 1) != 0):\n      return False;\n  return True\n\ndef selected_set(l, i):\n  tmp = []\n  if(i == 0):\n    return tmp\n  elif(i == 1):\n    return l\n  elif(i == len(l)):\n    tmp.append(''.join(l))\n    return tmp\n  else:\n    for k in range(len(l)-i+1):\n      st = l[k]\n      ll = l[k+1:]\n      tl = selected_set(ll, i-1)\n      res = [st+p for p in tl]\n      tmp += res\n    return tmp\n\nnum = 0\nfor i in range(N):\n  st = ['1']*N\n  ll = selected_set(l, i)\n  if(len(ll) == 0):\n    if(contra(R, N, st)):\n      num = N-i\n      break;\n\n  for zero_key in ll:\n    st = ['1']*N\n    S = np.full((N, N), 2, dtype=np.uint8)\n    for p in range(i):\n      st[int(zero_key[p])] = '0'\n    for k in range(1, len(st)+1):\n      if(st[-k] == '1'):\n        S[N-k, :] = R[N-k,:]\n    if(contra(S, N, st)):\n      num = N-i\n      break;\n  else:\n    continue\n  break\n\nprint(num)\n\n","N = int(input())\n\nevidences = [[] for _ in range(N)]\nfor i in range(N):\n    A = int(input())\n    for _ in range(A):\n        x, y = map(int, input().split())\n        evidences[i].append((x - 1, y))\n\nresult = 0\nfor i in range(1, 2 ** N):\n    consistent = True\n    for j in range(N):\n        if (i >> j) & 1 == 0:\n            continue\n        for x, y in evidences[j]:\n            if (i >> x) & 1 != y:\n                consistent = False\n                break\n        if not consistent:\n            break\n    if consistent:\n        result = max(result, bin(i)[2:].count('1'))\nprint(result)","N, *data = open(0).read().split('\\n')\nN = int(N)\n\nXY = []\n\nj = 0\nfor i in range(N):\n    A = int(data[j])\n    j += 1\n    XY.append([])\n    for a in range(A):\n        XY[i].append(tuple(map(int, data[j].split())))\n        j += 1\n        \n# True: \u77db\u76fe\u3042\u308a\u3001False: \u77db\u76fe\u306a\u3057\n\ndef is_contradiction(mynum:int, is_honest:str, x:int, y:int):\n    if is_honest[mynum]=='1':\n        return is_honest[x-1]!=str(y)\n    else:\n        return is_honest[x-1]==str(y)\n      \nans = 0\n\nfor i in range(2**N):\n    is_honest = format(i, '0%db' %N)\n    \n    if ans >= is_honest.count('1'):\n        continue\n    else:\n        \n#         print(is_honest) # for Debug\n        \n        contradictions = []\n        for n in range(N):    \n            for xy in XY[n]:\n                contradictions.append(is_contradiction(n, is_honest, *xy))\n        \n#         print(contradictions)  # for Debug\n        \n        if True not in contradictions:\n            ans = is_honest.count('1')\n            \nprint(ans)","N=int(input())\n\nA=[]\ntest = []\nfor i in range(N):\n    A_i= int(input())\n    A.append(A_i)\n    testimony_i=[]\n    for j in range(A_i):\n        x,y= map(int,input().split())\n\n        testimony_i.append([x,y])\n    \n    test.append(testimony_i)\n\nprint(A)\nprint(test)\n\n\ntotal=0\n\nfor i in range(2**N):\n\n    member = format(i,'0{}b'.format(N))\n\n    print(member)\n    flg = 0\n\n    for j in range(N):\n        if member[j]== '1':\n\n            syogen = test[j]\n\n            for s in syogen:\n                if member[s[0]-1]==str(s[1]):\n                    continue\n                else:\n                    flg+=1\n\n    if flg ==0:\n        total = max(total , member.count('1')) \n\nprint(total)\n# total = 0\n# for i in range(2**N):\n    \n#     Honests=[0]*N\n    \n#     for j in range(N):\n\n#         if (i>>j) & 1:\n\n#             A_j = A[j]\n            \n#             for k in range(A_j):\n#                 x,y =test[j][k][0],test[j][k][1]\n\n#                 x-=1\n#                 if y ==1:\n#                     Honests[x]=1\n#                 else:\n#                     Honests[x]=0\n#         else:\n#             A_j=A[j]\n\n#             for k in range(A_j):\n#                 x,y =test[j][k][0],test[j][k][1]\n\n#                 x-=1\n#                 if y ==1:\n#                     Honests[x]=0\n#                 else:\n#                     Honests[x]=1\n            \n#     total = max(total,max(Honests))\n\n# print(total)\n\n\n","N = int(input())\nsyougen = [[]*N for _ in range(N)]\n\nfor i in range(N):\n    A = int(input())\n    for j in range(A):\n        x, y = [int(s) for s in input().split()]\n        syougen[i].append((x,y))\n\ndef judge(bit):\n    for i in range(N):\n        if not bit & (1<<i):\n            continue\n        for x, y in syougen[i]:\n            if y == 1 and not bit & (1<<x-1):\n                return False\n            if y == 0 and bit & (1<<x-1):\n                return False\n    return True\n\nans = 0\nfor bit in range(2**N):\n    if judge(bit):\n        res = 0\n        for i in range(N):\n            if bit & (1<<i):\n                res += 1\n        ans = max(res, ans)\n        \nprint(ans)\n\n\n","n=int(input())\nxy=[[] for i in range(n)]\nfor i in range(n):\n    a=int(input())\n    for j in range(a):\n        xy[i].append(list(map(int,input().split())))\n        \nans=0\nfor i in range(2**n):\n    flg=0\n    bin_i=format(i, '0{}b'.format(n))\n    zero_one=list(bin_i)\n    for j in range(n):\n        if zero_one[j]==\"1\":\n            for k in xy[j]:\n                x,y=k\n                if zero_one[x-1]==\"1\" and y==0:\n                    flg=1\n                if zero_one[x-1]==\"0\" and y==1:\n                    flg=1\n\n    if flg==0:\n        tmp=0\n        for w in zero_one:\n            if w==\"1\":\n                tmp+=1\n        ans=max(ans,tmp)\n\nprint(ans)\n    \n    ","def solve():\n    # \u6a19\u6e96\u5165\u529b\u90e8\u5206\n    N = int(input())  # len(person)\n    A = []\n    x = []\n    y = []\n    i = 0\n    for i in range(N):\n        A.append(int(input()))\n        x.append([])\n        y.append([])\n        for j in range(A[i]):\n            x_temp, y_temp = list(map(int, input().split()))\n            x[i].append(x_temp)\n            y[i].append(y_temp)\n    \n    # N\u4eba\u3092\u6b63\u76f4\u8005\uff0c\u4e0d\u89aa\u5207\u306a\u4eba\u3068\u4eee\u5b9a\u3057\u3066\u77db\u76fe\u305b\u305a\u306b\u5b58\u5728\u3057\u3046\u308b\u6b63\u76f4\u8005\u306e\u6700\u5927\u4eba\u6570\u3092\u6c42\u3081\u308b\uff0e\n    honest_num = 0\n    honest_num_new = 0\n    for b in range(2**N):\n        consistent = True\n        case = format(b, '0'+str(N)+'b')\n        # \u77db\u76fe\u304c\u3042\u308b\u304b\u78ba\u8a8d\u3059\u308b\u51e6\u7406, n-bit\u76ee\u304c'1'\u306e\u3068\u304d\uff0cn\u756a\u76ee\u306e\u4eba\u306f\u6b63\u76f4\u8005\n        i = 0\n        for i in range(N): # i\u756a\u76ee\u306e\u4eba\u306e\u8a3c\u8a00\u3092\u691c\u8a3c\n            for z in zip(x[i], y[i]): #z[0]\uff08person[i]\uff09\u304cz[1]\uff08\u6b63\u76f4\u8005\uff0c\u4e0d\u89aa\u5207\u306a\u4eba\uff09\u3067\u3042\u308b\u3068\u3044\u3046\u8a3c\u8a00\n                if case[i] == \"1\":\n                    if case[z[0]-1] != str(z[1]):\n                        consistent = False\n        if consistent:\n            # \u77db\u76fe\u304c\u306a\u3044\u3068\u304d\uff0c\u6b63\u76f4\u8005\u306e\u6570\u3092\u6c42\u3081\u308b\u51e6\u7406\n            honest_num_new = case.count(\"1\")\n        # \u3053\u308c\u307e\u3067\u306e\u6700\u5927\u306e\u4eba\u6570\u3068\u6bd4\u8f03\u3057\u3066\uff0c\u6b63\u76f4\u8005\u304c\u591a\u3044\u307b\u3046\u3092\u63a1\u7528\n        honest_num = max(honest_num, honest_num_new)\n    print(honest_num)\n\n\n\nif __name__ == \"__main__\":\n    solve()\n","N = int(input())\nedge = [[] for _ in range(N)]\nfor i in range(N):\n    A = int(input())\n    for j in range(A):\n        x,y = map(int,input().split())\n        edge[i].append((x-1,y))\n\nans = 0\nfor i in range(2**N):\n    # 1: \u6b63\u76f4\u8005\n    state = [0] * N\n    for j in range(N):\n        state[j] = (i >> j) & 1\n    \n    # \u771f\u507d\u3092\u78ba\u304b\u3081\u308b\n    flag = True\n    for j in range(N):\n        if state[j] == 0:\n            continue\n        for x,y in edge[j]:\n            if state[x] == y:\n                continue\n            flag = False\n            break\n        if not flag:\n            break\n    if not flag:\n        continue\n\n    ans = max(ans, state.count(1))\n\nprint(ans)","#ABC147\u3000C\u3000\u3084\u3063\u3066\u308b\u9014\u4e2d\nn=int(input())\nl=[]\nfor i in range(n):\n  a=int(input())\n  l_=[]\n  for j in range(a):\n    xy=list(map(int,input().split()))\n    l_.append(xy)\n  l.append(l_)\nans=0\nfor i in range(2**n):\n  table=[0]*n\n  flag=False\n  for j in range(n):\n    if (i>>j)&1:\n      table[j]=1\n  for j in range(n):\n    for k in l[j]:\n   \n      if k[1]!=table[k[0]-1] and table[j]==1:\n        flag=True\n        break\n\n        if flag:\n          break\n\n  if flag==True:\n    continue\n\n\n  ans = max(ans, table.count(1))\n\n\nprint(ans)","n=int(input())\nxy=[[[]] for _ in range(n)]\nfor i in range(n):\n    a=int(input())\n    xy[i]=[list(map(int,input().split())) for _ in range(a)]\nans=0\nfor i in range(2**n):\n    tmp=[0]*n\n    flag1=True\n    for j in range(n):\n        if (i>>j)&1:\n            tmp[j]=1\n    for k in range(n):\n        flag2=True\n        if tmp[k]==1:\n            for x,y in xy[k]:\n                if tmp[x-1]!=y:\n                    flag1=False\n                    flag2=False\n                    break\n        if not flag2:\n            break\n    if flag1:\n        ans=max(ans,sum(tmp))\nprint(ans)","import itertools\nn = int(input())\nl = []\nfor i in range(n):\n    d = int(input())\n    for dd in range(d):\n        x, y = map(int, input().split())\n        l.append([i, x-1, y])\n \nans = 0\nfor p in itertools.product([0, 1], repeat=n):\n    for ll in l:\n        if p[ll[0]] == 1 and p[ll[1]] != ll[2]:\n            break\n    else:\n        ans = max(ans, sum(p))\nprint(ans)","N=int(input())\narr = [[] for i in range(N+1)]\nbm = [0 for i in range(N+1)]\nmaxs = 0\ncnt = 0\n\ndef slv(curInd):\n  global N,arr,bm,maxs,cnt\n  if curInd==N:\n    good = True\n    for i in range(N+1):\n      if good == False:\n        break\n      if bm[i]:\n        for el in arr[i]:\n          if bm[el[0]]!=el[1]:\n            good = False\n            break\n    if good == True:\n      maxs = max(maxs,cnt)\n    cnt += 1\n    bm[curInd] = 1\n    good = True\n    for i in range(N+1):\n      if good == False:\n        break\n      if bm[i]:\n        for el in arr[i]:\n          if bm[el[0]]!=el[1]:\n            good = False\n            break\n    if good == True:\n      maxs = max(maxs,cnt)\n    bm[curInd] = 0\n    cnt -= 1\n  else:\n    slv(curInd+1)\n    cnt += 1\n    bm[curInd] = 1\n    slv(curInd+1)\n    cnt -= 1\n    bm[curInd] = 0\n\nfor i in range(N):\n  A=int(input())\n  for j in range(A):\n    arr[i+1].append(list(map(int,input().split())))\nslv(1)\nprint(maxs)","n=int(input())\ntestimony_list=[[[-1,-1] for _ in range(n-1)] for i in range(n)]\nfor i in range(n):\n\ta=int(input())\n\tfor j in range(a):\n\t\tx,y=map(int,input().split())\n\t\ttestimony_list[i][j][0]=x-1\n\t\ttestimony_list[i][j][1]=y\n\nans=0\nfor i in range(2**n):\n\tkind_l=[0 for _ in range(n)]\n\tfor j in range(n):\n\t\tif ((i>>j) & 1):\n\t\t\tkind_l[j]=1\n\tfor k in range(n):\n\t\tif kind_l[k]==1:\n\t\t\tfor m in range(a):\n\t\t\t\tsubject=testimony_list[k][m][0]\n\t\t\t\tjudge=testimony_list[k][m][1]\n\t\t\t\tif subject or judge==-1:continue\n\t\t\t\tif kind_l[subject]!=judge:\n\t\t\t\t\tkind_l=[0 for _ in range(n)]\n\t\t\t\t\tbreak\n\tans=max(ans,sum(kind_l))\nprint(ans)\n","N = int(input())\nA = [[-1 for _ in range(N)] for _ in range(N)]\nfor i in range(N):\n    a = int(input())\n    for _ in range(a):\n        x, y = map(int, input().split())\n        x -= 1\n        A[i][x] = y \n\nans = 0\nfor b in range(2**N):\n    bit = bin(b)[2:].zfill(N)\n    flg = True\n    for i in range(N):\n        if bit[i] == '0': continue\n        for j in range(N):\n            if A[i][j] == -1: continue\n            if A[i][j] != int(bit[j]):\n                flg = False\n                break\n        \n        if not flg: break\n\n    ans = max(bit.count('1'), ans) if flg else ans\n\nprint(ans)","N=int(input())\nall=[]\nfor i in range(N):\n    A_N=int(input())\n    grid=[]\n    for j in range(A_N):\n        a=list(map(int, input().split()))\n        grid.append(a)\n    all.append(grid)\nprint(all)\nans=[]\nfor i in range(N):# \u4e8c\u9032\u6570\u306e\u30ea\u30b9\u30c8\u4f5c\u6210\n    b = format(i,'b').zfill(N)\n    c_l = [int(p) for p in list(b)]\n\n    for l in range(N):# check\u306e\u958b\u59cb\uff08l\u306f\u4eba\uff09\n        for m in range(len(all[l])):# \u305d\u306e\u4eba\u306e\u4e3b\u5f35\u306e\u6570\n            if c_l[all[l][m][0]-1]!=all[l][m][1]:\n                break\n        else:\n            continue\n        break\nelse:\n    ans.append(c_l.count(1))\nprint(max(ans))\n","#!\/usr\/bin\/env python3\n\nimport itertools\n\n\ndef max_honests(n, statements):\n    g = itertools.product((True, False), repeat=n)\n    res = 0\n    for is_hon in g:\n        flag = True\n        for i in range(n):\n            if is_hon[i]:\n                for x, y in statements[i]:\n                    if is_hon[x] != y:\n                        flag = False\n        if flag:\n            res = max(res, sum(is_hon))\n    return res\n\n\ndef main():\n    n = int(input())\n    statements = [set() for _ in range(n)]\n    for i in range(n):\n        a = int(input())\n        for _ in range(a):\n            x, y = (int(z) for z in input().split())\n            statements[i].add((x - 1, bool(y)))\n    res = max_honests(n, statements)\n    print(res)\n\n\nif __name__ == \"__main__\":\n    main()\n","import sys, math\nfrom collections import defaultdict\nfrom copy import deepcopy\nimport itertools\ninput = sys.stdin.readline\n# \u6587\u5b57\u5217\u306e\u5834\u5408\u306f\u666e\u901a\u306einput()\u3092\u4f7f\u3046\u304b\u4e0b\u3092\u4f7f\u3046\n# input = sys.stdin.readline().rstrip()\n\nN = int(input())\nA = [None]\ninfo = [None] + [[] for _ in range(N)]\nfor i in range(N):\n    a = int(input())\n    A.append(a)\n    for _ in range(a):\n        x, y = map(int, input().split())\n        info[i+1].append((x, y))\n#print('info={}'.format(info))\n    \nans_bit = 0\nfor num in range(2**N-1, -1, -1):\n    bit_pre = bin(num)\n    bit_pre = bit_pre[2:]\n    l = len(bit_pre)\n    bit = '0' * (N - l) + bit_pre\n\n\n    status = [None] * (N + 1)\n    #print('bit={}'.format(bit))\n    contradict = False\n    for i, n in enumerate(bit):\n        i += 1\n        n = int(n)\n        #print('i={}, n={}'.format(i, n))\n    \n        if n == 1:\n            for x, y in info[i]:\n                if int(bit[x-1]) != y:\n                    contradict = True\n                    \n                s = status[x]\n                #print('s={}'.format(s))\n                if s == None:\n                    status[x] = y\n                elif s != y:\n                    contradict = True\n                #print('status={}'.format(status))\n        \n    if not contradict:\n        ans_bit = bit\n        break\n\n\n\n#print('ans_bit={}'.format(ans_bit))\nans = 0\nfor x in ans_bit:\n    if x == '1':\n        ans += 1\nprint(ans)","n = int(input())\nall = 1<<n\nstatement = []\nfor i in range(n):\n    A = int(input())\n    statement.append([])\n    for j in range(A):\n        x, y = map(int, input().split())\n        statement[i].append([x-1, y])\nans = 0\nfor i in range(all):\n    ok = True\n    num = 0\n    for j in range(n):\n        if i & 1<<j:\n            num += 1\n            for s in statement[j]:\n                if (i & 1<<s[0]) != (s[1]<<s[0]):\n                    ok = False\n    if ok:\n        ans = max(ans, num)\nprint(ans)\n","#python3 \ng = [[-1 for _ in range(15)] for _ in range(15)]\n\nn = int(input())\nfor i in range(n):\n  m = int(input())\n  for j in range(m):\n    x,y = map(int, input().split())\n    g[i][x-1] = y\n\nans = 0\nfor i in range(1<<n):\n  honests = [0 for _ in range(n)]\n  for j in range(n):\n    if (i>>j) &1:\n      honests[j] = 1 \n  ok = True\n  for j in range(n):\n    if honests[j]:\n      for k in range(n):\n        if g[j][k] == -1: continue\n        if g[j][k] != honests[k]: ok = False\n  if ok:\n    ans = max(ans, bin(i).count('1'))\n\nprint(ans)","n = int(input())\na = [0] * n\nx = [[] for i in range(n)]\ny = [[] for i in range(n)]\nfor i in range(n):\n    a[i] = int(input())\n    for j in range(a[i]):\n        k, l = map(int, input().split())\n        x[i].append(k)\n        y[i].append(l)\n\ndef dfs(cur, l):\n    global ok\n    if cur == n:\n        ok = True\n        for i in range(n):\n            if l[i]==1 and any([l[x[i][j]-1]!=y[i][j] for j in range(a[i])]):\n                ok = False\n        return sum(l) if ok else 0\n    else:\n        l1 = l[:]\n        l1[cur] += 1\n        return max(dfs(cur+1, l), dfs(cur+1, l1))\n\nprint(dfs(0, [0]*n))","import numpy as np\n\nN = int(input())\nA = [0]*N\nX = np.zeros([N,N],dtype=int)\nY = np.zeros([N,N],dtype=int)\n\nfor n in range(N):\n    A[n] = int(input())\n    for a in range(A[n]):\n        X[n][a], Y[n][a] = list(map(int,input().split()))\n\nans = 0\n\nfor bits in range( 1, 1<<N ):\n    ok = True\n    for i in range( 0, N ):\n        if not ( bits & (1 << i) ):\n            continue\n        for j in range( 0, A[i] ):\n            if (( bits >> (X[i][j]-1) ) & 1) ^ Y[i][j]:\n                ok = False\n    if ok:\n        ans = max( ans, (str(bin(bits))[2:]).count('1'))\n        \nprint(ans)","n = int(input())\nlists = [[] for _ in range(n)]\nfor i in range(n):\n    a = int(input())\n    for j in range(a):\n        x, y = map(int, input().split())\n        lists[i].append((x-1, y))\nans = 0\nfor i in range(1, 2**n):\n    status = True\n    for j in range(n):\n        if (i >> j) & 1 == 0:\n            continue\n        for x, y in lists[j]:\n            if (i >> x) & 1 != y:\n                status = False\n                break\n        if status == False:\n            break\n    if status == True:\n        ans = max(ans, bin(i).count('1'))\nprint(ans)","def max_honest(n_ppl, testimonies):\n    formating_str = \"{0:0\" + str(n_ppl) + \"b}\"\n    max = 0\n    for i in range(1, 2**n_ppl + 1):\n        current_val = formating_str.format(2**n_ppl - i)\n        potential = True\n        valid_testemonies = []\n        for j in range(0, len(current_val)):\n            if current_val[j] == \"1\":\n                for k in range(0, len(testimonies[j])):\n                    valid_testemonies.append(testimonies[j][k])\n        for j in range(0, len(valid_testemonies)):\n            if str(valid_testemonies[j][1]) != current_val[valid_testemonies[j][0] - 1]:\n                potential = False\n                break\n        if potential:\n            if current_val.count(\"1\") > max:\n                max = current_val.count(\"1\")\n    return max\n\ntestimonies = []\nn_ppl = int(input())\n\nfor i in range(0, n_ppl):\n    tests = []\n    n_tests = int(input())\n    for j in range(0, n_tests):\n        test = input().split(\" \")\n        test = (int(test[0]), int(test[1]))\n        tests.append(test)\n    testimonies.append(tests)\n    \nprint(\"\")\nprint(max_honest(n_ppl, testimonies))\ninput(\"Press enter\")","n=int(input())\nl=[]\nfor i in range(n):\n  n1=int(input())\n  l1=[]\n  for j in range(n1):\n    a,b=map(int,input().split())\n    l1.append([a,b])\n  l.append(l1)\nnum=2**n\nbitlist=[]\nfor i in range(1,1+num):\n  num1=num-i\n  b1=[]\n  while num1!=0 or len(b1)<n:\n    b1.append(num1%2)\n    num1\/\/=2\n  bitlist.append(b1)\n#\u5404b1\u306e\u8981\u7d20\u304c1\u306e\u6642\u305d\u306e\u4eba\u306f\u6b63\u76f4\u8005\nans=0\nfor i in range(num):\n  b=bitlist[i]\n  bool1=True\n  for j in range(n):\n    if not bool1:\n      pass\n    elif b[j]==0:\n      pass\n    else:#j\u306f\u6b63\u76f4\u8005\u3060\u304b\u3089\u767a\u8a00\u306f\u5168\u3066\u672c\u5f53 \u6574\u5408\u6027\u5fc5\u8981\n      for k in l[j]:\n        n1=k[0]\n        n2=k[1]\n        if b[n1-1]!=n2:\n          bool1=False\n  count=0\n  if bool1:\n    for j in b:\n      if j==1:\n        count+=1\n    if count>ans:\n      ans=count\nprint(ans)","import itertools\nN = int(input())\ndic = {}\ncnt = 0\nok = []\nfor i in range(N):\n  A = int(input())\n  for j in range(A):\n    x,y = (int(t) for t in input().split())\n    dic[(i,x)] = y\nfor i in itertools.product([0,1],repeat=N):\n  for k in dic.keys():\n    if i[k[0]] == 0:\n      continue\n    if dic[k] != i[k[1]-1]:\n      break\n  else:\n    ok += [i]\nmm = 0\nfor i in ok:\n  mm = max(mm,sum(i))\nprint(mm)","n = int(input())\n\nl = []\naas = []\n\nfor i in range(n):\n    a = int(input())\n    aas.append(a)\n    s = [list(map(int,input().split())) for i in range(a)]\n    l.append(s)\n\nfor i in range(2**n):\n    flag_n = [1]*n\n    for j in range(n):\n        if ((i >> j)&1):\n            flag_n[n-1-j] = 0\n    cnt = 0\n    for k in range(n):\n        if flag_n[k] == 1:\n            if all(l[k][m][1] == flag_n[l[k][m][0]-1] for m in range(aas[k])):\n                cnt += 1\n        if cnt == sum(flag_n):\n            print(sum(flag_n))\n            exit()\n\nprint(0)\n        \n","n = int(input())\ng = [[-1 for j in range(n)] for i in range(n)]\n\nfor i in range(n):\n    a = int(input())\n    for _ in range(a):\n        x, y = map(int, input().split())\n        g[i][x - 1] = y\n        \nans = 0\nfor s in range(2**n):\n    ok = True\n    k = 0\n    for i in range(n):\n        if (s >> i & 1) == 1:\n            k += 1\n            for j in range(n):\n                if g[i][j] == -1:\n                    continue\n                if (s >> j & 1) != g[i][j]:\n                    ok = False\n    if ok:\n        ans = max(ans, k)\n\nprint(ans)","n = int(input())\nw = [[] for i in range(n)]\nfor i in range(n):\n    a = int(input())\n    for j in range(a):\n        w[i].append([int(x) for x in input().split()])\n\nans = 0\nfor i in range(2**n):\n    flag = 1\n    f = [0]*n\n    num = 0\n    for j in range(n):\n        if i & 1<<j:\n            f[j] = 1\n            num += 1\n    for j in range(n):\n        if f[j]==1:\n            for k in w[j]:\n                if k[1]!=f[k[0]-1]:\n                    flag = 0\n        else:\n            for k in w[j]:\n                if k[1]==f[k[0]-1]:\n                    flag = 0\n    \n    if flag == 1:\n        ans = max(ans,num)\nprint(ans)"],"raw_generations":["N = int(input())\nT = [[] for x in range(N)]\n\nfor i in range(N):\n    for _ in range(int(input())):\n        idx, t = map(int, input().split())\n        T[i].append((idx-1, t))\n\nans = 0\nfor i in range(1, 2**N):\n    ok = True\n    ans_t = 0\n    for j in range(N):\n        if (i>>j) & 1 == 0:\n            continue\n        ans_t += 1\n        for (x,y) in T[j]:\n            if (i>>x) & 1 != y:\n                ok = False\n                break\n        if not ok:\n            break\n    if ok:\n        ans = max(ans, ans_t)\nprint(ans)\n","n = int(input())\ndata = [[] for i in range(n)]\nfor i in range(n):\n    a = int(input())\n    for _ in range(a):\n        data[i].append(list(map(int,input().split())))\n\n#print(data)\nans = 0\nfor i in range(1<<n):\n    truth = []\n    for x in range(n):\n        if i&(1<<x):\n            truth.append(x+1)\n\n    q = True\n    for j in truth:\n        for x,y in data[j-1]:\n            if x in truth and y == 0:\n                q = False\n                break\n            if x not in truth and y == 1:\n                q = False\n                break\n    if q:\n        ans = max(ans,len(truth))\n        #print(truth)\n\nprint(ans)","n = int(input())\nxy_ls = [0]*n\n\nfor i in range(n):\n    a = int(input())\n    ls = [list(map(int, input().split())) for _ in range(a)]\n    xy_ls[i] = ls \n\nok_ls = []\nfor i in range(2**n):\n    ok = 1\n    people = [0]*n\n    for j in range(n):\n        if i >> j & 1:\n            people[j] = 1\n    for j in range(n):\n        if people[j] == 1:\n            for xy in xy_ls[j]:\n                if xy[1] != people[xy[0]-1]:\n                    ok = 0\n    if ok:\n        ok_ls.append(len([i for i in people if i == 1]))\n\nprint(max(ok_ls))","import itertools\n\nn=int(input())\n\nlis=[]\nfor i in range(n):\n    ai=int(input())\n    lisi=[]\n    for _ in range(ai):\n        xi,yi=map(int,input().split())\n        lisi.append([xi-1,yi])\n    lis.append(lisi)\n\n#print(lis)\nans=0\nfor binary in itertools.product([0,1],repeat=n):\n    check=0\n    for i in range(n):\n        #print(\"bi\",binary[i])\n        if binary[i]==1:\n            for j in range(len(lis[i])):\n                #print(binary[lis[i][j][0]],lis[i][j][1])\n                if binary[lis[i][j][0]]!=lis[i][j][1]:\n                    check+=1\n        else:\n            for j in range(len(lis[i])):\n                #print(binary[lis[i][j][0]],lis[i][j][1])\n                if binary[lis[i][j][0]]==lis[i][j][1]:\n                    check+=1\n    if check==0:\n        #print(binary)\n        ans=max(ans,sum(binary))\n\nprint(ans)","#!\/usr\/bin\/env python3\nimport sys\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\n\ndef count_ones(num):\n    count = 0\n    while num:\n        count += num & 1\n        num >>= 1\n    return count\n\n\ndef main():\n    N = int(readline())\n    X = []\n    for i in range(N):\n        A = int(readline())\n        tmp = []\n        for _ in range(A):\n            tmp.append(tuple(map(int, readline().split())))\n        X.append(tmp)\n\n    ans = 0\n    for i in range(2**N):\n        OK = True\n        for j in range(N):\n            if ((i >> j) & 1):\n                for x in X[j]:\n                    if ((i >> (x[0] - 1)) & 1) != x[1]:\n                        OK = False\n                        break\n                if not OK:\n                    break\n        if OK:\n            ans = max(ans, count_ones(i))\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n","from itertools import product\n\ndef main():\n    n = int(input())\n    a = []\n    ls = []\n    ans = 0\n    for _ in range(n):\n        ai = int(input())\n        a.append(ai)\n        ls.append([tuple(map(int, input().split())) for i in range(ai)])\n    ptns = list(product([0,1], repeat=n))\n    for ptn in ptns:\n        flag = 0\n        lsls = list(ptn)\n        for j in range(n):\n            if ptn[j] == 1:\n                for i in range(a[j]):\n                    if ls[j][i][1] == 1 and lsls[ls[j][i][0]-1] == 1:\n                        lsls[ls[j][i][0]-1] *= ls[j][i][1]\n                    elif ls[j][i][1] == 0 and lsls[ls[j][i][0]-1] == 0:\n                        lsls[ls[j][i][0]-1] *= ls[j][i][1]\n                    else:\n                        flag = 1\n        if flag == 0:\n            if list(ptn) == lsls:\n                if ans < sum(ptn):\n                    ans = sum(ptn)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()","N = int(input())\nxs = [[] for i in range(N)]\nfor i in range(N):\n    a = int(input())\n    for j in range(a):\n        x,y = map(int,input().split())\n        xs[i].append((x-1,y))\nans = 0\nfor b in range(1<<N):\n    mujun = False\n    for k,z in enumerate(xs):\n        for x,y in z:\n            if b&(1<<x):\n                if y==0:\n                     mujun = True\n            else:\n                if y==1:\n                    mujun = True\n        if mujun:\n            break\n    if mujun:\n        break\n    if not mujun:\n        tmp = bin(b).count('1')\n        ans = max(ans, tmp)\nprint(ans)\n","#!\/usr\/bin\/env python3\n\nimport sys\n# import math\n# import re                                    # re.compile(pattern) => ptn obj; p.search(s), p.match(s), p.finditer(s) => match obj; p.sub(after, s)\n# from collections import deque                # deque class. deque(L): dq.append(x), dq.appendleft(x), dq.pop(), dq.popleft(), dq.rotate()\n# from collections import defaultdict          # subclass of dict. defaultdict(facroty)\n# from collections import Counter              # subclass of dict. Counter(iter): c.elements(), c.most_common(n), c.subtract(iter)\n# from heapq import heapify, heappush, heappop # built-in list. heapify(L) changes list in-place to min-heap in O(n), heappush(heapL, x) and heappop(heapL) in O(lgn).\n# from heapq import nlargest, nsmallest        # nlargest(n, iter[, key]) returns k-largest-list in O(n+klgn).\nfrom itertools import product                # product(iter, repeat=n)\n# from itertools import accumulate             # accumulate(iter[, f])\n# from functools import reduce                 # reduce(f, iter[, init])\n# from bisect import bisect_left, bisect_right # bisect_left(a, x, lo=0, hi=len(a)) returns i such that all(val<x for val in a[lo:i]) and all(val>-=x for val in a[i:hi]).\n# from fractions import gcd                    # for Python3.4.3\n\n\ndef main():\n    mod = 10000007                  # 10^9+7\n    inf = float('inf')\n    sys.setrecursionlimit(10**6)    # 1000 -> 1000000\n    def input(): return sys.stdin.readline().rstrip()\n    def ii():  return int(input())\n    def mi():  return map(int, input().split())\n    def mi_0(): return map(lambda x: int(x)-1, input().split())\n    def lmi(): return list(map(int, input().split()))\n    def lmi_0(): return list(map(lambda x: int(x)-1, input().split()))\n    def li():  return list(input())\n    \n\n    def check_no_contradict(case):\n        for i, person in enumerate(case):\n            if person == 1:\n                for comment in comments[i]:\n                    if case[comment[0]] != comment[1]:\n                        return False\n        return True\n\n\n    n = ii()\n    comments = [[] for _ in range(n)]\n    for i in range(n):\n        num = ii()\n        for _ in range(num):\n            a, b = mi()\n            comments[i].append(tuple([a-1, b]))\n    \n    ans = 0\n    for case in product([0, 1], repeat=n):\n        if check_no_contradict(case):\n            # print(f\"case: {case}\")\n            ans = max(ans, case.count(1))\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()","N=int(input())\nflag=0\nE=[]\ntotal=0\nmaxi=0\nfor i in range(N):\n    E.append([0]*N)\nfor i in range(N):\n    M=int(input())\n    for j in range(M):\n        C, D = map(int, input().split())\n        if D==1:\n            D=2\n        else:\n            D=1\n        E[i][C-1]+=D\n\n#print(E)\n\nA=[]\nfor i in range((2**N)):\n    s=format(i,'b')\n    A.append(s.zfill(N))\n#print(A)\n\nfor i in range(len(A)):\n    flag=0\n    total=0\n    S=A[i]\n    #print(S)\n    for j in range(len(S)):\n        if S[j]=='0':\n            for k in range(N):\n                #print(E[j][k],S[k])\n                if (E[j][k]==1 and S[k]=='0')or (E[j][k] == 2 and S[k] == '1'):\n                    #print('f')\n                    flag=1\n    if flag==0:\n        for o in range(len(S)):\n            if S[o]=='0':\n                total+=1\n        maxi=max(maxi,total)\nprint(maxi)","N = int(input())\nL = []\nfor _ in range(N):\n  L.append([list(map(int, input().split())) for _ in range(int(input()))])\nfor ls in L:\n  for l in ls:\n    l[0] -= 1\nM = 0\nfor i in range(1<<N):\n  A, Normal = [], True\n  for j in range(N):\n    if (i>>j)&1:\n      A.append(j)\n  for a in A:\n    for l in L[a]:\n      if l[0] in A and l[1]==0:\n        Normal = False\n      if l[1]==1 and l[0] not in A:\n        Normal = False\n  if Normal:\n    M = max(M, len(A))\nprint(M)","from collections import deque\nN = int(input())\nTlist = deque([])\nfor i in range(N):\n    list = []\n    n = int(input())\n    if n != 0:\n        for i in range(n): #\u56e0\u6570\u6ce8\u610f\uff01\n            o = input()    \n            m = o.split()\n            p = [int(j) for j in m] #1\u5217\u306e\u6570\u5217\u3092\u30ea\u30b9\u30c8\u5316\n            list.append(p)\n    Tlist.append(list)\nmax = 0\nfor i in range(2**N):\n    p = format(i,'0'+str(N)+'b')\n    print(p)\n    ALL = True\n    for j, value in enumerate(p):\n        if value == '0':\n            pass\n        else:\n            if len(Tlist[j]) == 0:\n                pass\n            else:\n                for k in Tlist[j]:\n                    if p[k[0]-1] == str(k[1]):\n                        pass\n                    else:\n                        ALL = False\n            if ALL:\n                pass\n            else:\n                break\n    else:\n        new = p.count('1')\n        if new > max:\n            max = new\n\nprint(max)","# import itertools\n# import math\n\nN = int(input())\n# S = input()\n# n, *a = map(int, open(0))\n# A, B, X = map(int, input().split())\n# A = list(map(int, input().split()))\n# S = input()\n\nin_list = []\n\nfor i in range(N):\n    A_i = int(input())\n    _list = []\n    for j in range(A_i):\n        x_ij, y_ij = map(int, input().split())\n        _list.append([x_ij, y_ij])\n    in_list.append(_list)\n\ncnt = 0\nfor i in range(2 ** N):\n    for j in range(N):\n        # print(i, end=\" \")\n        # print(bin(i)[2:].zfill(N), end=\" \")\n        # print(j, end=\" \")\n        # print((i>>j) & 1) # i >> j \u306fi\u3092j\u30d3\u30c3\u30c8\u53f3\u30b7\u30d5\u30c8\u3001x & y \u306fx\u3068y\u306e\u540c\u3058\u4f4d\u7f6e\u306e\u30d3\u30c3\u30c8\u304c\u4e21\u65b91\u306e\u5834\u54081\u3068\u3059\u308b\u21920110 & 1(0001) = 0000\n        flg = 0\n        if ((i>>j) & 1 == 0): # flg\u306f\u6b63\u76f40 \u56181\n            flg = 1\n        for l in in_list[j]:\n            if (((i>>l[0] - 1) ^ l[1]) ^ flg) & 1: # \u8a3c\u8a00\u4e0d\u4e00\u81f41, \u4e00\u81f40 -> \u4e0d\u4e00\u81f4\u3060\u304c\u3001\u6b63\u76f4\u306a\u3089\u3084\u3063\u3071\u308a\u30c0\u30e1\n                # print(i,bin(i)[2:].zfill(N),(i>>l[0] - 1),(i>>l[0] - 1) ^ l[1],((i>>l[0] - 1) ^ l[1]) ^ flg,l,flg)\n                break\n        else:\n            continue\n        break\n    else:\n        # print(i, bin(i))\n        _ = bin(i)[2:].zfill(N).count(\"1\")\n        cnt = max(cnt, _)\n    continue\n\nprint(cnt)","num = int(input())\n\n\ntemp2_list = []\n\nfor i in range(num):\n    A = int(input())\n\n    temp1_list = []\n    for j in range(A):\n        temp1_list.append([int(k) for k in input().split()])\n\n    temp2_list.append(temp1_list)\n\nright_agree = 0\nng_agree = 0\nun_agree = 0\nunknown = 0\n\n\ntemp4_list = []\nfor i in range(num):\n    temp3_list = [-1] * num\n    for k in range(len(temp2_list[i])):\n        # print(temp2_list[i][k][0])\n        temp3_list[temp2_list[i][k][0]-1] = temp2_list[i][k][1]\n    temp4_list.append(temp3_list)\n\nfor i in range(num):\n    for k in range(num):\n        if i !=k:\n            if temp4_list[i][k] == temp4_list[k][i] and temp4_list[i][k] == 1:\n                right_agree += 1\n            elif temp4_list[i][k] == temp4_list[k][i] and temp4_list[i][k] == 0:\n                ng_agree += 1\n            elif temp4_list[i][k] != temp4_list[k][i]:\n                un_agree += 1\n            else:\n                unknown += 0\n\n# print(right_agree, ng_agree, un_agree, unknown)\n# print(temp4_list)\n\nres1 = (right_agree - un_agree)\/\/2\nres2 = num - ng_agree\/\/2 - (un_agree\/\/2)\/\/2\n\nprint(max(res1,res2))","N = int(input())\n\nreply = [[-1] * N for _ in range(N)]\n\nfor i in range(N):\n    A = int(input())\n    for _ in range(A):\n        x, y = map(int, input().split())\n        x -= 1\n        reply[i][x] = y\n\nans = 0\n\nfor i in range(1<<N):\n    flag = True\n    for j in range(N):\n        if i>>j&1 == 1:\n            for k in range(N):\n                if reply[j][k] == 1:\n                    if i>>k&1 == 0:\n                        flag = False\n                        break\n                elif reply[j][k] == 0:\n                    if i>>k&1 == 1:\n                        flag = False\n                        break\n            if not flag:\n                break\n    if flag:\n        count = 0\n        for j in range(N):\n            if i>>j&1:\n                count += 1\n        ans = max(ans, count)\n\nprint(ans)","import sys\ninput = sys.stdin.readline\n\n#l = list(map(int, input().split()))\n#import numpy as np\n#arr = np.array([int(i) for i in input().split()])\n'''\na,b=[],[]\nfor i in range(n):\n    A, B = map(int, input().split())\n    a.append(A)   \n    b.append(B)'''\n\n\nn=int(input())\n\na,x=[],[]\nfor i in range(n):\n    A = int(input())\n    a.append(A)\n    B=[]\n    for j in range(A):\n        B.append(list(map(int, input().split())))\n    x.append(B)\n\nma=0\nfor i in range(2**n):\n    now=0\n    flg=True\n    e=[0]*n\n    for j in range(n):\n        if (i>>j)&1:\n            now+=1\n            e[j]=1\n\n    for j in range(n):\n        #print(e)\n        if (i>>j)&1:\n            \n            if e[j]==0:\n                flg=False\n                break\n            elif not flg:\n                break\n\n            for k in range(a[j]):\n                \"\"\"if e[x[j][k][0]-1]==-1: \n                    if x[j][k][1] and\n                    e[x[j][k][0]-1]=x[j][k][1]\"\"\"\n                \n                if (e[x[j][k][0]-1]==0 and x[j][k][1]==1) or (e[x[j][k][0]-1]==1 and x[j][k][1]==0):\n                    flg=False\n                    break\n\n    if flg and ma<now:\n        ma=now\n        #print(ma)\n\nprint(ma)\n\n","import bisect\nfrom itertools import chain, combinations\nfrom math import ceil, floor, sqrt\n\ndef powerset(iterable):\n    s = list(iterable)\n    return chain.from_iterable(combinations(s, r) for r in range(len(s)+1, 0, -1))\n\nN = int(input())\nlN = [n for n in range(N)]\nlA = []\nlxy = [[] for _ in range(N)]\nfor i in range(N):\n    ai = int(input())\n    lA.append(ai)\n    for _ in range(ai):\n        xij, yij = list(map(int, input().split()))\n        xij -= 1\n        lxy[i].append((xij, yij))\n\n# iter all of powersets inverse\nans = 0\nfor s in powerset(lN):\n    # print(s) # assumed polite\n    allflag = True\n    range = [None] * N\n    for elem in s:\n        range[elem] = True\n    for elem in s:\n        ai = lA[elem]\n        lxyi = lxy[elem]\n        flag = True\n        for xi, yi in lxyi:\n            if yi == 0:\n                if xi in s:\n                    flag = False\n                    break\n            if yi == 1:\n                # print(xi, yi, lxy[xi])\n                for xii, yii in lxy[xi]:\n                    if xii == elem and yii != 1:\n                        flag = False\n                        break\n        # print(\"  \", flag, lxy[elem])\n        if not flag:\n            allflag = False\n            break\n    if allflag:\n        ans = len(s)\n        break\n\nprint(ans)","n=int(input())\na=[]\nl=[0]*n\nans=0\nfor i in range(n):\n  a.append(int(input()))\n  l[i]=[list(map(int,input().split())) for i in range(a[-1])]\nfor i in range(2**n):\n  i=format(i,'b').zfill(n)\n  c=[]\n  for j in range(n):\n    if i[j]=='1':\n      c.append(j)\n  for j in c:#c\u306f\u6b63\u76f4\u8005\u3068\u4eee\u5b9a\u3057\u305f\u4eba\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u683c\u7d0d\u3057\u3066\u308b\n    for k in l[j]:#k\u306f1\u4eba\u3042\u305f\u308a\u306e\u8a3c\u8a00\u305f\u3061\u304b\u30891\u3064\u305a\u3064\u53d6\u308a\u51fa\u3059\n      if k[1]==1 and (k[0]-1 not in c):\n        break#\u6b63\u76f4\u8005(\u4eee)\u304c\u300c\u6b63\u76f4\u8005\u3060\uff01\u300d\u3063\u3066\u8a00\u3063\u305f\u4eba\u304c\u6b63\u76f4\u8005\u5019\u88dc\u306b\u3044\u306a\u3044\u5834\u5408\uff08\u3053\u306e\u4eba\u304c\u5618\u3064\u3044\u3066\u308b\uff09\n      elif k[1]==0 and (k[0]-1 in c):\n        break#\u6b63\u76f4\u8005(\u4eee)\u304c\u300c\u5618\u3064\u304d\u3060\uff01\u300d\u3063\u3066\u8a00\u3063\u305f\u4eba\u304c\u6b63\u76f4\u8005\u5019\u88dc\u306b\u3044\u308b\u5834\u5408\uff08\u3053\u306e\u4eba\u304c\u5618\u3064\u3044\u3066\u308b\uff09\n    else:\n      continue\n    break\n  else:#\u3053\u308c\u3089\u3092\u5207\u308a\u629c\u3051\u305f\u3089c\u306f\u3059\u3079\u3066\u6b63\u76f4\u8005\u3060\u3068\u8a00\u3048\u308b\n    ans=max(ans,len(c))\nprint(ans)","n = int(input())\n\ntimes = n\ntable = []\nfor _ in range(times):\n    a = int(input())\n    temp = []\n    for _ in range(a):\n        temp.append(list(map(int,input().split())))\n    table.append(temp)  # S += [input()] \u3068\u3082\u66f8\u3051\u308b\n    \ndef check(i,n):\n    honestOrUnkind = [None]*n\n    honestOrUnkind[i] = 1\n    for item in table[i]:\n        membernum = item[0]-1\n        honestOrUnkind[membernum] = item[1]\n    for idx,hOrU in enumerate(honestOrUnkind):\n        if hOrU == 1:\n            for item in table[idx]:\n                membernum = item[0]-1\n                if honestOrUnkind[membernum] != item[1]:\n                    return False,honestOrUnkind\n                else:\n                    honestOrUnkind[membernum] = item[1]\n        else:\n            continue    \n    return True,honestOrUnkind\n\nmember = [None]*n\nans = 0\nfor i in range(n):\n    flg , memberlist = check(i,n)\n    if flg:\n        member[i] = 1\n        ans = max(memberlist.count(1),ans)\n    else:\n        member[i] = 0\n    \nans = max(member.count(1),ans)\n\nprint(ans)\n","n=int(input())\nans=0\nA=[[] for _ in range(n)]\nfor i in range(n):\n  a=int(input())\n  for j in range(a):\n    A[i].append(tuple(map(int,input().split())))\nfor i in range(2**n):\n  ii=str(bin(i))[2:].zfill(n)\n  chk=True\n  cur=0\n  for j in range(n):\n    if ii[j]==\"0\":\n      continue\n    else:\n      cur+=1\n      for x,y in A[j]:\n        if y==1 and ii[x-1]==\"0\":\n          chk=False\n        elif y==0 and ii[x-1]==\"1\":\n          chk=False\n  if chk:\n    ans=max(ans,cur)\nprint(ans)\n","n = int(input())\n \nXY = []\nfor i in range(n):\n    a = int(input())\n    xy = []\n    for j in range(a):\n        xy.append(list(map(int, input().split())))\n    \n    XY.append(xy)\n    \ndef check(i, xiyj, HoU):\n    # \u77db\u76fe\u3057\u305f\u3089False \u6b63\u76f4\u8005\u3068\u4eee\u5b9a\u3057\u305f\u8a3c\u8a00\u3088\u308a \u6b63\u76f4&\u6b63\u76f4\u8005\u3068\u4eee\u5b9a\u3055\u308c\u3066\u3044\u308b \/ \u4e0d\u89aa\u5207&\u4e0d\u89aa\u5207\u3068\u4eee\u5b9a\u3055\u308c\u3066\u3044\u308b True\n    if ((i >> xiyj) & 1) ^ HoU:\n        return False\n \n    return True\n    \nmax_honest = 0\nfor i in range(2 ** len(XY)):\n    count = 0\n    honest = [0] * len(XY)\n    is_contradiction = True\n    for j in range(len(XY)):\n        # \u6b63\u76f4\u8005\u3068\u4eee\u5b9a\u3057\u305f\u3068\u304d\u3060\u3051\u63a1\u7528\n        if not ((i >> j) & 1): continue\n        for k in range(len(XY[j])):\n            xiyj = XY[j][k][0] - 1\n            HoU = XY[j][k][1]\n            \n            if not check(i, xiyj, HoU):\n                is_contradiction = False\n \n    if is_contradiction:\n        for j in range(len(XY)):\n            if ((i >> j) & 1): count+=1 \n                \n        if count > max_honest:\n            max_honest =count\n            \nprint(max_honest)","def main():\n\tN = int(input())\n\tA = [[] for i in range(N)]\n\t# A[i][j] -> i-th person's testimony of person's honesty (j makes no sense)\n\tfor i in range(N):\n\t\ta = int(input())\n\t\tfor j in range(a):\n\t\t\tx, y = [int(b) for b in input().split(\" \")]\n\t\t\tA[i].append([x - 1, str(y)])\n\n\tcand = []\n\tfor i in range(2 ** N):\n\t\thonest_flag = True\n\t\tbit = list(pad_zero(format(i, 'b'), N))\n\t\thonests = [int(p) for p, q in enumerate(bit) if q == \"1\"]\n\t\tfor honest in honests:\n\t\t\tw = A[honest]\n\t\t\tfor k in range(len(w)):\n\t\t\t\tif w[k][1] != bit[w[k][0]]:\n\t\t\t\t\thonest_flag = False\n\t\tif honest_flag:\n\t\t\tcand.append(len(honests))\n\n\tprint(max(cand))\n\n\ndef pad_zero(s, n):\n\ts = str(s)\n\treturn (\"0\" * n + s)[-n:]\n\nmain()","N=int(input())\ng=[[-1 for i in range(15)]for j in range(15)]\n\nfor i in range(N):\n  m=int(input())\n  for j in range(m):\n    x,y=map(int,input().split())\n    #\u4ebai\u306b\u3088\u308b\u4ebax\u306b\u3064\u3044\u3066\u306e\u8a3c\u8a00\u3092\u683c\u7d0d\n    g[i][x-1]=y\n\nans=0\nfor i in range(1<<N):\n  honests=[0 for _ in range(N)]\n  for j in range(N):\n    if (i>>j)&1==1:\n      honests[j]=1\n  judge=True\n  for k in range(N):\n    if honests[k]==1:\n      for l in range(N):\n        if g[k][l]==-1:\n          continue\n        if g[k][l]!=honests[l]:\n          judge=False\n  if judge:\n    ans=max(ans,honests.count(1))\n\nprint(ans)\n","import sys\nn = int(input())\nmaps = []\nfor i in range(n):\n    ud = []\n    a = int(sys.stdin.readline().rstrip())\n    for j in range(a):\n        x, y = map(int, sys.stdin.readline().split())\n        ud.append([x, y])\n    maps.append(ud)\nresult = 0\nfor i in range(2**n)[::-1]:\n    bf = False\n    for j in range(n):\n        if (i >> j) &1 > 0:\n            for k in maps[j]:\n                if (i >> (k[0]-1))&1 != k[1]:\n                    bf = True\n                    break\n        if bf:\n            break\n    if bf == False:\n        rc = bin(i).count('1')\n        if rc > result:\n            result = rc\n\n\nprint(result)","N = int(input())\nA = []\nXY = []\nfor i in range(N):\n    a = int(input())\n    A.append(a)\n    XY.append([list(map(int, input().split())) for _ in range(a)])\n\n\nans = 0\n# print(singi)\nfor i in range(2 ** N):\n    singi = [-1] * (N + 1)\n    bin_ = bin(i)[2:].zfill(N)\n    flag = True\n    for j in range(1, N + 1):\n        sin = bin_[j-1]\n        person = j\n        num = A[j-1]\n        questions = XY[j - 1]\n        singi[j] = int(sin)\n        w = 0\n\n        if sin == 0:\n            continue\n        else:\n            w = 1\n\n        for k in range(num):\n            hito, honto = questions[k]\n            # print(singi)\n            # print('a', hito, honto)\n            if singi[hito] == -1:\n                singi[hito] = int(honto)\n            else:\n                if singi[hito] == honto:\n                    continue\n                else:\n                    flag = False\n    if flag is True:\n        ans = max(ans, singi.count(1))\nprint(ans)\n\n\n        \n\n\n\n    \n","N = int(input())\nXY = [[] for _ in range(N)]\nfor i in range(N):\n    c = int(input())\n    XY[i] = [[int(j) for j in input().split()] for _ in range(c)]\n\n\"\"\"\n\u30fbN < 15\n\u30fbO(N * 2^N)\n\"\"\"\n\n\ndef popcnt(n):\n    return bin(n).count('1')\n\n\ndef func(bits):\n    for i in range(N):\n        if (bits >> i) & 1 == 0:\n            continue\n        for x, y in XY[i]:\n            x -= 1  # 0-indexed\n            if (bits >> x) & 1 != y:\n                return False\n    return True\n\n\nans = 0\nfor mask in range(1 << N):\n    if func(mask):\n        tmp = popcnt(mask)\n        ans = max(ans, tmp)\nprint(ans)\n","N = int(input())\nlista = []\nfor n in range(N):\n    listan = []\n    an = int(input())\n    for n in range(an):\n        listxy = tuple(map(int, input().split()))\n        listan.append(listxy)\n        listset = tuple(listan)\n    lista.append(listset)    \ntuplea = tuple(lista)    \n#print(lista)\nansfin = 0\nfor n in range(2**N):\n    bin2 = list(bin(n))[2:]\n    bin2.reverse()\n    #print(bin2)\n    l = len(bin2)\n    rightwrong = set()\n    #print(l)\n    setright = set()\n    for n in range(N):\n        if n<l:\n            #print(bin2[n])\n            if bin2[n] == str(1):\n                rightwrong.add((n+1, 1))\n                lo = len(tuplea[n])\n                for m in range(lo):\n                    setright.add(tuplea[n][m])\n            else:\n                rightwrong.add((n+1, 0))\n        else:\n            rightwrong.add((n+1, 0))  \n    #print('a')                     \n    #print(setright)\n    #print(rightwrong)\n    if setright.issubset(rightwrong):\n        ans = bin2.count(str(1))\n        if ansfin>=ans:\n            pass\n        else:\n            ansfin = ans\n    #print(ans)    \nprint(ansfin)    \n","#147C\nn=int(input())\na_li=[]\nxy_li=[]\nfor i in range(n):\n  a_li.append(int(input()))\n  xy_li_i=[list(map(int,input().split())) for j in range(a_li[i])]\n  xy_li.append(xy_li_i)\n  \nproof=[]  \nfor i in range(2**n):\n  li=[0]*n\n  for j in range(n):\n    if (i>>j)&1==1:\n      li[j]=1\n  proof.append(li)\n\nans=0  \nfor i in proof:\n  flag=True\n  for j in range(n):\n    if i[j]==1:\n      for k in range(a_li[j]):\n        x=xy_li[j][k][0]\n        y=xy_li[j][k][1]\n        if i[x-1]!=y:\n          flag=False\n          break\n  if flag:\n    count=(sum(i))\n    if ans<=count:\n      ans=count\n    \nprint(ans)","import itertools\nimport numpy as np\n\nN = int(input())\nstl = []\nfor i in range(N):\n    a = int(input())\n    for _ in range(a):\n        x, y = map(int, input().split())\n        stl.append((i, x-1, y))\ndl = np.array(list(itertools.product([0, 1], repeat=N)), np.bool)\nfor i, x, y in stl:\n    bl = (dl[:, i] == False) | (dl[:, x] == bool(y))\n    dl = dl[bl]\nres = dl.sum(axis=1).max()\nprint(res)\n","N = int(input())\ntesti = {}\nfor i in range(N):\n    T = []\n    for a in range(int(input())):\n        T.append(list(map(int, input().split())))\n    testi[i+1] = T\n\nans = 0\nfor i in range(2**N):\n    hypo = list(bin(i)[2:].zfill(N))\n    num = hypo.count(\"1\")\n    for j, h in enumerate(hypo):\n        if h == \"1\":\n            for t in testi[j+1]:\n                if hypo[t[0]-1] != str(t[1]):\n                    break\n            else:\n                continue\n            break\n    else:\n        if num > ans:\n            ans = num\n\nprint(ans)","N = int(input())\ntes = [[] for _ in range(N+1)]\nans = 0\n\nfor i in range(1, N+1):\n    for _ in range(int(input())):\n        x, y = map(int, input().split())\n        tes[x].append([i, y])\n\nfor x in range(1, 2**N):\n    HorU = [0] + [(x >> n) & 1 for n in range(N)]\n    cand = True\n    for i in range(1, N+1):\n        for j, y in tes[i]:\n            if HorU[j] == 1 and y != HorU[i]:\n                cand = False\n    if cand:\n        temp = (N+1) - sorted(HorU).index(1)\n        if ans < temp:\n            ans = temp\nprint(ans)","g = [[-1 for i in range(15)] for j in range(15)]\n# 15\u00d715\u306e\u884c\u5217g\u3092-1\u3067\u57cb\u3081\u3066\u304a\u304f\n\nn=int(input()) #\u53c2\u52a0\u4eba\u6570\nfor i in range(n):\n  m = int(input())\n  for j in range(m):\n    x, y= map(int, input().split())\n    g[i][x-1] = y\n#\u4eba\u306e\u756a\u53f7A\u306f1\u304b\u3089\u59cb\u307e\u308b\u306e\u3067x\u306e\u756a\u53f7\u30821\u3064\u524d\u5012\u3057\n# y==1\u306a\u3089\u6b63\u76f4, Y==0\u306a\u3089\u4e0d\u89aa\u5207\nans=0\n\nfor i in range (1<<n): #range(2**n)\u3067\u3082\u540c\u3058\u306f\u305a\n  honests = [0 for _ in range(n)] #\u6b63\u76f4\u8005\u306e\u756a\u53f7\u683c\u7d0d\u7528\u30010\u306e\u5217\n  for j in range(n):\n    if (i >> j) & 1:\n      honests[j] = 1 \n#\u6b63\u76f4\u3082\u306e\u304c1,3,5,6\u306a\u3089honests = [1,0,1,0,1,1,\u30fb\u30fb\u30fb]\u3068\u306a\u308b\n#\u3053\u308c\u3092\u5168bit\u3067\u4f5c\u6210\u3057\u305f\u3082\u306e\u304chonests[\u65bd\u884c\u756a\u53f7][\u30b9\u30a4\u30c3\u30c1\u884c\u5217]\n  hantei = True\n  for j in range(n):\n    if honests[j]==1: \n      #j\u756a\u76ee\u306e\u4eba\u306e\u8a3c\u8a00\u304c\u6b63\u3057\u3044\u3068\u3057\u305f\u3068\u304d\u306e\u5206\u5c90\n      for k in range(n):\n        if g[j][k] == -1: \n          continue #\u8a3c\u8a00\u306a\u3057\n        if g[j][k] != honests[k]:\n          #g[j][k]\u306fj\u756a\u76ee\u306e\u4eba\u304c\u8a71\u3057\u305fk\u756a\u76ee\u306e\u4eba\u306b\u5bfe\u3059\u308b\u8a3c\u8a00\n          #\u3053\u308c\u304c\u7570\u306a\u3063\u3066\u3044\u308b\u3068\u77db\u76fe\u304c\u751f\u3058\u3066\u3044\u308b\n          hantei = False\n  if hantei == True:\n    ans = max(ans, honests.count(1))\n                     \nprint(ans)","import math\nimport collections\nimport itertools\nimport sys\nimport bisect\nfrom heapq import heappop,heappush,heapify\nsys.setrecursionlimit(10**6)\ndef MAP(): return list(map(int,input().split()))\ndef INT(): return int(input())\ndef FLOAT(): return float(input())\nMOD = 10**9+7\n\nn = INT()\nll = [[] for _ in range(n)]\nl = [0]*n\n\nfor i in range(n):\n    tmp = INT()\n    for j in range(tmp):\n        x,y = MAP()\n        ll[i].append([x-1,y])\n\nans = 0\nfor bit in range(2**n):\n    ok = True\n    is_honest = [(bit>>i) & 1 for i in range(n)]\n    #print(is_honest)\n    for i in range(n):\n        if not is_honest[i]:\n            continue\n        for x,y in ll[i]:\n            if is_honest[x]!=y:\n                ok=False\n    if ok:\n        ans = max(ans,sum(is_honest))\nprint(ans)","N = int(input())\n \ntestimony = [[] for _ in range(N)]\n \nfor i in range(N):\n    num = int(input())\n    for j in range(num):\n        person, state = map(int, input().split())\n        testimony[i].append([person-1, state])\n \nhonest = 0\nfor i in range(1, 2**N):\n    flag = 0\n    for j in range(N):\n        if (i>>j)&1 == 1: \n            for x,y in testimony[j]:\n                if (i>>x)&1 != y: \n                    flag = 1\n                    print(flag)\n                    break\n    if flag == 0: \n        honest = max(honest, bin(i)[2:].count('1')) \nprint(honest)","n = int(input())\nxys = [[] for _ in range(n)]\nfor i in range(n):\n    a = int(input())\n    xys[i] = [list(map(int, input().split())) for _ in range(a)]\n\nmax_honest = 0\nfor i in range(2 ** n):\n    bin_i = format(i, '015b')[::-1]\n    ok = True\n\n    for j in range(n):\n        for x, y in xys[j]:\n            if bin_i[j] == \"1\" and y != int(bin_i[x - 1]):\n                ok = False\n                break\n        else:\n            continue\n        break\n\n    if ok:\n        honest = sum(int(x) for x in bin_i)\n        max_honest = max(max_honest, honest)\n\nprint(max_honest)\n\n","def p_c():\n    from itertools import combinations\n    n = int(input())\n    d = [[set() for _ in range(2)] for _ in range(n)]\n    for i in range(n):\n        a = int(input())\n        for _ in range(a):\n            x, y = map(int, input().split())\n            d[i][y].add(x-1)\n    ans = []\n    for i in reversed(range(1, n + 1)):\n        for cmb in combinations(range(n), i):\n            true_set = set()\n            false_set = set()\n            for j in range(n):\n                if j in cmb:\n                    true_set = true_set | d[j][1]\n                    false_set = false_set | d[j][0]\n                else:\n                    false_set.add(j)\n            if not true_set & false_set:\n                ans.append(n - len(false_set))\n    if ans:\n        print(max(ans))\n    else:\n        print(0)\n        \np_c()","# 2**15=32000\u3061\u3087\u3044\u306a\u306e\u3067\u3042\u3089\u304b\u3058\u3081\u8ab0\u304c\u6b63\u76f4\u8005\u3067\u8ab0\u304c\u305d\u3046\u3067\u306a\u3044\u304b\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u3001\u305d\u308c\u3092\u3082\u3068\u306b\u3057\u3066\u63a2\u7d22\u3002\n# \u77db\u76fe\u304c\u306a\u3044\u3053\u3068\u3092\u63a2\u7d22\u3057\u3066\u3044\u304f\u3088\u3046\u306a\u5224\u5b9a\u3068\u30c7\u30fc\u30bf\u69cb\u9020\u304c\u6d6e\u304b\u3070\u3093\n# \u6b63\u76f4\u8005\u3068\u3001\u771f\u507d\u4e0d\u660e\u306e\u4eba\u3001\u3068\u3044\u3046\u306e\u304c\u5473\u564c \u5618\u3064\u304d\u3067\u306f\u306a\u3044\n# bit\u64cd\u4f5c\u304c\u308f\u304b\u3089\u3093\u306e\u3067\u914d\u5217\u3067\u3084\u3063\u305f\n# \u307e\u3058\u3067\u5224\u5b9a\u3068\u30c7\u30fc\u30bf\u69cb\u9020\u3069\u3046\u3059\u3063\u304b\u308f\u304b\u3089\u3093\n\nn = int(input())\nsyougen = [[] for _ in range(n)]\nfor i in range(n):\n    a = int(input())\n    for _ in range(a):\n        x, y = map(int, input().split())\n        syougen[i].append((x - 1, y))\n\n\ndef f(n, cur=[]):\n    # 1\u30680\u304b\u3089\u306a\u308b\u9577\u3055N\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u51682**n\u500b\u51fa\u3059\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\n    if len(cur) == n:\n        yield cur\n    else:\n        for i in range(2):\n            _next = cur[:]\n            _next.append(i)\n            yield from f(n, _next)\n\n\ndef check(arr):\n    for i in range(n):\n        if arr[i] == 0:\n            continue\n        for x, y in syougen[i]:\n            if arr[x] == 1 and y == 0:\n                return False\n            if arr[x] == 0 and y == 1:\n                return False\n    return True\n\n\nans = 0\nfor g in f(n):\n    if check(g):\n        ans = max(ans, sum(g))\nprint(ans)\n","from itertools import product\nN=int(input())\nXYs = []\nfor i in range(N):\n    A = int(input())\n    XYs.append([tuple(map(int, input().split())) for _ in range(A)])\n\nn=0\nfor ts in product(*[[1, 0] for _ in range(N)]):\n    for i, t in enumerate(ts):\n        if t:\n            if not all(ts[x-1] == y for x, y in XYs[i]):\n                break\n    else:\n        n=max(n,sum(ts))\nprint(n)\n","#!\/usr\/bin\/env python3\nfrom itertools import*\nn = int(input())\nc = 0\ntry:z = [eval(\"[i] + list(map(int, input().split())),\"*int(input())) for i in range(n)]\nexcept SyntaxError:print(0);exit()\nfor j in product([0,1], repeat=n):\n    if all(j[i] == 0 or j[x-1] - y == 0 for i, x, y in chain.from_iterable(z)):\n        c = max(c, sum(j))\nprint(c)","def main():\n    # \u5165\u529b\n    n = int(input())\n\n    boolls = [[]]\n    for i in range(n):\n        tmpls = []\n        for x in boolls:\n            y = x.copy()\n            x.append(True)\n            y.append(False)\n            tmpls.append(x)\n            tmpls.append(y)\n        boolls = tmpls\n\n    boolls.sort(key=lambda _: _.count(True), reverse=True)\n\n    xyls = []\n    for i in range(n):\n        ai = int(input())\n        tuples = []\n        for j in range(ai):\n            x, y = map(int, input().split())\n            tuples.append((x, y == 1))\n        xyls.append(tuples)\n\n    tmpTrueCnt = n\n    max_cnt = 0\n    for boolx in boolls:\n        truecnt = boolx.count(True)\n        if truecnt == 0:\n            break\n        if max_cnt > truecnt:\n            break\n\n        if tmpTrueCnt > truecnt:\n            tmpTrueCnt = truecnt\n\n        ok = True\n        for i in range(len(boolx)):\n            tf = boolx[i]\n            if tf:\n                zz = xyls[i]\n            else:\n                zz = [(x[0], not x[1]) for x in xyls[i]]\n\n            for message in zz:\n                if boolx[message[0] - 1] != message[1]:\n                    ok = False\n                    break\n            if not ok:\n                break\n\n        if ok:\n            max_cnt = tmpTrueCnt\n            break\n\n    print(max_cnt)\n\n\nmain()\n","n = int(input())\npeople = [[] for i in range(n)]\nfor i in range(n):\n  a = int(input())\n  for j in range(a):\n    say = tuple(map(int,input().split()))\n    people[i].append(say)\n\nans = 0\nfor i in range(2**n):\n  TF = [ 1 & i >> j for j in range(n)]\n  bool = True\n  for j in range(n):\n    if TF[j] == 1:\n      for says in people[j]:\n        if TF[says[0]-1] == says[1]:\n          pass\n        else:\n          bool = False\n          break\n    else:\n      pass\n\n  if bool:\n    ans = max(ans,TF.count(1))\n\nprint(ans)\n    ","n = int(input())\n\na_list = []\nperson_list = []\nsyogen_list = []\nans = 0\n\nfor i in range(0, n):\n    w = []\n    v = []\n    a = int(input())\n    for j in range(0, a):\n        x,y = map(int,input().split())\n        w.append(x)\n        v.append(y)\n    person_list.append(w)\n    syogen_list.append(v)\n#print(person_list)\n#print(syogen_list)\n\nfor bit in range(1 << n):\n    break_flag = 0\n    bit_1_cnt = 0\n    for i in range(n):\n        if break_flag:\n            break\n        if (bit >> i) & 1: #\u4ebai\u304c\u6b63\u76f4\n            for j in range(len(syogen_list[i])):\n                if syogen_list[i][j] != ((bit>>(person_list[i][j]-1))&1): #\u77db\u76fe\u3000\uff1a\u3000\u6b63\u76f4\u3068\u3057\u3066\u3044\u308b\u306e\u306b\u8a3c\u8a00\u304c\u98df\u3044\u9055\u3048\u3070break\n                    break_flag = 1\n                    break\n            bit_1_cnt += 1\n        if break_flag==0 and i==n-1:\n            ans = max(ans, bit_1_cnt)\nprint(ans)\n","n = int(input())\ncomments = []\nfor _ in range(n):\n    a_i = int(input())\n    comments_a_i = []\n    for _ in range(a_i):\n        x, y = map(int, input().split())\n        comments_a_i.append([x - 1, y])\n    comments.append(comments_a_i)\n\nOK = 1\nNG = 0\nUNKNOWN = -1\nvalidation = [[UNKNOWN for _ in range(n)] for _ in range(n)]\nfor i, comments_a_i in enumerate(comments):\n    for comment in comments_a_i:\n        ret = UNKNOWN\n        if 1 == comment[1]:\n            ret = OK\n        elif 0 == comment[1]:\n            ret = NG\n        validation[i][comment[0]] = ret\n\nunknowns = []\nfor i in range(n):\n    is_unknown = True\n    for j in range(n):\n        if OK == validation[j][i] or NG == validation[j][i]:\n            is_unknown = False\n            break\n    if is_unknown:\n        unknowns.append(i)\n\nfor unknown in unknowns:\n    for j in range(n):\n        validation[unknown][j] = UNKNOWN\n\ncount = 0\nfor i in range(n):\n    for j in range(n):\n        if OK == validation[i][j] and OK == validation[j][i]:\n            count += 2\n        elif NG == validation[i][j] and NG == validation[j][i]:\n            count += 1\nprint(count \/\/ 2)\n","n = int(input())\nlis=[]\nfor _ in range(n):\n    m = int(input())\n    l = []\n    for i in range(m):\n        tmp = list(map(int,input().split()))\n        l.append(tmp)\n    lis.append(l)\n\nans_l=[]\nfor i in range(2 ** n):\n    people=[]\n    for j in range(n):\n        if (i >> j) & 1:\n            people.append(1)\n        else:\n            people.append(0)\n\n    fail=False\n    for num in range(len(people)):\n        if people[num] == 1: # check testimony\n            testi=lis[num]\n            for t in testi:\n                if people[t[0]-1] != t[1]: # contradict\n                    fail=True\n    if not fail:\n        ans_l.append(sum(people))\nprint(max(ans_l))","N = int(input())\nans = []\nA = [0 for i in range(N)]\nAxy = [0 for i in range(N)]\nfor i in range(N):\n    A[i] = int(input())\n    Axy[i] = [[int(i) for i in input().split()] for j in range(A[i])]\n\nfor i in range(1<<N):#2^N\u901a\u308a\u3084\u308b\n    Truth = []\n    maru = 0\n    for j in range(N):\n        Truth.append(((i>>j)&1)==1)\n        maru += ((i>>j)&1)#\u3007\u306e\u6570\n    syogen = [0 for i in range(N)]\n    for k in range(N):\n        if Truth[k]:\n            syogen[k] = 1\n    isMujun = True\n    for k in range(N):\n        if Truth[k] and isMujun:\n            for x,y in Axy[k]:\n                if syogen[x-1]==y:\n                    pass\n                else:#\u77db\u76fe\u767a\u751f\n                    ans.append(0)\n                    isMujun = False\n                    break\n    if isMujun:\n        ans.append(maru)\nprint(max(ans))","from itertools import product\n\n\ndef check(N, p, X):\n    for i in range(N):\n        if p[i] == 0:\n            continue\n        for j in range(N):\n            if X[i][j] is not None and X[i][j] != p[j]:\n                return False\n    return True\n\n\ndef main():\n    N = int(input())\n    X = [[None] * N for _ in range(N)]\n    for i in range(N):\n        A = int(input())\n        for j in range(A):\n            x, y = map(int, input().split())\n            X[i][x-1] = y\n    ans = 0\n    for p in product([0, 1], repeat=N):\n        if check(N, p, X):\n            ans = max(ans, sum(p))\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n","N = int(input())\ntf_dict = {}\nfor i, n in enumerate(range(N)):\n    A = int(input())\n    tmp_dict = {}\n    for a in range(A):\n        xy = input().split()\n        tmp_dict[int(xy[0])] = int(xy[1])\n    tf_dict[i+1] = tmp_dict\n\nTrue_set = set()\nFalse_set = set()\nfor key in tf_dict.keys():\n    for item in tf_dict[key].items():\n        if item[1] == 1:\n            if (item[0] not in True_set) & (item[0] not in False_set):\n                True_set.add(item[0])\n                True_set.add(key)\n            elif (item[0] in True_set):\n                True_set.add(key)\n            elif (item[0] in False_set):\n                False_set.add(key)\n        if item[1] == 0:\n            if (item[0] not in True_set) & (item[0] not in False_set):\n                False_set.add(item[0])\n                True_set.add(key)\n            elif (item[0] in True_set):\n                False_set.add(key)\n            elif (item[0] in False_set):\n                True_set.add(key)\n                \nif len(False_set & True_set) != 0:\n    print(\"0\")\nelse:\n    print(len(True_set))","n = int(input())\ncount = 0\nfor i in range(n):\n    a = int(input())\n    good_man = True\n    for j in range(a):\n        xy = list(map(int, input().split()))\n        if xy[1] == 0:\n            good_man = False\n    if good_man:\n        count += 1\nprint(count)\n","n = int(input())\n\nlist_a = []\ntestimonies = []\nanswer = 0\nflag = True\n\nfor i in range(n):\n\ttestimony = []\n\ta = int(input())\n\tlist_a.append(a)\n\tfor j in range(a):\n\t\ttestimony.append(list(map(int,input().split())))\n\ttestimonies.append(testimony)\n\nfor i in range(1 << n): # \u90e8\u5206\u548c\u306e\u8a08\u7b97\u3000i=2\u306f\"0b10\" \n\tresult = 0\n\tfor j in range(n): # \u5404\u6841\u3092\u78ba\u8a8d j\u306f\u6841\u6570\u3092\u8868\u3059\n\t\tif i & (1 << (j)): #true\u3060\u3063\u305f\u5834\u5408\u306fj\u6841\u76ee\u306f1\u3067\u3042\u308b(\u5f8c\u308d\u304b\u3089j\u756a\u76ee\u306f\u6b63\u76f4\u8005)\n\t\t\tfor k in range(list_a[-j]):\n\t\t\t\tif i & testimonies[-j][k][1] << (testimonies[-j][k][0]-1):\n\t\t\t\t\tflag = False\n\t\t\t\t\tbreak\n\t\t\tif flag == True:\n\t\t\t\tresult += 1\n\t\t\telse:\n\t\t\t\tflag = True\n\tif answer < result:\n\t\tanswer = result\n\nprint(answer)","#\u3086\u3046\u305f\u306e\u3084\u308a\u65b9\n\nn=int(input())\nxy=[[] for i in range(n)]\n\nfor i in range(n):\n    a=int(input())\n    for j in range(a):\n        xy[i].append(list(map(int, input().split())))\n#print(xy)\nbit=[]#1\u304c\u6b63\u76f40\u304c\u5618\nans=0\ndef bit_search(bit):\n    global ans\n    if len(bit)==n:#2**n\u6587\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u8abf\u3079\u308b\u52a0\u572710\u3092\u4ea4\u4e92\u306b\u5165\u308c\u308b\u305f\u3081\u306eif\n        for i in range(n):\n            jugh=bit[i]\n            if jugh==1:\n                for j in xy[i]:\n                    x,y=j\n                    if bit[x-1]==0:\n                        if y==1:\n                            return \n                    else:\n                        if y==0:\n                            return \n        ans=max(ans,sum(bit))\n    else:\n       #\u518d\u8d77\u5316\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u6700\u521d\u306bbit\u306e\u914d\u5217\u3092\u4f5c\u308b\u5fc5\u8981\u6027\u3092\u306a\u304f\u3057\u305f\n        bit_search(bit+[0])\n        bit_search(bit+[1])\nbit_search(bit)\nprint(ans)","import copy\n\nfrom sys import stdin\nimport itertools\nn = int(stdin.readline().rstrip())\nitems = []\nfor i in range(n):\n    a = int(stdin.readline().rstrip())\n    tmp = []\n    for i in range(a):\n        (x, y) = list(map(int, stdin.readline().rstrip().split(' ')))\n        tmp.append((x, y))\n    items.append(tmp)\nprint(items)\nmax_cnt = 0\n\ndef helper(mapping, index):\n    item = items[index][0]\n    if index in mapping.keys():\n        if mapping[index] != item[0]: # index\u306b\u3088\u3063\u3066\u5909\u5316\n            return -1\n    mapping[item[0]-1] = item[1]\n\nfor item in items:\n    mapping = {}\n    for i in item:\n        mapping[i[0]-1] = i[1]\n    tmp = copy.copy(mapping)\n    for key, value in tmp.items():\n        if value == 1:\n            res = helper(mapping, key)\n            if res == -1:\n                mapping = {}\n                break\n    max_cnt = max(len([item for item in list(mapping.values()) if item == 1]), max_cnt)\n\nprint(max_cnt)\n","N = int(input())\n\nA_list = []\nfor i in range(N):\n    A = int(input())\n    A_list.append([list(map(int, input().split())) for _ in range(A)])\n\n\ndef judge(mask):\n    for i in range(N):\n        if (mask>>i & 1)==0:\n            continue\n        for xy in A_list[i]:\n            x = xy[0]-1\n            y = xy[1]\n            if y==0 and (mask>>x & 1):\n                return False\n            if y==1 and (mask>>x & 1)==0:\n                return False\n    return True\n\n\nnum_max = 0\nfor mask in range(1<<N):\n    if judge(mask):\n        num = 0\n        for i in range(N):\n            num += mask>>i & 1\n        num_max = max(num, num_max)\n\nprint(num_max)","n = int(input())\ntests = []\nfor i in range(n):\n    a = int(input())\n    xys = [ list(map(int, input().split())) for j in range(a) ]\n    tests.append(xys)\n\npatterns = []\ndef dfs(N, li):\n    if len(li) == N:\n        patterns.append(li)\n        return\n    for i in range(2):\n        new = li[::]\n        new.append(i)\n        dfs(N, new)\ndfs(n, [])\nans = 0\nfor pattern in patterns:\n    contradict = False\n    for i in range(len(pattern)):\n        if pattern[i] == 0:\n            continue\n        test = tests[i]\n        for xy in test:\n            x = xy[0]-1\n            y = xy[1]\n            if pattern[x] != y:\n                contradict = True\n                break\n        if contradict:\n            break\n    if contradict:\n        continue\n    ans = max(ans, sum(pattern))\nprint(ans)","N = int(input())\nA = []\nfor i in range(N):\n    A.append([list(map(int, input().split())) for _ in range(int(input()))])\n\n# \u5f15\u6570\u306fN\u304c\u6b63\u76f4\u8005\u304b\u5618\u3064\u304d\u304b\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u8868\u3059\u30ea\u30b9\u30c8\n# \u623b\u308a\u5024\u306f\u77db\u76fe\u304c\u3042\u308b\u304b\u3001\u306a\u3044\u304b\ndef check(arr):\n    for idx, a in enumerate(A):\n        # \u5618\u3064\u304d\u3060\u3068\u5224\u65ad\u3055\u308c\u3066\u3044\u308b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u306e\u4eba\u7269\u306f\u7121\u8996\n        if arr[idx] == 0:\n            continue\n        # \u4e00\u3064\u4e00\u3064\u306e\u8a3c\u8a00\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n        for x, y in a:\n            if arr[x-1] != y:\n                return False\n    return True\n\nall_comb = []\nfor i in range(2**N):\n    comb = []\n    for j in range(N):\n        if (i >> j) & 1:\n            comb.append(1)\n        else:\n            comb.append(0)\n    all_comb.append(comb)\nret = 0\nfor comb in all_comb:\n    if check(comb):\n        ret = max(ret, sum(comb))\n\nprint(ret)\n","N=int(input())\n\nstatements=[]\nhonests=[0]\nfor i in range(N):\n  statement=[]\n  A=int(input())\n  for j in range(A):\n    x,y=map(int,input().split(' '))\n    statement.append([x-1,y]) \n  statements.append(statement)\n\n#print(statements)\nans=0\n\nfor honest in range(1<<N):\n  flag=True\n  for j in range(N):\n    statement=statements[j]\n    for x,y in statement:\n      if (honest&(1<<j))>>j ==1:\n        flag*=((honest&(1<<x))>>x ==y)\n\n\n    #print(flag)\n  if flag==True:\n    honests.append(honest)\n\nn_honests=[]\nfor honest in honests:\n  n_honest=0\n  for i in range(N):\n    n_honest+=(honest&(1<<i))>>i\n  n_honests.append(n_honest)\n\nprint(max(n_honests))\n","#!\/usr\/bin\/env python3\n# -*- coding: utf-8 -*-\n\n\ndef main():\n    N = int(input())\n    g = [[-1]*N for _ in range(N)]\n\n    for i in range(N):\n        A = int(input())\n        \n        for a in range(A):\n            x, y = map(int, input().split())\n            g[i][x-1] = y\n    \n    ans = 0\n    for i in range(2**N):\n        d = [0]*N\n        for j in range(N):\n            if i>>j & 1:\n                d[j] = 1\n        ok = True\n        for j in range(N):\n            if d[j] == 1:\n                for k in range(N):\n                    if g[j][k] == -1:\n                       continue \n                    if g[j][k] != d[k]:\n                        ok = False\n        if ok:\n            ans = max(ans, bin(i).count('1'))\n    \n    print(ans)\n\n\n\nif __name__ == '__main__':\n    main()","n = int(input())\npeople = {i:{} for i in range(1,n+1)}\nfor i in range(1,n+1):\n    a = int(input())\n    for j in range(a):\n        x,y = map(int,input().split())\n        people[i][x] = y\n\nans = 0\nfor i in range(2 << (n-1)):\n    bn = str(bin(i))[2:].zfill(n)\n    cnt = 0\n    for j in range(n):\n        for x,y in people[j+1].items():\n            if bn[x-1] != str(y):\n                break\n            if y == 0:\n                continue\n            for xx,yy in people[x].items():\n                if bn[xx-1] != str(yy):\n                    break\n            else:\n                continue\n            break\n        else :\n            cnt += 1\n    cnt = min(cnt, bn.count('1'))\n    if cnt > ans:\n        ans = cnt\n\nprint(ans)\n","#!\/usr\/bin\/env python3\n\nN = int(input())\ntestimony = [[None for _ in range(N)] for _ in range(N)]\nperson = [None] * N\n\nfor i in range(N):\n    person[i] = int(input())\n    for _ in range(person[i]):\n        j, good_or_bad = map(int, input().split())\n        j -= 1\n        testimony[i][j] = good_or_bad\n\n#\u3053\u3053\u307e\u3067\u304c\u5165\u529b\n\nans = 0\n\nfor i in range(1, 1<<N):\n    which_person = [None] * N\n    for j in range(N):\n        which_person[j] = i>>j & 1\n        #print(which_person[j])\n    ok = True\n    for j in range(N):\n        if which_person[j]:\n            for k in range(N):\n                if testimony[j][k] == None:\n                    continue\n                if testimony[j][k] != which_person[k]:\n                    ok = False\n    if ok:\n        ans = max(ans, which_person.count(1))\nprint(ans)","n = int(input()) # N\n\nnegs = [0 for _i in range(n)]\nfor i in range(n):\n    m = int(input())\n    for j in range(m):\n        pos, neg = tuple(map(int, input().split()))\n        negs[pos - 1] += neg - 1\n\nprint(sum([1 if x == 0 else 0 for x in negs]) if n > 2 else 1)\n","n = int(input())\nans = 0\nal = []\nxy = [[] for _ in range(n)]\nfor k in range(n):\n    a = int(input())\n    al.append(a)\n    for l in range(a):\n        x,y = map(int,input().split())\n        xy[k].append([x,y])\nfor i in range(2**n):\n    kinds = [0]*n\n    jud = 1\n    for j in range(n):\n        if (i >> j) & 1:\n            kinds[j] = 1\n    for k in range(n):\n        if kinds[k] == 1:\n            a = al[k]\n            for l in range(a):\n                x = xy[k][l][0]\n                y = xy[k][l][1]\n                if kinds[x-1] != y:\n                    jud = 0\n    if jud == 1:\n        ans = max(ans,kinds.count(1))\nprint(ans)\n","N = int(input())\nL = [ [] for _ in range(N)]\nfor i in range(N):\n    num = int(input())\n    for j in range(num):\n        person, state = map(int,input().split())\n        L[i].append([person - 1, state])\n\n# \u6b63\u76f4\u8005\u306e\u6700\u5927\u6570\u306e\u521d\u671f\u5316\nhonest = 0\n\nfor i in range(1,2**N):\n    flag = True\n    for j in range(N):\n        if (i>>j)&1 == 1: # j\u756a\u76ee\u304c\u6b63\u76f4\u8005\u3068\u4eee\u5b9a\u3057\u305f\u3068\u304d\n            for x, y in L[j]:\n                if (i>>x)&1 != y: # \u77db\u76fe\u3092\u767a\u898b(\u6b63\u76f4\u8005\u306ej\u3068\u3044\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u9055\u3046)\n                    flag = False\n                    break # \u77db\u76fe\u3092\u898b\u3064\u3051\u305f\u306e\u3067\u3001\u305d\u308c\u4ee5\u964d\u306ej\u306e\u8a3c\u8a00\u306f\u7121\u8996\n            if not flag:\n                break\n    if flag:\n        honest = max(honest, bin(i).count(\"1\"))\n\nprint(honest)","import itertools\n\nn = int(input())\nxy = []\nxyz =[]\na_list = []\nans = ['None']*n\ncount_list = []\ncount = 0\nfor _ in range(n):\n    a = int(input())\n    a_list.append(a)\n    for i in range(a):\n        x,y = map(lambda x: int(x),input().split())\n        xy.append([x,y])\n    xyz.append(xy)\n    xy = []\nxyz_all = list(itertools.permutations(xyz))\n\nfor i in range(len(list(itertools.permutations(xyz)))):\n    for j in range(n):\n        for k in range(a_list[j]) :\n            hoge = xyz_all[i][j][k][:]\n            if ans[hoge[0]-1] == 'None':\n                ans[hoge[0]-1] = hoge[1]\n            elif ans[hoge[0]-1] != hoge[1]:\n                count+= 1\n    count_list.append(count)\n\n\n\nif ans == [0]*n :\n    print(1)\nelse:\n    print(n - min(count_list))\n","output = 0\n\nN = int(input())\n\nstatement_all = []\nfor _ in range(N):\n    M = int(input())\n    statement = []\n    for _ in range(M):\n        temp = list(map(int,input().split()))\n        statement.append(temp)\n    statement_all.append(statement)\n\n\ndef check(a,b):\n    if hypo[a - 1] == b:\n        return True\n    else:\n        return False\n\n\npattern = 2 ** N\n\nfor p in range(pattern):\n    hypo = [0,0,0]\n    \n    for k in range(N):\n        if bin(p>>k & 1) == '0b1':\n            hypo[k] = 1    \n        if bin(p>>k & 1) == '0b0':\n            hypo[k] = 0\n    \n    result = 0        \n    for j in range(N):\n        if hypo[j] == 1:\n            for i in range(len(statement_all[j])):\n                if not check(statement_all[j][i][0],statement_all[j][i][1]):\n                    result += 1\n\n    if result == 0:\n        output = max(output,sum(hypo))\n\nprint(output)","import numpy as np\nimport itertools\n\nn = int(input())\n\np = []\n\nfor i in range(n):\n    a = int(input())\n    for _ in range(a):\n        x, y = map(int, input().split())\n        p.append([i, x - 1, y])\n\n# print(p)\n\na = np.array(list(itertools.product([0, 1], repeat=n)), dtype=\"bool\")\n\n# print(a)\n\nfor i, x, y in p:\n    cond = (~a[:, i]) | (a[:, x] == bool(y))\n    a = a[cond]\n# print(a)\n\nans = a.sum(axis=1).max()\nprint(ans)\n","N = int(input())\nA = [[-1 for i in range(N)] for i in range(N)]\nfor i in range(N):\n    m = int(input())\n    for j in range(m):\n        x,y = map(int,input().split())\n        A[i][x-1] = y\n#print(A)\nans = 0\nfor i in range(1<<N):\n    honets = [0 for i in range(N)]\n    for j in range(N):\n        if (i>>j) & 1:\n            honets[j] = 1\n    ok = True\n    for j in range(N):\n        if honets[j] == 1:\n            for k in range(N):\n                if A[j][k] == -1: continue\n                if A[j][k] != honets[k]: ok = False\n    if ok:\n        ans = max(ans, honets.count(1))\nprint(ans)\n","n = int(input())\ntest = []\ncount = 0\nfor i in range(0, n):\n    num_test = int(input())\n    for j in range(0, num_test):\n        answer = input().split()\n        a = answer[1]\n        if a == '1':\n            count += 1\n        else:\n            continue\nprint(count)","n=int(input())\n\nxy_list=[]\na_list=[]\nfor i in range(n):\n    a=int(input())\n    a_list.append(a)\n    xy=[]\n    for j in range(a):\n        xy.append(input().split(\" \"))\n\n    xy_list.append(xy)\n\nmaxn=0\nb=[0]*n\nfor i in range(2**n):\n    b=str(format(i,'b').zfill(n))\n    out=0\n    for j in range(n):\n        if b[j]==\"0\":continue\n        for k in range(a_list[j]):\n            x=int(xy_list[j][k][0])\n            y=str(xy_list[j][k][1])\n\n            if b[x-1]!=y:\n                out=1\n                break\n        \n        if out==1:\n            break\n    \n    if out == 0:\n        maxn=max(maxn,b.count(\"1\"))\n\nprint(maxn)","N = int(input())\nA = [0]*N\nx = [0]*N\ny = [0]*N\nfor _ in range(N):\n    a = int(input())\n    A[_] = a\n    x[_] = [0]*a\n    y[_] = [0]*a\n    for __ in range(a):\n        x[_][__],y[_][__] = map(int,input().split())\n        x[_][__] -= 1\n\ndef bi(x):\n    i = 0\n    o = [0]*N\n    while x > 0:\n        o[i] = x % 2\n        x \/\/= 2\n        i += 1\n    return o\n\ndef b(o):\n    for i in range(N):\n        # \u4e0d\u89aa\u5207\u306a\u4eba\u9593\u306e\u8a3c\u8a00\u306f\u771f\u507d\u4e0d\u660e\u306a\u306e\u3067\u7121\u8996\u3059\u308b\n        if o[i] == 0:\n            continue\n        # \u6b63\u76f4\u8005\u306e\u8a3c\u8a00\u306f\u77db\u76fe\u304c\u306a\u3051\u308c\u3070\u78ba\u5b9f\u306b\u6b63\u3057\u3044\n        for j in range(A[i]):\n            k = x[i][j]\n            if o[k] != y[i][j]:\n                return -1\n    return sum(o)\n\na = 0\nfor i in range(2 ** N):\n    # 2**N\u901a\u308a\u306e\u305d\u308c\u305e\u308c\u306b\u3064\u3044\u3066\u77db\u76fe\u304c\u306a\u3044\u304b\u78ba\u304b\u3081\u308b\n    o = bi(i)\n    a = max(a,b(o))\n\nprint(a)","N = int(input())\nA = [[] for i in range(N)]\n\nfor i in range(N):\n  a = int(input())\n  for j in range(a):\n    A[i].append(tuple(map(int, input().split())))\n\nans = 0\nfor bits in range(2**N):\n  l = [0] * N\n  for i in range(N):\n    l[i] = (bits >> i) % 2\n\n  fail = False\n  for i in range(N):\n    if fail: break\n    if l[i] == 0: continue # \u4e0d\u89aa\u5207\u306f\u30d1\u30b9\n    for x, y in A[i]:\n      if y != l[x-1]:\n        fail = True\n        break\n  else:\n    if not fail:\n      ans = max(ans, sum(l))\n\nprint(ans)","n = int(input())\nxy = []\nfor i in range(n):\n    a = int(input())\n    l = []\n    for j in range(a):\n        x, y = map(int, input().split())\n        l.append((x, y))\n    xy.append(l)\n\n# \u30d3\u30c3\u30c8\u5168\u63a2\u7d22\nbit = 0\nans = 0\nfor X in range(2 ** n):\n    # 1010\u306a\u3069\n    flag = False\n    count = 0\n    for num in range(n):\n        f = True\n        if X & (2 ** num) >= 1:\n            for x, y in xy[num]:\n                t = 1 if X & 2 ** (x-1) >= 1 else 0\n                if t != y:\n                    f = False\n                    break\n            if f == False:\n                count = 0\n                break\n            count += 1\n    ans = max(count, ans)\nprint(ans)","N = int(input())\nA =[0]*N\nS =[[] for i in range(N)]\nans = 0\nfor i in range(N):\n    A[i] = int(input())\n    for j in range(A[i]):\n        S[i].append(list(map(int, input().split())))\nform = \"0\" + str(N) + \"b\"\nfor i in range(2**N):\n    p = list(map(int, list(format(i,form))))\n#    print([[p[j] == 0 or p[S[j][k][0]-1] == S[j][k][1] for k in range(len(S[j]))] for j in range(N)])\n    if all([all([p[j] == 0 or p[S[j][k][0]-1] == S[j][k][1] for k in range(len(S[j]))]) for j in range(N)]):\n        ans = max(ans,sum(p))\nprint(ans)","N = int(input())\n\np = []\nt = []\n\nfor n in range(N):\n  a = int(input())\n  p.append(a)\n\n  t.append([list(map(int, input().split())) for k in range(a)])\n\nans = 0\n\nfor bit in range(1 << N):\n  flag = True\n\n  for i in range(N):\n    if not (bit & (1 << i)):\n      continue\n    \n    for x in t[i]:\n      if x[1] == 1 and not (bit & (1 << (x[0] - 1))):\n        flag = False\n      if x[1] == 0 and (bit & (1 << (x[0] - 1))):\n        flag = False\n\n  if flag:\n    count = 0\n    for s in range(N):\n      if bit & (1 << s):\n        count += 1\n\n    if count > ans:\n      ans = count\n\nprint(ans)","import itertools\nimport numpy as np\nn = int(input())\ndic_ = {}\nfor i in range(n):\n    m = int(input())\n    for j in range(m):\n        x, y = map(int, input().split())\n        dic_[(i,x)] = y\n\nok = []\nfor i in itertools.product([0,1],repeat=n):\n    for k in dic_.keys():\n        if i[k[0]] == 0:\n            continue\n        if dic_[k] != i[k[1]-1]:\n            break\n    else:\n        ok += [i]\nmm = 0\nfor i in ok:\n    mm = max(mm, sum(i))\nprint(mm)","# -*- coding: utf-8 -*-\nimport numpy as np\nimport random\n\nN = int(input())\nR = np.full((N, N), 2, dtype=np.uint8)\nS = np.full((N, N), 2, dtype=np.uint8)\nA = []\nfor i in range(N):\n  A.append(int(input()))\n  for j in range(A[i]):\n    x, y = map(int, input().split())\n    R[i, x-1] = y\n\nl = []\nfor i in range(N):\n  l.append(str(i))\n\ndef contra(M, N, st):\n  for i in range(N):\n    if(st[i] == '1' and sum(M[:,i] == 0) != 0):\n      return False;\n    elif(st[i] == '0' and sum(M[:,i] == 1) != 0):\n      return False;\n  return True\n\ndef selected_set(l, i):\n  tmp = []\n  if(i == 0):\n    return tmp\n  elif(i == 1):\n    return l\n  elif(i == len(l)):\n    tmp.append(''.join(l))\n    return tmp\n  else:\n    for k in range(len(l)-i+1):\n      st = l[k]\n      ll = l[k+1:]\n      tl = selected_set(ll, i-1)\n      res = [st+p for p in tl]\n      tmp += res\n    return tmp\n\nnum = 0\nfor i in range(N):\n  st = ['1']*N\n  ll = selected_set(l, i)\n  if(len(ll) == 0):\n    if(contra(R, N, st)):\n      num = N-i\n      break;\n\n  for zero_key in ll:\n    st = ['1']*N\n    S = np.full((N, N), 2, dtype=np.uint8)\n    for p in range(i):\n      st[int(zero_key[p])] = '0'\n    for k in range(1, len(st)+1):\n      if(st[-k] == '1'):\n        S[N-k, :] = R[N-k,:]\n    if(contra(S, N, st)):\n      num = N-i\n      break;\n  else:\n    continue\n  break\n\nprint(num)\n\n","N = int(input())\n\nevidences = [[] for _ in range(N)]\nfor i in range(N):\n    A = int(input())\n    for _ in range(A):\n        x, y = map(int, input().split())\n        evidences[i].append((x - 1, y))\n\nresult = 0\nfor i in range(1, 2 ** N):\n    consistent = True\n    for j in range(N):\n        if (i >> j) & 1 == 0:\n            continue\n        for x, y in evidences[j]:\n            if (i >> x) & 1 != y:\n                consistent = False\n                break\n        if not consistent:\n            break\n    if consistent:\n        result = max(result, bin(i)[2:].count('1'))\nprint(result)","N, *data = open(0).read().split('\\n')\nN = int(N)\n\nXY = []\n\nj = 0\nfor i in range(N):\n    A = int(data[j])\n    j += 1\n    XY.append([])\n    for a in range(A):\n        XY[i].append(tuple(map(int, data[j].split())))\n        j += 1\n        \n# True: \u77db\u76fe\u3042\u308a\u3001False: \u77db\u76fe\u306a\u3057\n\ndef is_contradiction(mynum:int, is_honest:str, x:int, y:int):\n    if is_honest[mynum]=='1':\n        return is_honest[x-1]!=str(y)\n    else:\n        return is_honest[x-1]==str(y)\n      \nans = 0\n\nfor i in range(2**N):\n    is_honest = format(i, '0%db' %N)\n    \n    if ans >= is_honest.count('1'):\n        continue\n    else:\n        \n#         print(is_honest) # for Debug\n        \n        contradictions = []\n        for n in range(N):    \n            for xy in XY[n]:\n                contradictions.append(is_contradiction(n, is_honest, *xy))\n        \n#         print(contradictions)  # for Debug\n        \n        if True not in contradictions:\n            ans = is_honest.count('1')\n            \nprint(ans)","N=int(input())\n\nA=[]\ntest = []\nfor i in range(N):\n    A_i= int(input())\n    A.append(A_i)\n    testimony_i=[]\n    for j in range(A_i):\n        x,y= map(int,input().split())\n\n        testimony_i.append([x,y])\n    \n    test.append(testimony_i)\n\nprint(A)\nprint(test)\n\n\ntotal=0\n\nfor i in range(2**N):\n\n    member = format(i,'0{}b'.format(N))\n\n    print(member)\n    flg = 0\n\n    for j in range(N):\n        if member[j]== '1':\n\n            syogen = test[j]\n\n            for s in syogen:\n                if member[s[0]-1]==str(s[1]):\n                    continue\n                else:\n                    flg+=1\n\n    if flg ==0:\n        total = max(total , member.count('1')) \n\nprint(total)\n# total = 0\n# for i in range(2**N):\n    \n#     Honests=[0]*N\n    \n#     for j in range(N):\n\n#         if (i>>j) & 1:\n\n#             A_j = A[j]\n            \n#             for k in range(A_j):\n#                 x,y =test[j][k][0],test[j][k][1]\n\n#                 x-=1\n#                 if y ==1:\n#                     Honests[x]=1\n#                 else:\n#                     Honests[x]=0\n#         else:\n#             A_j=A[j]\n\n#             for k in range(A_j):\n#                 x,y =test[j][k][0],test[j][k][1]\n\n#                 x-=1\n#                 if y ==1:\n#                     Honests[x]=0\n#                 else:\n#                     Honests[x]=1\n            \n#     total = max(total,max(Honests))\n\n# print(total)\n\n\n","N = int(input())\nsyougen = [[]*N for _ in range(N)]\n\nfor i in range(N):\n    A = int(input())\n    for j in range(A):\n        x, y = [int(s) for s in input().split()]\n        syougen[i].append((x,y))\n\ndef judge(bit):\n    for i in range(N):\n        if not bit & (1<<i):\n            continue\n        for x, y in syougen[i]:\n            if y == 1 and not bit & (1<<x-1):\n                return False\n            if y == 0 and bit & (1<<x-1):\n                return False\n    return True\n\nans = 0\nfor bit in range(2**N):\n    if judge(bit):\n        res = 0\n        for i in range(N):\n            if bit & (1<<i):\n                res += 1\n        ans = max(res, ans)\n        \nprint(ans)\n\n\n","n=int(input())\nxy=[[] for i in range(n)]\nfor i in range(n):\n    a=int(input())\n    for j in range(a):\n        xy[i].append(list(map(int,input().split())))\n        \nans=0\nfor i in range(2**n):\n    flg=0\n    bin_i=format(i, '0{}b'.format(n))\n    zero_one=list(bin_i)\n    for j in range(n):\n        if zero_one[j]==\"1\":\n            for k in xy[j]:\n                x,y=k\n                if zero_one[x-1]==\"1\" and y==0:\n                    flg=1\n                if zero_one[x-1]==\"0\" and y==1:\n                    flg=1\n\n    if flg==0:\n        tmp=0\n        for w in zero_one:\n            if w==\"1\":\n                tmp+=1\n        ans=max(ans,tmp)\n\nprint(ans)\n    \n    ","def solve():\n    # \u6a19\u6e96\u5165\u529b\u90e8\u5206\n    N = int(input())  # len(person)\n    A = []\n    x = []\n    y = []\n    i = 0\n    for i in range(N):\n        A.append(int(input()))\n        x.append([])\n        y.append([])\n        for j in range(A[i]):\n            x_temp, y_temp = list(map(int, input().split()))\n            x[i].append(x_temp)\n            y[i].append(y_temp)\n    \n    # N\u4eba\u3092\u6b63\u76f4\u8005\uff0c\u4e0d\u89aa\u5207\u306a\u4eba\u3068\u4eee\u5b9a\u3057\u3066\u77db\u76fe\u305b\u305a\u306b\u5b58\u5728\u3057\u3046\u308b\u6b63\u76f4\u8005\u306e\u6700\u5927\u4eba\u6570\u3092\u6c42\u3081\u308b\uff0e\n    honest_num = 0\n    honest_num_new = 0\n    for b in range(2**N):\n        consistent = True\n        case = format(b, '0'+str(N)+'b')\n        # \u77db\u76fe\u304c\u3042\u308b\u304b\u78ba\u8a8d\u3059\u308b\u51e6\u7406, n-bit\u76ee\u304c'1'\u306e\u3068\u304d\uff0cn\u756a\u76ee\u306e\u4eba\u306f\u6b63\u76f4\u8005\n        i = 0\n        for i in range(N): # i\u756a\u76ee\u306e\u4eba\u306e\u8a3c\u8a00\u3092\u691c\u8a3c\n            for z in zip(x[i], y[i]): #z[0]\uff08person[i]\uff09\u304cz[1]\uff08\u6b63\u76f4\u8005\uff0c\u4e0d\u89aa\u5207\u306a\u4eba\uff09\u3067\u3042\u308b\u3068\u3044\u3046\u8a3c\u8a00\n                if case[i] == \"1\":\n                    if case[z[0]-1] != str(z[1]):\n                        consistent = False\n        if consistent:\n            # \u77db\u76fe\u304c\u306a\u3044\u3068\u304d\uff0c\u6b63\u76f4\u8005\u306e\u6570\u3092\u6c42\u3081\u308b\u51e6\u7406\n            honest_num_new = case.count(\"1\")\n        # \u3053\u308c\u307e\u3067\u306e\u6700\u5927\u306e\u4eba\u6570\u3068\u6bd4\u8f03\u3057\u3066\uff0c\u6b63\u76f4\u8005\u304c\u591a\u3044\u307b\u3046\u3092\u63a1\u7528\n        honest_num = max(honest_num, honest_num_new)\n    print(honest_num)\n\n\n\nif __name__ == \"__main__\":\n    solve()\n","N = int(input())\nedge = [[] for _ in range(N)]\nfor i in range(N):\n    A = int(input())\n    for j in range(A):\n        x,y = map(int,input().split())\n        edge[i].append((x-1,y))\n\nans = 0\nfor i in range(2**N):\n    # 1: \u6b63\u76f4\u8005\n    state = [0] * N\n    for j in range(N):\n        state[j] = (i >> j) & 1\n    \n    # \u771f\u507d\u3092\u78ba\u304b\u3081\u308b\n    flag = True\n    for j in range(N):\n        if state[j] == 0:\n            continue\n        for x,y in edge[j]:\n            if state[x] == y:\n                continue\n            flag = False\n            break\n        if not flag:\n            break\n    if not flag:\n        continue\n\n    ans = max(ans, state.count(1))\n\nprint(ans)","#ABC147\u3000C\u3000\u3084\u3063\u3066\u308b\u9014\u4e2d\nn=int(input())\nl=[]\nfor i in range(n):\n  a=int(input())\n  l_=[]\n  for j in range(a):\n    xy=list(map(int,input().split()))\n    l_.append(xy)\n  l.append(l_)\nans=0\nfor i in range(2**n):\n  table=[0]*n\n  flag=False\n  for j in range(n):\n    if (i>>j)&1:\n      table[j]=1\n  for j in range(n):\n    for k in l[j]:\n   \n      if k[1]!=table[k[0]-1] and table[j]==1:\n        flag=True\n        break\n\n        if flag:\n          break\n\n  if flag==True:\n    continue\n\n\n  ans = max(ans, table.count(1))\n\n\nprint(ans)","n=int(input())\nxy=[[[]] for _ in range(n)]\nfor i in range(n):\n    a=int(input())\n    xy[i]=[list(map(int,input().split())) for _ in range(a)]\nans=0\nfor i in range(2**n):\n    tmp=[0]*n\n    flag1=True\n    for j in range(n):\n        if (i>>j)&1:\n            tmp[j]=1\n    for k in range(n):\n        flag2=True\n        if tmp[k]==1:\n            for x,y in xy[k]:\n                if tmp[x-1]!=y:\n                    flag1=False\n                    flag2=False\n                    break\n        if not flag2:\n            break\n    if flag1:\n        ans=max(ans,sum(tmp))\nprint(ans)","import itertools\nn = int(input())\nl = []\nfor i in range(n):\n    d = int(input())\n    for dd in range(d):\n        x, y = map(int, input().split())\n        l.append([i, x-1, y])\n \nans = 0\nfor p in itertools.product([0, 1], repeat=n):\n    for ll in l:\n        if p[ll[0]] == 1 and p[ll[1]] != ll[2]:\n            break\n    else:\n        ans = max(ans, sum(p))\nprint(ans)","N=int(input())\narr = [[] for i in range(N+1)]\nbm = [0 for i in range(N+1)]\nmaxs = 0\ncnt = 0\n\ndef slv(curInd):\n  global N,arr,bm,maxs,cnt\n  if curInd==N:\n    good = True\n    for i in range(N+1):\n      if good == False:\n        break\n      if bm[i]:\n        for el in arr[i]:\n          if bm[el[0]]!=el[1]:\n            good = False\n            break\n    if good == True:\n      maxs = max(maxs,cnt)\n    cnt += 1\n    bm[curInd] = 1\n    good = True\n    for i in range(N+1):\n      if good == False:\n        break\n      if bm[i]:\n        for el in arr[i]:\n          if bm[el[0]]!=el[1]:\n            good = False\n            break\n    if good == True:\n      maxs = max(maxs,cnt)\n    bm[curInd] = 0\n    cnt -= 1\n  else:\n    slv(curInd+1)\n    cnt += 1\n    bm[curInd] = 1\n    slv(curInd+1)\n    cnt -= 1\n    bm[curInd] = 0\n\nfor i in range(N):\n  A=int(input())\n  for j in range(A):\n    arr[i+1].append(list(map(int,input().split())))\nslv(1)\nprint(maxs)","n=int(input())\ntestimony_list=[[[-1,-1] for _ in range(n-1)] for i in range(n)]\nfor i in range(n):\n\ta=int(input())\n\tfor j in range(a):\n\t\tx,y=map(int,input().split())\n\t\ttestimony_list[i][j][0]=x-1\n\t\ttestimony_list[i][j][1]=y\n\nans=0\nfor i in range(2**n):\n\tkind_l=[0 for _ in range(n)]\n\tfor j in range(n):\n\t\tif ((i>>j) & 1):\n\t\t\tkind_l[j]=1\n\tfor k in range(n):\n\t\tif kind_l[k]==1:\n\t\t\tfor m in range(a):\n\t\t\t\tsubject=testimony_list[k][m][0]\n\t\t\t\tjudge=testimony_list[k][m][1]\n\t\t\t\tif subject or judge==-1:continue\n\t\t\t\tif kind_l[subject]!=judge:\n\t\t\t\t\tkind_l=[0 for _ in range(n)]\n\t\t\t\t\tbreak\n\tans=max(ans,sum(kind_l))\nprint(ans)\n","N = int(input())\nA = [[-1 for _ in range(N)] for _ in range(N)]\nfor i in range(N):\n    a = int(input())\n    for _ in range(a):\n        x, y = map(int, input().split())\n        x -= 1\n        A[i][x] = y \n\nans = 0\nfor b in range(2**N):\n    bit = bin(b)[2:].zfill(N)\n    flg = True\n    for i in range(N):\n        if bit[i] == '0': continue\n        for j in range(N):\n            if A[i][j] == -1: continue\n            if A[i][j] != int(bit[j]):\n                flg = False\n                break\n        \n        if not flg: break\n\n    ans = max(bit.count('1'), ans) if flg else ans\n\nprint(ans)","N=int(input())\nall=[]\nfor i in range(N):\n    A_N=int(input())\n    grid=[]\n    for j in range(A_N):\n        a=list(map(int, input().split()))\n        grid.append(a)\n    all.append(grid)\nprint(all)\nans=[]\nfor i in range(N):# \u4e8c\u9032\u6570\u306e\u30ea\u30b9\u30c8\u4f5c\u6210\n    b = format(i,'b').zfill(N)\n    c_l = [int(p) for p in list(b)]\n\n    for l in range(N):# check\u306e\u958b\u59cb\uff08l\u306f\u4eba\uff09\n        for m in range(len(all[l])):# \u305d\u306e\u4eba\u306e\u4e3b\u5f35\u306e\u6570\n            if c_l[all[l][m][0]-1]!=all[l][m][1]:\n                break\n        else:\n            continue\n        break\nelse:\n    ans.append(c_l.count(1))\nprint(max(ans))\n","#!\/usr\/bin\/env python3\n\nimport itertools\n\n\ndef max_honests(n, statements):\n    g = itertools.product((True, False), repeat=n)\n    res = 0\n    for is_hon in g:\n        flag = True\n        for i in range(n):\n            if is_hon[i]:\n                for x, y in statements[i]:\n                    if is_hon[x] != y:\n                        flag = False\n        if flag:\n            res = max(res, sum(is_hon))\n    return res\n\n\ndef main():\n    n = int(input())\n    statements = [set() for _ in range(n)]\n    for i in range(n):\n        a = int(input())\n        for _ in range(a):\n            x, y = (int(z) for z in input().split())\n            statements[i].add((x - 1, bool(y)))\n    res = max_honests(n, statements)\n    print(res)\n\n\nif __name__ == \"__main__\":\n    main()\n","import sys, math\nfrom collections import defaultdict\nfrom copy import deepcopy\nimport itertools\ninput = sys.stdin.readline\n# \u6587\u5b57\u5217\u306e\u5834\u5408\u306f\u666e\u901a\u306einput()\u3092\u4f7f\u3046\u304b\u4e0b\u3092\u4f7f\u3046\n# input = sys.stdin.readline().rstrip()\n\nN = int(input())\nA = [None]\ninfo = [None] + [[] for _ in range(N)]\nfor i in range(N):\n    a = int(input())\n    A.append(a)\n    for _ in range(a):\n        x, y = map(int, input().split())\n        info[i+1].append((x, y))\n#print('info={}'.format(info))\n    \nans_bit = 0\nfor num in range(2**N-1, -1, -1):\n    bit_pre = bin(num)\n    bit_pre = bit_pre[2:]\n    l = len(bit_pre)\n    bit = '0' * (N - l) + bit_pre\n\n\n    status = [None] * (N + 1)\n    #print('bit={}'.format(bit))\n    contradict = False\n    for i, n in enumerate(bit):\n        i += 1\n        n = int(n)\n        #print('i={}, n={}'.format(i, n))\n    \n        if n == 1:\n            for x, y in info[i]:\n                if int(bit[x-1]) != y:\n                    contradict = True\n                    \n                s = status[x]\n                #print('s={}'.format(s))\n                if s == None:\n                    status[x] = y\n                elif s != y:\n                    contradict = True\n                #print('status={}'.format(status))\n        \n    if not contradict:\n        ans_bit = bit\n        break\n\n\n\n#print('ans_bit={}'.format(ans_bit))\nans = 0\nfor x in ans_bit:\n    if x == '1':\n        ans += 1\nprint(ans)","n = int(input())\nall = 1<<n\nstatement = []\nfor i in range(n):\n    A = int(input())\n    statement.append([])\n    for j in range(A):\n        x, y = map(int, input().split())\n        statement[i].append([x-1, y])\nans = 0\nfor i in range(all):\n    ok = True\n    num = 0\n    for j in range(n):\n        if i & 1<<j:\n            num += 1\n            for s in statement[j]:\n                if (i & 1<<s[0]) != (s[1]<<s[0]):\n                    ok = False\n    if ok:\n        ans = max(ans, num)\nprint(ans)\n","#python3 \ng = [[-1 for _ in range(15)] for _ in range(15)]\n\nn = int(input())\nfor i in range(n):\n  m = int(input())\n  for j in range(m):\n    x,y = map(int, input().split())\n    g[i][x-1] = y\n\nans = 0\nfor i in range(1<<n):\n  honests = [0 for _ in range(n)]\n  for j in range(n):\n    if (i>>j) &1:\n      honests[j] = 1 \n  ok = True\n  for j in range(n):\n    if honests[j]:\n      for k in range(n):\n        if g[j][k] == -1: continue\n        if g[j][k] != honests[k]: ok = False\n  if ok:\n    ans = max(ans, bin(i).count('1'))\n\nprint(ans)","n = int(input())\na = [0] * n\nx = [[] for i in range(n)]\ny = [[] for i in range(n)]\nfor i in range(n):\n    a[i] = int(input())\n    for j in range(a[i]):\n        k, l = map(int, input().split())\n        x[i].append(k)\n        y[i].append(l)\n\ndef dfs(cur, l):\n    global ok\n    if cur == n:\n        ok = True\n        for i in range(n):\n            if l[i]==1 and any([l[x[i][j]-1]!=y[i][j] for j in range(a[i])]):\n                ok = False\n        return sum(l) if ok else 0\n    else:\n        l1 = l[:]\n        l1[cur] += 1\n        return max(dfs(cur+1, l), dfs(cur+1, l1))\n\nprint(dfs(0, [0]*n))","import numpy as np\n\nN = int(input())\nA = [0]*N\nX = np.zeros([N,N],dtype=int)\nY = np.zeros([N,N],dtype=int)\n\nfor n in range(N):\n    A[n] = int(input())\n    for a in range(A[n]):\n        X[n][a], Y[n][a] = list(map(int,input().split()))\n\nans = 0\n\nfor bits in range( 1, 1<<N ):\n    ok = True\n    for i in range( 0, N ):\n        if not ( bits & (1 << i) ):\n            continue\n        for j in range( 0, A[i] ):\n            if (( bits >> (X[i][j]-1) ) & 1) ^ Y[i][j]:\n                ok = False\n    if ok:\n        ans = max( ans, (str(bin(bits))[2:]).count('1'))\n        \nprint(ans)","n = int(input())\nlists = [[] for _ in range(n)]\nfor i in range(n):\n    a = int(input())\n    for j in range(a):\n        x, y = map(int, input().split())\n        lists[i].append((x-1, y))\nans = 0\nfor i in range(1, 2**n):\n    status = True\n    for j in range(n):\n        if (i >> j) & 1 == 0:\n            continue\n        for x, y in lists[j]:\n            if (i >> x) & 1 != y:\n                status = False\n                break\n        if status == False:\n            break\n    if status == True:\n        ans = max(ans, bin(i).count('1'))\nprint(ans)","def max_honest(n_ppl, testimonies):\n    formating_str = \"{0:0\" + str(n_ppl) + \"b}\"\n    max = 0\n    for i in range(1, 2**n_ppl + 1):\n        current_val = formating_str.format(2**n_ppl - i)\n        potential = True\n        valid_testemonies = []\n        for j in range(0, len(current_val)):\n            if current_val[j] == \"1\":\n                for k in range(0, len(testimonies[j])):\n                    valid_testemonies.append(testimonies[j][k])\n        for j in range(0, len(valid_testemonies)):\n            if str(valid_testemonies[j][1]) != current_val[valid_testemonies[j][0] - 1]:\n                potential = False\n                break\n        if potential:\n            if current_val.count(\"1\") > max:\n                max = current_val.count(\"1\")\n    return max\n\ntestimonies = []\nn_ppl = int(input())\n\nfor i in range(0, n_ppl):\n    tests = []\n    n_tests = int(input())\n    for j in range(0, n_tests):\n        test = input().split(\" \")\n        test = (int(test[0]), int(test[1]))\n        tests.append(test)\n    testimonies.append(tests)\n    \nprint(\"\")\nprint(max_honest(n_ppl, testimonies))\ninput(\"Press enter\")","n=int(input())\nl=[]\nfor i in range(n):\n  n1=int(input())\n  l1=[]\n  for j in range(n1):\n    a,b=map(int,input().split())\n    l1.append([a,b])\n  l.append(l1)\nnum=2**n\nbitlist=[]\nfor i in range(1,1+num):\n  num1=num-i\n  b1=[]\n  while num1!=0 or len(b1)<n:\n    b1.append(num1%2)\n    num1\/\/=2\n  bitlist.append(b1)\n#\u5404b1\u306e\u8981\u7d20\u304c1\u306e\u6642\u305d\u306e\u4eba\u306f\u6b63\u76f4\u8005\nans=0\nfor i in range(num):\n  b=bitlist[i]\n  bool1=True\n  for j in range(n):\n    if not bool1:\n      pass\n    elif b[j]==0:\n      pass\n    else:#j\u306f\u6b63\u76f4\u8005\u3060\u304b\u3089\u767a\u8a00\u306f\u5168\u3066\u672c\u5f53 \u6574\u5408\u6027\u5fc5\u8981\n      for k in l[j]:\n        n1=k[0]\n        n2=k[1]\n        if b[n1-1]!=n2:\n          bool1=False\n  count=0\n  if bool1:\n    for j in b:\n      if j==1:\n        count+=1\n    if count>ans:\n      ans=count\nprint(ans)","import itertools\nN = int(input())\ndic = {}\ncnt = 0\nok = []\nfor i in range(N):\n  A = int(input())\n  for j in range(A):\n    x,y = (int(t) for t in input().split())\n    dic[(i,x)] = y\nfor i in itertools.product([0,1],repeat=N):\n  for k in dic.keys():\n    if i[k[0]] == 0:\n      continue\n    if dic[k] != i[k[1]-1]:\n      break\n  else:\n    ok += [i]\nmm = 0\nfor i in ok:\n  mm = max(mm,sum(i))\nprint(mm)","n = int(input())\n\nl = []\naas = []\n\nfor i in range(n):\n    a = int(input())\n    aas.append(a)\n    s = [list(map(int,input().split())) for i in range(a)]\n    l.append(s)\n\nfor i in range(2**n):\n    flag_n = [1]*n\n    for j in range(n):\n        if ((i >> j)&1):\n            flag_n[n-1-j] = 0\n    cnt = 0\n    for k in range(n):\n        if flag_n[k] == 1:\n            if all(l[k][m][1] == flag_n[l[k][m][0]-1] for m in range(aas[k])):\n                cnt += 1\n        if cnt == sum(flag_n):\n            print(sum(flag_n))\n            exit()\n\nprint(0)\n        \n","n = int(input())\ng = [[-1 for j in range(n)] for i in range(n)]\n\nfor i in range(n):\n    a = int(input())\n    for _ in range(a):\n        x, y = map(int, input().split())\n        g[i][x - 1] = y\n        \nans = 0\nfor s in range(2**n):\n    ok = True\n    k = 0\n    for i in range(n):\n        if (s >> i & 1) == 1:\n            k += 1\n            for j in range(n):\n                if g[i][j] == -1:\n                    continue\n                if (s >> j & 1) != g[i][j]:\n                    ok = False\n    if ok:\n        ans = max(ans, k)\n\nprint(ans)","n = int(input())\nw = [[] for i in range(n)]\nfor i in range(n):\n    a = int(input())\n    for j in range(a):\n        w[i].append([int(x) for x in input().split()])\n\nans = 0\nfor i in range(2**n):\n    flag = 1\n    f = [0]*n\n    num = 0\n    for j in range(n):\n        if i & 1<<j:\n            f[j] = 1\n            num += 1\n    for j in range(n):\n        if f[j]==1:\n            for k in w[j]:\n                if k[1]!=f[k[0]-1]:\n                    flag = 0\n        else:\n            for k in w[j]:\n                if k[1]==f[k[0]-1]:\n                    flag = 0\n    \n    if flag == 1:\n        ans = max(ans,num)\nprint(ans)"],"formatted_programs":["N = int(input())\nT = [[] for x in range(N)]\n\nfor i in range(N):\n    for _ in range(int(input())):\n        idx, t = map(int, input().split())\n        T[i].append((idx-1, t))\n\nans = 0\nfor i in range(1, 2**N):\n    ok = True\n    ans_t = 0\n    for j in range(N):\n        if (i>>j) & 1 == 0:\n            continue\n        ans_t += 1\n        for (x,y) in T[j]:\n            if (i>>x) & 1 != y:\n                ok = False\n                break\n        if not ok:\n            break\n    if ok:\n        ans = max(ans, ans_t)\nprint(ans)\n","n = int(input())\ndata = [[] for i in range(n)]\nfor i in range(n):\n    a = int(input())\n    for _ in range(a):\n        data[i].append(list(map(int,input().split())))\n\n#print(data)\nans = 0\nfor i in range(1<<n):\n    truth = []\n    for x in range(n):\n        if i&(1<<x):\n            truth.append(x+1)\n\n    q = True\n    for j in truth:\n        for x,y in data[j-1]:\n            if x in truth and y == 0:\n                q = False\n                break\n            if x not in truth and y == 1:\n                q = False\n                break\n    if q:\n        ans = max(ans,len(truth))\n        #print(truth)\n\nprint(ans)","n = int(input())\nxy_ls = [0]*n\n\nfor i in range(n):\n    a = int(input())\n    ls = [list(map(int, input().split())) for _ in range(a)]\n    xy_ls[i] = ls \n\nok_ls = []\nfor i in range(2**n):\n    ok = 1\n    people = [0]*n\n    for j in range(n):\n        if i >> j & 1:\n            people[j] = 1\n    for j in range(n):\n        if people[j] == 1:\n            for xy in xy_ls[j]:\n                if xy[1] != people[xy[0]-1]:\n                    ok = 0\n    if ok:\n        ok_ls.append(len([i for i in people if i == 1]))\n\nprint(max(ok_ls))","import itertools\n\nn=int(input())\n\nlis=[]\nfor i in range(n):\n    ai=int(input())\n    lisi=[]\n    for _ in range(ai):\n        xi,yi=map(int,input().split())\n        lisi.append([xi-1,yi])\n    lis.append(lisi)\n\n#print(lis)\nans=0\nfor binary in itertools.product([0,1],repeat=n):\n    check=0\n    for i in range(n):\n        #print(\"bi\",binary[i])\n        if binary[i]==1:\n            for j in range(len(lis[i])):\n                #print(binary[lis[i][j][0]],lis[i][j][1])\n                if binary[lis[i][j][0]]!=lis[i][j][1]:\n                    check+=1\n        else:\n            for j in range(len(lis[i])):\n                #print(binary[lis[i][j][0]],lis[i][j][1])\n                if binary[lis[i][j][0]]==lis[i][j][1]:\n                    check+=1\n    if check==0:\n        #print(binary)\n        ans=max(ans,sum(binary))\n\nprint(ans)","#!\/usr\/bin\/env python3\nimport sys\n\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\n\ndef count_ones(num):\n    count = 0\n    while num:\n        count += num & 1\n        num >>= 1\n    return count\n\n\ndef main():\n    N = int(readline())\n    X = []\n    for i in range(N):\n        A = int(readline())\n        tmp = []\n        for _ in range(A):\n            tmp.append(tuple(map(int, readline().split())))\n        X.append(tmp)\n\n    ans = 0\n    for i in range(2**N):\n        OK = True\n        for j in range(N):\n            if ((i >> j) & 1):\n                for x in X[j]:\n                    if ((i >> (x[0] - 1)) & 1) != x[1]:\n                        OK = False\n                        break\n                if not OK:\n                    break\n        if OK:\n            ans = max(ans, count_ones(i))\n\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n","from itertools import product\n\ndef main():\n    n = int(input())\n    a = []\n    ls = []\n    ans = 0\n    for _ in range(n):\n        ai = int(input())\n        a.append(ai)\n        ls.append([tuple(map(int, input().split())) for i in range(ai)])\n    ptns = list(product([0,1], repeat=n))\n    for ptn in ptns:\n        flag = 0\n        lsls = list(ptn)\n        for j in range(n):\n            if ptn[j] == 1:\n                for i in range(a[j]):\n                    if ls[j][i][1] == 1 and lsls[ls[j][i][0]-1] == 1:\n                        lsls[ls[j][i][0]-1] *= ls[j][i][1]\n                    elif ls[j][i][1] == 0 and lsls[ls[j][i][0]-1] == 0:\n                        lsls[ls[j][i][0]-1] *= ls[j][i][1]\n                    else:\n                        flag = 1\n        if flag == 0:\n            if list(ptn) == lsls:\n                if ans < sum(ptn):\n                    ans = sum(ptn)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()","N = int(input())\nxs = [[] for i in range(N)]\nfor i in range(N):\n    a = int(input())\n    for j in range(a):\n        x,y = map(int,input().split())\n        xs[i].append((x-1,y))\nans = 0\nfor b in range(1<<N):\n    mujun = False\n    for k,z in enumerate(xs):\n        for x,y in z:\n            if b&(1<<x):\n                if y==0:\n                     mujun = True\n            else:\n                if y==1:\n                    mujun = True\n        if mujun:\n            break\n    if mujun:\n        break\n    if not mujun:\n        tmp = bin(b).count('1')\n        ans = max(ans, tmp)\nprint(ans)\n","#!\/usr\/bin\/env python3\n\nimport sys\n# import math\n# import re                                    # re.compile(pattern) => ptn obj; p.search(s), p.match(s), p.finditer(s) => match obj; p.sub(after, s)\n# from collections import deque                # deque class. deque(L): dq.append(x), dq.appendleft(x), dq.pop(), dq.popleft(), dq.rotate()\n# from collections import defaultdict          # subclass of dict. defaultdict(facroty)\n# from collections import Counter              # subclass of dict. Counter(iter): c.elements(), c.most_common(n), c.subtract(iter)\n# from heapq import heapify, heappush, heappop # built-in list. heapify(L) changes list in-place to min-heap in O(n), heappush(heapL, x) and heappop(heapL) in O(lgn).\n# from heapq import nlargest, nsmallest        # nlargest(n, iter[, key]) returns k-largest-list in O(n+klgn).\nfrom itertools import product                # product(iter, repeat=n)\n# from itertools import accumulate             # accumulate(iter[, f])\n# from functools import reduce                 # reduce(f, iter[, init])\n# from bisect import bisect_left, bisect_right # bisect_left(a, x, lo=0, hi=len(a)) returns i such that all(val<x for val in a[lo:i]) and all(val>-=x for val in a[i:hi]).\n# from fractions import gcd                    # for Python3.4.3\n\n\ndef main():\n    mod = 10000007                  # 10^9+7\n    inf = float('inf')\n    sys.setrecursionlimit(10**6)    # 1000 -> 1000000\n    def input(): return sys.stdin.readline().rstrip()\n    def ii():  return int(input())\n    def mi():  return map(int, input().split())\n    def mi_0(): return map(lambda x: int(x)-1, input().split())\n    def lmi(): return list(map(int, input().split()))\n    def lmi_0(): return list(map(lambda x: int(x)-1, input().split()))\n    def li():  return list(input())\n    \n\n    def check_no_contradict(case):\n        for i, person in enumerate(case):\n            if person == 1:\n                for comment in comments[i]:\n                    if case[comment[0]] != comment[1]:\n                        return False\n        return True\n\n\n    n = ii()\n    comments = [[] for _ in range(n)]\n    for i in range(n):\n        num = ii()\n        for _ in range(num):\n            a, b = mi()\n            comments[i].append(tuple([a-1, b]))\n    \n    ans = 0\n    for case in product([0, 1], repeat=n):\n        if check_no_contradict(case):\n            # print(f\"case: {case}\")\n            ans = max(ans, case.count(1))\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()","N=int(input())\nflag=0\nE=[]\ntotal=0\nmaxi=0\nfor i in range(N):\n    E.append([0]*N)\nfor i in range(N):\n    M=int(input())\n    for j in range(M):\n        C, D = map(int, input().split())\n        if D==1:\n            D=2\n        else:\n            D=1\n        E[i][C-1]+=D\n\n#print(E)\n\nA=[]\nfor i in range((2**N)):\n    s=format(i,'b')\n    A.append(s.zfill(N))\n#print(A)\n\nfor i in range(len(A)):\n    flag=0\n    total=0\n    S=A[i]\n    #print(S)\n    for j in range(len(S)):\n        if S[j]=='0':\n            for k in range(N):\n                #print(E[j][k],S[k])\n                if (E[j][k]==1 and S[k]=='0')or (E[j][k] == 2 and S[k] == '1'):\n                    #print('f')\n                    flag=1\n    if flag==0:\n        for o in range(len(S)):\n            if S[o]=='0':\n                total+=1\n        maxi=max(maxi,total)\nprint(maxi)","N = int(input())\nL = []\nfor _ in range(N):\n  L.append([list(map(int, input().split())) for _ in range(int(input()))])\nfor ls in L:\n  for l in ls:\n    l[0] -= 1\nM = 0\nfor i in range(1<<N):\n  A, Normal = [], True\n  for j in range(N):\n    if (i>>j)&1:\n      A.append(j)\n  for a in A:\n    for l in L[a]:\n      if l[0] in A and l[1]==0:\n        Normal = False\n      if l[1]==1 and l[0] not in A:\n        Normal = False\n  if Normal:\n    M = max(M, len(A))\nprint(M)","from collections import deque\nN = int(input())\nTlist = deque([])\nfor i in range(N):\n    list = []\n    n = int(input())\n    if n != 0:\n        for i in range(n): #\u56e0\u6570\u6ce8\u610f\uff01\n            o = input()    \n            m = o.split()\n            p = [int(j) for j in m] #1\u5217\u306e\u6570\u5217\u3092\u30ea\u30b9\u30c8\u5316\n            list.append(p)\n    Tlist.append(list)\nmax = 0\nfor i in range(2**N):\n    p = format(i,'0'+str(N)+'b')\n    print(p)\n    ALL = True\n    for j, value in enumerate(p):\n        if value == '0':\n            pass\n        else:\n            if len(Tlist[j]) == 0:\n                pass\n            else:\n                for k in Tlist[j]:\n                    if p[k[0]-1] == str(k[1]):\n                        pass\n                    else:\n                        ALL = False\n            if ALL:\n                pass\n            else:\n                break\n    else:\n        new = p.count('1')\n        if new > max:\n            max = new\n\nprint(max)","# import itertools\n# import math\n\nN = int(input())\n# S = input()\n# n, *a = map(int, open(0))\n# A, B, X = map(int, input().split())\n# A = list(map(int, input().split()))\n# S = input()\n\nin_list = []\n\nfor i in range(N):\n    A_i = int(input())\n    _list = []\n    for j in range(A_i):\n        x_ij, y_ij = map(int, input().split())\n        _list.append([x_ij, y_ij])\n    in_list.append(_list)\n\ncnt = 0\nfor i in range(2 ** N):\n    for j in range(N):\n        # print(i, end=\" \")\n        # print(bin(i)[2:].zfill(N), end=\" \")\n        # print(j, end=\" \")\n        # print((i>>j) & 1) # i >> j \u306fi\u3092j\u30d3\u30c3\u30c8\u53f3\u30b7\u30d5\u30c8\u3001x & y \u306fx\u3068y\u306e\u540c\u3058\u4f4d\u7f6e\u306e\u30d3\u30c3\u30c8\u304c\u4e21\u65b91\u306e\u5834\u54081\u3068\u3059\u308b\u21920110 & 1(0001) = 0000\n        flg = 0\n        if ((i>>j) & 1 == 0): # flg\u306f\u6b63\u76f40 \u56181\n            flg = 1\n        for l in in_list[j]:\n            if (((i>>l[0] - 1) ^ l[1]) ^ flg) & 1: # \u8a3c\u8a00\u4e0d\u4e00\u81f41, \u4e00\u81f40 -> \u4e0d\u4e00\u81f4\u3060\u304c\u3001\u6b63\u76f4\u306a\u3089\u3084\u3063\u3071\u308a\u30c0\u30e1\n                # print(i,bin(i)[2:].zfill(N),(i>>l[0] - 1),(i>>l[0] - 1) ^ l[1],((i>>l[0] - 1) ^ l[1]) ^ flg,l,flg)\n                break\n        else:\n            continue\n        break\n    else:\n        # print(i, bin(i))\n        _ = bin(i)[2:].zfill(N).count(\"1\")\n        cnt = max(cnt, _)\n    continue\n\nprint(cnt)","num = int(input())\n\n\ntemp2_list = []\n\nfor i in range(num):\n    A = int(input())\n\n    temp1_list = []\n    for j in range(A):\n        temp1_list.append([int(k) for k in input().split()])\n\n    temp2_list.append(temp1_list)\n\nright_agree = 0\nng_agree = 0\nun_agree = 0\nunknown = 0\n\n\ntemp4_list = []\nfor i in range(num):\n    temp3_list = [-1] * num\n    for k in range(len(temp2_list[i])):\n        # print(temp2_list[i][k][0])\n        temp3_list[temp2_list[i][k][0]-1] = temp2_list[i][k][1]\n    temp4_list.append(temp3_list)\n\nfor i in range(num):\n    for k in range(num):\n        if i !=k:\n            if temp4_list[i][k] == temp4_list[k][i] and temp4_list[i][k] == 1:\n                right_agree += 1\n            elif temp4_list[i][k] == temp4_list[k][i] and temp4_list[i][k] == 0:\n                ng_agree += 1\n            elif temp4_list[i][k] != temp4_list[k][i]:\n                un_agree += 1\n            else:\n                unknown += 0\n\n# print(right_agree, ng_agree, un_agree, unknown)\n# print(temp4_list)\n\nres1 = (right_agree - un_agree)\/\/2\nres2 = num - ng_agree\/\/2 - (un_agree\/\/2)\/\/2\n\nprint(max(res1,res2))","N = int(input())\n\nreply = [[-1] * N for _ in range(N)]\n\nfor i in range(N):\n    A = int(input())\n    for _ in range(A):\n        x, y = map(int, input().split())\n        x -= 1\n        reply[i][x] = y\n\nans = 0\n\nfor i in range(1<<N):\n    flag = True\n    for j in range(N):\n        if i>>j&1 == 1:\n            for k in range(N):\n                if reply[j][k] == 1:\n                    if i>>k&1 == 0:\n                        flag = False\n                        break\n                elif reply[j][k] == 0:\n                    if i>>k&1 == 1:\n                        flag = False\n                        break\n            if not flag:\n                break\n    if flag:\n        count = 0\n        for j in range(N):\n            if i>>j&1:\n                count += 1\n        ans = max(ans, count)\n\nprint(ans)","import sys\ninput = sys.stdin.readline\n\n#l = list(map(int, input().split()))\n#import numpy as np\n#arr = np.array([int(i) for i in input().split()])\n'''\na,b=[],[]\nfor i in range(n):\n    A, B = map(int, input().split())\n    a.append(A)   \n    b.append(B)'''\n\n\nn=int(input())\n\na,x=[],[]\nfor i in range(n):\n    A = int(input())\n    a.append(A)\n    B=[]\n    for j in range(A):\n        B.append(list(map(int, input().split())))\n    x.append(B)\n\nma=0\nfor i in range(2**n):\n    now=0\n    flg=True\n    e=[0]*n\n    for j in range(n):\n        if (i>>j)&1:\n            now+=1\n            e[j]=1\n\n    for j in range(n):\n        #print(e)\n        if (i>>j)&1:\n            \n            if e[j]==0:\n                flg=False\n                break\n            elif not flg:\n                break\n\n            for k in range(a[j]):\n                \"\"\"if e[x[j][k][0]-1]==-1: \n                    if x[j][k][1] and\n                    e[x[j][k][0]-1]=x[j][k][1]\"\"\"\n                \n                if (e[x[j][k][0]-1]==0 and x[j][k][1]==1) or (e[x[j][k][0]-1]==1 and x[j][k][1]==0):\n                    flg=False\n                    break\n\n    if flg and ma<now:\n        ma=now\n        #print(ma)\n\nprint(ma)\n\n","import bisect\nfrom itertools import chain, combinations\nfrom math import ceil, floor, sqrt\n\ndef powerset(iterable):\n    s = list(iterable)\n    return chain.from_iterable(combinations(s, r) for r in range(len(s)+1, 0, -1))\n\nN = int(input())\nlN = [n for n in range(N)]\nlA = []\nlxy = [[] for _ in range(N)]\nfor i in range(N):\n    ai = int(input())\n    lA.append(ai)\n    for _ in range(ai):\n        xij, yij = list(map(int, input().split()))\n        xij -= 1\n        lxy[i].append((xij, yij))\n\n# iter all of powersets inverse\nans = 0\nfor s in powerset(lN):\n    # print(s) # assumed polite\n    allflag = True\n    range = [None] * N\n    for elem in s:\n        range[elem] = True\n    for elem in s:\n        ai = lA[elem]\n        lxyi = lxy[elem]\n        flag = True\n        for xi, yi in lxyi:\n            if yi == 0:\n                if xi in s:\n                    flag = False\n                    break\n            if yi == 1:\n                # print(xi, yi, lxy[xi])\n                for xii, yii in lxy[xi]:\n                    if xii == elem and yii != 1:\n                        flag = False\n                        break\n        # print(\"  \", flag, lxy[elem])\n        if not flag:\n            allflag = False\n            break\n    if allflag:\n        ans = len(s)\n        break\n\nprint(ans)","n=int(input())\na=[]\nl=[0]*n\nans=0\nfor i in range(n):\n  a.append(int(input()))\n  l[i]=[list(map(int,input().split())) for i in range(a[-1])]\nfor i in range(2**n):\n  i=format(i,'b').zfill(n)\n  c=[]\n  for j in range(n):\n    if i[j]=='1':\n      c.append(j)\n  for j in c:#c\u306f\u6b63\u76f4\u8005\u3068\u4eee\u5b9a\u3057\u305f\u4eba\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u683c\u7d0d\u3057\u3066\u308b\n    for k in l[j]:#k\u306f1\u4eba\u3042\u305f\u308a\u306e\u8a3c\u8a00\u305f\u3061\u304b\u30891\u3064\u305a\u3064\u53d6\u308a\u51fa\u3059\n      if k[1]==1 and (k[0]-1 not in c):\n        break#\u6b63\u76f4\u8005(\u4eee)\u304c\u300c\u6b63\u76f4\u8005\u3060\uff01\u300d\u3063\u3066\u8a00\u3063\u305f\u4eba\u304c\u6b63\u76f4\u8005\u5019\u88dc\u306b\u3044\u306a\u3044\u5834\u5408\uff08\u3053\u306e\u4eba\u304c\u5618\u3064\u3044\u3066\u308b\uff09\n      elif k[1]==0 and (k[0]-1 in c):\n        break#\u6b63\u76f4\u8005(\u4eee)\u304c\u300c\u5618\u3064\u304d\u3060\uff01\u300d\u3063\u3066\u8a00\u3063\u305f\u4eba\u304c\u6b63\u76f4\u8005\u5019\u88dc\u306b\u3044\u308b\u5834\u5408\uff08\u3053\u306e\u4eba\u304c\u5618\u3064\u3044\u3066\u308b\uff09\n    else:\n      continue\n    break\n  else:#\u3053\u308c\u3089\u3092\u5207\u308a\u629c\u3051\u305f\u3089c\u306f\u3059\u3079\u3066\u6b63\u76f4\u8005\u3060\u3068\u8a00\u3048\u308b\n    ans=max(ans,len(c))\nprint(ans)","n = int(input())\n\ntimes = n\ntable = []\nfor _ in range(times):\n    a = int(input())\n    temp = []\n    for _ in range(a):\n        temp.append(list(map(int,input().split())))\n    table.append(temp)  # S += [input()] \u3068\u3082\u66f8\u3051\u308b\n    \ndef check(i,n):\n    honestOrUnkind = [None]*n\n    honestOrUnkind[i] = 1\n    for item in table[i]:\n        membernum = item[0]-1\n        honestOrUnkind[membernum] = item[1]\n    for idx,hOrU in enumerate(honestOrUnkind):\n        if hOrU == 1:\n            for item in table[idx]:\n                membernum = item[0]-1\n                if honestOrUnkind[membernum] != item[1]:\n                    return False,honestOrUnkind\n                else:\n                    honestOrUnkind[membernum] = item[1]\n        else:\n            continue    \n    return True,honestOrUnkind\n\nmember = [None]*n\nans = 0\nfor i in range(n):\n    flg , memberlist = check(i,n)\n    if flg:\n        member[i] = 1\n        ans = max(memberlist.count(1),ans)\n    else:\n        member[i] = 0\n    \nans = max(member.count(1),ans)\n\nprint(ans)\n","n=int(input())\nans=0\nA=[[] for _ in range(n)]\nfor i in range(n):\n  a=int(input())\n  for j in range(a):\n    A[i].append(tuple(map(int,input().split())))\nfor i in range(2**n):\n  ii=str(bin(i))[2:].zfill(n)\n  chk=True\n  cur=0\n  for j in range(n):\n    if ii[j]==\"0\":\n      continue\n    else:\n      cur+=1\n      for x,y in A[j]:\n        if y==1 and ii[x-1]==\"0\":\n          chk=False\n        elif y==0 and ii[x-1]==\"1\":\n          chk=False\n  if chk:\n    ans=max(ans,cur)\nprint(ans)\n","n = int(input())\n \nXY = []\nfor i in range(n):\n    a = int(input())\n    xy = []\n    for j in range(a):\n        xy.append(list(map(int, input().split())))\n    \n    XY.append(xy)\n    \ndef check(i, xiyj, HoU):\n    # \u77db\u76fe\u3057\u305f\u3089False \u6b63\u76f4\u8005\u3068\u4eee\u5b9a\u3057\u305f\u8a3c\u8a00\u3088\u308a \u6b63\u76f4&\u6b63\u76f4\u8005\u3068\u4eee\u5b9a\u3055\u308c\u3066\u3044\u308b \/ \u4e0d\u89aa\u5207&\u4e0d\u89aa\u5207\u3068\u4eee\u5b9a\u3055\u308c\u3066\u3044\u308b True\n    if ((i >> xiyj) & 1) ^ HoU:\n        return False\n \n    return True\n    \nmax_honest = 0\nfor i in range(2 ** len(XY)):\n    count = 0\n    honest = [0] * len(XY)\n    is_contradiction = True\n    for j in range(len(XY)):\n        # \u6b63\u76f4\u8005\u3068\u4eee\u5b9a\u3057\u305f\u3068\u304d\u3060\u3051\u63a1\u7528\n        if not ((i >> j) & 1): continue\n        for k in range(len(XY[j])):\n            xiyj = XY[j][k][0] - 1\n            HoU = XY[j][k][1]\n            \n            if not check(i, xiyj, HoU):\n                is_contradiction = False\n \n    if is_contradiction:\n        for j in range(len(XY)):\n            if ((i >> j) & 1): count+=1 \n                \n        if count > max_honest:\n            max_honest =count\n            \nprint(max_honest)","def main():\n\tN = int(input())\n\tA = [[] for i in range(N)]\n\t# A[i][j] -> i-th person's testimony of person's honesty (j makes no sense)\n\tfor i in range(N):\n\t\ta = int(input())\n\t\tfor j in range(a):\n\t\t\tx, y = [int(b) for b in input().split(\" \")]\n\t\t\tA[i].append([x - 1, str(y)])\n\n\tcand = []\n\tfor i in range(2 ** N):\n\t\thonest_flag = True\n\t\tbit = list(pad_zero(format(i, 'b'), N))\n\t\thonests = [int(p) for p, q in enumerate(bit) if q == \"1\"]\n\t\tfor honest in honests:\n\t\t\tw = A[honest]\n\t\t\tfor k in range(len(w)):\n\t\t\t\tif w[k][1] != bit[w[k][0]]:\n\t\t\t\t\thonest_flag = False\n\t\tif honest_flag:\n\t\t\tcand.append(len(honests))\n\n\tprint(max(cand))\n\n\ndef pad_zero(s, n):\n\ts = str(s)\n\treturn (\"0\" * n + s)[-n:]\n\nmain()","N=int(input())\ng=[[-1 for i in range(15)]for j in range(15)]\n\nfor i in range(N):\n  m=int(input())\n  for j in range(m):\n    x,y=map(int,input().split())\n    #\u4ebai\u306b\u3088\u308b\u4ebax\u306b\u3064\u3044\u3066\u306e\u8a3c\u8a00\u3092\u683c\u7d0d\n    g[i][x-1]=y\n\nans=0\nfor i in range(1<<N):\n  honests=[0 for _ in range(N)]\n  for j in range(N):\n    if (i>>j)&1==1:\n      honests[j]=1\n  judge=True\n  for k in range(N):\n    if honests[k]==1:\n      for l in range(N):\n        if g[k][l]==-1:\n          continue\n        if g[k][l]!=honests[l]:\n          judge=False\n  if judge:\n    ans=max(ans,honests.count(1))\n\nprint(ans)\n","import sys\nn = int(input())\nmaps = []\nfor i in range(n):\n    ud = []\n    a = int(sys.stdin.readline().rstrip())\n    for j in range(a):\n        x, y = map(int, sys.stdin.readline().split())\n        ud.append([x, y])\n    maps.append(ud)\nresult = 0\nfor i in range(2**n)[::-1]:\n    bf = False\n    for j in range(n):\n        if (i >> j) &1 > 0:\n            for k in maps[j]:\n                if (i >> (k[0]-1))&1 != k[1]:\n                    bf = True\n                    break\n        if bf:\n            break\n    if bf == False:\n        rc = bin(i).count('1')\n        if rc > result:\n            result = rc\n\n\nprint(result)","N = int(input())\nA = []\nXY = []\nfor i in range(N):\n    a = int(input())\n    A.append(a)\n    XY.append([list(map(int, input().split())) for _ in range(a)])\n\n\nans = 0\n# print(singi)\nfor i in range(2 ** N):\n    singi = [-1] * (N + 1)\n    bin_ = bin(i)[2:].zfill(N)\n    flag = True\n    for j in range(1, N + 1):\n        sin = bin_[j-1]\n        person = j\n        num = A[j-1]\n        questions = XY[j - 1]\n        singi[j] = int(sin)\n        w = 0\n\n        if sin == 0:\n            continue\n        else:\n            w = 1\n\n        for k in range(num):\n            hito, honto = questions[k]\n            # print(singi)\n            # print('a', hito, honto)\n            if singi[hito] == -1:\n                singi[hito] = int(honto)\n            else:\n                if singi[hito] == honto:\n                    continue\n                else:\n                    flag = False\n    if flag is True:\n        ans = max(ans, singi.count(1))\nprint(ans)\n\n\n        \n\n\n\n    \n","N = int(input())\nXY = [[] for _ in range(N)]\nfor i in range(N):\n    c = int(input())\n    XY[i] = [[int(j) for j in input().split()] for _ in range(c)]\n\n\"\"\"\n\u30fbN < 15\n\u30fbO(N * 2^N)\n\"\"\"\n\n\ndef popcnt(n):\n    return bin(n).count('1')\n\n\ndef func(bits):\n    for i in range(N):\n        if (bits >> i) & 1 == 0:\n            continue\n        for x, y in XY[i]:\n            x -= 1  # 0-indexed\n            if (bits >> x) & 1 != y:\n                return False\n    return True\n\n\nans = 0\nfor mask in range(1 << N):\n    if func(mask):\n        tmp = popcnt(mask)\n        ans = max(ans, tmp)\nprint(ans)\n","N = int(input())\nlista = []\nfor n in range(N):\n    listan = []\n    an = int(input())\n    for n in range(an):\n        listxy = tuple(map(int, input().split()))\n        listan.append(listxy)\n        listset = tuple(listan)\n    lista.append(listset)    \ntuplea = tuple(lista)    \n#print(lista)\nansfin = 0\nfor n in range(2**N):\n    bin2 = list(bin(n))[2:]\n    bin2.reverse()\n    #print(bin2)\n    l = len(bin2)\n    rightwrong = set()\n    #print(l)\n    setright = set()\n    for n in range(N):\n        if n<l:\n            #print(bin2[n])\n            if bin2[n] == str(1):\n                rightwrong.add((n+1, 1))\n                lo = len(tuplea[n])\n                for m in range(lo):\n                    setright.add(tuplea[n][m])\n            else:\n                rightwrong.add((n+1, 0))\n        else:\n            rightwrong.add((n+1, 0))  \n    #print('a')                     \n    #print(setright)\n    #print(rightwrong)\n    if setright.issubset(rightwrong):\n        ans = bin2.count(str(1))\n        if ansfin>=ans:\n            pass\n        else:\n            ansfin = ans\n    #print(ans)    \nprint(ansfin)    \n","#147C\nn=int(input())\na_li=[]\nxy_li=[]\nfor i in range(n):\n  a_li.append(int(input()))\n  xy_li_i=[list(map(int,input().split())) for j in range(a_li[i])]\n  xy_li.append(xy_li_i)\n  \nproof=[]  \nfor i in range(2**n):\n  li=[0]*n\n  for j in range(n):\n    if (i>>j)&1==1:\n      li[j]=1\n  proof.append(li)\n\nans=0  \nfor i in proof:\n  flag=True\n  for j in range(n):\n    if i[j]==1:\n      for k in range(a_li[j]):\n        x=xy_li[j][k][0]\n        y=xy_li[j][k][1]\n        if i[x-1]!=y:\n          flag=False\n          break\n  if flag:\n    count=(sum(i))\n    if ans<=count:\n      ans=count\n    \nprint(ans)","import itertools\nimport numpy as np\n\nN = int(input())\nstl = []\nfor i in range(N):\n    a = int(input())\n    for _ in range(a):\n        x, y = map(int, input().split())\n        stl.append((i, x-1, y))\ndl = np.array(list(itertools.product([0, 1], repeat=N)), np.bool)\nfor i, x, y in stl:\n    bl = (dl[:, i] == False) | (dl[:, x] == bool(y))\n    dl = dl[bl]\nres = dl.sum(axis=1).max()\nprint(res)\n","N = int(input())\ntesti = {}\nfor i in range(N):\n    T = []\n    for a in range(int(input())):\n        T.append(list(map(int, input().split())))\n    testi[i+1] = T\n\nans = 0\nfor i in range(2**N):\n    hypo = list(bin(i)[2:].zfill(N))\n    num = hypo.count(\"1\")\n    for j, h in enumerate(hypo):\n        if h == \"1\":\n            for t in testi[j+1]:\n                if hypo[t[0]-1] != str(t[1]):\n                    break\n            else:\n                continue\n            break\n    else:\n        if num > ans:\n            ans = num\n\nprint(ans)","N = int(input())\ntes = [[] for _ in range(N+1)]\nans = 0\n\nfor i in range(1, N+1):\n    for _ in range(int(input())):\n        x, y = map(int, input().split())\n        tes[x].append([i, y])\n\nfor x in range(1, 2**N):\n    HorU = [0] + [(x >> n) & 1 for n in range(N)]\n    cand = True\n    for i in range(1, N+1):\n        for j, y in tes[i]:\n            if HorU[j] == 1 and y != HorU[i]:\n                cand = False\n    if cand:\n        temp = (N+1) - sorted(HorU).index(1)\n        if ans < temp:\n            ans = temp\nprint(ans)","g = [[-1 for i in range(15)] for j in range(15)]\n# 15\u00d715\u306e\u884c\u5217g\u3092-1\u3067\u57cb\u3081\u3066\u304a\u304f\n\nn=int(input()) #\u53c2\u52a0\u4eba\u6570\nfor i in range(n):\n  m = int(input())\n  for j in range(m):\n    x, y= map(int, input().split())\n    g[i][x-1] = y\n#\u4eba\u306e\u756a\u53f7A\u306f1\u304b\u3089\u59cb\u307e\u308b\u306e\u3067x\u306e\u756a\u53f7\u30821\u3064\u524d\u5012\u3057\n# y==1\u306a\u3089\u6b63\u76f4, Y==0\u306a\u3089\u4e0d\u89aa\u5207\nans=0\n\nfor i in range (1<<n): #range(2**n)\u3067\u3082\u540c\u3058\u306f\u305a\n  honests = [0 for _ in range(n)] #\u6b63\u76f4\u8005\u306e\u756a\u53f7\u683c\u7d0d\u7528\u30010\u306e\u5217\n  for j in range(n):\n    if (i >> j) & 1:\n      honests[j] = 1 \n#\u6b63\u76f4\u3082\u306e\u304c1,3,5,6\u306a\u3089honests = [1,0,1,0,1,1,\u30fb\u30fb\u30fb]\u3068\u306a\u308b\n#\u3053\u308c\u3092\u5168bit\u3067\u4f5c\u6210\u3057\u305f\u3082\u306e\u304chonests[\u65bd\u884c\u756a\u53f7][\u30b9\u30a4\u30c3\u30c1\u884c\u5217]\n  hantei = True\n  for j in range(n):\n    if honests[j]==1: \n      #j\u756a\u76ee\u306e\u4eba\u306e\u8a3c\u8a00\u304c\u6b63\u3057\u3044\u3068\u3057\u305f\u3068\u304d\u306e\u5206\u5c90\n      for k in range(n):\n        if g[j][k] == -1: \n          continue #\u8a3c\u8a00\u306a\u3057\n        if g[j][k] != honests[k]:\n          #g[j][k]\u306fj\u756a\u76ee\u306e\u4eba\u304c\u8a71\u3057\u305fk\u756a\u76ee\u306e\u4eba\u306b\u5bfe\u3059\u308b\u8a3c\u8a00\n          #\u3053\u308c\u304c\u7570\u306a\u3063\u3066\u3044\u308b\u3068\u77db\u76fe\u304c\u751f\u3058\u3066\u3044\u308b\n          hantei = False\n  if hantei == True:\n    ans = max(ans, honests.count(1))\n                     \nprint(ans)","import math\nimport collections\nimport itertools\nimport sys\nimport bisect\nfrom heapq import heappop,heappush,heapify\nsys.setrecursionlimit(10**6)\ndef MAP(): return list(map(int,input().split()))\ndef INT(): return int(input())\ndef FLOAT(): return float(input())\nMOD = 10**9+7\n\nn = INT()\nll = [[] for _ in range(n)]\nl = [0]*n\n\nfor i in range(n):\n    tmp = INT()\n    for j in range(tmp):\n        x,y = MAP()\n        ll[i].append([x-1,y])\n\nans = 0\nfor bit in range(2**n):\n    ok = True\n    is_honest = [(bit>>i) & 1 for i in range(n)]\n    #print(is_honest)\n    for i in range(n):\n        if not is_honest[i]:\n            continue\n        for x,y in ll[i]:\n            if is_honest[x]!=y:\n                ok=False\n    if ok:\n        ans = max(ans,sum(is_honest))\nprint(ans)","N = int(input())\n \ntestimony = [[] for _ in range(N)]\n \nfor i in range(N):\n    num = int(input())\n    for j in range(num):\n        person, state = map(int, input().split())\n        testimony[i].append([person-1, state])\n \nhonest = 0\nfor i in range(1, 2**N):\n    flag = 0\n    for j in range(N):\n        if (i>>j)&1 == 1: \n            for x,y in testimony[j]:\n                if (i>>x)&1 != y: \n                    flag = 1\n                    print(flag)\n                    break\n    if flag == 0: \n        honest = max(honest, bin(i)[2:].count('1')) \nprint(honest)","n = int(input())\nxys = [[] for _ in range(n)]\nfor i in range(n):\n    a = int(input())\n    xys[i] = [list(map(int, input().split())) for _ in range(a)]\n\nmax_honest = 0\nfor i in range(2 ** n):\n    bin_i = format(i, '015b')[::-1]\n    ok = True\n\n    for j in range(n):\n        for x, y in xys[j]:\n            if bin_i[j] == \"1\" and y != int(bin_i[x - 1]):\n                ok = False\n                break\n        else:\n            continue\n        break\n\n    if ok:\n        honest = sum(int(x) for x in bin_i)\n        max_honest = max(max_honest, honest)\n\nprint(max_honest)\n\n","def p_c():\n    from itertools import combinations\n    n = int(input())\n    d = [[set() for _ in range(2)] for _ in range(n)]\n    for i in range(n):\n        a = int(input())\n        for _ in range(a):\n            x, y = map(int, input().split())\n            d[i][y].add(x-1)\n    ans = []\n    for i in reversed(range(1, n + 1)):\n        for cmb in combinations(range(n), i):\n            true_set = set()\n            false_set = set()\n            for j in range(n):\n                if j in cmb:\n                    true_set = true_set | d[j][1]\n                    false_set = false_set | d[j][0]\n                else:\n                    false_set.add(j)\n            if not true_set & false_set:\n                ans.append(n - len(false_set))\n    if ans:\n        print(max(ans))\n    else:\n        print(0)\n        \np_c()","# 2**15=32000\u3061\u3087\u3044\u306a\u306e\u3067\u3042\u3089\u304b\u3058\u3081\u8ab0\u304c\u6b63\u76f4\u8005\u3067\u8ab0\u304c\u305d\u3046\u3067\u306a\u3044\u304b\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u3001\u305d\u308c\u3092\u3082\u3068\u306b\u3057\u3066\u63a2\u7d22\u3002\n# \u77db\u76fe\u304c\u306a\u3044\u3053\u3068\u3092\u63a2\u7d22\u3057\u3066\u3044\u304f\u3088\u3046\u306a\u5224\u5b9a\u3068\u30c7\u30fc\u30bf\u69cb\u9020\u304c\u6d6e\u304b\u3070\u3093\n# \u6b63\u76f4\u8005\u3068\u3001\u771f\u507d\u4e0d\u660e\u306e\u4eba\u3001\u3068\u3044\u3046\u306e\u304c\u5473\u564c \u5618\u3064\u304d\u3067\u306f\u306a\u3044\n# bit\u64cd\u4f5c\u304c\u308f\u304b\u3089\u3093\u306e\u3067\u914d\u5217\u3067\u3084\u3063\u305f\n# \u307e\u3058\u3067\u5224\u5b9a\u3068\u30c7\u30fc\u30bf\u69cb\u9020\u3069\u3046\u3059\u3063\u304b\u308f\u304b\u3089\u3093\n\nn = int(input())\nsyougen = [[] for _ in range(n)]\nfor i in range(n):\n    a = int(input())\n    for _ in range(a):\n        x, y = map(int, input().split())\n        syougen[i].append((x - 1, y))\n\n\ndef f(n, cur=[]):\n    # 1\u30680\u304b\u3089\u306a\u308b\u9577\u3055N\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u51682**n\u500b\u51fa\u3059\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\n    if len(cur) == n:\n        yield cur\n    else:\n        for i in range(2):\n            _next = cur[:]\n            _next.append(i)\n            yield from f(n, _next)\n\n\ndef check(arr):\n    for i in range(n):\n        if arr[i] == 0:\n            continue\n        for x, y in syougen[i]:\n            if arr[x] == 1 and y == 0:\n                return False\n            if arr[x] == 0 and y == 1:\n                return False\n    return True\n\n\nans = 0\nfor g in f(n):\n    if check(g):\n        ans = max(ans, sum(g))\nprint(ans)\n","from itertools import product\nN=int(input())\nXYs = []\nfor i in range(N):\n    A = int(input())\n    XYs.append([tuple(map(int, input().split())) for _ in range(A)])\n\nn=0\nfor ts in product(*[[1, 0] for _ in range(N)]):\n    for i, t in enumerate(ts):\n        if t:\n            if not all(ts[x-1] == y for x, y in XYs[i]):\n                break\n    else:\n        n=max(n,sum(ts))\nprint(n)\n","#!\/usr\/bin\/env python3\nfrom itertools import*\nn = int(input())\nc = 0\ntry:z = [eval(\"[i] + list(map(int, input().split())),\"*int(input())) for i in range(n)]\nexcept SyntaxError:print(0);exit()\nfor j in product([0,1], repeat=n):\n    if all(j[i] == 0 or j[x-1] - y == 0 for i, x, y in chain.from_iterable(z)):\n        c = max(c, sum(j))\nprint(c)","def main():\n    # \u5165\u529b\n    n = int(input())\n\n    boolls = [[]]\n    for i in range(n):\n        tmpls = []\n        for x in boolls:\n            y = x.copy()\n            x.append(True)\n            y.append(False)\n            tmpls.append(x)\n            tmpls.append(y)\n        boolls = tmpls\n\n    boolls.sort(key=lambda _: _.count(True), reverse=True)\n\n    xyls = []\n    for i in range(n):\n        ai = int(input())\n        tuples = []\n        for j in range(ai):\n            x, y = map(int, input().split())\n            tuples.append((x, y == 1))\n        xyls.append(tuples)\n\n    tmpTrueCnt = n\n    max_cnt = 0\n    for boolx in boolls:\n        truecnt = boolx.count(True)\n        if truecnt == 0:\n            break\n        if max_cnt > truecnt:\n            break\n\n        if tmpTrueCnt > truecnt:\n            tmpTrueCnt = truecnt\n\n        ok = True\n        for i in range(len(boolx)):\n            tf = boolx[i]\n            if tf:\n                zz = xyls[i]\n            else:\n                zz = [(x[0], not x[1]) for x in xyls[i]]\n\n            for message in zz:\n                if boolx[message[0] - 1] != message[1]:\n                    ok = False\n                    break\n            if not ok:\n                break\n\n        if ok:\n            max_cnt = tmpTrueCnt\n            break\n\n    print(max_cnt)\n\n\nmain()\n","n = int(input())\npeople = [[] for i in range(n)]\nfor i in range(n):\n  a = int(input())\n  for j in range(a):\n    say = tuple(map(int,input().split()))\n    people[i].append(say)\n\nans = 0\nfor i in range(2**n):\n  TF = [ 1 & i >> j for j in range(n)]\n  bool = True\n  for j in range(n):\n    if TF[j] == 1:\n      for says in people[j]:\n        if TF[says[0]-1] == says[1]:\n          pass\n        else:\n          bool = False\n          break\n    else:\n      pass\n\n  if bool:\n    ans = max(ans,TF.count(1))\n\nprint(ans)\n    ","n = int(input())\n\na_list = []\nperson_list = []\nsyogen_list = []\nans = 0\n\nfor i in range(0, n):\n    w = []\n    v = []\n    a = int(input())\n    for j in range(0, a):\n        x,y = map(int,input().split())\n        w.append(x)\n        v.append(y)\n    person_list.append(w)\n    syogen_list.append(v)\n#print(person_list)\n#print(syogen_list)\n\nfor bit in range(1 << n):\n    break_flag = 0\n    bit_1_cnt = 0\n    for i in range(n):\n        if break_flag:\n            break\n        if (bit >> i) & 1: #\u4ebai\u304c\u6b63\u76f4\n            for j in range(len(syogen_list[i])):\n                if syogen_list[i][j] != ((bit>>(person_list[i][j]-1))&1): #\u77db\u76fe\u3000\uff1a\u3000\u6b63\u76f4\u3068\u3057\u3066\u3044\u308b\u306e\u306b\u8a3c\u8a00\u304c\u98df\u3044\u9055\u3048\u3070break\n                    break_flag = 1\n                    break\n            bit_1_cnt += 1\n        if break_flag==0 and i==n-1:\n            ans = max(ans, bit_1_cnt)\nprint(ans)\n","n = int(input())\ncomments = []\nfor _ in range(n):\n    a_i = int(input())\n    comments_a_i = []\n    for _ in range(a_i):\n        x, y = map(int, input().split())\n        comments_a_i.append([x - 1, y])\n    comments.append(comments_a_i)\n\nOK = 1\nNG = 0\nUNKNOWN = -1\nvalidation = [[UNKNOWN for _ in range(n)] for _ in range(n)]\nfor i, comments_a_i in enumerate(comments):\n    for comment in comments_a_i:\n        ret = UNKNOWN\n        if 1 == comment[1]:\n            ret = OK\n        elif 0 == comment[1]:\n            ret = NG\n        validation[i][comment[0]] = ret\n\nunknowns = []\nfor i in range(n):\n    is_unknown = True\n    for j in range(n):\n        if OK == validation[j][i] or NG == validation[j][i]:\n            is_unknown = False\n            break\n    if is_unknown:\n        unknowns.append(i)\n\nfor unknown in unknowns:\n    for j in range(n):\n        validation[unknown][j] = UNKNOWN\n\ncount = 0\nfor i in range(n):\n    for j in range(n):\n        if OK == validation[i][j] and OK == validation[j][i]:\n            count += 2\n        elif NG == validation[i][j] and NG == validation[j][i]:\n            count += 1\nprint(count \/\/ 2)\n","n = int(input())\nlis=[]\nfor _ in range(n):\n    m = int(input())\n    l = []\n    for i in range(m):\n        tmp = list(map(int,input().split()))\n        l.append(tmp)\n    lis.append(l)\n\nans_l=[]\nfor i in range(2 ** n):\n    people=[]\n    for j in range(n):\n        if (i >> j) & 1:\n            people.append(1)\n        else:\n            people.append(0)\n\n    fail=False\n    for num in range(len(people)):\n        if people[num] == 1: # check testimony\n            testi=lis[num]\n            for t in testi:\n                if people[t[0]-1] != t[1]: # contradict\n                    fail=True\n    if not fail:\n        ans_l.append(sum(people))\nprint(max(ans_l))","N = int(input())\nans = []\nA = [0 for i in range(N)]\nAxy = [0 for i in range(N)]\nfor i in range(N):\n    A[i] = int(input())\n    Axy[i] = [[int(i) for i in input().split()] for j in range(A[i])]\n\nfor i in range(1<<N):#2^N\u901a\u308a\u3084\u308b\n    Truth = []\n    maru = 0\n    for j in range(N):\n        Truth.append(((i>>j)&1)==1)\n        maru += ((i>>j)&1)#\u3007\u306e\u6570\n    syogen = [0 for i in range(N)]\n    for k in range(N):\n        if Truth[k]:\n            syogen[k] = 1\n    isMujun = True\n    for k in range(N):\n        if Truth[k] and isMujun:\n            for x,y in Axy[k]:\n                if syogen[x-1]==y:\n                    pass\n                else:#\u77db\u76fe\u767a\u751f\n                    ans.append(0)\n                    isMujun = False\n                    break\n    if isMujun:\n        ans.append(maru)\nprint(max(ans))","from itertools import product\n\n\ndef check(N, p, X):\n    for i in range(N):\n        if p[i] == 0:\n            continue\n        for j in range(N):\n            if X[i][j] is not None and X[i][j] != p[j]:\n                return False\n    return True\n\n\ndef main():\n    N = int(input())\n    X = [[None] * N for _ in range(N)]\n    for i in range(N):\n        A = int(input())\n        for j in range(A):\n            x, y = map(int, input().split())\n            X[i][x-1] = y\n    ans = 0\n    for p in product([0, 1], repeat=N):\n        if check(N, p, X):\n            ans = max(ans, sum(p))\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n","N = int(input())\ntf_dict = {}\nfor i, n in enumerate(range(N)):\n    A = int(input())\n    tmp_dict = {}\n    for a in range(A):\n        xy = input().split()\n        tmp_dict[int(xy[0])] = int(xy[1])\n    tf_dict[i+1] = tmp_dict\n\nTrue_set = set()\nFalse_set = set()\nfor key in tf_dict.keys():\n    for item in tf_dict[key].items():\n        if item[1] == 1:\n            if (item[0] not in True_set) & (item[0] not in False_set):\n                True_set.add(item[0])\n                True_set.add(key)\n            elif (item[0] in True_set):\n                True_set.add(key)\n            elif (item[0] in False_set):\n                False_set.add(key)\n        if item[1] == 0:\n            if (item[0] not in True_set) & (item[0] not in False_set):\n                False_set.add(item[0])\n                True_set.add(key)\n            elif (item[0] in True_set):\n                False_set.add(key)\n            elif (item[0] in False_set):\n                True_set.add(key)\n                \nif len(False_set & True_set) != 0:\n    print(\"0\")\nelse:\n    print(len(True_set))","n = int(input())\ncount = 0\nfor i in range(n):\n    a = int(input())\n    good_man = True\n    for j in range(a):\n        xy = list(map(int, input().split()))\n        if xy[1] == 0:\n            good_man = False\n    if good_man:\n        count += 1\nprint(count)\n","n = int(input())\n\nlist_a = []\ntestimonies = []\nanswer = 0\nflag = True\n\nfor i in range(n):\n\ttestimony = []\n\ta = int(input())\n\tlist_a.append(a)\n\tfor j in range(a):\n\t\ttestimony.append(list(map(int,input().split())))\n\ttestimonies.append(testimony)\n\nfor i in range(1 << n): # \u90e8\u5206\u548c\u306e\u8a08\u7b97\u3000i=2\u306f\"0b10\" \n\tresult = 0\n\tfor j in range(n): # \u5404\u6841\u3092\u78ba\u8a8d j\u306f\u6841\u6570\u3092\u8868\u3059\n\t\tif i & (1 << (j)): #true\u3060\u3063\u305f\u5834\u5408\u306fj\u6841\u76ee\u306f1\u3067\u3042\u308b(\u5f8c\u308d\u304b\u3089j\u756a\u76ee\u306f\u6b63\u76f4\u8005)\n\t\t\tfor k in range(list_a[-j]):\n\t\t\t\tif i & testimonies[-j][k][1] << (testimonies[-j][k][0]-1):\n\t\t\t\t\tflag = False\n\t\t\t\t\tbreak\n\t\t\tif flag == True:\n\t\t\t\tresult += 1\n\t\t\telse:\n\t\t\t\tflag = True\n\tif answer < result:\n\t\tanswer = result\n\nprint(answer)","#\u3086\u3046\u305f\u306e\u3084\u308a\u65b9\n\nn=int(input())\nxy=[[] for i in range(n)]\n\nfor i in range(n):\n    a=int(input())\n    for j in range(a):\n        xy[i].append(list(map(int, input().split())))\n#print(xy)\nbit=[]#1\u304c\u6b63\u76f40\u304c\u5618\nans=0\ndef bit_search(bit):\n    global ans\n    if len(bit)==n:#2**n\u6587\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u8abf\u3079\u308b\u52a0\u572710\u3092\u4ea4\u4e92\u306b\u5165\u308c\u308b\u305f\u3081\u306eif\n        for i in range(n):\n            jugh=bit[i]\n            if jugh==1:\n                for j in xy[i]:\n                    x,y=j\n                    if bit[x-1]==0:\n                        if y==1:\n                            return \n                    else:\n                        if y==0:\n                            return \n        ans=max(ans,sum(bit))\n    else:\n       #\u518d\u8d77\u5316\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u6700\u521d\u306bbit\u306e\u914d\u5217\u3092\u4f5c\u308b\u5fc5\u8981\u6027\u3092\u306a\u304f\u3057\u305f\n        bit_search(bit+[0])\n        bit_search(bit+[1])\nbit_search(bit)\nprint(ans)","import copy\n\nfrom sys import stdin\nimport itertools\nn = int(stdin.readline().rstrip())\nitems = []\nfor i in range(n):\n    a = int(stdin.readline().rstrip())\n    tmp = []\n    for i in range(a):\n        (x, y) = list(map(int, stdin.readline().rstrip().split(' ')))\n        tmp.append((x, y))\n    items.append(tmp)\nprint(items)\nmax_cnt = 0\n\ndef helper(mapping, index):\n    item = items[index][0]\n    if index in mapping.keys():\n        if mapping[index] != item[0]: # index\u306b\u3088\u3063\u3066\u5909\u5316\n            return -1\n    mapping[item[0]-1] = item[1]\n\nfor item in items:\n    mapping = {}\n    for i in item:\n        mapping[i[0]-1] = i[1]\n    tmp = copy.copy(mapping)\n    for key, value in tmp.items():\n        if value == 1:\n            res = helper(mapping, key)\n            if res == -1:\n                mapping = {}\n                break\n    max_cnt = max(len([item for item in list(mapping.values()) if item == 1]), max_cnt)\n\nprint(max_cnt)\n","N = int(input())\n\nA_list = []\nfor i in range(N):\n    A = int(input())\n    A_list.append([list(map(int, input().split())) for _ in range(A)])\n\n\ndef judge(mask):\n    for i in range(N):\n        if (mask>>i & 1)==0:\n            continue\n        for xy in A_list[i]:\n            x = xy[0]-1\n            y = xy[1]\n            if y==0 and (mask>>x & 1):\n                return False\n            if y==1 and (mask>>x & 1)==0:\n                return False\n    return True\n\n\nnum_max = 0\nfor mask in range(1<<N):\n    if judge(mask):\n        num = 0\n        for i in range(N):\n            num += mask>>i & 1\n        num_max = max(num, num_max)\n\nprint(num_max)","n = int(input())\ntests = []\nfor i in range(n):\n    a = int(input())\n    xys = [ list(map(int, input().split())) for j in range(a) ]\n    tests.append(xys)\n\npatterns = []\ndef dfs(N, li):\n    if len(li) == N:\n        patterns.append(li)\n        return\n    for i in range(2):\n        new = li[::]\n        new.append(i)\n        dfs(N, new)\ndfs(n, [])\nans = 0\nfor pattern in patterns:\n    contradict = False\n    for i in range(len(pattern)):\n        if pattern[i] == 0:\n            continue\n        test = tests[i]\n        for xy in test:\n            x = xy[0]-1\n            y = xy[1]\n            if pattern[x] != y:\n                contradict = True\n                break\n        if contradict:\n            break\n    if contradict:\n        continue\n    ans = max(ans, sum(pattern))\nprint(ans)","N = int(input())\nA = []\nfor i in range(N):\n    A.append([list(map(int, input().split())) for _ in range(int(input()))])\n\n# \u5f15\u6570\u306fN\u304c\u6b63\u76f4\u8005\u304b\u5618\u3064\u304d\u304b\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u8868\u3059\u30ea\u30b9\u30c8\n# \u623b\u308a\u5024\u306f\u77db\u76fe\u304c\u3042\u308b\u304b\u3001\u306a\u3044\u304b\ndef check(arr):\n    for idx, a in enumerate(A):\n        # \u5618\u3064\u304d\u3060\u3068\u5224\u65ad\u3055\u308c\u3066\u3044\u308b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u306e\u4eba\u7269\u306f\u7121\u8996\n        if arr[idx] == 0:\n            continue\n        # \u4e00\u3064\u4e00\u3064\u306e\u8a3c\u8a00\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n        for x, y in a:\n            if arr[x-1] != y:\n                return False\n    return True\n\nall_comb = []\nfor i in range(2**N):\n    comb = []\n    for j in range(N):\n        if (i >> j) & 1:\n            comb.append(1)\n        else:\n            comb.append(0)\n    all_comb.append(comb)\nret = 0\nfor comb in all_comb:\n    if check(comb):\n        ret = max(ret, sum(comb))\n\nprint(ret)\n","N=int(input())\n\nstatements=[]\nhonests=[0]\nfor i in range(N):\n  statement=[]\n  A=int(input())\n  for j in range(A):\n    x,y=map(int,input().split(' '))\n    statement.append([x-1,y]) \n  statements.append(statement)\n\n#print(statements)\nans=0\n\nfor honest in range(1<<N):\n  flag=True\n  for j in range(N):\n    statement=statements[j]\n    for x,y in statement:\n      if (honest&(1<<j))>>j ==1:\n        flag*=((honest&(1<<x))>>x ==y)\n\n\n    #print(flag)\n  if flag==True:\n    honests.append(honest)\n\nn_honests=[]\nfor honest in honests:\n  n_honest=0\n  for i in range(N):\n    n_honest+=(honest&(1<<i))>>i\n  n_honests.append(n_honest)\n\nprint(max(n_honests))\n","#!\/usr\/bin\/env python3\n# -*- coding: utf-8 -*-\n\n\ndef main():\n    N = int(input())\n    g = [[-1]*N for _ in range(N)]\n\n    for i in range(N):\n        A = int(input())\n        \n        for a in range(A):\n            x, y = map(int, input().split())\n            g[i][x-1] = y\n    \n    ans = 0\n    for i in range(2**N):\n        d = [0]*N\n        for j in range(N):\n            if i>>j & 1:\n                d[j] = 1\n        ok = True\n        for j in range(N):\n            if d[j] == 1:\n                for k in range(N):\n                    if g[j][k] == -1:\n                       continue \n                    if g[j][k] != d[k]:\n                        ok = False\n        if ok:\n            ans = max(ans, bin(i).count('1'))\n    \n    print(ans)\n\n\n\nif __name__ == '__main__':\n    main()","n = int(input())\npeople = {i:{} for i in range(1,n+1)}\nfor i in range(1,n+1):\n    a = int(input())\n    for j in range(a):\n        x,y = map(int,input().split())\n        people[i][x] = y\n\nans = 0\nfor i in range(2 << (n-1)):\n    bn = str(bin(i))[2:].zfill(n)\n    cnt = 0\n    for j in range(n):\n        for x,y in people[j+1].items():\n            if bn[x-1] != str(y):\n                break\n            if y == 0:\n                continue\n            for xx,yy in people[x].items():\n                if bn[xx-1] != str(yy):\n                    break\n            else:\n                continue\n            break\n        else :\n            cnt += 1\n    cnt = min(cnt, bn.count('1'))\n    if cnt > ans:\n        ans = cnt\n\nprint(ans)\n","#!\/usr\/bin\/env python3\n\nN = int(input())\ntestimony = [[None for _ in range(N)] for _ in range(N)]\nperson = [None] * N\n\nfor i in range(N):\n    person[i] = int(input())\n    for _ in range(person[i]):\n        j, good_or_bad = map(int, input().split())\n        j -= 1\n        testimony[i][j] = good_or_bad\n\n#\u3053\u3053\u307e\u3067\u304c\u5165\u529b\n\nans = 0\n\nfor i in range(1, 1<<N):\n    which_person = [None] * N\n    for j in range(N):\n        which_person[j] = i>>j & 1\n        #print(which_person[j])\n    ok = True\n    for j in range(N):\n        if which_person[j]:\n            for k in range(N):\n                if testimony[j][k] == None:\n                    continue\n                if testimony[j][k] != which_person[k]:\n                    ok = False\n    if ok:\n        ans = max(ans, which_person.count(1))\nprint(ans)","n = int(input()) # N\n\nnegs = [0 for _i in range(n)]\nfor i in range(n):\n    m = int(input())\n    for j in range(m):\n        pos, neg = tuple(map(int, input().split()))\n        negs[pos - 1] += neg - 1\n\nprint(sum([1 if x == 0 else 0 for x in negs]) if n > 2 else 1)\n","n = int(input())\nans = 0\nal = []\nxy = [[] for _ in range(n)]\nfor k in range(n):\n    a = int(input())\n    al.append(a)\n    for l in range(a):\n        x,y = map(int,input().split())\n        xy[k].append([x,y])\nfor i in range(2**n):\n    kinds = [0]*n\n    jud = 1\n    for j in range(n):\n        if (i >> j) & 1:\n            kinds[j] = 1\n    for k in range(n):\n        if kinds[k] == 1:\n            a = al[k]\n            for l in range(a):\n                x = xy[k][l][0]\n                y = xy[k][l][1]\n                if kinds[x-1] != y:\n                    jud = 0\n    if jud == 1:\n        ans = max(ans,kinds.count(1))\nprint(ans)\n","N = int(input())\nL = [ [] for _ in range(N)]\nfor i in range(N):\n    num = int(input())\n    for j in range(num):\n        person, state = map(int,input().split())\n        L[i].append([person - 1, state])\n\n# \u6b63\u76f4\u8005\u306e\u6700\u5927\u6570\u306e\u521d\u671f\u5316\nhonest = 0\n\nfor i in range(1,2**N):\n    flag = True\n    for j in range(N):\n        if (i>>j)&1 == 1: # j\u756a\u76ee\u304c\u6b63\u76f4\u8005\u3068\u4eee\u5b9a\u3057\u305f\u3068\u304d\n            for x, y in L[j]:\n                if (i>>x)&1 != y: # \u77db\u76fe\u3092\u767a\u898b(\u6b63\u76f4\u8005\u306ej\u3068\u3044\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u9055\u3046)\n                    flag = False\n                    break # \u77db\u76fe\u3092\u898b\u3064\u3051\u305f\u306e\u3067\u3001\u305d\u308c\u4ee5\u964d\u306ej\u306e\u8a3c\u8a00\u306f\u7121\u8996\n            if not flag:\n                break\n    if flag:\n        honest = max(honest, bin(i).count(\"1\"))\n\nprint(honest)","import itertools\n\nn = int(input())\nxy = []\nxyz =[]\na_list = []\nans = ['None']*n\ncount_list = []\ncount = 0\nfor _ in range(n):\n    a = int(input())\n    a_list.append(a)\n    for i in range(a):\n        x,y = map(lambda x: int(x),input().split())\n        xy.append([x,y])\n    xyz.append(xy)\n    xy = []\nxyz_all = list(itertools.permutations(xyz))\n\nfor i in range(len(list(itertools.permutations(xyz)))):\n    for j in range(n):\n        for k in range(a_list[j]) :\n            hoge = xyz_all[i][j][k][:]\n            if ans[hoge[0]-1] == 'None':\n                ans[hoge[0]-1] = hoge[1]\n            elif ans[hoge[0]-1] != hoge[1]:\n                count+= 1\n    count_list.append(count)\n\n\n\nif ans == [0]*n :\n    print(1)\nelse:\n    print(n - min(count_list))\n","output = 0\n\nN = int(input())\n\nstatement_all = []\nfor _ in range(N):\n    M = int(input())\n    statement = []\n    for _ in range(M):\n        temp = list(map(int,input().split()))\n        statement.append(temp)\n    statement_all.append(statement)\n\n\ndef check(a,b):\n    if hypo[a - 1] == b:\n        return True\n    else:\n        return False\n\n\npattern = 2 ** N\n\nfor p in range(pattern):\n    hypo = [0,0,0]\n    \n    for k in range(N):\n        if bin(p>>k & 1) == '0b1':\n            hypo[k] = 1    \n        if bin(p>>k & 1) == '0b0':\n            hypo[k] = 0\n    \n    result = 0        \n    for j in range(N):\n        if hypo[j] == 1:\n            for i in range(len(statement_all[j])):\n                if not check(statement_all[j][i][0],statement_all[j][i][1]):\n                    result += 1\n\n    if result == 0:\n        output = max(output,sum(hypo))\n\nprint(output)","import numpy as np\nimport itertools\n\nn = int(input())\n\np = []\n\nfor i in range(n):\n    a = int(input())\n    for _ in range(a):\n        x, y = map(int, input().split())\n        p.append([i, x - 1, y])\n\n# print(p)\n\na = np.array(list(itertools.product([0, 1], repeat=n)), dtype=\"bool\")\n\n# print(a)\n\nfor i, x, y in p:\n    cond = (~a[:, i]) | (a[:, x] == bool(y))\n    a = a[cond]\n# print(a)\n\nans = a.sum(axis=1).max()\nprint(ans)\n","N = int(input())\nA = [[-1 for i in range(N)] for i in range(N)]\nfor i in range(N):\n    m = int(input())\n    for j in range(m):\n        x,y = map(int,input().split())\n        A[i][x-1] = y\n#print(A)\nans = 0\nfor i in range(1<<N):\n    honets = [0 for i in range(N)]\n    for j in range(N):\n        if (i>>j) & 1:\n            honets[j] = 1\n    ok = True\n    for j in range(N):\n        if honets[j] == 1:\n            for k in range(N):\n                if A[j][k] == -1: continue\n                if A[j][k] != honets[k]: ok = False\n    if ok:\n        ans = max(ans, honets.count(1))\nprint(ans)\n","n = int(input())\ntest = []\ncount = 0\nfor i in range(0, n):\n    num_test = int(input())\n    for j in range(0, num_test):\n        answer = input().split()\n        a = answer[1]\n        if a == '1':\n            count += 1\n        else:\n            continue\nprint(count)","n=int(input())\n\nxy_list=[]\na_list=[]\nfor i in range(n):\n    a=int(input())\n    a_list.append(a)\n    xy=[]\n    for j in range(a):\n        xy.append(input().split(\" \"))\n\n    xy_list.append(xy)\n\nmaxn=0\nb=[0]*n\nfor i in range(2**n):\n    b=str(format(i,'b').zfill(n))\n    out=0\n    for j in range(n):\n        if b[j]==\"0\":continue\n        for k in range(a_list[j]):\n            x=int(xy_list[j][k][0])\n            y=str(xy_list[j][k][1])\n\n            if b[x-1]!=y:\n                out=1\n                break\n        \n        if out==1:\n            break\n    \n    if out == 0:\n        maxn=max(maxn,b.count(\"1\"))\n\nprint(maxn)","N = int(input())\nA = [0]*N\nx = [0]*N\ny = [0]*N\nfor _ in range(N):\n    a = int(input())\n    A[_] = a\n    x[_] = [0]*a\n    y[_] = [0]*a\n    for __ in range(a):\n        x[_][__],y[_][__] = map(int,input().split())\n        x[_][__] -= 1\n\ndef bi(x):\n    i = 0\n    o = [0]*N\n    while x > 0:\n        o[i] = x % 2\n        x \/\/= 2\n        i += 1\n    return o\n\ndef b(o):\n    for i in range(N):\n        # \u4e0d\u89aa\u5207\u306a\u4eba\u9593\u306e\u8a3c\u8a00\u306f\u771f\u507d\u4e0d\u660e\u306a\u306e\u3067\u7121\u8996\u3059\u308b\n        if o[i] == 0:\n            continue\n        # \u6b63\u76f4\u8005\u306e\u8a3c\u8a00\u306f\u77db\u76fe\u304c\u306a\u3051\u308c\u3070\u78ba\u5b9f\u306b\u6b63\u3057\u3044\n        for j in range(A[i]):\n            k = x[i][j]\n            if o[k] != y[i][j]:\n                return -1\n    return sum(o)\n\na = 0\nfor i in range(2 ** N):\n    # 2**N\u901a\u308a\u306e\u305d\u308c\u305e\u308c\u306b\u3064\u3044\u3066\u77db\u76fe\u304c\u306a\u3044\u304b\u78ba\u304b\u3081\u308b\n    o = bi(i)\n    a = max(a,b(o))\n\nprint(a)","N = int(input())\nA = [[] for i in range(N)]\n\nfor i in range(N):\n  a = int(input())\n  for j in range(a):\n    A[i].append(tuple(map(int, input().split())))\n\nans = 0\nfor bits in range(2**N):\n  l = [0] * N\n  for i in range(N):\n    l[i] = (bits >> i) % 2\n\n  fail = False\n  for i in range(N):\n    if fail: break\n    if l[i] == 0: continue # \u4e0d\u89aa\u5207\u306f\u30d1\u30b9\n    for x, y in A[i]:\n      if y != l[x-1]:\n        fail = True\n        break\n  else:\n    if not fail:\n      ans = max(ans, sum(l))\n\nprint(ans)","n = int(input())\nxy = []\nfor i in range(n):\n    a = int(input())\n    l = []\n    for j in range(a):\n        x, y = map(int, input().split())\n        l.append((x, y))\n    xy.append(l)\n\n# \u30d3\u30c3\u30c8\u5168\u63a2\u7d22\nbit = 0\nans = 0\nfor X in range(2 ** n):\n    # 1010\u306a\u3069\n    flag = False\n    count = 0\n    for num in range(n):\n        f = True\n        if X & (2 ** num) >= 1:\n            for x, y in xy[num]:\n                t = 1 if X & 2 ** (x-1) >= 1 else 0\n                if t != y:\n                    f = False\n                    break\n            if f == False:\n                count = 0\n                break\n            count += 1\n    ans = max(count, ans)\nprint(ans)","N = int(input())\nA =[0]*N\nS =[[] for i in range(N)]\nans = 0\nfor i in range(N):\n    A[i] = int(input())\n    for j in range(A[i]):\n        S[i].append(list(map(int, input().split())))\nform = \"0\" + str(N) + \"b\"\nfor i in range(2**N):\n    p = list(map(int, list(format(i,form))))\n#    print([[p[j] == 0 or p[S[j][k][0]-1] == S[j][k][1] for k in range(len(S[j]))] for j in range(N)])\n    if all([all([p[j] == 0 or p[S[j][k][0]-1] == S[j][k][1] for k in range(len(S[j]))]) for j in range(N)]):\n        ans = max(ans,sum(p))\nprint(ans)","N = int(input())\n\np = []\nt = []\n\nfor n in range(N):\n  a = int(input())\n  p.append(a)\n\n  t.append([list(map(int, input().split())) for k in range(a)])\n\nans = 0\n\nfor bit in range(1 << N):\n  flag = True\n\n  for i in range(N):\n    if not (bit & (1 << i)):\n      continue\n    \n    for x in t[i]:\n      if x[1] == 1 and not (bit & (1 << (x[0] - 1))):\n        flag = False\n      if x[1] == 0 and (bit & (1 << (x[0] - 1))):\n        flag = False\n\n  if flag:\n    count = 0\n    for s in range(N):\n      if bit & (1 << s):\n        count += 1\n\n    if count > ans:\n      ans = count\n\nprint(ans)","import itertools\nimport numpy as np\nn = int(input())\ndic_ = {}\nfor i in range(n):\n    m = int(input())\n    for j in range(m):\n        x, y = map(int, input().split())\n        dic_[(i,x)] = y\n\nok = []\nfor i in itertools.product([0,1],repeat=n):\n    for k in dic_.keys():\n        if i[k[0]] == 0:\n            continue\n        if dic_[k] != i[k[1]-1]:\n            break\n    else:\n        ok += [i]\nmm = 0\nfor i in ok:\n    mm = max(mm, sum(i))\nprint(mm)","# -*- coding: utf-8 -*-\nimport numpy as np\nimport random\n\nN = int(input())\nR = np.full((N, N), 2, dtype=np.uint8)\nS = np.full((N, N), 2, dtype=np.uint8)\nA = []\nfor i in range(N):\n  A.append(int(input()))\n  for j in range(A[i]):\n    x, y = map(int, input().split())\n    R[i, x-1] = y\n\nl = []\nfor i in range(N):\n  l.append(str(i))\n\ndef contra(M, N, st):\n  for i in range(N):\n    if(st[i] == '1' and sum(M[:,i] == 0) != 0):\n      return False;\n    elif(st[i] == '0' and sum(M[:,i] == 1) != 0):\n      return False;\n  return True\n\ndef selected_set(l, i):\n  tmp = []\n  if(i == 0):\n    return tmp\n  elif(i == 1):\n    return l\n  elif(i == len(l)):\n    tmp.append(''.join(l))\n    return tmp\n  else:\n    for k in range(len(l)-i+1):\n      st = l[k]\n      ll = l[k+1:]\n      tl = selected_set(ll, i-1)\n      res = [st+p for p in tl]\n      tmp += res\n    return tmp\n\nnum = 0\nfor i in range(N):\n  st = ['1']*N\n  ll = selected_set(l, i)\n  if(len(ll) == 0):\n    if(contra(R, N, st)):\n      num = N-i\n      break;\n\n  for zero_key in ll:\n    st = ['1']*N\n    S = np.full((N, N), 2, dtype=np.uint8)\n    for p in range(i):\n      st[int(zero_key[p])] = '0'\n    for k in range(1, len(st)+1):\n      if(st[-k] == '1'):\n        S[N-k, :] = R[N-k,:]\n    if(contra(S, N, st)):\n      num = N-i\n      break;\n  else:\n    continue\n  break\n\nprint(num)\n\n","N = int(input())\n\nevidences = [[] for _ in range(N)]\nfor i in range(N):\n    A = int(input())\n    for _ in range(A):\n        x, y = map(int, input().split())\n        evidences[i].append((x - 1, y))\n\nresult = 0\nfor i in range(1, 2 ** N):\n    consistent = True\n    for j in range(N):\n        if (i >> j) & 1 == 0:\n            continue\n        for x, y in evidences[j]:\n            if (i >> x) & 1 != y:\n                consistent = False\n                break\n        if not consistent:\n            break\n    if consistent:\n        result = max(result, bin(i)[2:].count('1'))\nprint(result)","N, *data = open(0).read().split('\\n')\nN = int(N)\n\nXY = []\n\nj = 0\nfor i in range(N):\n    A = int(data[j])\n    j += 1\n    XY.append([])\n    for a in range(A):\n        XY[i].append(tuple(map(int, data[j].split())))\n        j += 1\n        \n# True: \u77db\u76fe\u3042\u308a\u3001False: \u77db\u76fe\u306a\u3057\n\ndef is_contradiction(mynum:int, is_honest:str, x:int, y:int):\n    if is_honest[mynum]=='1':\n        return is_honest[x-1]!=str(y)\n    else:\n        return is_honest[x-1]==str(y)\n      \nans = 0\n\nfor i in range(2**N):\n    is_honest = format(i, '0%db' %N)\n    \n    if ans >= is_honest.count('1'):\n        continue\n    else:\n        \n#         print(is_honest) # for Debug\n        \n        contradictions = []\n        for n in range(N):    \n            for xy in XY[n]:\n                contradictions.append(is_contradiction(n, is_honest, *xy))\n        \n#         print(contradictions)  # for Debug\n        \n        if True not in contradictions:\n            ans = is_honest.count('1')\n            \nprint(ans)","N=int(input())\n\nA=[]\ntest = []\nfor i in range(N):\n    A_i= int(input())\n    A.append(A_i)\n    testimony_i=[]\n    for j in range(A_i):\n        x,y= map(int,input().split())\n\n        testimony_i.append([x,y])\n    \n    test.append(testimony_i)\n\nprint(A)\nprint(test)\n\n\ntotal=0\n\nfor i in range(2**N):\n\n    member = format(i,'0{}b'.format(N))\n\n    print(member)\n    flg = 0\n\n    for j in range(N):\n        if member[j]== '1':\n\n            syogen = test[j]\n\n            for s in syogen:\n                if member[s[0]-1]==str(s[1]):\n                    continue\n                else:\n                    flg+=1\n\n    if flg ==0:\n        total = max(total , member.count('1')) \n\nprint(total)\n# total = 0\n# for i in range(2**N):\n    \n#     Honests=[0]*N\n    \n#     for j in range(N):\n\n#         if (i>>j) & 1:\n\n#             A_j = A[j]\n            \n#             for k in range(A_j):\n#                 x,y =test[j][k][0],test[j][k][1]\n\n#                 x-=1\n#                 if y ==1:\n#                     Honests[x]=1\n#                 else:\n#                     Honests[x]=0\n#         else:\n#             A_j=A[j]\n\n#             for k in range(A_j):\n#                 x,y =test[j][k][0],test[j][k][1]\n\n#                 x-=1\n#                 if y ==1:\n#                     Honests[x]=0\n#                 else:\n#                     Honests[x]=1\n            \n#     total = max(total,max(Honests))\n\n# print(total)\n\n\n","N = int(input())\nsyougen = [[]*N for _ in range(N)]\n\nfor i in range(N):\n    A = int(input())\n    for j in range(A):\n        x, y = [int(s) for s in input().split()]\n        syougen[i].append((x,y))\n\ndef judge(bit):\n    for i in range(N):\n        if not bit & (1<<i):\n            continue\n        for x, y in syougen[i]:\n            if y == 1 and not bit & (1<<x-1):\n                return False\n            if y == 0 and bit & (1<<x-1):\n                return False\n    return True\n\nans = 0\nfor bit in range(2**N):\n    if judge(bit):\n        res = 0\n        for i in range(N):\n            if bit & (1<<i):\n                res += 1\n        ans = max(res, ans)\n        \nprint(ans)\n\n\n","n=int(input())\nxy=[[] for i in range(n)]\nfor i in range(n):\n    a=int(input())\n    for j in range(a):\n        xy[i].append(list(map(int,input().split())))\n        \nans=0\nfor i in range(2**n):\n    flg=0\n    bin_i=format(i, '0{}b'.format(n))\n    zero_one=list(bin_i)\n    for j in range(n):\n        if zero_one[j]==\"1\":\n            for k in xy[j]:\n                x,y=k\n                if zero_one[x-1]==\"1\" and y==0:\n                    flg=1\n                if zero_one[x-1]==\"0\" and y==1:\n                    flg=1\n\n    if flg==0:\n        tmp=0\n        for w in zero_one:\n            if w==\"1\":\n                tmp+=1\n        ans=max(ans,tmp)\n\nprint(ans)\n    \n    ","def solve():\n    # \u6a19\u6e96\u5165\u529b\u90e8\u5206\n    N = int(input())  # len(person)\n    A = []\n    x = []\n    y = []\n    i = 0\n    for i in range(N):\n        A.append(int(input()))\n        x.append([])\n        y.append([])\n        for j in range(A[i]):\n            x_temp, y_temp = list(map(int, input().split()))\n            x[i].append(x_temp)\n            y[i].append(y_temp)\n    \n    # N\u4eba\u3092\u6b63\u76f4\u8005\uff0c\u4e0d\u89aa\u5207\u306a\u4eba\u3068\u4eee\u5b9a\u3057\u3066\u77db\u76fe\u305b\u305a\u306b\u5b58\u5728\u3057\u3046\u308b\u6b63\u76f4\u8005\u306e\u6700\u5927\u4eba\u6570\u3092\u6c42\u3081\u308b\uff0e\n    honest_num = 0\n    honest_num_new = 0\n    for b in range(2**N):\n        consistent = True\n        case = format(b, '0'+str(N)+'b')\n        # \u77db\u76fe\u304c\u3042\u308b\u304b\u78ba\u8a8d\u3059\u308b\u51e6\u7406, n-bit\u76ee\u304c'1'\u306e\u3068\u304d\uff0cn\u756a\u76ee\u306e\u4eba\u306f\u6b63\u76f4\u8005\n        i = 0\n        for i in range(N): # i\u756a\u76ee\u306e\u4eba\u306e\u8a3c\u8a00\u3092\u691c\u8a3c\n            for z in zip(x[i], y[i]): #z[0]\uff08person[i]\uff09\u304cz[1]\uff08\u6b63\u76f4\u8005\uff0c\u4e0d\u89aa\u5207\u306a\u4eba\uff09\u3067\u3042\u308b\u3068\u3044\u3046\u8a3c\u8a00\n                if case[i] == \"1\":\n                    if case[z[0]-1] != str(z[1]):\n                        consistent = False\n        if consistent:\n            # \u77db\u76fe\u304c\u306a\u3044\u3068\u304d\uff0c\u6b63\u76f4\u8005\u306e\u6570\u3092\u6c42\u3081\u308b\u51e6\u7406\n            honest_num_new = case.count(\"1\")\n        # \u3053\u308c\u307e\u3067\u306e\u6700\u5927\u306e\u4eba\u6570\u3068\u6bd4\u8f03\u3057\u3066\uff0c\u6b63\u76f4\u8005\u304c\u591a\u3044\u307b\u3046\u3092\u63a1\u7528\n        honest_num = max(honest_num, honest_num_new)\n    print(honest_num)\n\n\n\nif __name__ == \"__main__\":\n    solve()\n","N = int(input())\nedge = [[] for _ in range(N)]\nfor i in range(N):\n    A = int(input())\n    for j in range(A):\n        x,y = map(int,input().split())\n        edge[i].append((x-1,y))\n\nans = 0\nfor i in range(2**N):\n    # 1: \u6b63\u76f4\u8005\n    state = [0] * N\n    for j in range(N):\n        state[j] = (i >> j) & 1\n    \n    # \u771f\u507d\u3092\u78ba\u304b\u3081\u308b\n    flag = True\n    for j in range(N):\n        if state[j] == 0:\n            continue\n        for x,y in edge[j]:\n            if state[x] == y:\n                continue\n            flag = False\n            break\n        if not flag:\n            break\n    if not flag:\n        continue\n\n    ans = max(ans, state.count(1))\n\nprint(ans)","#ABC147\u3000C\u3000\u3084\u3063\u3066\u308b\u9014\u4e2d\nn=int(input())\nl=[]\nfor i in range(n):\n  a=int(input())\n  l_=[]\n  for j in range(a):\n    xy=list(map(int,input().split()))\n    l_.append(xy)\n  l.append(l_)\nans=0\nfor i in range(2**n):\n  table=[0]*n\n  flag=False\n  for j in range(n):\n    if (i>>j)&1:\n      table[j]=1\n  for j in range(n):\n    for k in l[j]:\n   \n      if k[1]!=table[k[0]-1] and table[j]==1:\n        flag=True\n        break\n\n        if flag:\n          break\n\n  if flag==True:\n    continue\n\n\n  ans = max(ans, table.count(1))\n\n\nprint(ans)","n=int(input())\nxy=[[[]] for _ in range(n)]\nfor i in range(n):\n    a=int(input())\n    xy[i]=[list(map(int,input().split())) for _ in range(a)]\nans=0\nfor i in range(2**n):\n    tmp=[0]*n\n    flag1=True\n    for j in range(n):\n        if (i>>j)&1:\n            tmp[j]=1\n    for k in range(n):\n        flag2=True\n        if tmp[k]==1:\n            for x,y in xy[k]:\n                if tmp[x-1]!=y:\n                    flag1=False\n                    flag2=False\n                    break\n        if not flag2:\n            break\n    if flag1:\n        ans=max(ans,sum(tmp))\nprint(ans)","import itertools\nn = int(input())\nl = []\nfor i in range(n):\n    d = int(input())\n    for dd in range(d):\n        x, y = map(int, input().split())\n        l.append([i, x-1, y])\n \nans = 0\nfor p in itertools.product([0, 1], repeat=n):\n    for ll in l:\n        if p[ll[0]] == 1 and p[ll[1]] != ll[2]:\n            break\n    else:\n        ans = max(ans, sum(p))\nprint(ans)","N=int(input())\narr = [[] for i in range(N+1)]\nbm = [0 for i in range(N+1)]\nmaxs = 0\ncnt = 0\n\ndef slv(curInd):\n  global N,arr,bm,maxs,cnt\n  if curInd==N:\n    good = True\n    for i in range(N+1):\n      if good == False:\n        break\n      if bm[i]:\n        for el in arr[i]:\n          if bm[el[0]]!=el[1]:\n            good = False\n            break\n    if good == True:\n      maxs = max(maxs,cnt)\n    cnt += 1\n    bm[curInd] = 1\n    good = True\n    for i in range(N+1):\n      if good == False:\n        break\n      if bm[i]:\n        for el in arr[i]:\n          if bm[el[0]]!=el[1]:\n            good = False\n            break\n    if good == True:\n      maxs = max(maxs,cnt)\n    bm[curInd] = 0\n    cnt -= 1\n  else:\n    slv(curInd+1)\n    cnt += 1\n    bm[curInd] = 1\n    slv(curInd+1)\n    cnt -= 1\n    bm[curInd] = 0\n\nfor i in range(N):\n  A=int(input())\n  for j in range(A):\n    arr[i+1].append(list(map(int,input().split())))\nslv(1)\nprint(maxs)","n=int(input())\ntestimony_list=[[[-1,-1] for _ in range(n-1)] for i in range(n)]\nfor i in range(n):\n\ta=int(input())\n\tfor j in range(a):\n\t\tx,y=map(int,input().split())\n\t\ttestimony_list[i][j][0]=x-1\n\t\ttestimony_list[i][j][1]=y\n\nans=0\nfor i in range(2**n):\n\tkind_l=[0 for _ in range(n)]\n\tfor j in range(n):\n\t\tif ((i>>j) & 1):\n\t\t\tkind_l[j]=1\n\tfor k in range(n):\n\t\tif kind_l[k]==1:\n\t\t\tfor m in range(a):\n\t\t\t\tsubject=testimony_list[k][m][0]\n\t\t\t\tjudge=testimony_list[k][m][1]\n\t\t\t\tif subject or judge==-1:continue\n\t\t\t\tif kind_l[subject]!=judge:\n\t\t\t\t\tkind_l=[0 for _ in range(n)]\n\t\t\t\t\tbreak\n\tans=max(ans,sum(kind_l))\nprint(ans)\n","N = int(input())\nA = [[-1 for _ in range(N)] for _ in range(N)]\nfor i in range(N):\n    a = int(input())\n    for _ in range(a):\n        x, y = map(int, input().split())\n        x -= 1\n        A[i][x] = y \n\nans = 0\nfor b in range(2**N):\n    bit = bin(b)[2:].zfill(N)\n    flg = True\n    for i in range(N):\n        if bit[i] == '0': continue\n        for j in range(N):\n            if A[i][j] == -1: continue\n            if A[i][j] != int(bit[j]):\n                flg = False\n                break\n        \n        if not flg: break\n\n    ans = max(bit.count('1'), ans) if flg else ans\n\nprint(ans)","N=int(input())\nall=[]\nfor i in range(N):\n    A_N=int(input())\n    grid=[]\n    for j in range(A_N):\n        a=list(map(int, input().split()))\n        grid.append(a)\n    all.append(grid)\nprint(all)\nans=[]\nfor i in range(N):# \u4e8c\u9032\u6570\u306e\u30ea\u30b9\u30c8\u4f5c\u6210\n    b = format(i,'b').zfill(N)\n    c_l = [int(p) for p in list(b)]\n\n    for l in range(N):# check\u306e\u958b\u59cb\uff08l\u306f\u4eba\uff09\n        for m in range(len(all[l])):# \u305d\u306e\u4eba\u306e\u4e3b\u5f35\u306e\u6570\n            if c_l[all[l][m][0]-1]!=all[l][m][1]:\n                break\n        else:\n            continue\n        break\nelse:\n    ans.append(c_l.count(1))\nprint(max(ans))\n","#!\/usr\/bin\/env python3\n\nimport itertools\n\n\ndef max_honests(n, statements):\n    g = itertools.product((True, False), repeat=n)\n    res = 0\n    for is_hon in g:\n        flag = True\n        for i in range(n):\n            if is_hon[i]:\n                for x, y in statements[i]:\n                    if is_hon[x] != y:\n                        flag = False\n        if flag:\n            res = max(res, sum(is_hon))\n    return res\n\n\ndef main():\n    n = int(input())\n    statements = [set() for _ in range(n)]\n    for i in range(n):\n        a = int(input())\n        for _ in range(a):\n            x, y = (int(z) for z in input().split())\n            statements[i].add((x - 1, bool(y)))\n    res = max_honests(n, statements)\n    print(res)\n\n\nif __name__ == \"__main__\":\n    main()\n","import sys, math\nfrom collections import defaultdict\nfrom copy import deepcopy\nimport itertools\ninput = sys.stdin.readline\n# \u6587\u5b57\u5217\u306e\u5834\u5408\u306f\u666e\u901a\u306einput()\u3092\u4f7f\u3046\u304b\u4e0b\u3092\u4f7f\u3046\n# input = sys.stdin.readline().rstrip()\n\nN = int(input())\nA = [None]\ninfo = [None] + [[] for _ in range(N)]\nfor i in range(N):\n    a = int(input())\n    A.append(a)\n    for _ in range(a):\n        x, y = map(int, input().split())\n        info[i+1].append((x, y))\n#print('info={}'.format(info))\n    \nans_bit = 0\nfor num in range(2**N-1, -1, -1):\n    bit_pre = bin(num)\n    bit_pre = bit_pre[2:]\n    l = len(bit_pre)\n    bit = '0' * (N - l) + bit_pre\n\n\n    status = [None] * (N + 1)\n    #print('bit={}'.format(bit))\n    contradict = False\n    for i, n in enumerate(bit):\n        i += 1\n        n = int(n)\n        #print('i={}, n={}'.format(i, n))\n    \n        if n == 1:\n            for x, y in info[i]:\n                if int(bit[x-1]) != y:\n                    contradict = True\n                    \n                s = status[x]\n                #print('s={}'.format(s))\n                if s == None:\n                    status[x] = y\n                elif s != y:\n                    contradict = True\n                #print('status={}'.format(status))\n        \n    if not contradict:\n        ans_bit = bit\n        break\n\n\n\n#print('ans_bit={}'.format(ans_bit))\nans = 0\nfor x in ans_bit:\n    if x == '1':\n        ans += 1\nprint(ans)","n = int(input())\nall = 1<<n\nstatement = []\nfor i in range(n):\n    A = int(input())\n    statement.append([])\n    for j in range(A):\n        x, y = map(int, input().split())\n        statement[i].append([x-1, y])\nans = 0\nfor i in range(all):\n    ok = True\n    num = 0\n    for j in range(n):\n        if i & 1<<j:\n            num += 1\n            for s in statement[j]:\n                if (i & 1<<s[0]) != (s[1]<<s[0]):\n                    ok = False\n    if ok:\n        ans = max(ans, num)\nprint(ans)\n","#python3 \ng = [[-1 for _ in range(15)] for _ in range(15)]\n\nn = int(input())\nfor i in range(n):\n  m = int(input())\n  for j in range(m):\n    x,y = map(int, input().split())\n    g[i][x-1] = y\n\nans = 0\nfor i in range(1<<n):\n  honests = [0 for _ in range(n)]\n  for j in range(n):\n    if (i>>j) &1:\n      honests[j] = 1 \n  ok = True\n  for j in range(n):\n    if honests[j]:\n      for k in range(n):\n        if g[j][k] == -1: continue\n        if g[j][k] != honests[k]: ok = False\n  if ok:\n    ans = max(ans, bin(i).count('1'))\n\nprint(ans)","n = int(input())\na = [0] * n\nx = [[] for i in range(n)]\ny = [[] for i in range(n)]\nfor i in range(n):\n    a[i] = int(input())\n    for j in range(a[i]):\n        k, l = map(int, input().split())\n        x[i].append(k)\n        y[i].append(l)\n\ndef dfs(cur, l):\n    global ok\n    if cur == n:\n        ok = True\n        for i in range(n):\n            if l[i]==1 and any([l[x[i][j]-1]!=y[i][j] for j in range(a[i])]):\n                ok = False\n        return sum(l) if ok else 0\n    else:\n        l1 = l[:]\n        l1[cur] += 1\n        return max(dfs(cur+1, l), dfs(cur+1, l1))\n\nprint(dfs(0, [0]*n))","import numpy as np\n\nN = int(input())\nA = [0]*N\nX = np.zeros([N,N],dtype=int)\nY = np.zeros([N,N],dtype=int)\n\nfor n in range(N):\n    A[n] = int(input())\n    for a in range(A[n]):\n        X[n][a], Y[n][a] = list(map(int,input().split()))\n\nans = 0\n\nfor bits in range( 1, 1<<N ):\n    ok = True\n    for i in range( 0, N ):\n        if not ( bits & (1 << i) ):\n            continue\n        for j in range( 0, A[i] ):\n            if (( bits >> (X[i][j]-1) ) & 1) ^ Y[i][j]:\n                ok = False\n    if ok:\n        ans = max( ans, (str(bin(bits))[2:]).count('1'))\n        \nprint(ans)","n = int(input())\nlists = [[] for _ in range(n)]\nfor i in range(n):\n    a = int(input())\n    for j in range(a):\n        x, y = map(int, input().split())\n        lists[i].append((x-1, y))\nans = 0\nfor i in range(1, 2**n):\n    status = True\n    for j in range(n):\n        if (i >> j) & 1 == 0:\n            continue\n        for x, y in lists[j]:\n            if (i >> x) & 1 != y:\n                status = False\n                break\n        if status == False:\n            break\n    if status == True:\n        ans = max(ans, bin(i).count('1'))\nprint(ans)","def max_honest(n_ppl, testimonies):\n    formating_str = \"{0:0\" + str(n_ppl) + \"b}\"\n    max = 0\n    for i in range(1, 2**n_ppl + 1):\n        current_val = formating_str.format(2**n_ppl - i)\n        potential = True\n        valid_testemonies = []\n        for j in range(0, len(current_val)):\n            if current_val[j] == \"1\":\n                for k in range(0, len(testimonies[j])):\n                    valid_testemonies.append(testimonies[j][k])\n        for j in range(0, len(valid_testemonies)):\n            if str(valid_testemonies[j][1]) != current_val[valid_testemonies[j][0] - 1]:\n                potential = False\n                break\n        if potential:\n            if current_val.count(\"1\") > max:\n                max = current_val.count(\"1\")\n    return max\n\ntestimonies = []\nn_ppl = int(input())\n\nfor i in range(0, n_ppl):\n    tests = []\n    n_tests = int(input())\n    for j in range(0, n_tests):\n        test = input().split(\" \")\n        test = (int(test[0]), int(test[1]))\n        tests.append(test)\n    testimonies.append(tests)\n    \nprint(\"\")\nprint(max_honest(n_ppl, testimonies))\ninput(\"Press enter\")","n=int(input())\nl=[]\nfor i in range(n):\n  n1=int(input())\n  l1=[]\n  for j in range(n1):\n    a,b=map(int,input().split())\n    l1.append([a,b])\n  l.append(l1)\nnum=2**n\nbitlist=[]\nfor i in range(1,1+num):\n  num1=num-i\n  b1=[]\n  while num1!=0 or len(b1)<n:\n    b1.append(num1%2)\n    num1\/\/=2\n  bitlist.append(b1)\n#\u5404b1\u306e\u8981\u7d20\u304c1\u306e\u6642\u305d\u306e\u4eba\u306f\u6b63\u76f4\u8005\nans=0\nfor i in range(num):\n  b=bitlist[i]\n  bool1=True\n  for j in range(n):\n    if not bool1:\n      pass\n    elif b[j]==0:\n      pass\n    else:#j\u306f\u6b63\u76f4\u8005\u3060\u304b\u3089\u767a\u8a00\u306f\u5168\u3066\u672c\u5f53 \u6574\u5408\u6027\u5fc5\u8981\n      for k in l[j]:\n        n1=k[0]\n        n2=k[1]\n        if b[n1-1]!=n2:\n          bool1=False\n  count=0\n  if bool1:\n    for j in b:\n      if j==1:\n        count+=1\n    if count>ans:\n      ans=count\nprint(ans)","import itertools\nN = int(input())\ndic = {}\ncnt = 0\nok = []\nfor i in range(N):\n  A = int(input())\n  for j in range(A):\n    x,y = (int(t) for t in input().split())\n    dic[(i,x)] = y\nfor i in itertools.product([0,1],repeat=N):\n  for k in dic.keys():\n    if i[k[0]] == 0:\n      continue\n    if dic[k] != i[k[1]-1]:\n      break\n  else:\n    ok += [i]\nmm = 0\nfor i in ok:\n  mm = max(mm,sum(i))\nprint(mm)","n = int(input())\n\nl = []\naas = []\n\nfor i in range(n):\n    a = int(input())\n    aas.append(a)\n    s = [list(map(int,input().split())) for i in range(a)]\n    l.append(s)\n\nfor i in range(2**n):\n    flag_n = [1]*n\n    for j in range(n):\n        if ((i >> j)&1):\n            flag_n[n-1-j] = 0\n    cnt = 0\n    for k in range(n):\n        if flag_n[k] == 1:\n            if all(l[k][m][1] == flag_n[l[k][m][0]-1] for m in range(aas[k])):\n                cnt += 1\n        if cnt == sum(flag_n):\n            print(sum(flag_n))\n            exit()\n\nprint(0)\n        \n","n = int(input())\ng = [[-1 for j in range(n)] for i in range(n)]\n\nfor i in range(n):\n    a = int(input())\n    for _ in range(a):\n        x, y = map(int, input().split())\n        g[i][x - 1] = y\n        \nans = 0\nfor s in range(2**n):\n    ok = True\n    k = 0\n    for i in range(n):\n        if (s >> i & 1) == 1:\n            k += 1\n            for j in range(n):\n                if g[i][j] == -1:\n                    continue\n                if (s >> j & 1) != g[i][j]:\n                    ok = False\n    if ok:\n        ans = max(ans, k)\n\nprint(ans)","n = int(input())\nw = [[] for i in range(n)]\nfor i in range(n):\n    a = int(input())\n    for j in range(a):\n        w[i].append([int(x) for x in input().split()])\n\nans = 0\nfor i in range(2**n):\n    flag = 1\n    f = [0]*n\n    num = 0\n    for j in range(n):\n        if i & 1<<j:\n            f[j] = 1\n            num += 1\n    for j in range(n):\n        if f[j]==1:\n            for k in w[j]:\n                if k[1]!=f[k[0]-1]:\n                    flag = 0\n        else:\n            for k in w[j]:\n                if k[1]==f[k[0]-1]:\n                    flag = 0\n    \n    if flag == 1:\n        ans = max(ans,num)\nprint(ans)"]}
{"description_html":"<span class=\"lang-en\">\n<p>Score : <var>200<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>Given are two strings <var>S<\/var> and <var>T<\/var>.<\/p>\n<p>Let us change some of the characters in <var>S<\/var> so that <var>T<\/var> will be a substring of <var>S<\/var>.<\/p>\n<p>At least how many characters do we need to change?<\/p>\n<p>Here, a substring is a consecutive subsequence. For example, <code>xxx<\/code> is a substring of <code>yxxxy<\/code>, but not a substring of <code>xxyxx<\/code>.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li>The lengths of <var>S<\/var> and <var>T<\/var> are each at least <var>1<\/var> and at most <var>1000<\/var>.<\/li>\n<li>The length of <var>T<\/var> is at most that of <var>S<\/var>.<\/li>\n<li><var>S<\/var> and <var>T<\/var> consist of lowercase English letters.<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>S<\/var>\n<var>T<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>Print the minimum number of characters in <var>S<\/var> that need to be changed.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>cabacc\nabc\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>1\n<\/pre>\n<p>For example, changing the fourth character <code>a<\/code> in <var>S<\/var> to <code>c<\/code> will match the second through fourth characters in <var>S<\/var> to <var>T<\/var>.<\/p>\n<p>Since <var>S<\/var> itself does not have <var>T<\/var> as its substring, this number of changes - one - is the minimum needed.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>codeforces\natcoder\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>6\n<\/pre><\/section>\n<\/div>\n<\/span>","description_string":"\nScore : 200 points\n\n\nProblem StatementGiven are two strings S and T.\nLet us change some of the characters in S so that T will be a substring of S.\nAt least how many characters do we need to change?\nHere, a substring is a consecutive subsequence. For example, xxx is a substring of yxxxy, but not a substring of xxyxx.\n\n\n\n\nConstraints\nThe lengths of S and T are each at least 1 and at most 1000.\nThe length of T is at most that of S.\nS and T consist of lowercase English letters.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nS\nT\n\n\n\n\n\nOutputPrint the minimum number of characters in S that need to be changed.\n\n\n\n\n\n\nSample Input 1cabacc\nabc\n\n\n\n\n\nSample Output 11\n\nFor example, changing the fourth character a in S to c will match the second through fourth characters in S to T.\nSince S itself does not have T as its substring, this number of changes - one - is the minimum needed.\n\n\n\n\n\nSample Input 2codeforces\natcoder\n\n\n\n\n\nSample Output 26\n\n\n","orig_lang_html":"<span class=\"lang-en\">\n<p>Score : <var>200<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>Given are two strings <var>S<\/var> and <var>T<\/var>.<\/p>\n<p>Let us change some of the characters in <var>S<\/var> so that <var>T<\/var> will be a substring of <var>S<\/var>.<\/p>\n<p>At least how many characters do we need to change?<\/p>\n<p>Here, a substring is a consecutive subsequence. For example, <code>xxx<\/code> is a substring of <code>yxxxy<\/code>, but not a substring of <code>xxyxx<\/code>.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li>The lengths of <var>S<\/var> and <var>T<\/var> are each at least <var>1<\/var> and at most <var>1000<\/var>.<\/li>\n<li>The length of <var>T<\/var> is at most that of <var>S<\/var>.<\/li>\n<li><var>S<\/var> and <var>T<\/var> consist of lowercase English letters.<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>S<\/var>\n<var>T<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>Print the minimum number of characters in <var>S<\/var> that need to be changed.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>cabacc\nabc\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>1\n<\/pre>\n<p>For example, changing the fourth character <code>a<\/code> in <var>S<\/var> to <code>c<\/code> will match the second through fourth characters in <var>S<\/var> to <var>T<\/var>.<\/p>\n<p>Since <var>S<\/var> itself does not have <var>T<\/var> as its substring, this number of changes - one - is the minimum needed.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>codeforces\natcoder\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>6\n<\/pre><\/section>\n<\/div>\n<\/span>","orig_lang_string":"\nScore : 200 points\n\n\nProblem StatementGiven are two strings S and T.\nLet us change some of the characters in S so that T will be a substring of S.\nAt least how many characters do we need to change?\nHere, a substring is a consecutive subsequence. For example, xxx is a substring of yxxxy, but not a substring of xxyxx.\n\n\n\n\nConstraints\nThe lengths of S and T are each at least 1 and at most 1000.\nThe length of T is at most that of S.\nS and T consist of lowercase English letters.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nS\nT\n\n\n\n\n\nOutputPrint the minimum number of characters in S that need to be changed.\n\n\n\n\n\n\nSample Input 1cabacc\nabc\n\n\n\n\n\nSample Output 11\n\nFor example, changing the fourth character a in S to c will match the second through fourth characters in S to T.\nSince S itself does not have T as its substring, this number of changes - one - is the minimum needed.\n\n\n\n\n\nSample Input 2codeforces\natcoder\n\n\n\n\n\nSample Output 26\n\n\n","solve_rate":0.542716074,"codenet_problem_id":"p02571","input_testcases":{"23":"caabbc\naab","44":"cacabc\naaa","19":"cbbaac\nbaa","14":"ccbaac\ncaa","46":"cacabc\naab","27":"cabbac\naab","31":"cabaac\nbaa","9":"ccabac\nbba","43":"cpfedsqbdo\npaeqdtb","33":"cabaac\nbba","86":"e`bccc\naab","64":"cc`cbc\n`ab","17":"cbbaac\ncaa","35":"cbbaac\nbba","40":"caacbc\nbaa","96":"fabccc\naac","10":"ccabac\ncba","37":"cbcaac\nbba","48":"cacabc\n`ab","54":"cbacbc\na`b","66":"dc`cbc\n`ab"},"output_testcases":{"23":"0\n","44":"1\n","19":"0\n","14":"1\n","46":"1\n","27":"1\n","31":"0\n","9":"1\n","43":"4\n","33":"1\n","86":"2\n","64":"1\n","17":"1\n","35":"0\n","40":"1\n","96":"1\n","10":"1\n","37":"1\n","48":"1\n","54":"1\n","66":"1\n"},"n_missing":82,"programs":["s=input()\nt=input()\n\nmc=0\nfor i in range(len(s)-len(t)):\n    c=0\n    for j in range(len(t)):\n        if s[i+j]==t[j]:\n            c+=1\n    mc=max(c,mc)\nprint(len(t)-mc)\n","s=list(input())\nt=list(input())\nans=10**7\nfor i in range(len(s)-len(t)+1):\n  c=0\n  for j in range(len(t)):\n    if s[i+j]!=t[j]:\n      c=c+1\n  if c<ans:\n    ans=c\nprint(ans)","from collections import defaultdict\nfrom collections import deque\nfrom collections import Counter\nimport math\n\ndef readInt():\n\treturn int(input())\ndef readInts():\n\treturn list(map(int, input().split()))\ndef readChar():\n\treturn input()\ndef readChars():\n\treturn input().split()\n\ns = list(input())\nt = list(input())\n\nans = float(\"inf\")\n\nfor i in range(len(s)-len(t)+1):\n\ttar = s[i:i+len(t)]\n\tansk = 0\n\tfor j in range(len(tar)):\n\t\tif t[j]!=tar[j]:\n\t\t\tansk+=1\n\tans = min(ans, ansk)\n\nprint(ans)","#!\/usr\/bin\/env python3\n\n\ndef solve(S, T):\n    if S.find(T) >= 0:\n        return 0\n\n    for i in range(1, len(T)):\n        head = T[:-i]\n        tail = T[i:]\n\n        head_idx = S.find(head)\n        tail_idx = S.rfind(tail)\n\n        if 0 <= head_idx <= len(S) - len(T):\n            return i\n\n        if tail_idx >= i:\n            return i\n\n    return len(T)\n\n\ndef main():\n    S = input()\n    T = input()\n    result = solve(S, T)\n    print(result)\n\n\nif __name__ == \"__main__\":\n    main()\n","S = input()\nT = input()\nans = len(T)\nfor i in range(len(S)-len(T)+1):\n    diff = 0\n    for j in range(len(T)):\n        if S[i+j] != T[j]:\n            diff += 1\n    ans = min(ans, diff)\nprint(ans)","import base64\nimport subprocess\n\n\nexe_bin = \"e??420s#R400000000000{}h%0RR91U=IKQ00000KmY&$000007%l(+0000000000Kma%Z2>?I<9snHx1^@s61ONa4KmY&$00000KmY&$00000KmY&$00000_yGU_00000_yGU_000002mk;8000000{{R31ONa4I066w00000I066w00000I066w000008~^|S000008~^|S000000RR91000000RR911poj5000000000000000000000000000000X%hed00000X%hed00000001BW000000RR911^@s6ARPbz00000ARQn800000ARQn800000_yPa`00000U<CjG00000001BW000000ssI21^@s6I2`~000000I2|AW00000I2|AW000005CQ-I000005CQ-I000002mk;8000001ONa41ONa4R004100000R004100000R004100000L;wH)00000L;wH)000001ONa400000P~~)F1ONa4kP!d?00000kP!d?00000kP!d?00000L;wH)00000L;wH)000001ONa400000QRQ@G1^@s6000000000000000000000000000000000000000000000000005C8xG00000Qss1H1ONa4ARPbz00000ARQn800000ARQn800000-~s>u00000-~s>u000000RR9100000FKlUIHZ(76WG!rIZgqGqcsMpKHZ(4CZ!R(b1ONa45C8xG0RR91M^04$000000{{R30ssI2000001ONa46aWAK0{{R3M^04$_uOv>YUhfou9RsuqgUX}B}n#;0ssI2761SM0RR911^@s6000mI0RRL5761SM000006qpP{bCw4J000000000000000000000000000000-~a#s5&!@I00000000000000000000E&>1mA^-pY00000000000000000000eE<Le5&!@I00000000000000000000RR9105&!@I00000000000000000000#Q^{S5&!@I00000000000000000000CjtNf5&!@I000000000000000000008Ug?S5&!@I00000000000000000000*#H0l5&!@I000000000000000000007XbhO5&!@I000000000000000000002?78B5&!@I00000000000000000000VgUdE5&!@I00000000000000000000H30ws5&!@I000000000000000000009RUCU5&!@I000000000000000000000s#O35&!@I00000000000000000000a{vGU5&!@I000000000000000000009{>OVAOHXW00000000000000000000@Bsh-5&!@I00000000000000000000Jpup#5&!@I000000000000000000005C8xGAOHXW00000000000000000000I{*LxAOHXW00000000000000000000!2kdN5&!@I00000000000000000000SOEY45dawgKp-Fh000005CH%H00000xBvhE5dawgU?Cs?000007y$qP000000BmVub97{5D=RK@Z!R_fUtec!Z*E_6bYXIIUta)UNmNZ=WMy(?XK8bEWpY$aLu_wuWmI8eY-IpnNmNZ=a%E>}b97~LR82!{Z*FB&VPb4$0AE^DbTTksUvy}4Z+Bm8Wo~D5XkTS=a&K}_OJe|ET251MY;#3v0AE^DbTnmdWNb-eQ*<#gV`yP=UvzR|X>@Z*V?{+$Q*<#iVqtS>V_$D`baG{3ZAnyLR4`vfQ#M}!Us_XiGh=CP0AE^8Q*=0KZ*yN_VRL0PNp5L$L@`Bn0AE^UY*2OpUs_I6bU0~mb6;X%b7e6#b9ruKUw3JAXkT-5WNB|jVgO%XXLxvDaAk6HZ*F01X>@sCb}#^6T5fl30AE^8Q*=0KZ*yN_VRL0PNp5L$Lor2m0AE^DbTTwwUvy}4Z+BmBb#z~EW?yn)Zf9j*W^Hs(OJjNfUs_XiG-GddbO2vkQ*?53Nn=xVF)?FkVRBz|a$#w7b4g=GQ(;MCMMY9mbTKnxVRLC?Uuko6a%Ev{NmO4{FkeMeH(ydtQ*<|9Ut@T9F)=YRVqtS>V_$Q0a%pa7NmDdmQ#D^yF<(VR0AE^DbTK(!Uvy}4Z+Bm8Z)a&^UuAM~Z*oveV*qSvVrOGxUvn;VZ!R$aUsY~*X>Md+Qe|^>ZDjy#X<}n8b8jv-0AF8obYWv_Ut?%%UuI!xYye+hV|Za-VRU79X><T>Wo=_{c>rHuV|Za-W@&C=Y-xIB0AF8hX<}nvb97;HbYE>@X>I^VLqlIPE-(N`Oi4mRUotK<07pzoLPK9NE-^F!M@&gVLtip3GA=a$Ls(crLP=jSE;9f}Oi4mRSXf^(E;KGOFaSqPNkT(dSYI<PG%hkR07pzoLPJ<sUo$Q=000000ssR50ssO40ssU60{{X50ssX71^@>D0ssgA0ssI22>=5C000000ssO40ssI20RRC2;sF2v5C8xGAOHXWP$qc`000R9PXYh{000000RRI4{{a915C8xGKmY&$6lrM<000F5R{{V45C8xGl#!MO000C4VFCaE5C8xGbsA|200093YytoP000000RRL50RR915C8xG00000)30j<000O8cme<b5C8xGaQK%3000L7g8~2m5C8xGarl=4000I6k^%q#5C8xGbSaVu00062p#lH^00000ARQn8000002mk;800000U=RQR00000C><aG000002mk;800000Fb@C#00000FdZNO000002mk;800000AP@im000002p}K;000002mk;8000002p}K;00000&>tWG000001^@s60ssI20000000000*dHJO000001^@s65C8xG0000000000;2$6W000001^@s65&!@I0000000000=pP^e000001^@s66951J0000000000@E;%m000001^@s66aWAK0000000000_#Yqu000001^@s66#xJL00000000005Fj7`000000RR914gdfE0000000000Kp-Fh000001poj5761SM0000000000U?Cs?000001poj57XSbN0000000000U>_g=000002LJ#70RR910000000000XdfT|000002LJ#70{{R30000000000a33H5000002LJ#71ONa40000000000cpo4D000002LJ#71poj50000000000fFB?L000002LJ#71^@s60000000000h#w#T000002LJ#72LJ#70000000000kRKob000002LJ#72mk;80000000000m>(bj000002LJ#72><{90000000000pdTOr000002LJ#73IG5A0000000000s2?Bz000002LJ#73jhEB0000000000upb}*000002LJ#73;+NC0000000000xE~+@000002LJ#74FCWD0000000000z#kw0000002LJ#74*&oF0000000000$R8j8000002LJ#75dZ)H0000000000NQ3MMNQ(u<6d(Xdg}`(I|IkQ-#0bLx|1}yEAOQa*926h`4<A4P|0Nm}AOL6p0002#;Q#;s|0NO>AOL6q0002#(EtDc|0N0(AOL6r0002#!2kdM|0MzxAOL6s0002#u>b%6|0VhpAOL6t0002#p#T5>|0VJhAOL6u0002#kpKVx|0U`ZAOL6v0002#fdBvh|0UuRAOL6w0002#aR2}R|0UWJAOL6x0002#VE_OB|0U8BAOL6y0002#Q2+n`|0T*3AOL6z0002#K>z>$|0Ti`AOL6!0002#F#rGm|0TK;AOL6#0002#ApigW|0S{$AOL6$0002#5dZ)G|0SvuAOL2N0000000000L03UmG5<kTK~z;!NP+B_0001FNQ(p|C;$KeNQs0bhyVZpF~I2M{{R0-jdUa+NR3=1KuC=}^b{ZfNXG@y6(9fr0000;$3!G300000NR37iNQrbL7{){-FaSu2TqF=k$3!GZ00000NQp!wAV`fv5XM9#Pyk4YL?l4y9RL6SNQvG^iO1*>|Ns9;i(DiqNQ*=yNQvHwL?i?$#))(!2oH#E0RR9@i)<tyOk?;=jdUbnOgZ~WjaCpz4@cijiS9@N-bjg5Bw%z2O@-|bgy8@H06~ewgXjUh0RR91i9{p}4<Cd800000NQ3(i4~NzO002mfR3u<XgZlwUiO>&(`~Uy|NQK)Eh1UQ80E<K<1W1WoBxuG28URR(d?a9nzz>dL0RRAtbR-N+i$o+qF~Bj>NQ1@!K@YYJ05}W>50$}4gTMg~w#fm?NIAxJ=Shu55J5TAL=R8mNIA!J1?U3)|Nl8`BnS_Tr~m)}NQ+z~C`dWo4~G!}002yjY$PB^DeFm%Mi5AeL?mEI0qsmV`$-Q+-%N?<NQ1=zNCDUngg^iP|4oJM4}~`W|NlshJ#Pa50O)%C|Nmw#4<Cd800000NQK)Eh!g<;07#8{0qCCn|NlsdL?mEHiCiRbNQv4^iS9^=$LLo5|NlsfR3u>O5&!@H4<A4PK@YY?0Ehxei&P|F>HPlx|3Qhw4<A4PNR2(|5g-6WiRS2`{r~?+iO1;a{Qv(*i$o+4NQ-<VKuCkY5J)-4bOq=k{r~?+i$o+CNQ-<VAV`D25J)-4bOq=M{r~?lz(|X<B!~b20AxrrG$kki004D;NP)zd00016T|rzyT|r(!U&CgQG1BS6{{R0-jWs3$002mhJyQYz07!}1NQvq(!07(`|Nlsd!$^xnBoIi8d?Y|fgTN3-ImdJb=%f7q|455OBp67Gd?X-9gTN3-ImdJb=!^XS|4517==1#l|45BJ<pBTy=r{cT|LBtZ|Nmx?NR2&06CeOcgX{?Cu>Al3NQ*tO5Fh|ZjTO2OAOJ{>H6#-t07!$x2<bBX|Nmx?G3`l-(OyW2;z)z!@K97tjRk4}002mh4f6m107#8Jto;A~{}omcAOQ3aA4C8ENR2&#5Fh|mNR0(~5Fh|ZIrvD4<#ZWHiv=nWAOJ{(z;q2=|KMgW4<Cd800000UBeF_KmcYg4<Cd800000NR2%~5Fh|ZjWs$DAOKZJDgH=_<w(K)14xPRNWthoNCC!3(f)K8NQ(vW4<G<Yg}`(SUH{-_4<Cd800000UBeF_KmcYg4<Cd800000fIU$XAOHY$FGzzupAR4a098nd<#Y^4i#^H@AOPsy`~UywNdN!;#sw)7AOHbf!w(;T00000^TTEjA4C8ERY-~DUFl~3|NmwWA4C8EL03UmNr~4%RY6otjU}E8AOKZJjV-1OAOKTAiTz25_Dm_|NQ3MMNWuLB=y&@6|44=HbRaR?4<Cd800000Oo{qTiS|T^??L|*+(?7N0Z2LBb?Qii#0XnmL0myyL0&;$!;oe!4<Cd800000^TPlDNQ3MMNQ1-(!vFvP0RRF3VqtS>V_$Q0a%pa7Iy!T8VsmtI0AgWtX=7h=baH8KXF57xO<!YjWnpw>0000000000C389;Ute%<b08>pXlY|;AZc?TC3<x!AU+^;XlZjTK67b$Whf~iD0gUSV`w00b08&pbtwP<VqtS>V_$Q0a%pa7IyzrXUt@1>b98cbV{{;Hb!==PZf|rTc42I3WB>pF000000UHB5L;wH)2LJ#7p!xs*kN^Mxkoy1sxBvhEp!)y+@Bjb+p#A^<L;(N*(Eb1aU;qFB;Qs&rU;zLCQ2+n`r~v=~000006aWAK000000eVsZ0eBDr8w>{skO2n}6aWAK8~^|SX#M~HD*ylh00000000006aWAK000000eVsZ0eBDr8w>{skO2SyBme*a8~^|S2>Jj2@Bjb+01gmF4j4)g3wH>B06!W#Dl;S^000006aWAKL;wH)(E0!W2mk;800000000008~^|S000000eVnOQUC#X5C@x`4Ils;8w>{skO2SyPyhe`Bme*asQLf@{sI611it_P074EBj{-st7>)x(4j_#LLJla51wjrlh6X_nID-dA4$uJuZ~_VrI6)3DK@KQF4j@7f7(xyZLJkN+3jhEB7ytkO&;S4cRQ&({E&u=k080)KUJeKV00000L;wH)>;M1&c>VwXWdHyG074EBj{-st7>)x)4j_#LLJla51xOAsh6YFuID-dG4nT4aI6)3DK@KQF4j@7f7(xyZLJkN35C8xGGywnrp#A^<0ssI20000000000|Nj9MCItWhf3pO#1pw#;1pol_1qb@C#00000AP@im000000RR91000000RR91000000RR9100000;sF2v000000RR9100000{{a91000003;+NC000007z+RZ000004FCWD00000<PZP=0000082|tP00000ARQn8000008vp<R000005C8xG000008UO$Q00000FdZNO000008~^|S000002mk;800000_5S~F00000m;wL*000001poj50000000jU5000001^@s600000zybgO000003IG5A00000tpWf5000003jhEB000007ytkO000006#xJL0000000000000000{{R300000NFN{o000000ssI200000Pyqk{000006aWAK000002LJ#7000007XSbN00000$O!-d000002LJ#700000kO%+(000002mk;800000H~|0v000002><{9000007ytkO000009smFU000002mk;800000`~UxM000000RR9900000{{R1P00000;0FKz00000|NsAQ000000{{R300000@c;jB00000t_J`B00000`TzfK000001ONa4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000I2|AW0000000000000000000000000MhgG{00000Rto?C00000W(xoS00000b_)Oi00000h6?}y00000mJ0v?00000rV9W700000whI6N00000#tQ%d00000)(Zdt00000<_iD-00000_6q<2000001`GfI0000077PFY0000000000000000000000000000000000000000000000000000000000000000000000000002p}K;000000000000000M?*t8AShL0b#8QZAU7^GE-)=Kbz*gHbagR)F*q(TG$|lAE;TMN0000000000000000000000000000000000000000000000{{U4I066w000000000000000000000{{X5R0041000000000000000000000{{a6bOHbX000000000000000000000{{d7m;wL*000000000000000000000{{g8zybgO000000000000000000000{{j900jU5000000000000000000000{{mAt_J`B000000000000000000000{{pB;0FKz000000000000000000000{{sCkO%+(000000000000000000000{{vD$O!-d000000000000000000000{{yE7z+RZ000000000000000000000{{#FFbe<x000000000000000000000{{&GAPfKi000000000000000000000{{*HFbn_y000000000000000000000{{;I<PZP=000000000000000000000{{>J@DKn1000000000000000000000{{^KkP!d?000000000000000000000{{{L*bx8#000000000000000000000{{~MP!j+E000000000000000000000{|2NARQn8000000000000000000000{|5OFdZNO000000000000000000000{|8PI2|AW000000000000000000000{|BQNFN{o000000000000000000000{|ER03aX$000000000000000000000{|HSKp-Fh000000000000000000000{|KT000000000000000000000RR911OV~>000000000000000000005dZ)H0ssyGFb@C#00000E&u=k00000B>(^b0RR~Qc_JVH000000RR9100000Gynhq1OV~>00000000000000000000KL7v#0ssyGkPiR=000000000000000K>z>%0ssyG&<_9r000000000000000Q~&?~0ssyGAP@im000000000000000Y5)KL0RR~Qcp@MG000000RR9100000c>n+a0RR;MFdZNO000000000000000pa1{>0ssyGU=RQR000000000000000tN;K20RR*LARQn8000000000000000Gynhq1OV~>00000000000000000000%K!iX0RR#JOcMYA000000000000000000001OV~>00000000000000000000*#H0l000pHkP!d?000000000000000>;M1&0RR>NI2|AW000000000000000^#A|>000yKFdZNO0000000000000001_1y7000yKARQn8000000000000000836zQ0RR^ONFN{o000000000000000F984m5C9ke7$6`3000000000000000UIPFCAOIKu03aX$000000000000000HUR(t5daVX@DKn1000001ONa400000MF9W+5&!@I00000000000000000000bO8VWA^-pY00000000000000000000AOHXW5&#YWFbn_y00000{sI6100000kO2Sy5&!@I00000000000000000000*Z}|l5&!@I000000000000000000000|Ed55ds(h2p}K;0000000000000005CQ-IAp#fx5Fj7`000002mk;800000ECK)k5&!@I00000000000000000000Qv?725&#bX<PZP=000000000000000RssM35&!@I00000000000000000000X#xNM5&!@I00000000000000000000g8~2m5&!@I00000000000000000000VgmpG5&#YWU=IKQ00000D*ylh00000mjVC)5&!@I00000000000000000000ssaE25&!@I00000000000000000000*8>0m5&#PT7z+RZ000000000000000#sUBU5ds(h7$6`3000000000000000(gFYg5&!@I00000000000000000000MFRi;5dawgKp-Fh000005CH%H00000Tmt|A5C9ke03aX$0000000000000000RaF25C9nffFd9O000000000000000X#)TN5C9nf7$6`3000000000000000bprqZ5&!@I00000000000000000000r~?215&!@I00000000000000000000%>w`c5&#YWa1a0h00000WdHyG00000-2(ss5&!@I00000000000000000000{sRC25&!@I000000000000000000006$AhPAOHXW00000000000000000000F$4er5&!@I00000000000000000000Ndy1@5&#YW;1B=+000000ssI200000Sp)z85dawgU?Cs?000007y$qP00000Zv+4U5&!@I00000000000000000000jsySzAOHXW00000000000000000000odf^?AOHXW00000000000000000000w*&wH5&!@I000000000000000000000773=bz*aLa%pa7E@N<T0AEK;PeMUVUte=|VqZyLZDDC{0AE^DbWAv3Uukb?ZfSG?V{&wJbaiHCE@J>>WpZU_X>)XCa$j_9Ut?@<Ze?=-UteTzUuSG@Vqt7wWOQ$Gb6;U~cmQK>ZE$R5bY)~NH#Rvq0AF8ZZ(nC@Z(?C=Uu1M|a&uo{b$DN9X>Ms>VRCX|d0%C2baHtBW^!R|WnW}<ZEbk~UteZ&VQpn!WOZ$Ad0%O6X>?y<a&lpLUuAA|a(Mt>Uq(_vO+{ZtPDEc{0AF86PE}t;NMA-$K}|(pNJLTqUqo3>K}|_R0AF8eZfSI1VRCX|d0%C2WB^}ZX>MtBUtw}`VR>J3bYXII0AEK;PeMUVUr$CxQ$<u?R6#;aMPC44Wn^J=VE|uAPhWF%WNB_+b#rB80AE^8Q*=0KZ*yN_VRL0MHFJ4xV_$b^bZB35bYy97MPfieM@&gVLs(c}GcGg$UteQ*VP9rxZeeU`dSyUBM@&gVLtip3GA=a$Us_XiG-YmNY)NBNbTKhwXkl_+baG*7baP2#MMY9mbTKnxVRLC?UvG1Ca%Ev{NmO4{FkeMeHeWzMM@&gVLs(c}GcGg$Us_XiGB96XbZByKcVBE}ZfA68UuAM~Z*oveV?aPhOi4mRSXf^(E;ImNUu1J{Uua=&WNc*sL{~0yWo9m4UuSrDUvOn|b8l{8Y-x0PUv@A6Us_XiF*#pfbZByKcVBF8XK7<!WpZ+Fa!^ZSKtM-KNkT(dSYI<PGyrX7ZDVkGKtM-KNkT(kGA=PR0AF8Ycwt{*bY*yHbU;8yOi4mRUotK-E;RsOT4Zccc0fQ!Oi4mRSXf^(E;ImNT5fl3KtM-KNkT(dSYI<PGyq>;b97;2YhPn%YhPwzX>341M@&gVLtip3Gyq>;R82!)MNULtUjScPQ*?53Nn=xVF)?FkVRBz|a$#w7b4g=GQ(;MCMMY9mbTKnxVRLC?Uuko6a%Ev{NmO4{FkeMeH(ydtQ*<|9Ut@T9F)=YRVqtS>V_$Q0a%pa7NmDdmQ#D^yF<(VRKtM-KNkT(dSYI<PG%hkR0AE^DbTngcb#y>LM@&gVLs(c}GcGg$UteTlbYWj}bYXII0AF8Xb8}yFbYXII0AE^DbTTwwUvy}4Z+BmBb#z~EW?yn)Zf9j*W^Hs(OJjOKKu1hTLPJ<sUo$Q=E;29xUs_I6bU0~mb6;X%b7eG1ZfSHwF-3MjKu1hTLPJ<sUo$Q=0AF8hX<}nvV{>(1X>MtB0AF8ccz9oMWpZ<GZeeU`ba`KPFhD><SXe<qNnbH8GXP&&PE&7eb46)DKu1hTLPJ<sUo$Q=0AEQ|O<!bXa%E>}b97~LR82!{Z*FB&VPb4$0AE#ZcWG{9Us7drb!}xpKu1GEUo$Q+0AF8hX<}nvV{>(1W@&C|0AE^DbTeaVZa_dsOi4mRSXf^(E;ImNUu<b&V_$Q0VRCd|ZDDC{KtM-KNkT(kGA=SMH2_~<XKin8UvqR}a&%u`0AEQ|O<!_lXK8bEWpY$aLu_wuWmI8eY-IpnT251RIB9QlUt(c%Wi&}{X>>#}MRq_yM@&gVLs(c}GcGg$04{TRZFFH`04{TMa&%#004{TAb98caVPXI-X>N37a&Q1HZf|sDE<r*`Ep%aL04{ECbY(7QZgnnVb!lv5Eoo!`E@y6aE@)wMXaFu`d2VxgZ2&H0d2VxbasV!8ZgnnpWpZ<AZ*BlCXKr;ac4cyNX>V>{asV!JWo%(CWO;4?E^=jTVJ>iNbO0`CZfSG?E^usgE@y9a04{W8cys_RW@&C|04{QGWMOn+04`-{UuJS)ZDn6*WO4v5WoTb!a$#*{04`@^V_#)>V`Xr3Uvyz&Y-Ip0X>MtBUtw}`VR-;9W@&C|Utw}`VR-;9WO;63ZE0fwE@WYJVE`^-b8`SLV{dJ3Wo~o;00000000000000000000000000000000000000000000000000000000000000000000000000000000000008vp<R0RR910ssI200000I066w00000I066w000008~^|S0000000000000000RR91000000000000000BLDyZ2LJ#70ssI200000R004100000R004100000AOHXW0000000000000001ONa4000000000000000F#rGn2LJ#70ssI200000bOHbX00000bOHbX00000Bme*a0000000000000001ONa4000000000000000L;wH)_W%EH0ssI200000m;wL*00000m;wL*00000C;$Ke000001poj5000002mk;8000000000000000P5=M^3jhEB0ssI200000zybgO00000zybgO00000Kmq^&000001^@s60RR912mk;8000007ytkO00000RsaA10{{R30ssI20000000jU50000000jU500000tpWf50000000000000000RR91000000000000000UH||9|NsAQ0ssI200000t_J`B00000t_J`B00000FaQ7m000001poj5000000ssI2000000ssI200000YXATM{{R1P0ssI200000;0FKz00000;0FKz00000umAu6000001^@s60{{R32mk;8000000000000000dH?_b1ONa40ssI200000kO%+(00000kO%+(00000H~|0v000001poj5000002mk;8000007ytkO00000ga7~l1ONa4LI3~&00000$O!-d00000$O!-d00000Pyqk{000001poj57XSbN2mk;8000007ytkO00000jsO4v0RR911^@s6000007z+RZ000007z+RZ000007XSbN0000000000000001ONa4000000000000000i2wiq0RR911^@s600000Fbe<x00000Fbe<x00000@Bjb+0000000000000005C8xG000005C8xG00000lmGw#0RR911^@s600000APfKi00000APfKi000002mk;80000000000000002mk;8000002mk;800000od5s;0RR911^@s600000Fbn_y00000Fbn_y00000vIGDC0000000000000005C8xG000000000000000qW}N^0RR911^@s600000<PZP=00000<PZP=000002><{90000000000000001ONa4000000000000000sQ>@~0RR910ssI200000@DKn100000@DKn100000pa1{>0000000000000002mk;8000000000000000u>b%70RR910ssI200000kP!d?00000kP!d?00000L;wH)0000000000000001ONa4000000000000000zW@LL0RR910ssI200000*bx8#00000*bx8#00000cmV(a0000000000000002mk;8000000000000000$p8QV0RR910ssI200000P!j+E00000P!j+E0000082|tP0000000000000000RR91000000000000000+W-In4gdfE0{{R300000ARQn800000ARPbz000005C8xG0000000000000002mk;8000002mk;800000=Kufz4*&oF0{{R300000FdZNO00000FdYB@000002mk;80000000000000002mk;8000002mk;800000^8f$<1^@s60{{R300000I2|AW00000I2`~0000005CQ-I000001^@s6000002mk;8000005C8xG00000m;e9(0RR910{{R300000NFN{o00000NFM+I00000xBvhE0000000000000002mk;8000002mk;800000`~Uy|0RR910{{R30000003aX$0000003ZMW000007ytkO0000000000000002mk;80000000000000000s#O32mk;80{{R300000Kp-Fh000007$5)u00000Kmq^&000000000000000KmY&$0000000000000002LS*80RR91FaQ7m0000000000000007$5)u00000DF6Tf0000000000000000RR91000000RR91000000RR910ssI200000000000000000000NFV?J00000;0FKz000008~^|SE&u=k2mk;8000007ytkO000002><{90{{R300000000000000000000C@25`00000+ynps0000000000000000RR910000000000000005dZ)H0{{R3000000000000000000001T6pn000005CH%H0000000000000000RR91000000000000000\"\n\nexe_bin = base64.b85decode(exe_bin)\n\nwith open(\".\/kyomu\", 'wb') as f:\n    f.write(exe_bin)\n\nsubprocess.run([\"chmod +x .\/kyomu\"], shell=True)\nsubprocess.run([\".\/kyomu\"], shell=True)","s=input()\nt=input()\nans=len(t)\nfor i in range(len(s)-len(t)+1):\n    tmp=0\n    for j in range(len(t)):\n        if s[i+j]!=t[j]:\n            tmp+=1\n    ans=min(ans,tmp)\nprint(ans)","s = input()\nt = input()\n\nsl = len(s)\ntl = len(t)\nans = tl\nfor i in range(sl-tl+1):\n  cnt = 0\n  for j in range(tl):\n    if s[i+j] != t[j]:\n      cnt += 1\n  ans = min(ans, cnt)\nprint(ans)","S = input()\nT = input()\ns = len(S)\nt = len(T)\nL = [\"\"]*(s-t+2)\nmatch = [0]*(s-t+1)\n\n\nfor p in range(s-t+1):\n    for q in range(t):\n        L[p] += S[p+q]\n\nfor r in range(s-t+1):\n    for s in range(t):\n        if L[r][s] == T[s]:\n            match[r] += 1\n\nprint(t-max(match))\n\n\n","import sys\ns = input()\nt = input()\n\nif (t in s):\n    print(0)\n    sys.exit()\n\nans = 1000\nfor i in range(len(s)-len(t)+1):\n    diff = 0\n    for j in range(len(t)):\n        if (s[i+j] == t[j]):\n            pass\n        else:\n            diff += 1\n    \n    ans = min(ans, diff)\n\nprint(ans)\n","import sys\nfrom collections import deque\n#import numpy as np\nimport math\n#sys.setrecursionlimit(10**6)\ndef S(): return sys.stdin.readline().rstrip()\ndef SL(): return map(str,sys.stdin.readline().rstrip().split())\ndef I(): return int(sys.stdin.readline().rstrip())\ndef IL(): return map(int,sys.stdin.readline().rstrip().split())\n\ndef solve():\n    lent = len(t)\n    for i in range(lent,-1,-1):\n        for j in range(lent-i+1):\n            if lent<=i+j:    break\n            if t[j:i+j] in s[j:]:\n                return lent-i\n    return lent\n\nif __name__=='__main__':\n    s = S()\n    t = S()\n    print(solve())","import bisect\nimport sys,io\nimport math\nfrom collections import deque\nfrom heapq import heappush, heappop\n\ninput = sys.stdin.buffer.readline\n\ndef sRaw():\n    return input().rstrip(\"\\r\")\n\n\ndef iRaw():\n    return int(input())\n\n\ndef ssRaw():\n    return input().split()\n\n\ndef isRaw():\n    return list(map(int, ssRaw()))\n\nINF = 1 << 29\n\nDIV = (10**9) + 7\n#DIV = 998244353\n\ndef mod_inv_prime(a, mod=DIV):\n    return pow(a, mod-2, mod)\n\n\ndef mod_inv(a, b):\n    r = a\n    w = b\n    u = 1\n    v = 0\n    while w != 0:\n        t = r\/\/w\n        r -= t*w\n        r, w = w, r\n        u -= t*v\n        u, v = v, u\n    return (u % b+b) % b\n\n\ndef CONV_TBL(max, mod=DIV):\n    fac, finv, inv = [0]*max, [0]*max, [0]*max\n    fac[0] = fac[1] = 1\n    finv[0] = finv[1] = 1\n    inv[1] = 1\n    for i in range(2, max):\n        fac[i] = fac[i-1]*i % mod\n        inv[i] = mod - inv[mod % i] * (mod\/\/i) % mod\n        finv[i] = finv[i-1]*inv[i] % mod\n\n    class CONV:\n        def __init__(self):\n            self.fac = fac\n            self.finv = finv\n            pass\n\n        def ncr(self, n, k):\n            if(n < k):\n                return 0\n            if(n < 0 or k < 0):\n                return 0\n            return fac[n]*(finv[k]*finv[n-k] % DIV) % DIV\n\n    return CONV()\n\n\ndef cumsum(As):\n    s = 0\n    for a in As:\n        s += a\n        yield s\n\n\nsys.setrecursionlimit(200005)\n\n\ndef dijkstra(G,start=0):\n    heap = []\n    cost = [INF]*len(G)\n    heappush(heap,(0,start))\n    while len(heap)!=0:\n        c,n = heappop(heap)\n        if cost[n] !=INF:\n            continue\n        cost[n]=c\n        for e in G[n]:\n            ec,v = e\n            if cost[v]!=INF:\n                continue\n            heappush(heap,(ec+c,v))\n    return cost\n\n\ndef main():\n    S= sRaw()\n    T =sRaw()\n    ans = 10*10\n    for sidx in range(0,len(S)-len(T)+1):\n        score = sum([1 for idx in range(len(T)) if S[sidx+idx]!=T[idx]])\n        ans=min(score,ans)\n    print(ans)\n\nmain()\n","S = input()\nT = input()\n\ntc = len( T )\nans = 0\nfor i in range( len(S) - tc + 1 ):\n  cnt = 0\n  for j in range( tc ):\n    if S[ j + i ] == T[ j ]:\n      cnt += 1\n  ans = max( ans, cnt )\nprint( tc - ans )","s=input()\nt=input()\nans=float('inf')\nfor i in range(len(s)-len(t)+1):\n  tmp=0\n  for j in range(len(t)):\n    if t[j]==s[i+j]:\n      pass\n    else:\n      tmp+=1\n  ans=min(ans,tmp)\nprint(ans)","s = input()\nt = input()\n\nl = len(t)\nflag = 0\nfor i in range(1, l+1):\n    if flag == 1:\n        break\n    for j in range(i):\n        if t[j:j+(l-i)+1] in s[j:len(s)-i]:\n            flag = 1\n            print(i-1)\n            break\n\nif flag == 0:\n    print(l)","s = input()\nt = input()\n\nmax_tmp = 0\nout = 0\n\n\ndef comp(a, b):\n    cnt = 0\n    for i in range(len(a)):\n        if a[i] == b[i]:\n            cnt += 1\n    return cnt\n\n\nfor i in range(len(s) - len(t) + 1):\n    max_tmp = comp(s[i:i + len(t)], t)\n    out = max(out, max_tmp)\n\nprint(len(t) - out)","s = input()\nt = input()\nn = len(s)\nm = len(t)\nans = 1000\n\nfor i in range(n - m + 1):\n    cnt = 0\n    for j in range(m):\n        if s[i + j] != t[j]:\n            cnt += 1\n    ans = min(ans, cnt)\n\nprint(ans)","S = input()\nT = input()\n\nm = 0\nfor i in range(len(S)-len(T)+1):\n  n = 0\n  for j in range(len(T)):\n    if(S[i+j]==T[j]):\n      n+=1\n  if(n>m):\n    m = n\nprint(len(T)-m)","# coding: utf-8\n\nimport math\nimport re\nimport numpy as np\nimport copy\n\n#\u8aad\u307f\u8fbc\u3080\nS = input()\nT = input()\n\nans = len(S)\n\n#\u9ad8\u3005(10^3)^2\n\nfor i in range(len(S) - len(T)):\n    #\u4f55\u6587\u5b57\u9055\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\n    cnt = 0\n    for j in range(len(T)):\n        if T[j] != S[i+j]:\n            cnt += 1\n\n    if cnt < ans:\n        ans = cnt\n        \nprint(ans)\n\n","S = input()\nT = input()\n\nlt = len(T)\nans = lt\nfor num in range(len(S) - lt + 1):\n    s = S[num:num+lt]\n    diff = 0\n    for i in range(len(T)):\n        if(T[i] != s[i]):\n            diff += 1\n    ans = min(ans, diff)\n\nprint(ans)","s = input()\nt = input()\n\nmin = len(t)\nfor s_index in range(len(s) - len(t) + 1):\n    different_chars = 0\n    for t_index in range(len(t)):\n        if s[s_index + t_index] != t[t_index]:\n            different_chars += 1\n    if min > different_chars:\n        min = different_chars\nprint(min)","#\n# abc177 c\n#\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"cabacc\nabc\"\"\"\n        output = \"\"\"1\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"codeforces\natcoder\"\"\"\n        output = \"\"\"6\"\"\"\n        self.assertIO(input, output)\n\n\ndef resolve():\n    S = input()\n    T = input()\n\n    ans = float(\"inf\")\n    for i in range(len(S)-len(T)+1):\n        tmp = 0\n        for j in range(len(T)):\n            if T[j] != S[i+j]:\n                tmp += 1\n        ans = min(ans, tmp)\n\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    # unittest.main()\n    resolve()\n","s=input()\nt=input()\nlens=len(s)\nlent=len(t)\nmaxg=0\nfor i in range(lens-lent+1):\n  x=s[i:i+lent]\n  g=0\n  for j in range(lent):\n    if x[j]==t[j]:\n      g+=1\n  if g>maxg:\n    maxg=g\nprint(lent-maxg)","import sys, bisect, math, itertools, string, queue, copy\nmod = 10**9+7\ndef inp(): return int(input())\ndef inpm(): return map(int,input().split())\ndef inpl(): return list(map(int, input().split()))\ndef inpls(): return list(input().split())\ndef inplm(n): return list(int(input()) for _ in range(n))\ndef inplL(n): return [list(input()) for _ in range(n)]\ndef inplT(n): return [tuple(input()) for _ in range(n)]\ndef inpll(n): return [list(map(int, input().split())) for _ in range(n)]\ndef inplls(n): return sorted([list(map(int, input().split())) for _ in range(n)])\n\ns = input()\nt = input()\n\nm = 0\nfor i in range(len(s)):\n    tmp = 0\n    for j in range(len(t)):\n        if(j + i >= len(s)):\n            break\n        if(s[j + i] == t[j]):\n            tmp += 1\n        m = max(m, tmp)\nprint(len(t) - m)\n","ma = lambda :map(int,input().split())\nlma = lambda :list(map(int,input().split()))\ntma = lambda :tuple(map(int,input().split()))\nni = lambda:int(input())\nyn = lambda fl:print(\"Yes\") if fl else print(\"No\")\nimport collections\nimport math\nimport itertools\nimport heapq as hq\nceil = math.ceil\ns = input()\nt = input()\nls = len(s)\nlt = len(t)\nans = 10**9\nfor i in range(0,ls-lt+1):\n    #print(i,i+lt-1)\n    tmp=0\n    for j in range(lt):\n        if t[j]!=s[i+j]:\n            tmp+=1\n    ans =min(ans,tmp)\nprint(ans)\n","#!\/usr\/bin\/env python\n# -*- coding: utf-8 -*-\n\n\ndef main():\n    S = input()\n    T = input()\n\n    s = len(S)\n    t = len(T)\n\n    ans = t\n\n    for i in range(s - t + 1):\n        tmp = 0\n        for j in range(t):\n            if S[i + j] != T[j]:\n                tmp += 1\n        ans = min(ans, tmp)\n\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n","from sys import stdin,stdout\ndef INPUT():return list(int(i) for i in stdin.readline().split())\ndef inp():return stdin.readline()\ndef out(x):return stdout.write(x)\nimport math\nimport random\nJ=10**19\n###############################################################################\\n=17\ns=input()\nt=input()\nans=10**6\nfor i in range(len(s)-len(t)+1):\n    count=0\n    for j in range(len(t)):\n        if s[i+j]!=t[j]:\n            count+=1\n    ans=min(count,ans)\nprint(ans)\n","s=input()\nl=input()\na=len(l)\nbig=0\nfor i in range(len(s)-a+1):\n    cnt=0\n\n    for j in range(i,i+a):\n        if s[j]==l[j-i]:\n            cnt+=1\n    if cnt>big:\n        big=cnt\nprint(a-big)","import sys\ns=input()\nt=input()\nn=10**5\nk=0\nh=[]\nfor i in range(len(s)-len(t)+1):\n    h=s[i:i+len(t)]\n    l=0\n    for j in range(len(t)):\n        if h[j]!=t[j]:\n            l+=1\n    n=min(n,l)\nprint(n)\n","s=input()\nt=input()\n\nmax_itti=0\n\nfor i in range(len(s)-len(t)+1):\n    \n    ittisuu=0\n    \n    for j in range(len(t)):\n        \n        if t[j] == s[i+j]:\n            ittisuu += 1\n            \n            \n    max_itti=max(max_itti,ittisuu)  \nprint(len(t) - max_itti)\n      \n      ","s = input()\nt = input()\n\nls = len(s)\nlt = len(t)\n\nres = 0\nfor i in range(ls-lt+1):\n    ss =s[i:i+lt]\n    cnt = 0\n    for j in range(lt):\n        if ss[j] == t[j]:\n            cnt += 1\n    res = max(res, cnt)\n\nprint(lt - res)","import numpy\n\nS = numpy.array([ord(s) for s in input()])\nT = numpy.array([ord(s) for s in input()])\n\nTL = len(T)\nSL = len(S)\n\nC = [numpy.count_nonzero(S[i:i + TL] != T) for i in range(SL - TL + 1)]\nprint(numpy.min(C))","s = input()\nt = input()\nif t in s:\n  print(0)\nelse:\n  for i in range(len(t)-1):\n    i += 1\n    t1 = t[:i]\n    t2 = t[i:]\n    if t2 in s:\n      print(i)\n      break\n    i *= -1\n    t3 = t[i:]\n    t4 = t[:i]\n    if t4 in s:\n      print(i*-1)\n      break","#a,b,c = list(map(int,input().split()))\n\ns = input().rstrip()\nt = input().rstrip()\n\nbest = 99999999\n\nfor i in range(len(s) - len(t) + 1):\n  tmp = 0\n  for j in range(len(t)):\n    if t[j] != s[j+i]:\n      tmp += 1\n  best = min(best,tmp)\n  \nprint(best)","s = str(input())\n\nt = str(input())\n\nn = len(s)\nm = len(t)\n\nc = m\nfor i in range(n-m+1):\n    d = 0\n    for j in range(m):\n        if t[j] != s[i + j]:\n            d += 1\n    c = min(c,d)\n\nprint(c)\n","S=[i for i in input()]\nT=[j for j in input()]\nans=[]\nfor i in range(len(S)-len(T)):\n  count=0\n  new_S=[t for t in S[i:]]\n  for j,k in zip(new_S,T):\n    if j==k:\n      count+=1\n  else:\n    ans.append(count)\n    \nprint(len(T)-max(ans))   ","if __name__ == \"__main__\":\n    s = input()\n    t = input()\n\n    for i, e in enumerate(t):\n        compare_t = t[0:len (t) - i]\n        if compare_t in s:\n            print(i+len(t) - len(t))\n            break\n    print(0)","import sys\n\nsys.setrecursionlimit(10 ** 6)\ninput = sys.stdin.readline\nfrom math import floor, sqrt, factorial, hypot, log  # log2\u306a\u3044\uff59\uff50\nfrom heapq import heappop, heappush, heappushpop\nfrom collections import Counter, defaultdict, deque\nfrom itertools import accumulate, permutations, combinations, product, combinations_with_replacement\nfrom bisect import bisect_left, bisect_right\nfrom copy import deepcopy\nfrom fractions import gcd\nfrom random import randint\n\n\ndef ceil(a, b): return (a + b - 1) \/\/ b\n\n\ninf = float('inf')\nmod = 10 ** 9 + 7\n\n\ndef pprint(*A):\n    for a in A:     print(*a, sep='\\n')\n\n\ndef INT_(n): return int(n) - 1\n\n\ndef MI(): return map(int, input().split())\n\n\ndef MF(): return map(float, input().split())\n\n\ndef MI_(): return map(INT_, input().split())\n\n\ndef LI(): return list(MI())\n\n\ndef LI_(): return [int(x) - 1 for x in input().split()]\n\n\ndef LF(): return list(MF())\n\n\ndef LIN(n: int): return [I() for _ in range(n)]\n\n\ndef LLIN(n: int): return [LI() for _ in range(n)]\n\n\ndef LLIN_(n: int): return [LI_() for _ in range(n)]\n\n\ndef LLI(): return [list(map(int, l.split())) for l in input()]\n\n\ndef I(): return int(input())\n\n\ndef F(): return float(input())\n\n\ndef ST(): return input().replace('\\n', '')\nimport sys\nimport itertools\nimport copy\n\n\ndef main():\n    # D, T, S = MI()\n    # L = LLIN(N)\n    S = input()\n    T = input()\n\n    ushiro = 0\n    for i in range(len(T)):\n        # print(T[0:len(T)-i])\n        a = T[0:len(T)-i]\n        ushiro = i\n        if a in S:\n            break\n    mae = 0\n    for i in range(len(T)):\n        # print(T[i:len(T)])\n        b = T[i:len(T)]\n        mae = i\n        if b in S:\n            break\n    # print(ushiro)\n    # print(mae)\n    print(min(ushiro,mae) - 1)\n    #     if T[-i]\n    # if D \/ T <= S:\n    #     print('Yes')\n    # else:\n    #     print('No') \n    # cnt = 0\n    # for l in L:\n    #     num = l[0] ** 2 + l[1] ** 2 \n    #     if num <= D ** 2:\n    #         cnt+=1\n    # print(cnt)\n    # print(row)\n    # total = sum(row)\n    # target = total - K\n    # if K == total:\n    #     print(1)\n    #     sys.exit()\n    # col = []\n    # for w in range(W):\n    #     cnt = 0\n    #     for h in range(H):    \n    #         print(A[h][w])\n    #         if A[h][w] == '#':\n    #             cnt += 1\n    #     col.append(cnt)\n    # print(col)\n    # ans = 0\n    # for w in range(W):\n    #     for h in range(H):\n    #         if A[h][w] == '#':\n    #             if col[w] + row[h] - 1 == target:\n    #                 print(str(h) + str(w))\n    #                 ans +=1\n    #         else:\n    #             if col[w] + row[h] == target:\n    #                 print(str(h) + str(w))\n    #                 ans +=1\n    # print(ans)\n    #     for  in x:\n\n\n    # print('AC x ' + str(cnt['AC']))\n    # print('WA x ' + str(cnt['WA']))\n    # print('TLE x ' + str(cnt['TLE']))\n    # print('RE x ' + str(cnt['RE']))\n    \n\nif __name__ == '__main__':\n    main()","S = input()\nt = input()\nneq = len(t)\nfor i in range(len(S)-len(t)+1):\n  neq_temp = 0\n  for j in range(len(t)):\n    if S[i+j]!=t[j]:\n      neq_temp += 1\n  neq = min(neq,neq_temp)\nprint(neq)","s = input()\nt = input()\n\ndef check(a, b):\n    if len(a) != len(b):\n        return 0\n    else:\n        ans = 0\n        for i in range(len(a)):\n            if a[i] == b[i]:\n                ans += 1\n        return ans\n\nans = 0\nfor i in range(len(s)):\n    x = check(s[i:i + len(t)], t)\n    if ans  < x:\n        ans = x\n\nprint(len(t) - ans)","def abc177b():\n    s = input()\n    t = input()\n    min_val = float('inf')\n    for i in range(len(s) - len(t) + 1):\n        cnt = 0\n        for j in range(len(t)):\n            if s[i + j] != t[j]:\n                cnt += 1\n        min_val = min(cnt, min_val)\n    print(min_val)\n\n\nabc177b()","S = list(input())\nT = list(input())\nls = len(S)\nlt = len(T)\nans = lt\nfor offset in range(ls - lt + 1):\n\tcnt = 0\n\tfor i in range(lt):\n\t\tif S[offset + i] != T[i]:\n\t\t\tcnt += 1\n\tans = min(ans, cnt)\nprint(ans)","S = input()\nT = input()\nST = [0 for _ in range(len(S)-len(T)+1)]\nfor i in range(len(S)-len(T)+1):\n  for j in range(len(T)):\n    s = S[i+j]\n    t = T[j]\n    if  s==t:\n      ST[i]+=1\nprint(len(T)-max(ST))","s = input()\nt = input()\n\nnum_s = len(s)\nnum_t = len(t)\nans = len(t)\n\n# T\u306e\u5404\u4f4d\u7f6e\u306b\u304a\u3044\u3066\u3001S\u306e\u6587\u5b57\u6570\u306e\u3046\u3061\u4f55\u500b\u4e00\u81f4\u3057\u3066\u3044\u308b\u306e\u304b\u3001\u5168\u6570\u30c1\u30a7\u30c3\u30af\u3002\n# > O(T*S)\uff1e\u300010**6\u30aa\u30fc\u30c0\u30fc\n\nfor i in range(num_s):\n    end = i + num_t\n    if (end > num_s):\n        break\n    tar_s = s[i:end]\n    # print(tar_s)\n\n    count = 0\n    for a, b in zip(tar_s, t):\n        if (a != b):\n            #print('add', a)\n            count += 1\n\n    ans = min(ans, count)\n\n\nprint(ans)\n","S = input()\nT = input()\n\ndef count_common(a,b):\n    cnt = 0\n    for i in range(len(a)):\n        if a[i] == b[i]:\n            cnt += 1\n    return cnt\n\ncnt = 0\n\nfor i in range(len(S) - len(T) + 1):\n    cnt = max(cnt, count_common(S[i:i+len(T)],T))\n\nprint(len(T)-cnt)","S = input()\nT = input()\n\nL = len(T)\nans = 0\n\nfor i in range(len(S)-L+1):\n    cnt = 0\n    for j in range(L):\n        \n        if S[i+j] == T[j]:\n            cnt += 1\n        ans = max(ans,cnt)\n        \nprint(L-ans)","S = input()\nT = input()\n\n\nmax_diff = 0\nwindow = len(T)\nfor i in range(0, len(S) - window + 1):\n    x = S[i: i+window]\n    count = 0\n    for a, b in zip(T, x):\n        if a != b:\n            count += 1\n    max_diff = max(count, max_diff)\nprint(max_diff)","# \/usr\/bin\/python3\n# -*- coding: utf-8 -*-\nfrom queue import Queue\nfrom queue import LifoQueue as Stack\nfrom math import sqrt, floor, ceil, log2, log10, pi\nfrom fractions import gcd\nfrom itertools import permutations, combinations\nfrom operator import itemgetter\nfrom functools import cmp_to_key\nfrom bisect import bisect_left\n\n\nINF=1001001001\n__MOD__=(10**9)+7\nyn = 'YNeos'\njudge = False\ncnt = 0\nans = None\n\n\ndef lcm(a, b):\n    return (a*b) \/\/ gcd(a,b)\n\ndef intinput():\n    return int(input())\n\ndef mulinputs():\n    return map(int,input().split())\n\ndef lineinputs(func=intinput):\n    datas = []\n    while True:\n        try:\n            datas.append(func())\n        except EOFError:\n            break\n    return datas\n\ndef bindex(a,x):\n    i = bisect_left(a,x)\n    if i != len(a) and a[i] == x:\n        return i\n    return None\n\nclass ModInt():\n    def __init__(self, x):\n        self.__x = (x % __MOD__)\n    def __add__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__((self.__x + other.__x)%__MOD__))\n        elif type(other) == ModInt:\n            return self.__class__((self.__x + other.__x)%__MOD__)\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n    def __radd__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__((other.__x + self.__x)%__MOD__))\n        elif type(other) == ModInt:\n            return self.__class__((other.__x + self.__x)%__MOD__)\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n\n    def __sub__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__((self.__x - other.__x)%__MOD__))\n        elif type(other) == ModInt:\n            return self.__class__((self.__x - other.__x)%__MOD__)\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n    def __rsub__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__((other.__x - self.__x)%__MOD__))\n        elif type(other) == ModInt:\n            return self.__class__((other.__x - self.__x)%__MOD__)\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n\n    def __mul__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__((self.__x * other.__x)%__MOD__))\n        elif type(other) == ModInt:\n            return self.__class__((self.__x * other.__x)%__MOD__)\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n    def __rmul__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__((other.__x * self.__x)%__MOD__))\n        elif type(other) == ModInt:\n            return self.__class__((other.__x * self.__x)%__MOD__)\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n\n    def __truediv__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__((self.__x * other.__modinv())%__MOD__))\n        elif type(other) == ModInt:\n            return self.__class__((self.__x * other.__modinv())%__MOD__)\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n    def __rtruediv__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__((other.__x * self.__modinv())%__MOD__))\n        elif type(other) == ModInt:\n            return self.__class__((other.__x * self.__modinv())%__MOD__)\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n\n    def __pow__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__(pow(self.__x, other.__x, __MOD__)))\n        elif type(other) == ModInt:\n            return self.__class__(pow(self.__x, other.__x, __MOD__))\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n    def __rpow__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__(pow(other.__x, self.__x, __MOD__)))\n        elif type(other) == ModInt:\n            return self.__class__(pow(other.__x, self.__x, __MOD__))\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n\n    def __modinv(self, m=__MOD__):\n        a = self.__x\n        if a == 0:\n            raise ZeroDivisionError()\n        if gcd(a, m) != 1:\n            raise Exception(\"%s\u306e\u9006\u6570\u306f\u6c42\u307e\u308a\u307e\u305b\u3093\u3002\" % a)\n        b, u, v = m, 1, 0\n        while b != 0:\n            t = a\/\/b;\n            a -= t*b\n            a, b = b, a\n            u -= t * v\n            u, v = v, u\n        u %= m\n        if u < 0:\n            u += m\n        return u\n    def __int__(self):\n        return self.__x\n    def __str__(self):\n        return str(self.__x)\n\n\n\nif __name__ == '__main__':\n    S = input()\n    T = input()\n\n    i = 0\n    ans = INF\n    while i < len(S)-len(T):\n        s = S[i]\n        j, cnt = i, 0\n        for t in T:\n            if t == S[j]:\n                cnt += 1\n            j += 1\n        if cnt == len(T):\n            # matched\n            print(0)\n            exit()\n        ans = min(ans, len(T)-cnt)\n        i += 1\n    if ans >= INF:\n        print(len(T))\n    else:\n        print(ans)\n","def solve():\n    S = input()\n    T = input()\n\n    ans = float('inf')\n    for i in range(0,len(S)-len(T)+1):\n        cnt = 0\n        for j in range(len(T)):\n            if S[i+j] != T[j]:\n                cnt += 1\n        ans = min(cnt,ans)\n    \n    print(ans)\n\nif __name__ == '__main__':\n    solve()\n","S = input()\nT = input()\nans = float('inf')\n\nfor i in range(len(S)-len(T)+1):\n  tmp = 0\n  for a,b in zip(S[i:i+len(T)],T):\n    if a!=b:\n      tmp+=1\n  ans = min(ans,tmp)\n  \nprint(ans)","S = input()\nT = input()\n\nmin_length = 10000\nlen_def = len(S) - len(T)\nfor i in range(len_def + 1):\n    counter = 0\n    for j in range(len(T)):\n        if S[j + i] != T[j]:\n            counter += 1\n\n    if counter < min_length:\n        min_length = counter\nprint(min_length)\n","S = input()\nT = input()\n\nans = 0\nif T in S:\n  print(ans)\n  exit()\n\nl = len(T)\nfor t in range(1,l):\n  if (T[t:] in S) or (T[:-1*t] in S):\n    ans = t\n    break\n\nprint(ans)","#[int(i) for i in input().split()]\ndef diff(x,y):\n\tret = 0\n\tfor i in range(len(x)):\n\t\tif x[i]!=y[i]:\n\t\t\tret+=1\n\treturn ret\ns=input()\nt=input()\n\nl = len(t)\nans = float('inf')\nfor i in range(len(s)):\n\tif i+l<len(s)+1:\n\t\ttmp = diff(s[i:i+l], t)\n\t\tans = min(ans, tmp)\n\t\t\nprint(ans)\n","S = input()\nT = input()\n\nvalues = [[] for a in range(len(T))]\nfor i, s in enumerate(S):\n    for n, v in enumerate(T):\n        if v == s:\n            values[n].append(i)\n\nmaxR = 0\nfor ni, val in enumerate(values):\n    current_i = 1 + ni\n    for i in val:\n        if i < ni or len(S) - (i+1) < len(T) - (ni+1):\n            continue\n        current = 1\n        for j in range(len(T) - current_i):\n            s_index = i + j + 1\n            if s_index >= len(S):\n                break\n            if S[s_index] == T[j+current_i]:\n                current += 1\n        maxR = max(current, maxR)\n\nprint(len(T) - maxR)","s=list(input())\nt=list(input())\nn=len(t)\nval=0\nfor i in range(len(s)-n+1):\n    temp=0\n    for j in range(n):\n        if s[i+j]==t[j]:\n            temp+=1\n    val=max(val,temp)\n    if val==n:\n        break\nprint(n-val)","S = input()\nT = input()\nlen_T = len(T)\nd = len(S)-len_T\nresult = 10000\nfor i in range(d+1):\n    if i == d:\n        x = S[i:]\n    else:\n        x = S[i:-d+i]\n    sum = 0\n    for i in range(len_T):\n        if T[i] == x[i]:\n            sum += 1\n    sum = len_T - sum\n    if result > sum:\n        result = sum\nprint(result)","import sys\n\nS = list(str(input()))\nT = list(str(input()))\n\nMax = 0\n\nfor i in range(len(S)-len(T)+1):\n    hoge = 0\n    for j in range(len(T)):\n        if S[i+j] == T[j]:\n            hoge += 1\n    Max = max(Max,hoge)\n    \nprint(len(T)-Max)","from collections import defaultdict, deque, Counter\nfrom heapq import heappush, heappop, heapify\nimport math\nimport bisect\nimport random\nfrom itertools import permutations, accumulate, combinations, product\nimport sys\nimport string\nfrom bisect import bisect_left, bisect_right\nfrom math import factorial, ceil, floor\nfrom operator import mul\nfrom functools import reduce\n\n\nsys.setrecursionlimit(2147483647)\nINF = 10 ** 13\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef I(): return int(sys.stdin.readline())\ndef LS(): return sys.stdin.readline().rstrip().split()\ndef S(): return sys.stdin.readline().rstrip()\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef LSR(n): return [LS() for i in range(n)]\ndef SRL(n): return [list(S()) for i in range(n)]\ndef MSRL(n): return [[int(j) for j in list(S())] for i in range(n)]\n\nmod=10**9+7\n\n\ns=S()\nt=S()\nans=0\nfor i in range(len(s)-len(t)):\n    ret=0\n    for j in range(len(t)):\n        if t[j]==s[i+j]:\n            ret+=1\n    ans=max(ret,ans)\n\nprint(len(t)-ans)\n","S = input()\nT = input()\n\n\ndef a():\n    l = len(T)\n    for i in range(l, 0, -1):\n        for j in range(0, l-i+1):\n            if T[j:j+i] in S[j:]:\n                return l-i\n\n\nprint(a())\n","s = input()\nt = input()\n\nans = float(\"inf\")\nfor i in range(len(s)):\n    count = 0\n    if i + len(t) > len(s):\n        break\n\n    for j in range(len(t)):\n        if t[j] != s[i+j]:\n            count+=1\n    \n    ans = min(ans,count)\n\nprint(ans)","# -*- coding: utf-8 -*-\nimport sys\n\nif __name__ == '__main__':\n    S = input()\n    T = input()\n    \n    for i in range(len(T), 0, -1): #T\u306esubstring\u306e\u6587\u5b57\u6570\n        for j in range(0, len(T)-i+1): #T\u306esubstring\u306e\u958b\u59cb\u4f4d\u7f6e\n            if S[j:len(S)-1-(len(T)-i)+j+1].find(T[j:i-1+j+1]) != -1:\n                print (len(T)-i)\n                sys.exit()\n                \n                ","S = input()\nT = input()\n\nmax_count = 0\nfor i in range(len(S)-len(T)+1):\n    count = 0\n    for j in range(len(T)):\n        if T[j] == S[i+j]:\n            count += 1\n    max_count = max(max_count, count)\n\nprint(len(T)-max_count)","S = input()\nT = input()\nl = len(T)\nans = l\nprint(ans)\nfor i in range(l):\n  for j in range(l):\n    if (i<=j):\n      if T[i:j+1] in S:\n        if f >= i and f + (l-j) <= len(S):\n          ans = min(ans, l - (j+1-i))\nprint(ans)\n        ","s = input()\nt = input()\n\nans = len(t)\n\nfor i in range(len(s)-len(t)+1):\n    c = 0\n    for j in range(len(t)):\n        if s[i+j] != t[j]:\n            c += 1\n\n    ans = min(c, ans)\n\nprint(c)\n","a = \"abc\"\nprint(a[0:])","S = input()\nT = input()\n\nmin_cnt = 9999999999\nfor i in range(0, len(S) - len(T)+1):\n    s = S[i: i + len(T)]\n    cnt = 0\n    for m, n in zip(s, T):\n        if m != n:\n            cnt +=1\n    min_cnt = min(min_cnt, cnt)\n\nprint(min_cnt)\n\n","\nS = input()\nT = input()\n\ntext = ''\n\nfor moji in T:\n    text += moji\n    if S.count(text) == 0:\n        text = text[0:-1]\n        break\n\nif text == '':\n    print(len(T)-1)\nelse:\n    print(len(T)-len(text))","S = input()\nT = input()\n\ns = len(S)\nt = len(T)\n\nans = 0\n\nfor i in range(s - t + 1):\n    c = 0\n    for j in range(t):\n        if S[i + j] == T[j]:\n            c += 1\n    ans = max(ans, c)\n\nprint(t - c)","S = input()\nT = input()\nans = len(T)\nfor i in range(len(S)-len(T)+1):\n    cnt = 0\n    for j in range(len(T)):\n        # print(i, j, S[i+j], T[j])\n        if S[i+j] != T[j]:\n            cnt += 1\n    ans = min(ans, cnt)\nprint(ans)","s = input()\nt = input()\nmax = 0\na = 0\n\nfor i in range(len(s)):\n  m = i\n\n  for j in range(len(t)):\n    if i < j:\n      break\n    \n    if s[m] == t[j]:\n      a += 1\n      m += 1\n      if max < a:\n        max = a\n    else:\n      a = 0\n      m = i\n\nprint(len(t) - max)","import numpy as np\nimport difflib\nS,T = [input() for i in range(2)]\nlent=len(T)\nlens=len(S)\nmin=10000\nfor i in range (0,lens-lent+1):\n  now=S[i:i+lent]\n  curnum=0\n  for j in range(0,lent):\n    if now[j]!=T[j]:\n      curnum=curnum+1\n  if curnum<min:\n    min=curnum\nprint(min)\n   ","s = list(input())\nt = list(input())\n\na = [0] * (len(s) - len(t) + 1)\n\nfor i in range(len(s) - len(t) + 1):\n    for j in range(len(t)):\n        if s[i + j] != t[j]:\n            a[i] += 1\n\nprint(min(a))","S = input()\nT = input()\nlenS = len(S)\nlenT = len(T)\nmaxcnt = 0\nfor l in range(lenT):\n    for r in range(l,lenT):\n        if T[l:r+1] in S[l:lenS-lenT+r+1]:\n            maxcnt = max(maxcnt, r - l + 1)\nprint(lenT - maxcnt)","S = input()\nT = input()\n\nanswer = 100000\nfor i in range(len(S) - len(T) + 1):\n    distance = 0\n    for j in range(len(T)):\n        if S[i + j] != T[j]:\n            distance += 1\n    if answer > distance:\n        answer = distance\nprint(answer)","s = input()\nt = input()\n\nresult = 0\nfor i in range(len(s) - len(t) + 1):\n    cnt = 0\n    for j in range(len(t)):\n        if s[i+j] == t[j]:\n            cnt += 1\n    result = max(result, cnt)\n        \nprint(len(t) - result)\n","import math\nini = lambda : int(input())\ninm = lambda : map(int,input().split())\ninl = lambda : list(map(int,input().split()))\ngcd = lambda x,y : gcd(y,x%y) if x%y else y\ndef factorization(n):\n    arr = []\n    temp = n\n    for i in range(2, int(-(-n**0.5\/\/1))+1):\n        if temp%i==0:\n            cnt=0\n            while temp%i==0:\n                cnt+=1\n                temp \/\/= i\n            arr.append([i, cnt])\n    if temp!=1:\n        arr.append([temp, 1])\n    if arr==[]:\n        arr.append([n, 1])\n    return arr\ndef make_divisors(n):\n    divisors = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n \/\/ i:\n                divisors.append(n\/\/i)\n    divisors.sort()\n    return divisors\n \n#maincode-------------------------------------------------\n\ns = input()\nt = input()\nans = 0\n\nfor i in range(len(t)):\n    if t[i] != s[i]:\n        ans += 1\n\nfor i in range(len(s)-len(t)):\n    c = 0\n    for j in range(len(t)):\n        if t[j] != s[i + j]:\n            c += 1\n    ans = min(c,ans)\nprint(ans)","s = input()\nt = input()\n\na = len(s)\nb = len(t)\n\nans = []\n\nfor i in range((a-b)+1):\n    an = 0\n    for j in range(b):\n        if s[i+j] != t[j]:\n            an += 1\n            \n    ans.append(an)\n\nprint(min(ans))","S=input()\nT=input()\nnum=len(S)\nfor i in range(len(S)-len(T)+1):\n    x=0\n    for j in range(len(T)):\n        if S[i+j]!=T[j]:\n            x+=1\n    if x<=num:\n        num=x\nprint(num)","def main():\n    target = input()\n    source = input()\n    diff = len(target) - len(source)\n    max_change = len(source)\n    for i in range(diff+1):\n        temp = target[i:len(target)-diff+i]\n        change = sum([1 for t, s in zip(temp, source) if(t!=s)])\n        if(change < max_change):\n            max_change = change\n    print(max_change)\nif __name__ == '__main__':\n    main()","import sys\n\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef II(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef SI(): return sys.stdin.readline()[:-1]\n\ns=SI()\nt=SI()\nsn=len(s)\ntn=len(t)\nans=100000\nfor i in range(sn-tn+1):\n    cur=0\n    for j in range(tn):\n        cur+=s[i+j]!=t[j]\n    ans=min(ans,cur)\nprint(ans)\n","import re\ns = input()\nt = input()\nans = len(t)\nfor i in range(len(t)+1):\n    for j in range((len(t))-i+1):\n        pattern = \".\"*j + t[j:j+i] + \".\" *(len(t)-(i+j))\n        if(pattern == \".\"*len(t)) :\n            continue\n        r = re.search(pattern, s)\n        if r :\n            ans = min(ans,len(t)-i)\nprint(ans)","#a = list(map(int,input().split()))\na = input()\nb = input()\npointer = 0\nsmallest  = 0\ndef compare(s1,s2):\n\tcount = 0\n\tfor x in range(len(s1)):\n\t\tif s1[x] == s2[x]:\n\t\t\tcount+=1\n\treturn count\nfor x in range(len(a)- len(b)+1):\n\tvalue =  compare(b,(a[x:x+len(b)]))\n\tsmallest = max(value,smallest)\nprint(len(b) - smallest)\n","s = input()\nt = input()\nans = 0\nfor i in range(len(t)):\n    if s.count(t[i:]) != 0:\n        ans = (len(t[i:]))\n        break\nif s.count(t[:-1]) != 0:\n    ans = max((len(t[1:])),ans)\nprint(len(t)-ans)","def hamming(s,t):\n    d = 0\n    for i in range(len(s)):\n        if s[i]!=t[i]:\n            d+=1\n    return d\n\ndef main():\n    s = input()\n    t = input()\n\n    candidates = []\n    for i in range(len(s)-len(t)+1):\n        candidates.append(hamming(t,s[i:i+len(t)]))\n\n    print(min(candidates))\nif __name__ == \"__main__\":\n    main()","import sys\ninput=sys.stdin.readline\nsys.setrecursionlimit(10**6)\n\ns=input().rstrip()\nt=input().rstrip()\n\nans=10**10\n\nfor i in range(len(s)-len(t)+1):\n    now=0\n    for j in range(len(t)):\n        if t[j]!=s[i+j]:\n            now+=1\n    ans=min(ans,now)\nprint(ans)","S = list(input())\nT = list(input())\n\ndef kakikae_count(S_i):\n    count = 0\n    for i in range(len(T)):\n        if S[S_i + i] != T[i]:\n            count += 1\n    return count\n\nmin_count = len(T)\nfor i in range(0, len(S) - len(T) + 1):\n    need_count = kakikae_count(i)\n    if need_count < min_count:\n        min_count = need_count\nprint(min_count)\n            ","s = input()\nt = input()\nminr = len(t)\ns_t_d = len(s) - len(t)\nfor i in range(s_t_d):\n    cnt = 0\n    for ss, ts in zip(s[i:i + len(t)], t):\n        if ss != ts:\n            cnt += 1\n    minr = min(minr, cnt)\nprint(minr)","S=input()\nT=input()\nans=len(T)\nfor start in range(len(S)-len(T)+1):\n  diff=0\n  for i in range(len(T)):\n    if T[i]!=S[start+i]:\n      diff+=1\n  ans=min(ans,diff)\nprint(ans)\n","#from collections import deque,defaultdict\nprintn = lambda x: print(x,end='')\ninn = lambda : int(input())\ninl   = lambda: list(map(int, input().split()))\ninm   = lambda:      map(int, input().split())\nins = lambda : input().strip()\nDBG = True # and False\nBIG = 10**18\nR = 10**9 + 7\n#R = 998244353\n\ndef ddprint(x):\n  if DBG:\n    print(x)\n\ns = ins()\nt = ins()\nls = len(s)\nlt = len(t)\nmn = BIG\nfor i in range(ls-lt+1):\n    x = 0\n    for j in range(lt):\n        if s[i+j]!=t[j]:\n            x += 1\n    mn = min(mn,x)\nprint(mn)\n","# -*- coding: utf-8 -*-\n\ns = input()\nt = input()\n\nresultdiff = len(t)\n\n# print(s)\n# print(t)\n# print(\"---\")\nfor i in range(len(s)):\n  # print(i)\n  if len(s) < len(t) + i:\n    # print(\"break\")\n    break\n  subs = s[i:len(t) + i]\n  # print(subs)\n\n  diff = 0\n  for j in range(len(t)):\n    if t[j] != subs[j]:\n      diff += 1\n  if diff < resultdiff:\n    resultdiff = diff\n\n# print(\"***\")\nprint(resultdiff)\n","S = input()\nT = input()\nans = len(T)\n\nfor i in range(len(S)-len(T)+1):\n  Si = S[i:i+len(T)]\n  count = 0\n  for j in range(len(T)):\n    if Si[j] != T[j]:\n      count += 1\n  if ans > count:\n    ans = count\n\nprint(ans)","s = str(input())\nt = str(input())\n\nlens = len(s)\nlent = len(t)\n\ncon = lent;\n\nfor x in range(lens - lent + 1):\n    zz = 0;\n    for y in range(lent):\n        if s[x+y] != t[y]:\n            zz += 1;\n    if zz < con:\n        con = zz;\n\nprint(con)","\n\nS = input()\nT = input()\n\nif len(T) > len(S) or len(S) == 0:\n    print(0)\n\nanswer = float(\"inf\")\nfor i in range(len(S) - len(T) + 1):\n\n    sub = S[i: i + len(T)]\n\n    unique = 0\n    for s,o in zip(sub, T):\n        if s != o:\n            unique += 1\n    \n    answer = min(answer, unique)\n\nprint(answer)","S = input()\nT = input()\nans = 1000\nfor i in range(len(S)-len(T)+1):\n  cnt = 0\n  for j in range(len(T)):\n    if(T[j] != S[i+j]):\n      cnt += 1\n  ans = min(ans, cnt)\nprint(ans)","#akash mandal: jalpaiguri government engineering college\nimport sys,math\n\ndef ii(): return int(input())\ndef mii(): return map(int,input().split())\ndef lmii(): return list(mii())\n\n\ndef main():\n    s=input();sd=s[::-1]\n    t=input();td=t[::-1]\n    d=[];r=\"\";rd=\"\";dd=[]\n    for i in range(len(t)):\n        r=r+t[i];\n        #print(r)\n        f=s.count(r)\n        d.append(f)\n    d.reverse()\n    #print(*d)\n    for i in range(len(td)):\n        rd=rd+td[i]\n        fd=sd.count(rd)\n        dd.append(fd)\n    #print(*dd)\n    for i in range(len(d)):\n        if d[i]!=0:\n            d[i]=len(t)-(i+1)\n        else:\n            d[i]=len(t)\n    for i in range(len(dd)):\n        if dd[i]!=0:\n            dd[i]=len(t)-(i+1)\n        else:\n            dd[i]=len(t)\n    print(min(min(d),min(dd)))\n    \n    \n    \n        \n        \n                \n                \n            \n        \n            \n    \n        \nif __name__==\"__main__\":\n    main() ","s=str(input())\nt=str(input())\nn=len(t)\nm=len(s)\nans=0\na=[]\nif t in s:\n  print(0)\nelse:\n  for i in range(m-n-1):\n    for j in range(n):\n      if s[i+j]==t[j]:\n        ans+=1\n    a.append(ans)\n  print(n-max(a))","s = input()\nt = input()\n\nans = 0\nfor i in range(len(s)):\n    cnt = 0\n    if i + len(t) - 1 >= len(s):\n        break\n    for j in range(len(t)):\n        if s[i+j] == t[j]:\n            cnt += 1\n    ans = max(ans, cnt)\nprint(len(t) - ans)","S=str(input())\nT=str(input())\n\n\nU=[0]*(len(S)-len(T)+1)\nc=[0]*(len(S)-len(T)+1)\nfor j in range(len(S)-len(T)+1):\n    U[j]=S[j:j+len(T)]\n    for i in range(len(T)):\n        if U[j][i]==T[i] :c[j]=c[j]+1\n\nprint(len(T)-max(c))","def solution(s,t):\n    minv = float(\"inf\")\n    for i in range(len(s) - len(t) + 1):\n        v = 0\n        for j in range(len(t)):\n            if s[i + j] != t[j]:\n                v += 1\n        minv = min(minv, v)\n    return minv\n\ns = input()\nt = input()\nprint(solution(s, t))\n","# abc177_b.py\nS = input()\nT = input()\nfor i in range(1,len(T)):\n    if T[0:i] in S:\n        continue\n    else:\n        ans = i\n        break\nprint(len(T)-i)"],"raw_generations":["s=input()\nt=input()\n\nmc=0\nfor i in range(len(s)-len(t)):\n    c=0\n    for j in range(len(t)):\n        if s[i+j]==t[j]:\n            c+=1\n    mc=max(c,mc)\nprint(len(t)-mc)\n","s=list(input())\nt=list(input())\nans=10**7\nfor i in range(len(s)-len(t)+1):\n  c=0\n  for j in range(len(t)):\n    if s[i+j]!=t[j]:\n      c=c+1\n  if c<ans:\n    ans=c\nprint(ans)","from collections import defaultdict\nfrom collections import deque\nfrom collections import Counter\nimport math\n\ndef readInt():\n\treturn int(input())\ndef readInts():\n\treturn list(map(int, input().split()))\ndef readChar():\n\treturn input()\ndef readChars():\n\treturn input().split()\n\ns = list(input())\nt = list(input())\n\nans = float(\"inf\")\n\nfor i in range(len(s)-len(t)+1):\n\ttar = s[i:i+len(t)]\n\tansk = 0\n\tfor j in range(len(tar)):\n\t\tif t[j]!=tar[j]:\n\t\t\tansk+=1\n\tans = min(ans, ansk)\n\nprint(ans)","#!\/usr\/bin\/env python3\n\n\ndef solve(S, T):\n    if S.find(T) >= 0:\n        return 0\n\n    for i in range(1, len(T)):\n        head = T[:-i]\n        tail = T[i:]\n\n        head_idx = S.find(head)\n        tail_idx = S.rfind(tail)\n\n        if 0 <= head_idx <= len(S) - len(T):\n            return i\n\n        if tail_idx >= i:\n            return i\n\n    return len(T)\n\n\ndef main():\n    S = input()\n    T = input()\n    result = solve(S, T)\n    print(result)\n\n\nif __name__ == \"__main__\":\n    main()\n","S = input()\nT = input()\nans = len(T)\nfor i in range(len(S)-len(T)+1):\n    diff = 0\n    for j in range(len(T)):\n        if S[i+j] != T[j]:\n            diff += 1\n    ans = min(ans, diff)\nprint(ans)","import base64\nimport subprocess\n\n\nexe_bin = \"e??420s#R400000000000{}h%0RR91U=IKQ00000KmY&$000007%l(+0000000000Kma%Z2>?I<9snHx1^@s61ONa4KmY&$00000KmY&$00000KmY&$00000_yGU_00000_yGU_000002mk;8000000{{R31ONa4I066w00000I066w00000I066w000008~^|S000008~^|S000000RR91000000RR911poj5000000000000000000000000000000X%hed00000X%hed00000001BW000000RR911^@s6ARPbz00000ARQn800000ARQn800000_yPa`00000U<CjG00000001BW000000ssI21^@s6I2`~000000I2|AW00000I2|AW000005CQ-I000005CQ-I000002mk;8000001ONa41ONa4R004100000R004100000R004100000L;wH)00000L;wH)000001ONa400000P~~)F1ONa4kP!d?00000kP!d?00000kP!d?00000L;wH)00000L;wH)000001ONa400000QRQ@G1^@s6000000000000000000000000000000000000000000000000005C8xG00000Qss1H1ONa4ARPbz00000ARQn800000ARQn800000-~s>u00000-~s>u000000RR9100000FKlUIHZ(76WG!rIZgqGqcsMpKHZ(4CZ!R(b1ONa45C8xG0RR91M^04$000000{{R30ssI2000001ONa46aWAK0{{R3M^04$_uOv>YUhfou9RsuqgUX}B}n#;0ssI2761SM0RR911^@s6000mI0RRL5761SM000006qpP{bCw4J000000000000000000000000000000-~a#s5&!@I00000000000000000000E&>1mA^-pY00000000000000000000eE<Le5&!@I00000000000000000000RR9105&!@I00000000000000000000#Q^{S5&!@I00000000000000000000CjtNf5&!@I000000000000000000008Ug?S5&!@I00000000000000000000*#H0l5&!@I000000000000000000007XbhO5&!@I000000000000000000002?78B5&!@I00000000000000000000VgUdE5&!@I00000000000000000000H30ws5&!@I000000000000000000009RUCU5&!@I000000000000000000000s#O35&!@I00000000000000000000a{vGU5&!@I000000000000000000009{>OVAOHXW00000000000000000000@Bsh-5&!@I00000000000000000000Jpup#5&!@I000000000000000000005C8xGAOHXW00000000000000000000I{*LxAOHXW00000000000000000000!2kdN5&!@I00000000000000000000SOEY45dawgKp-Fh000005CH%H00000xBvhE5dawgU?Cs?000007y$qP000000BmVub97{5D=RK@Z!R_fUtec!Z*E_6bYXIIUta)UNmNZ=WMy(?XK8bEWpY$aLu_wuWmI8eY-IpnNmNZ=a%E>}b97~LR82!{Z*FB&VPb4$0AE^DbTTksUvy}4Z+Bm8Wo~D5XkTS=a&K}_OJe|ET251MY;#3v0AE^DbTnmdWNb-eQ*<#gV`yP=UvzR|X>@Z*V?{+$Q*<#iVqtS>V_$D`baG{3ZAnyLR4`vfQ#M}!Us_XiGh=CP0AE^8Q*=0KZ*yN_VRL0PNp5L$L@`Bn0AE^UY*2OpUs_I6bU0~mb6;X%b7e6#b9ruKUw3JAXkT-5WNB|jVgO%XXLxvDaAk6HZ*F01X>@sCb}#^6T5fl30AE^8Q*=0KZ*yN_VRL0PNp5L$Lor2m0AE^DbTTwwUvy}4Z+BmBb#z~EW?yn)Zf9j*W^Hs(OJjNfUs_XiG-GddbO2vkQ*?53Nn=xVF)?FkVRBz|a$#w7b4g=GQ(;MCMMY9mbTKnxVRLC?Uuko6a%Ev{NmO4{FkeMeH(ydtQ*<|9Ut@T9F)=YRVqtS>V_$Q0a%pa7NmDdmQ#D^yF<(VR0AE^DbTK(!Uvy}4Z+Bm8Z)a&^UuAM~Z*oveV*qSvVrOGxUvn;VZ!R$aUsY~*X>Md+Qe|^>ZDjy#X<}n8b8jv-0AF8obYWv_Ut?%%UuI!xYye+hV|Za-VRU79X><T>Wo=_{c>rHuV|Za-W@&C=Y-xIB0AF8hX<}nvb97;HbYE>@X>I^VLqlIPE-(N`Oi4mRUotK<07pzoLPK9NE-^F!M@&gVLtip3GA=a$Ls(crLP=jSE;9f}Oi4mRSXf^(E;KGOFaSqPNkT(dSYI<PG%hkR07pzoLPJ<sUo$Q=000000ssR50ssO40ssU60{{X50ssX71^@>D0ssgA0ssI22>=5C000000ssO40ssI20RRC2;sF2v5C8xGAOHXWP$qc`000R9PXYh{000000RRI4{{a915C8xGKmY&$6lrM<000F5R{{V45C8xGl#!MO000C4VFCaE5C8xGbsA|200093YytoP000000RRL50RR915C8xG00000)30j<000O8cme<b5C8xGaQK%3000L7g8~2m5C8xGarl=4000I6k^%q#5C8xGbSaVu00062p#lH^00000ARQn8000002mk;800000U=RQR00000C><aG000002mk;800000Fb@C#00000FdZNO000002mk;800000AP@im000002p}K;000002mk;8000002p}K;00000&>tWG000001^@s60ssI20000000000*dHJO000001^@s65C8xG0000000000;2$6W000001^@s65&!@I0000000000=pP^e000001^@s66951J0000000000@E;%m000001^@s66aWAK0000000000_#Yqu000001^@s66#xJL00000000005Fj7`000000RR914gdfE0000000000Kp-Fh000001poj5761SM0000000000U?Cs?000001poj57XSbN0000000000U>_g=000002LJ#70RR910000000000XdfT|000002LJ#70{{R30000000000a33H5000002LJ#71ONa40000000000cpo4D000002LJ#71poj50000000000fFB?L000002LJ#71^@s60000000000h#w#T000002LJ#72LJ#70000000000kRKob000002LJ#72mk;80000000000m>(bj000002LJ#72><{90000000000pdTOr000002LJ#73IG5A0000000000s2?Bz000002LJ#73jhEB0000000000upb}*000002LJ#73;+NC0000000000xE~+@000002LJ#74FCWD0000000000z#kw0000002LJ#74*&oF0000000000$R8j8000002LJ#75dZ)H0000000000NQ3MMNQ(u<6d(Xdg}`(I|IkQ-#0bLx|1}yEAOQa*926h`4<A4P|0Nm}AOL6p0002#;Q#;s|0NO>AOL6q0002#(EtDc|0N0(AOL6r0002#!2kdM|0MzxAOL6s0002#u>b%6|0VhpAOL6t0002#p#T5>|0VJhAOL6u0002#kpKVx|0U`ZAOL6v0002#fdBvh|0UuRAOL6w0002#aR2}R|0UWJAOL6x0002#VE_OB|0U8BAOL6y0002#Q2+n`|0T*3AOL6z0002#K>z>$|0Ti`AOL6!0002#F#rGm|0TK;AOL6#0002#ApigW|0S{$AOL6$0002#5dZ)G|0SvuAOL2N0000000000L03UmG5<kTK~z;!NP+B_0001FNQ(p|C;$KeNQs0bhyVZpF~I2M{{R0-jdUa+NR3=1KuC=}^b{ZfNXG@y6(9fr0000;$3!G300000NR37iNQrbL7{){-FaSu2TqF=k$3!GZ00000NQp!wAV`fv5XM9#Pyk4YL?l4y9RL6SNQvG^iO1*>|Ns9;i(DiqNQ*=yNQvHwL?i?$#))(!2oH#E0RR9@i)<tyOk?;=jdUbnOgZ~WjaCpz4@cijiS9@N-bjg5Bw%z2O@-|bgy8@H06~ewgXjUh0RR91i9{p}4<Cd800000NQ3(i4~NzO002mfR3u<XgZlwUiO>&(`~Uy|NQK)Eh1UQ80E<K<1W1WoBxuG28URR(d?a9nzz>dL0RRAtbR-N+i$o+qF~Bj>NQ1@!K@YYJ05}W>50$}4gTMg~w#fm?NIAxJ=Shu55J5TAL=R8mNIA!J1?U3)|Nl8`BnS_Tr~m)}NQ+z~C`dWo4~G!}002yjY$PB^DeFm%Mi5AeL?mEI0qsmV`$-Q+-%N?<NQ1=zNCDUngg^iP|4oJM4}~`W|NlshJ#Pa50O)%C|Nmw#4<Cd800000NQK)Eh!g<;07#8{0qCCn|NlsdL?mEHiCiRbNQv4^iS9^=$LLo5|NlsfR3u>O5&!@H4<A4PK@YY?0Ehxei&P|F>HPlx|3Qhw4<A4PNR2(|5g-6WiRS2`{r~?+iO1;a{Qv(*i$o+4NQ-<VKuCkY5J)-4bOq=k{r~?+i$o+CNQ-<VAV`D25J)-4bOq=M{r~?lz(|X<B!~b20AxrrG$kki004D;NP)zd00016T|rzyT|r(!U&CgQG1BS6{{R0-jWs3$002mhJyQYz07!}1NQvq(!07(`|Nlsd!$^xnBoIi8d?Y|fgTN3-ImdJb=%f7q|455OBp67Gd?X-9gTN3-ImdJb=!^XS|4517==1#l|45BJ<pBTy=r{cT|LBtZ|Nmx?NR2&06CeOcgX{?Cu>Al3NQ*tO5Fh|ZjTO2OAOJ{>H6#-t07!$x2<bBX|Nmx?G3`l-(OyW2;z)z!@K97tjRk4}002mh4f6m107#8Jto;A~{}omcAOQ3aA4C8ENR2&#5Fh|mNR0(~5Fh|ZIrvD4<#ZWHiv=nWAOJ{(z;q2=|KMgW4<Cd800000UBeF_KmcYg4<Cd800000NR2%~5Fh|ZjWs$DAOKZJDgH=_<w(K)14xPRNWthoNCC!3(f)K8NQ(vW4<G<Yg}`(SUH{-_4<Cd800000UBeF_KmcYg4<Cd800000fIU$XAOHY$FGzzupAR4a098nd<#Y^4i#^H@AOPsy`~UywNdN!;#sw)7AOHbf!w(;T00000^TTEjA4C8ERY-~DUFl~3|NmwWA4C8EL03UmNr~4%RY6otjU}E8AOKZJjV-1OAOKTAiTz25_Dm_|NQ3MMNWuLB=y&@6|44=HbRaR?4<Cd800000Oo{qTiS|T^??L|*+(?7N0Z2LBb?Qii#0XnmL0myyL0&;$!;oe!4<Cd800000^TPlDNQ3MMNQ1-(!vFvP0RRF3VqtS>V_$Q0a%pa7Iy!T8VsmtI0AgWtX=7h=baH8KXF57xO<!YjWnpw>0000000000C389;Ute%<b08>pXlY|;AZc?TC3<x!AU+^;XlZjTK67b$Whf~iD0gUSV`w00b08&pbtwP<VqtS>V_$Q0a%pa7IyzrXUt@1>b98cbV{{;Hb!==PZf|rTc42I3WB>pF000000UHB5L;wH)2LJ#7p!xs*kN^Mxkoy1sxBvhEp!)y+@Bjb+p#A^<L;(N*(Eb1aU;qFB;Qs&rU;zLCQ2+n`r~v=~000006aWAK000000eVsZ0eBDr8w>{skO2n}6aWAK8~^|SX#M~HD*ylh00000000006aWAK000000eVsZ0eBDr8w>{skO2SyBme*a8~^|S2>Jj2@Bjb+01gmF4j4)g3wH>B06!W#Dl;S^000006aWAKL;wH)(E0!W2mk;800000000008~^|S000000eVnOQUC#X5C@x`4Ils;8w>{skO2SyPyhe`Bme*asQLf@{sI611it_P074EBj{-st7>)x(4j_#LLJla51wjrlh6X_nID-dA4$uJuZ~_VrI6)3DK@KQF4j@7f7(xyZLJkN+3jhEB7ytkO&;S4cRQ&({E&u=k080)KUJeKV00000L;wH)>;M1&c>VwXWdHyG074EBj{-st7>)x)4j_#LLJla51xOAsh6YFuID-dG4nT4aI6)3DK@KQF4j@7f7(xyZLJkN35C8xGGywnrp#A^<0ssI20000000000|Nj9MCItWhf3pO#1pw#;1pol_1qb@C#00000AP@im000000RR91000000RR91000000RR9100000;sF2v000000RR9100000{{a91000003;+NC000007z+RZ000004FCWD00000<PZP=0000082|tP00000ARQn8000008vp<R000005C8xG000008UO$Q00000FdZNO000008~^|S000002mk;800000_5S~F00000m;wL*000001poj50000000jU5000001^@s600000zybgO000003IG5A00000tpWf5000003jhEB000007ytkO000006#xJL0000000000000000{{R300000NFN{o000000ssI200000Pyqk{000006aWAK000002LJ#7000007XSbN00000$O!-d000002LJ#700000kO%+(000002mk;800000H~|0v000002><{9000007ytkO000009smFU000002mk;800000`~UxM000000RR9900000{{R1P00000;0FKz00000|NsAQ000000{{R300000@c;jB00000t_J`B00000`TzfK000001ONa4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000I2|AW0000000000000000000000000MhgG{00000Rto?C00000W(xoS00000b_)Oi00000h6?}y00000mJ0v?00000rV9W700000whI6N00000#tQ%d00000)(Zdt00000<_iD-00000_6q<2000001`GfI0000077PFY0000000000000000000000000000000000000000000000000000000000000000000000000002p}K;000000000000000M?*t8AShL0b#8QZAU7^GE-)=Kbz*gHbagR)F*q(TG$|lAE;TMN0000000000000000000000000000000000000000000000{{U4I066w000000000000000000000{{X5R0041000000000000000000000{{a6bOHbX000000000000000000000{{d7m;wL*000000000000000000000{{g8zybgO000000000000000000000{{j900jU5000000000000000000000{{mAt_J`B000000000000000000000{{pB;0FKz000000000000000000000{{sCkO%+(000000000000000000000{{vD$O!-d000000000000000000000{{yE7z+RZ000000000000000000000{{#FFbe<x000000000000000000000{{&GAPfKi000000000000000000000{{*HFbn_y000000000000000000000{{;I<PZP=000000000000000000000{{>J@DKn1000000000000000000000{{^KkP!d?000000000000000000000{{{L*bx8#000000000000000000000{{~MP!j+E000000000000000000000{|2NARQn8000000000000000000000{|5OFdZNO000000000000000000000{|8PI2|AW000000000000000000000{|BQNFN{o000000000000000000000{|ER03aX$000000000000000000000{|HSKp-Fh000000000000000000000{|KT000000000000000000000RR911OV~>000000000000000000005dZ)H0ssyGFb@C#00000E&u=k00000B>(^b0RR~Qc_JVH000000RR9100000Gynhq1OV~>00000000000000000000KL7v#0ssyGkPiR=000000000000000K>z>%0ssyG&<_9r000000000000000Q~&?~0ssyGAP@im000000000000000Y5)KL0RR~Qcp@MG000000RR9100000c>n+a0RR;MFdZNO000000000000000pa1{>0ssyGU=RQR000000000000000tN;K20RR*LARQn8000000000000000Gynhq1OV~>00000000000000000000%K!iX0RR#JOcMYA000000000000000000001OV~>00000000000000000000*#H0l000pHkP!d?000000000000000>;M1&0RR>NI2|AW000000000000000^#A|>000yKFdZNO0000000000000001_1y7000yKARQn8000000000000000836zQ0RR^ONFN{o000000000000000F984m5C9ke7$6`3000000000000000UIPFCAOIKu03aX$000000000000000HUR(t5daVX@DKn1000001ONa400000MF9W+5&!@I00000000000000000000bO8VWA^-pY00000000000000000000AOHXW5&#YWFbn_y00000{sI6100000kO2Sy5&!@I00000000000000000000*Z}|l5&!@I000000000000000000000|Ed55ds(h2p}K;0000000000000005CQ-IAp#fx5Fj7`000002mk;800000ECK)k5&!@I00000000000000000000Qv?725&#bX<PZP=000000000000000RssM35&!@I00000000000000000000X#xNM5&!@I00000000000000000000g8~2m5&!@I00000000000000000000VgmpG5&#YWU=IKQ00000D*ylh00000mjVC)5&!@I00000000000000000000ssaE25&!@I00000000000000000000*8>0m5&#PT7z+RZ000000000000000#sUBU5ds(h7$6`3000000000000000(gFYg5&!@I00000000000000000000MFRi;5dawgKp-Fh000005CH%H00000Tmt|A5C9ke03aX$0000000000000000RaF25C9nffFd9O000000000000000X#)TN5C9nf7$6`3000000000000000bprqZ5&!@I00000000000000000000r~?215&!@I00000000000000000000%>w`c5&#YWa1a0h00000WdHyG00000-2(ss5&!@I00000000000000000000{sRC25&!@I000000000000000000006$AhPAOHXW00000000000000000000F$4er5&!@I00000000000000000000Ndy1@5&#YW;1B=+000000ssI200000Sp)z85dawgU?Cs?000007y$qP00000Zv+4U5&!@I00000000000000000000jsySzAOHXW00000000000000000000odf^?AOHXW00000000000000000000w*&wH5&!@I000000000000000000000773=bz*aLa%pa7E@N<T0AEK;PeMUVUte=|VqZyLZDDC{0AE^DbWAv3Uukb?ZfSG?V{&wJbaiHCE@J>>WpZU_X>)XCa$j_9Ut?@<Ze?=-UteTzUuSG@Vqt7wWOQ$Gb6;U~cmQK>ZE$R5bY)~NH#Rvq0AF8ZZ(nC@Z(?C=Uu1M|a&uo{b$DN9X>Ms>VRCX|d0%C2baHtBW^!R|WnW}<ZEbk~UteZ&VQpn!WOZ$Ad0%O6X>?y<a&lpLUuAA|a(Mt>Uq(_vO+{ZtPDEc{0AF86PE}t;NMA-$K}|(pNJLTqUqo3>K}|_R0AF8eZfSI1VRCX|d0%C2WB^}ZX>MtBUtw}`VR>J3bYXII0AEK;PeMUVUr$CxQ$<u?R6#;aMPC44Wn^J=VE|uAPhWF%WNB_+b#rB80AE^8Q*=0KZ*yN_VRL0MHFJ4xV_$b^bZB35bYy97MPfieM@&gVLs(c}GcGg$UteQ*VP9rxZeeU`dSyUBM@&gVLtip3GA=a$Us_XiG-YmNY)NBNbTKhwXkl_+baG*7baP2#MMY9mbTKnxVRLC?UvG1Ca%Ev{NmO4{FkeMeHeWzMM@&gVLs(c}GcGg$Us_XiGB96XbZByKcVBE}ZfA68UuAM~Z*oveV?aPhOi4mRSXf^(E;ImNUu1J{Uua=&WNc*sL{~0yWo9m4UuSrDUvOn|b8l{8Y-x0PUv@A6Us_XiF*#pfbZByKcVBF8XK7<!WpZ+Fa!^ZSKtM-KNkT(dSYI<PGyrX7ZDVkGKtM-KNkT(kGA=PR0AF8Ycwt{*bY*yHbU;8yOi4mRUotK-E;RsOT4Zccc0fQ!Oi4mRSXf^(E;ImNT5fl3KtM-KNkT(dSYI<PGyq>;b97;2YhPn%YhPwzX>341M@&gVLtip3Gyq>;R82!)MNULtUjScPQ*?53Nn=xVF)?FkVRBz|a$#w7b4g=GQ(;MCMMY9mbTKnxVRLC?Uuko6a%Ev{NmO4{FkeMeH(ydtQ*<|9Ut@T9F)=YRVqtS>V_$Q0a%pa7NmDdmQ#D^yF<(VRKtM-KNkT(dSYI<PG%hkR0AE^DbTngcb#y>LM@&gVLs(c}GcGg$UteTlbYWj}bYXII0AF8Xb8}yFbYXII0AE^DbTTwwUvy}4Z+BmBb#z~EW?yn)Zf9j*W^Hs(OJjOKKu1hTLPJ<sUo$Q=E;29xUs_I6bU0~mb6;X%b7eG1ZfSHwF-3MjKu1hTLPJ<sUo$Q=0AF8hX<}nvV{>(1X>MtB0AF8ccz9oMWpZ<GZeeU`ba`KPFhD><SXe<qNnbH8GXP&&PE&7eb46)DKu1hTLPJ<sUo$Q=0AEQ|O<!bXa%E>}b97~LR82!{Z*FB&VPb4$0AE#ZcWG{9Us7drb!}xpKu1GEUo$Q+0AF8hX<}nvV{>(1W@&C|0AE^DbTeaVZa_dsOi4mRSXf^(E;ImNUu<b&V_$Q0VRCd|ZDDC{KtM-KNkT(kGA=SMH2_~<XKin8UvqR}a&%u`0AEQ|O<!_lXK8bEWpY$aLu_wuWmI8eY-IpnT251RIB9QlUt(c%Wi&}{X>>#}MRq_yM@&gVLs(c}GcGg$04{TRZFFH`04{TMa&%#004{TAb98caVPXI-X>N37a&Q1HZf|sDE<r*`Ep%aL04{ECbY(7QZgnnVb!lv5Eoo!`E@y6aE@)wMXaFu`d2VxgZ2&H0d2VxbasV!8ZgnnpWpZ<AZ*BlCXKr;ac4cyNX>V>{asV!JWo%(CWO;4?E^=jTVJ>iNbO0`CZfSG?E^usgE@y9a04{W8cys_RW@&C|04{QGWMOn+04`-{UuJS)ZDn6*WO4v5WoTb!a$#*{04`@^V_#)>V`Xr3Uvyz&Y-Ip0X>MtBUtw}`VR-;9W@&C|Utw}`VR-;9WO;63ZE0fwE@WYJVE`^-b8`SLV{dJ3Wo~o;00000000000000000000000000000000000000000000000000000000000000000000000000000000000008vp<R0RR910ssI200000I066w00000I066w000008~^|S0000000000000000RR91000000000000000BLDyZ2LJ#70ssI200000R004100000R004100000AOHXW0000000000000001ONa4000000000000000F#rGn2LJ#70ssI200000bOHbX00000bOHbX00000Bme*a0000000000000001ONa4000000000000000L;wH)_W%EH0ssI200000m;wL*00000m;wL*00000C;$Ke000001poj5000002mk;8000000000000000P5=M^3jhEB0ssI200000zybgO00000zybgO00000Kmq^&000001^@s60RR912mk;8000007ytkO00000RsaA10{{R30ssI20000000jU50000000jU500000tpWf50000000000000000RR91000000000000000UH||9|NsAQ0ssI200000t_J`B00000t_J`B00000FaQ7m000001poj5000000ssI2000000ssI200000YXATM{{R1P0ssI200000;0FKz00000;0FKz00000umAu6000001^@s60{{R32mk;8000000000000000dH?_b1ONa40ssI200000kO%+(00000kO%+(00000H~|0v000001poj5000002mk;8000007ytkO00000ga7~l1ONa4LI3~&00000$O!-d00000$O!-d00000Pyqk{000001poj57XSbN2mk;8000007ytkO00000jsO4v0RR911^@s6000007z+RZ000007z+RZ000007XSbN0000000000000001ONa4000000000000000i2wiq0RR911^@s600000Fbe<x00000Fbe<x00000@Bjb+0000000000000005C8xG000005C8xG00000lmGw#0RR911^@s600000APfKi00000APfKi000002mk;80000000000000002mk;8000002mk;800000od5s;0RR911^@s600000Fbn_y00000Fbn_y00000vIGDC0000000000000005C8xG000000000000000qW}N^0RR911^@s600000<PZP=00000<PZP=000002><{90000000000000001ONa4000000000000000sQ>@~0RR910ssI200000@DKn100000@DKn100000pa1{>0000000000000002mk;8000000000000000u>b%70RR910ssI200000kP!d?00000kP!d?00000L;wH)0000000000000001ONa4000000000000000zW@LL0RR910ssI200000*bx8#00000*bx8#00000cmV(a0000000000000002mk;8000000000000000$p8QV0RR910ssI200000P!j+E00000P!j+E0000082|tP0000000000000000RR91000000000000000+W-In4gdfE0{{R300000ARQn800000ARPbz000005C8xG0000000000000002mk;8000002mk;800000=Kufz4*&oF0{{R300000FdZNO00000FdYB@000002mk;80000000000000002mk;8000002mk;800000^8f$<1^@s60{{R300000I2|AW00000I2`~0000005CQ-I000001^@s6000002mk;8000005C8xG00000m;e9(0RR910{{R300000NFN{o00000NFM+I00000xBvhE0000000000000002mk;8000002mk;800000`~Uy|0RR910{{R30000003aX$0000003ZMW000007ytkO0000000000000002mk;80000000000000000s#O32mk;80{{R300000Kp-Fh000007$5)u00000Kmq^&000000000000000KmY&$0000000000000002LS*80RR91FaQ7m0000000000000007$5)u00000DF6Tf0000000000000000RR91000000RR91000000RR910ssI200000000000000000000NFV?J00000;0FKz000008~^|SE&u=k2mk;8000007ytkO000002><{90{{R300000000000000000000C@25`00000+ynps0000000000000000RR910000000000000005dZ)H0{{R3000000000000000000001T6pn000005CH%H0000000000000000RR91000000000000000\"\n\nexe_bin = base64.b85decode(exe_bin)\n\nwith open(\".\/kyomu\", 'wb') as f:\n    f.write(exe_bin)\n\nsubprocess.run([\"chmod +x .\/kyomu\"], shell=True)\nsubprocess.run([\".\/kyomu\"], shell=True)","s=input()\nt=input()\nans=len(t)\nfor i in range(len(s)-len(t)+1):\n    tmp=0\n    for j in range(len(t)):\n        if s[i+j]!=t[j]:\n            tmp+=1\n    ans=min(ans,tmp)\nprint(ans)","s = input()\nt = input()\n\nsl = len(s)\ntl = len(t)\nans = tl\nfor i in range(sl-tl+1):\n  cnt = 0\n  for j in range(tl):\n    if s[i+j] != t[j]:\n      cnt += 1\n  ans = min(ans, cnt)\nprint(ans)","S = input()\nT = input()\ns = len(S)\nt = len(T)\nL = [\"\"]*(s-t+2)\nmatch = [0]*(s-t+1)\n\n\nfor p in range(s-t+1):\n    for q in range(t):\n        L[p] += S[p+q]\n\nfor r in range(s-t+1):\n    for s in range(t):\n        if L[r][s] == T[s]:\n            match[r] += 1\n\nprint(t-max(match))\n\n\n","import sys\ns = input()\nt = input()\n\nif (t in s):\n    print(0)\n    sys.exit()\n\nans = 1000\nfor i in range(len(s)-len(t)+1):\n    diff = 0\n    for j in range(len(t)):\n        if (s[i+j] == t[j]):\n            pass\n        else:\n            diff += 1\n    \n    ans = min(ans, diff)\n\nprint(ans)\n","import sys\nfrom collections import deque\n#import numpy as np\nimport math\n#sys.setrecursionlimit(10**6)\ndef S(): return sys.stdin.readline().rstrip()\ndef SL(): return map(str,sys.stdin.readline().rstrip().split())\ndef I(): return int(sys.stdin.readline().rstrip())\ndef IL(): return map(int,sys.stdin.readline().rstrip().split())\n\ndef solve():\n    lent = len(t)\n    for i in range(lent,-1,-1):\n        for j in range(lent-i+1):\n            if lent<=i+j:    break\n            if t[j:i+j] in s[j:]:\n                return lent-i\n    return lent\n\nif __name__=='__main__':\n    s = S()\n    t = S()\n    print(solve())","import bisect\nimport sys,io\nimport math\nfrom collections import deque\nfrom heapq import heappush, heappop\n\ninput = sys.stdin.buffer.readline\n\ndef sRaw():\n    return input().rstrip(\"\\r\")\n\n\ndef iRaw():\n    return int(input())\n\n\ndef ssRaw():\n    return input().split()\n\n\ndef isRaw():\n    return list(map(int, ssRaw()))\n\nINF = 1 << 29\n\nDIV = (10**9) + 7\n#DIV = 998244353\n\ndef mod_inv_prime(a, mod=DIV):\n    return pow(a, mod-2, mod)\n\n\ndef mod_inv(a, b):\n    r = a\n    w = b\n    u = 1\n    v = 0\n    while w != 0:\n        t = r\/\/w\n        r -= t*w\n        r, w = w, r\n        u -= t*v\n        u, v = v, u\n    return (u % b+b) % b\n\n\ndef CONV_TBL(max, mod=DIV):\n    fac, finv, inv = [0]*max, [0]*max, [0]*max\n    fac[0] = fac[1] = 1\n    finv[0] = finv[1] = 1\n    inv[1] = 1\n    for i in range(2, max):\n        fac[i] = fac[i-1]*i % mod\n        inv[i] = mod - inv[mod % i] * (mod\/\/i) % mod\n        finv[i] = finv[i-1]*inv[i] % mod\n\n    class CONV:\n        def __init__(self):\n            self.fac = fac\n            self.finv = finv\n            pass\n\n        def ncr(self, n, k):\n            if(n < k):\n                return 0\n            if(n < 0 or k < 0):\n                return 0\n            return fac[n]*(finv[k]*finv[n-k] % DIV) % DIV\n\n    return CONV()\n\n\ndef cumsum(As):\n    s = 0\n    for a in As:\n        s += a\n        yield s\n\n\nsys.setrecursionlimit(200005)\n\n\ndef dijkstra(G,start=0):\n    heap = []\n    cost = [INF]*len(G)\n    heappush(heap,(0,start))\n    while len(heap)!=0:\n        c,n = heappop(heap)\n        if cost[n] !=INF:\n            continue\n        cost[n]=c\n        for e in G[n]:\n            ec,v = e\n            if cost[v]!=INF:\n                continue\n            heappush(heap,(ec+c,v))\n    return cost\n\n\ndef main():\n    S= sRaw()\n    T =sRaw()\n    ans = 10*10\n    for sidx in range(0,len(S)-len(T)+1):\n        score = sum([1 for idx in range(len(T)) if S[sidx+idx]!=T[idx]])\n        ans=min(score,ans)\n    print(ans)\n\nmain()\n","S = input()\nT = input()\n\ntc = len( T )\nans = 0\nfor i in range( len(S) - tc + 1 ):\n  cnt = 0\n  for j in range( tc ):\n    if S[ j + i ] == T[ j ]:\n      cnt += 1\n  ans = max( ans, cnt )\nprint( tc - ans )","s=input()\nt=input()\nans=float('inf')\nfor i in range(len(s)-len(t)+1):\n  tmp=0\n  for j in range(len(t)):\n    if t[j]==s[i+j]:\n      pass\n    else:\n      tmp+=1\n  ans=min(ans,tmp)\nprint(ans)","s = input()\nt = input()\n\nl = len(t)\nflag = 0\nfor i in range(1, l+1):\n    if flag == 1:\n        break\n    for j in range(i):\n        if t[j:j+(l-i)+1] in s[j:len(s)-i]:\n            flag = 1\n            print(i-1)\n            break\n\nif flag == 0:\n    print(l)","s = input()\nt = input()\n\nmax_tmp = 0\nout = 0\n\n\ndef comp(a, b):\n    cnt = 0\n    for i in range(len(a)):\n        if a[i] == b[i]:\n            cnt += 1\n    return cnt\n\n\nfor i in range(len(s) - len(t) + 1):\n    max_tmp = comp(s[i:i + len(t)], t)\n    out = max(out, max_tmp)\n\nprint(len(t) - out)","s = input()\nt = input()\nn = len(s)\nm = len(t)\nans = 1000\n\nfor i in range(n - m + 1):\n    cnt = 0\n    for j in range(m):\n        if s[i + j] != t[j]:\n            cnt += 1\n    ans = min(ans, cnt)\n\nprint(ans)","S = input()\nT = input()\n\nm = 0\nfor i in range(len(S)-len(T)+1):\n  n = 0\n  for j in range(len(T)):\n    if(S[i+j]==T[j]):\n      n+=1\n  if(n>m):\n    m = n\nprint(len(T)-m)","# coding: utf-8\n\nimport math\nimport re\nimport numpy as np\nimport copy\n\n#\u8aad\u307f\u8fbc\u3080\nS = input()\nT = input()\n\nans = len(S)\n\n#\u9ad8\u3005(10^3)^2\n\nfor i in range(len(S) - len(T)):\n    #\u4f55\u6587\u5b57\u9055\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\n    cnt = 0\n    for j in range(len(T)):\n        if T[j] != S[i+j]:\n            cnt += 1\n\n    if cnt < ans:\n        ans = cnt\n        \nprint(ans)\n\n","S = input()\nT = input()\n\nlt = len(T)\nans = lt\nfor num in range(len(S) - lt + 1):\n    s = S[num:num+lt]\n    diff = 0\n    for i in range(len(T)):\n        if(T[i] != s[i]):\n            diff += 1\n    ans = min(ans, diff)\n\nprint(ans)","s = input()\nt = input()\n\nmin = len(t)\nfor s_index in range(len(s) - len(t) + 1):\n    different_chars = 0\n    for t_index in range(len(t)):\n        if s[s_index + t_index] != t[t_index]:\n            different_chars += 1\n    if min > different_chars:\n        min = different_chars\nprint(min)","#\n# abc177 c\n#\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"cabacc\nabc\"\"\"\n        output = \"\"\"1\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"codeforces\natcoder\"\"\"\n        output = \"\"\"6\"\"\"\n        self.assertIO(input, output)\n\n\ndef resolve():\n    S = input()\n    T = input()\n\n    ans = float(\"inf\")\n    for i in range(len(S)-len(T)+1):\n        tmp = 0\n        for j in range(len(T)):\n            if T[j] != S[i+j]:\n                tmp += 1\n        ans = min(ans, tmp)\n\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    # unittest.main()\n    resolve()\n","s=input()\nt=input()\nlens=len(s)\nlent=len(t)\nmaxg=0\nfor i in range(lens-lent+1):\n  x=s[i:i+lent]\n  g=0\n  for j in range(lent):\n    if x[j]==t[j]:\n      g+=1\n  if g>maxg:\n    maxg=g\nprint(lent-maxg)","import sys, bisect, math, itertools, string, queue, copy\nmod = 10**9+7\ndef inp(): return int(input())\ndef inpm(): return map(int,input().split())\ndef inpl(): return list(map(int, input().split()))\ndef inpls(): return list(input().split())\ndef inplm(n): return list(int(input()) for _ in range(n))\ndef inplL(n): return [list(input()) for _ in range(n)]\ndef inplT(n): return [tuple(input()) for _ in range(n)]\ndef inpll(n): return [list(map(int, input().split())) for _ in range(n)]\ndef inplls(n): return sorted([list(map(int, input().split())) for _ in range(n)])\n\ns = input()\nt = input()\n\nm = 0\nfor i in range(len(s)):\n    tmp = 0\n    for j in range(len(t)):\n        if(j + i >= len(s)):\n            break\n        if(s[j + i] == t[j]):\n            tmp += 1\n        m = max(m, tmp)\nprint(len(t) - m)\n","ma = lambda :map(int,input().split())\nlma = lambda :list(map(int,input().split()))\ntma = lambda :tuple(map(int,input().split()))\nni = lambda:int(input())\nyn = lambda fl:print(\"Yes\") if fl else print(\"No\")\nimport collections\nimport math\nimport itertools\nimport heapq as hq\nceil = math.ceil\ns = input()\nt = input()\nls = len(s)\nlt = len(t)\nans = 10**9\nfor i in range(0,ls-lt+1):\n    #print(i,i+lt-1)\n    tmp=0\n    for j in range(lt):\n        if t[j]!=s[i+j]:\n            tmp+=1\n    ans =min(ans,tmp)\nprint(ans)\n","#!\/usr\/bin\/env python\n# -*- coding: utf-8 -*-\n\n\ndef main():\n    S = input()\n    T = input()\n\n    s = len(S)\n    t = len(T)\n\n    ans = t\n\n    for i in range(s - t + 1):\n        tmp = 0\n        for j in range(t):\n            if S[i + j] != T[j]:\n                tmp += 1\n        ans = min(ans, tmp)\n\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n","from sys import stdin,stdout\ndef INPUT():return list(int(i) for i in stdin.readline().split())\ndef inp():return stdin.readline()\ndef out(x):return stdout.write(x)\nimport math\nimport random\nJ=10**19\n###############################################################################\\n=17\ns=input()\nt=input()\nans=10**6\nfor i in range(len(s)-len(t)+1):\n    count=0\n    for j in range(len(t)):\n        if s[i+j]!=t[j]:\n            count+=1\n    ans=min(count,ans)\nprint(ans)\n","s=input()\nl=input()\na=len(l)\nbig=0\nfor i in range(len(s)-a+1):\n    cnt=0\n\n    for j in range(i,i+a):\n        if s[j]==l[j-i]:\n            cnt+=1\n    if cnt>big:\n        big=cnt\nprint(a-big)","import sys\ns=input()\nt=input()\nn=10**5\nk=0\nh=[]\nfor i in range(len(s)-len(t)+1):\n    h=s[i:i+len(t)]\n    l=0\n    for j in range(len(t)):\n        if h[j]!=t[j]:\n            l+=1\n    n=min(n,l)\nprint(n)\n","s=input()\nt=input()\n\nmax_itti=0\n\nfor i in range(len(s)-len(t)+1):\n    \n    ittisuu=0\n    \n    for j in range(len(t)):\n        \n        if t[j] == s[i+j]:\n            ittisuu += 1\n            \n            \n    max_itti=max(max_itti,ittisuu)  \nprint(len(t) - max_itti)\n      \n      ","s = input()\nt = input()\n\nls = len(s)\nlt = len(t)\n\nres = 0\nfor i in range(ls-lt+1):\n    ss =s[i:i+lt]\n    cnt = 0\n    for j in range(lt):\n        if ss[j] == t[j]:\n            cnt += 1\n    res = max(res, cnt)\n\nprint(lt - res)","import numpy\n\nS = numpy.array([ord(s) for s in input()])\nT = numpy.array([ord(s) for s in input()])\n\nTL = len(T)\nSL = len(S)\n\nC = [numpy.count_nonzero(S[i:i + TL] != T) for i in range(SL - TL + 1)]\nprint(numpy.min(C))","s = input()\nt = input()\nif t in s:\n  print(0)\nelse:\n  for i in range(len(t)-1):\n    i += 1\n    t1 = t[:i]\n    t2 = t[i:]\n    if t2 in s:\n      print(i)\n      break\n    i *= -1\n    t3 = t[i:]\n    t4 = t[:i]\n    if t4 in s:\n      print(i*-1)\n      break","#a,b,c = list(map(int,input().split()))\n\ns = input().rstrip()\nt = input().rstrip()\n\nbest = 99999999\n\nfor i in range(len(s) - len(t) + 1):\n  tmp = 0\n  for j in range(len(t)):\n    if t[j] != s[j+i]:\n      tmp += 1\n  best = min(best,tmp)\n  \nprint(best)","s = str(input())\n\nt = str(input())\n\nn = len(s)\nm = len(t)\n\nc = m\nfor i in range(n-m+1):\n    d = 0\n    for j in range(m):\n        if t[j] != s[i + j]:\n            d += 1\n    c = min(c,d)\n\nprint(c)\n","S=[i for i in input()]\nT=[j for j in input()]\nans=[]\nfor i in range(len(S)-len(T)):\n  count=0\n  new_S=[t for t in S[i:]]\n  for j,k in zip(new_S,T):\n    if j==k:\n      count+=1\n  else:\n    ans.append(count)\n    \nprint(len(T)-max(ans))   ","if __name__ == \"__main__\":\n    s = input()\n    t = input()\n\n    for i, e in enumerate(t):\n        compare_t = t[0:len (t) - i]\n        if compare_t in s:\n            print(i+len(t) - len(t))\n            break\n    print(0)","import sys\n\nsys.setrecursionlimit(10 ** 6)\ninput = sys.stdin.readline\nfrom math import floor, sqrt, factorial, hypot, log  # log2\u306a\u3044\uff59\uff50\nfrom heapq import heappop, heappush, heappushpop\nfrom collections import Counter, defaultdict, deque\nfrom itertools import accumulate, permutations, combinations, product, combinations_with_replacement\nfrom bisect import bisect_left, bisect_right\nfrom copy import deepcopy\nfrom fractions import gcd\nfrom random import randint\n\n\ndef ceil(a, b): return (a + b - 1) \/\/ b\n\n\ninf = float('inf')\nmod = 10 ** 9 + 7\n\n\ndef pprint(*A):\n    for a in A:     print(*a, sep='\\n')\n\n\ndef INT_(n): return int(n) - 1\n\n\ndef MI(): return map(int, input().split())\n\n\ndef MF(): return map(float, input().split())\n\n\ndef MI_(): return map(INT_, input().split())\n\n\ndef LI(): return list(MI())\n\n\ndef LI_(): return [int(x) - 1 for x in input().split()]\n\n\ndef LF(): return list(MF())\n\n\ndef LIN(n: int): return [I() for _ in range(n)]\n\n\ndef LLIN(n: int): return [LI() for _ in range(n)]\n\n\ndef LLIN_(n: int): return [LI_() for _ in range(n)]\n\n\ndef LLI(): return [list(map(int, l.split())) for l in input()]\n\n\ndef I(): return int(input())\n\n\ndef F(): return float(input())\n\n\ndef ST(): return input().replace('\\n', '')\nimport sys\nimport itertools\nimport copy\n\n\ndef main():\n    # D, T, S = MI()\n    # L = LLIN(N)\n    S = input()\n    T = input()\n\n    ushiro = 0\n    for i in range(len(T)):\n        # print(T[0:len(T)-i])\n        a = T[0:len(T)-i]\n        ushiro = i\n        if a in S:\n            break\n    mae = 0\n    for i in range(len(T)):\n        # print(T[i:len(T)])\n        b = T[i:len(T)]\n        mae = i\n        if b in S:\n            break\n    # print(ushiro)\n    # print(mae)\n    print(min(ushiro,mae) - 1)\n    #     if T[-i]\n    # if D \/ T <= S:\n    #     print('Yes')\n    # else:\n    #     print('No') \n    # cnt = 0\n    # for l in L:\n    #     num = l[0] ** 2 + l[1] ** 2 \n    #     if num <= D ** 2:\n    #         cnt+=1\n    # print(cnt)\n    # print(row)\n    # total = sum(row)\n    # target = total - K\n    # if K == total:\n    #     print(1)\n    #     sys.exit()\n    # col = []\n    # for w in range(W):\n    #     cnt = 0\n    #     for h in range(H):    \n    #         print(A[h][w])\n    #         if A[h][w] == '#':\n    #             cnt += 1\n    #     col.append(cnt)\n    # print(col)\n    # ans = 0\n    # for w in range(W):\n    #     for h in range(H):\n    #         if A[h][w] == '#':\n    #             if col[w] + row[h] - 1 == target:\n    #                 print(str(h) + str(w))\n    #                 ans +=1\n    #         else:\n    #             if col[w] + row[h] == target:\n    #                 print(str(h) + str(w))\n    #                 ans +=1\n    # print(ans)\n    #     for  in x:\n\n\n    # print('AC x ' + str(cnt['AC']))\n    # print('WA x ' + str(cnt['WA']))\n    # print('TLE x ' + str(cnt['TLE']))\n    # print('RE x ' + str(cnt['RE']))\n    \n\nif __name__ == '__main__':\n    main()","S = input()\nt = input()\nneq = len(t)\nfor i in range(len(S)-len(t)+1):\n  neq_temp = 0\n  for j in range(len(t)):\n    if S[i+j]!=t[j]:\n      neq_temp += 1\n  neq = min(neq,neq_temp)\nprint(neq)","s = input()\nt = input()\n\ndef check(a, b):\n    if len(a) != len(b):\n        return 0\n    else:\n        ans = 0\n        for i in range(len(a)):\n            if a[i] == b[i]:\n                ans += 1\n        return ans\n\nans = 0\nfor i in range(len(s)):\n    x = check(s[i:i + len(t)], t)\n    if ans  < x:\n        ans = x\n\nprint(len(t) - ans)","def abc177b():\n    s = input()\n    t = input()\n    min_val = float('inf')\n    for i in range(len(s) - len(t) + 1):\n        cnt = 0\n        for j in range(len(t)):\n            if s[i + j] != t[j]:\n                cnt += 1\n        min_val = min(cnt, min_val)\n    print(min_val)\n\n\nabc177b()","S = list(input())\nT = list(input())\nls = len(S)\nlt = len(T)\nans = lt\nfor offset in range(ls - lt + 1):\n\tcnt = 0\n\tfor i in range(lt):\n\t\tif S[offset + i] != T[i]:\n\t\t\tcnt += 1\n\tans = min(ans, cnt)\nprint(ans)","S = input()\nT = input()\nST = [0 for _ in range(len(S)-len(T)+1)]\nfor i in range(len(S)-len(T)+1):\n  for j in range(len(T)):\n    s = S[i+j]\n    t = T[j]\n    if  s==t:\n      ST[i]+=1\nprint(len(T)-max(ST))","s = input()\nt = input()\n\nnum_s = len(s)\nnum_t = len(t)\nans = len(t)\n\n# T\u306e\u5404\u4f4d\u7f6e\u306b\u304a\u3044\u3066\u3001S\u306e\u6587\u5b57\u6570\u306e\u3046\u3061\u4f55\u500b\u4e00\u81f4\u3057\u3066\u3044\u308b\u306e\u304b\u3001\u5168\u6570\u30c1\u30a7\u30c3\u30af\u3002\n# > O(T*S)\uff1e\u300010**6\u30aa\u30fc\u30c0\u30fc\n\nfor i in range(num_s):\n    end = i + num_t\n    if (end > num_s):\n        break\n    tar_s = s[i:end]\n    # print(tar_s)\n\n    count = 0\n    for a, b in zip(tar_s, t):\n        if (a != b):\n            #print('add', a)\n            count += 1\n\n    ans = min(ans, count)\n\n\nprint(ans)\n","S = input()\nT = input()\n\ndef count_common(a,b):\n    cnt = 0\n    for i in range(len(a)):\n        if a[i] == b[i]:\n            cnt += 1\n    return cnt\n\ncnt = 0\n\nfor i in range(len(S) - len(T) + 1):\n    cnt = max(cnt, count_common(S[i:i+len(T)],T))\n\nprint(len(T)-cnt)","S = input()\nT = input()\n\nL = len(T)\nans = 0\n\nfor i in range(len(S)-L+1):\n    cnt = 0\n    for j in range(L):\n        \n        if S[i+j] == T[j]:\n            cnt += 1\n        ans = max(ans,cnt)\n        \nprint(L-ans)","S = input()\nT = input()\n\n\nmax_diff = 0\nwindow = len(T)\nfor i in range(0, len(S) - window + 1):\n    x = S[i: i+window]\n    count = 0\n    for a, b in zip(T, x):\n        if a != b:\n            count += 1\n    max_diff = max(count, max_diff)\nprint(max_diff)","# \/usr\/bin\/python3\n# -*- coding: utf-8 -*-\nfrom queue import Queue\nfrom queue import LifoQueue as Stack\nfrom math import sqrt, floor, ceil, log2, log10, pi\nfrom fractions import gcd\nfrom itertools import permutations, combinations\nfrom operator import itemgetter\nfrom functools import cmp_to_key\nfrom bisect import bisect_left\n\n\nINF=1001001001\n__MOD__=(10**9)+7\nyn = 'YNeos'\njudge = False\ncnt = 0\nans = None\n\n\ndef lcm(a, b):\n    return (a*b) \/\/ gcd(a,b)\n\ndef intinput():\n    return int(input())\n\ndef mulinputs():\n    return map(int,input().split())\n\ndef lineinputs(func=intinput):\n    datas = []\n    while True:\n        try:\n            datas.append(func())\n        except EOFError:\n            break\n    return datas\n\ndef bindex(a,x):\n    i = bisect_left(a,x)\n    if i != len(a) and a[i] == x:\n        return i\n    return None\n\nclass ModInt():\n    def __init__(self, x):\n        self.__x = (x % __MOD__)\n    def __add__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__((self.__x + other.__x)%__MOD__))\n        elif type(other) == ModInt:\n            return self.__class__((self.__x + other.__x)%__MOD__)\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n    def __radd__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__((other.__x + self.__x)%__MOD__))\n        elif type(other) == ModInt:\n            return self.__class__((other.__x + self.__x)%__MOD__)\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n\n    def __sub__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__((self.__x - other.__x)%__MOD__))\n        elif type(other) == ModInt:\n            return self.__class__((self.__x - other.__x)%__MOD__)\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n    def __rsub__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__((other.__x - self.__x)%__MOD__))\n        elif type(other) == ModInt:\n            return self.__class__((other.__x - self.__x)%__MOD__)\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n\n    def __mul__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__((self.__x * other.__x)%__MOD__))\n        elif type(other) == ModInt:\n            return self.__class__((self.__x * other.__x)%__MOD__)\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n    def __rmul__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__((other.__x * self.__x)%__MOD__))\n        elif type(other) == ModInt:\n            return self.__class__((other.__x * self.__x)%__MOD__)\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n\n    def __truediv__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__((self.__x * other.__modinv())%__MOD__))\n        elif type(other) == ModInt:\n            return self.__class__((self.__x * other.__modinv())%__MOD__)\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n    def __rtruediv__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__((other.__x * self.__modinv())%__MOD__))\n        elif type(other) == ModInt:\n            return self.__class__((other.__x * self.__modinv())%__MOD__)\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n\n    def __pow__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__(pow(self.__x, other.__x, __MOD__)))\n        elif type(other) == ModInt:\n            return self.__class__(pow(self.__x, other.__x, __MOD__))\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n    def __rpow__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__(pow(other.__x, self.__x, __MOD__)))\n        elif type(other) == ModInt:\n            return self.__class__(pow(other.__x, self.__x, __MOD__))\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n\n    def __modinv(self, m=__MOD__):\n        a = self.__x\n        if a == 0:\n            raise ZeroDivisionError()\n        if gcd(a, m) != 1:\n            raise Exception(\"%s\u306e\u9006\u6570\u306f\u6c42\u307e\u308a\u307e\u305b\u3093\u3002\" % a)\n        b, u, v = m, 1, 0\n        while b != 0:\n            t = a\/\/b;\n            a -= t*b\n            a, b = b, a\n            u -= t * v\n            u, v = v, u\n        u %= m\n        if u < 0:\n            u += m\n        return u\n    def __int__(self):\n        return self.__x\n    def __str__(self):\n        return str(self.__x)\n\n\n\nif __name__ == '__main__':\n    S = input()\n    T = input()\n\n    i = 0\n    ans = INF\n    while i < len(S)-len(T):\n        s = S[i]\n        j, cnt = i, 0\n        for t in T:\n            if t == S[j]:\n                cnt += 1\n            j += 1\n        if cnt == len(T):\n            # matched\n            print(0)\n            exit()\n        ans = min(ans, len(T)-cnt)\n        i += 1\n    if ans >= INF:\n        print(len(T))\n    else:\n        print(ans)\n","def solve():\n    S = input()\n    T = input()\n\n    ans = float('inf')\n    for i in range(0,len(S)-len(T)+1):\n        cnt = 0\n        for j in range(len(T)):\n            if S[i+j] != T[j]:\n                cnt += 1\n        ans = min(cnt,ans)\n    \n    print(ans)\n\nif __name__ == '__main__':\n    solve()\n","S = input()\nT = input()\nans = float('inf')\n\nfor i in range(len(S)-len(T)+1):\n  tmp = 0\n  for a,b in zip(S[i:i+len(T)],T):\n    if a!=b:\n      tmp+=1\n  ans = min(ans,tmp)\n  \nprint(ans)","S = input()\nT = input()\n\nmin_length = 10000\nlen_def = len(S) - len(T)\nfor i in range(len_def + 1):\n    counter = 0\n    for j in range(len(T)):\n        if S[j + i] != T[j]:\n            counter += 1\n\n    if counter < min_length:\n        min_length = counter\nprint(min_length)\n","S = input()\nT = input()\n\nans = 0\nif T in S:\n  print(ans)\n  exit()\n\nl = len(T)\nfor t in range(1,l):\n  if (T[t:] in S) or (T[:-1*t] in S):\n    ans = t\n    break\n\nprint(ans)","#[int(i) for i in input().split()]\ndef diff(x,y):\n\tret = 0\n\tfor i in range(len(x)):\n\t\tif x[i]!=y[i]:\n\t\t\tret+=1\n\treturn ret\ns=input()\nt=input()\n\nl = len(t)\nans = float('inf')\nfor i in range(len(s)):\n\tif i+l<len(s)+1:\n\t\ttmp = diff(s[i:i+l], t)\n\t\tans = min(ans, tmp)\n\t\t\nprint(ans)\n","S = input()\nT = input()\n\nvalues = [[] for a in range(len(T))]\nfor i, s in enumerate(S):\n    for n, v in enumerate(T):\n        if v == s:\n            values[n].append(i)\n\nmaxR = 0\nfor ni, val in enumerate(values):\n    current_i = 1 + ni\n    for i in val:\n        if i < ni or len(S) - (i+1) < len(T) - (ni+1):\n            continue\n        current = 1\n        for j in range(len(T) - current_i):\n            s_index = i + j + 1\n            if s_index >= len(S):\n                break\n            if S[s_index] == T[j+current_i]:\n                current += 1\n        maxR = max(current, maxR)\n\nprint(len(T) - maxR)","s=list(input())\nt=list(input())\nn=len(t)\nval=0\nfor i in range(len(s)-n+1):\n    temp=0\n    for j in range(n):\n        if s[i+j]==t[j]:\n            temp+=1\n    val=max(val,temp)\n    if val==n:\n        break\nprint(n-val)","S = input()\nT = input()\nlen_T = len(T)\nd = len(S)-len_T\nresult = 10000\nfor i in range(d+1):\n    if i == d:\n        x = S[i:]\n    else:\n        x = S[i:-d+i]\n    sum = 0\n    for i in range(len_T):\n        if T[i] == x[i]:\n            sum += 1\n    sum = len_T - sum\n    if result > sum:\n        result = sum\nprint(result)","import sys\n\nS = list(str(input()))\nT = list(str(input()))\n\nMax = 0\n\nfor i in range(len(S)-len(T)+1):\n    hoge = 0\n    for j in range(len(T)):\n        if S[i+j] == T[j]:\n            hoge += 1\n    Max = max(Max,hoge)\n    \nprint(len(T)-Max)","from collections import defaultdict, deque, Counter\nfrom heapq import heappush, heappop, heapify\nimport math\nimport bisect\nimport random\nfrom itertools import permutations, accumulate, combinations, product\nimport sys\nimport string\nfrom bisect import bisect_left, bisect_right\nfrom math import factorial, ceil, floor\nfrom operator import mul\nfrom functools import reduce\n\n\nsys.setrecursionlimit(2147483647)\nINF = 10 ** 13\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef I(): return int(sys.stdin.readline())\ndef LS(): return sys.stdin.readline().rstrip().split()\ndef S(): return sys.stdin.readline().rstrip()\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef LSR(n): return [LS() for i in range(n)]\ndef SRL(n): return [list(S()) for i in range(n)]\ndef MSRL(n): return [[int(j) for j in list(S())] for i in range(n)]\n\nmod=10**9+7\n\n\ns=S()\nt=S()\nans=0\nfor i in range(len(s)-len(t)):\n    ret=0\n    for j in range(len(t)):\n        if t[j]==s[i+j]:\n            ret+=1\n    ans=max(ret,ans)\n\nprint(len(t)-ans)\n","S = input()\nT = input()\n\n\ndef a():\n    l = len(T)\n    for i in range(l, 0, -1):\n        for j in range(0, l-i+1):\n            if T[j:j+i] in S[j:]:\n                return l-i\n\n\nprint(a())\n","s = input()\nt = input()\n\nans = float(\"inf\")\nfor i in range(len(s)):\n    count = 0\n    if i + len(t) > len(s):\n        break\n\n    for j in range(len(t)):\n        if t[j] != s[i+j]:\n            count+=1\n    \n    ans = min(ans,count)\n\nprint(ans)","# -*- coding: utf-8 -*-\nimport sys\n\nif __name__ == '__main__':\n    S = input()\n    T = input()\n    \n    for i in range(len(T), 0, -1): #T\u306esubstring\u306e\u6587\u5b57\u6570\n        for j in range(0, len(T)-i+1): #T\u306esubstring\u306e\u958b\u59cb\u4f4d\u7f6e\n            if S[j:len(S)-1-(len(T)-i)+j+1].find(T[j:i-1+j+1]) != -1:\n                print (len(T)-i)\n                sys.exit()\n                \n                ","S = input()\nT = input()\n\nmax_count = 0\nfor i in range(len(S)-len(T)+1):\n    count = 0\n    for j in range(len(T)):\n        if T[j] == S[i+j]:\n            count += 1\n    max_count = max(max_count, count)\n\nprint(len(T)-max_count)","S = input()\nT = input()\nl = len(T)\nans = l\nprint(ans)\nfor i in range(l):\n  for j in range(l):\n    if (i<=j):\n      if T[i:j+1] in S:\n        if f >= i and f + (l-j) <= len(S):\n          ans = min(ans, l - (j+1-i))\nprint(ans)\n        ","s = input()\nt = input()\n\nans = len(t)\n\nfor i in range(len(s)-len(t)+1):\n    c = 0\n    for j in range(len(t)):\n        if s[i+j] != t[j]:\n            c += 1\n\n    ans = min(c, ans)\n\nprint(c)\n","a = \"abc\"\nprint(a[0:])","S = input()\nT = input()\n\nmin_cnt = 9999999999\nfor i in range(0, len(S) - len(T)+1):\n    s = S[i: i + len(T)]\n    cnt = 0\n    for m, n in zip(s, T):\n        if m != n:\n            cnt +=1\n    min_cnt = min(min_cnt, cnt)\n\nprint(min_cnt)\n\n","\nS = input()\nT = input()\n\ntext = ''\n\nfor moji in T:\n    text += moji\n    if S.count(text) == 0:\n        text = text[0:-1]\n        break\n\nif text == '':\n    print(len(T)-1)\nelse:\n    print(len(T)-len(text))","S = input()\nT = input()\n\ns = len(S)\nt = len(T)\n\nans = 0\n\nfor i in range(s - t + 1):\n    c = 0\n    for j in range(t):\n        if S[i + j] == T[j]:\n            c += 1\n    ans = max(ans, c)\n\nprint(t - c)","S = input()\nT = input()\nans = len(T)\nfor i in range(len(S)-len(T)+1):\n    cnt = 0\n    for j in range(len(T)):\n        # print(i, j, S[i+j], T[j])\n        if S[i+j] != T[j]:\n            cnt += 1\n    ans = min(ans, cnt)\nprint(ans)","s = input()\nt = input()\nmax = 0\na = 0\n\nfor i in range(len(s)):\n  m = i\n\n  for j in range(len(t)):\n    if i < j:\n      break\n    \n    if s[m] == t[j]:\n      a += 1\n      m += 1\n      if max < a:\n        max = a\n    else:\n      a = 0\n      m = i\n\nprint(len(t) - max)","import numpy as np\nimport difflib\nS,T = [input() for i in range(2)]\nlent=len(T)\nlens=len(S)\nmin=10000\nfor i in range (0,lens-lent+1):\n  now=S[i:i+lent]\n  curnum=0\n  for j in range(0,lent):\n    if now[j]!=T[j]:\n      curnum=curnum+1\n  if curnum<min:\n    min=curnum\nprint(min)\n   ","s = list(input())\nt = list(input())\n\na = [0] * (len(s) - len(t) + 1)\n\nfor i in range(len(s) - len(t) + 1):\n    for j in range(len(t)):\n        if s[i + j] != t[j]:\n            a[i] += 1\n\nprint(min(a))","S = input()\nT = input()\nlenS = len(S)\nlenT = len(T)\nmaxcnt = 0\nfor l in range(lenT):\n    for r in range(l,lenT):\n        if T[l:r+1] in S[l:lenS-lenT+r+1]:\n            maxcnt = max(maxcnt, r - l + 1)\nprint(lenT - maxcnt)","S = input()\nT = input()\n\nanswer = 100000\nfor i in range(len(S) - len(T) + 1):\n    distance = 0\n    for j in range(len(T)):\n        if S[i + j] != T[j]:\n            distance += 1\n    if answer > distance:\n        answer = distance\nprint(answer)","s = input()\nt = input()\n\nresult = 0\nfor i in range(len(s) - len(t) + 1):\n    cnt = 0\n    for j in range(len(t)):\n        if s[i+j] == t[j]:\n            cnt += 1\n    result = max(result, cnt)\n        \nprint(len(t) - result)\n","import math\nini = lambda : int(input())\ninm = lambda : map(int,input().split())\ninl = lambda : list(map(int,input().split()))\ngcd = lambda x,y : gcd(y,x%y) if x%y else y\ndef factorization(n):\n    arr = []\n    temp = n\n    for i in range(2, int(-(-n**0.5\/\/1))+1):\n        if temp%i==0:\n            cnt=0\n            while temp%i==0:\n                cnt+=1\n                temp \/\/= i\n            arr.append([i, cnt])\n    if temp!=1:\n        arr.append([temp, 1])\n    if arr==[]:\n        arr.append([n, 1])\n    return arr\ndef make_divisors(n):\n    divisors = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n \/\/ i:\n                divisors.append(n\/\/i)\n    divisors.sort()\n    return divisors\n \n#maincode-------------------------------------------------\n\ns = input()\nt = input()\nans = 0\n\nfor i in range(len(t)):\n    if t[i] != s[i]:\n        ans += 1\n\nfor i in range(len(s)-len(t)):\n    c = 0\n    for j in range(len(t)):\n        if t[j] != s[i + j]:\n            c += 1\n    ans = min(c,ans)\nprint(ans)","s = input()\nt = input()\n\na = len(s)\nb = len(t)\n\nans = []\n\nfor i in range((a-b)+1):\n    an = 0\n    for j in range(b):\n        if s[i+j] != t[j]:\n            an += 1\n            \n    ans.append(an)\n\nprint(min(ans))","S=input()\nT=input()\nnum=len(S)\nfor i in range(len(S)-len(T)+1):\n    x=0\n    for j in range(len(T)):\n        if S[i+j]!=T[j]:\n            x+=1\n    if x<=num:\n        num=x\nprint(num)","def main():\n    target = input()\n    source = input()\n    diff = len(target) - len(source)\n    max_change = len(source)\n    for i in range(diff+1):\n        temp = target[i:len(target)-diff+i]\n        change = sum([1 for t, s in zip(temp, source) if(t!=s)])\n        if(change < max_change):\n            max_change = change\n    print(max_change)\nif __name__ == '__main__':\n    main()","import sys\n\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef II(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef SI(): return sys.stdin.readline()[:-1]\n\ns=SI()\nt=SI()\nsn=len(s)\ntn=len(t)\nans=100000\nfor i in range(sn-tn+1):\n    cur=0\n    for j in range(tn):\n        cur+=s[i+j]!=t[j]\n    ans=min(ans,cur)\nprint(ans)\n","import re\ns = input()\nt = input()\nans = len(t)\nfor i in range(len(t)+1):\n    for j in range((len(t))-i+1):\n        pattern = \".\"*j + t[j:j+i] + \".\" *(len(t)-(i+j))\n        if(pattern == \".\"*len(t)) :\n            continue\n        r = re.search(pattern, s)\n        if r :\n            ans = min(ans,len(t)-i)\nprint(ans)","#a = list(map(int,input().split()))\na = input()\nb = input()\npointer = 0\nsmallest  = 0\ndef compare(s1,s2):\n\tcount = 0\n\tfor x in range(len(s1)):\n\t\tif s1[x] == s2[x]:\n\t\t\tcount+=1\n\treturn count\nfor x in range(len(a)- len(b)+1):\n\tvalue =  compare(b,(a[x:x+len(b)]))\n\tsmallest = max(value,smallest)\nprint(len(b) - smallest)\n","s = input()\nt = input()\nans = 0\nfor i in range(len(t)):\n    if s.count(t[i:]) != 0:\n        ans = (len(t[i:]))\n        break\nif s.count(t[:-1]) != 0:\n    ans = max((len(t[1:])),ans)\nprint(len(t)-ans)","def hamming(s,t):\n    d = 0\n    for i in range(len(s)):\n        if s[i]!=t[i]:\n            d+=1\n    return d\n\ndef main():\n    s = input()\n    t = input()\n\n    candidates = []\n    for i in range(len(s)-len(t)+1):\n        candidates.append(hamming(t,s[i:i+len(t)]))\n\n    print(min(candidates))\nif __name__ == \"__main__\":\n    main()","import sys\ninput=sys.stdin.readline\nsys.setrecursionlimit(10**6)\n\ns=input().rstrip()\nt=input().rstrip()\n\nans=10**10\n\nfor i in range(len(s)-len(t)+1):\n    now=0\n    for j in range(len(t)):\n        if t[j]!=s[i+j]:\n            now+=1\n    ans=min(ans,now)\nprint(ans)","S = list(input())\nT = list(input())\n\ndef kakikae_count(S_i):\n    count = 0\n    for i in range(len(T)):\n        if S[S_i + i] != T[i]:\n            count += 1\n    return count\n\nmin_count = len(T)\nfor i in range(0, len(S) - len(T) + 1):\n    need_count = kakikae_count(i)\n    if need_count < min_count:\n        min_count = need_count\nprint(min_count)\n            ","s = input()\nt = input()\nminr = len(t)\ns_t_d = len(s) - len(t)\nfor i in range(s_t_d):\n    cnt = 0\n    for ss, ts in zip(s[i:i + len(t)], t):\n        if ss != ts:\n            cnt += 1\n    minr = min(minr, cnt)\nprint(minr)","S=input()\nT=input()\nans=len(T)\nfor start in range(len(S)-len(T)+1):\n  diff=0\n  for i in range(len(T)):\n    if T[i]!=S[start+i]:\n      diff+=1\n  ans=min(ans,diff)\nprint(ans)\n","#from collections import deque,defaultdict\nprintn = lambda x: print(x,end='')\ninn = lambda : int(input())\ninl   = lambda: list(map(int, input().split()))\ninm   = lambda:      map(int, input().split())\nins = lambda : input().strip()\nDBG = True # and False\nBIG = 10**18\nR = 10**9 + 7\n#R = 998244353\n\ndef ddprint(x):\n  if DBG:\n    print(x)\n\ns = ins()\nt = ins()\nls = len(s)\nlt = len(t)\nmn = BIG\nfor i in range(ls-lt+1):\n    x = 0\n    for j in range(lt):\n        if s[i+j]!=t[j]:\n            x += 1\n    mn = min(mn,x)\nprint(mn)\n","# -*- coding: utf-8 -*-\n\ns = input()\nt = input()\n\nresultdiff = len(t)\n\n# print(s)\n# print(t)\n# print(\"---\")\nfor i in range(len(s)):\n  # print(i)\n  if len(s) < len(t) + i:\n    # print(\"break\")\n    break\n  subs = s[i:len(t) + i]\n  # print(subs)\n\n  diff = 0\n  for j in range(len(t)):\n    if t[j] != subs[j]:\n      diff += 1\n  if diff < resultdiff:\n    resultdiff = diff\n\n# print(\"***\")\nprint(resultdiff)\n","S = input()\nT = input()\nans = len(T)\n\nfor i in range(len(S)-len(T)+1):\n  Si = S[i:i+len(T)]\n  count = 0\n  for j in range(len(T)):\n    if Si[j] != T[j]:\n      count += 1\n  if ans > count:\n    ans = count\n\nprint(ans)","s = str(input())\nt = str(input())\n\nlens = len(s)\nlent = len(t)\n\ncon = lent;\n\nfor x in range(lens - lent + 1):\n    zz = 0;\n    for y in range(lent):\n        if s[x+y] != t[y]:\n            zz += 1;\n    if zz < con:\n        con = zz;\n\nprint(con)","\n\nS = input()\nT = input()\n\nif len(T) > len(S) or len(S) == 0:\n    print(0)\n\nanswer = float(\"inf\")\nfor i in range(len(S) - len(T) + 1):\n\n    sub = S[i: i + len(T)]\n\n    unique = 0\n    for s,o in zip(sub, T):\n        if s != o:\n            unique += 1\n    \n    answer = min(answer, unique)\n\nprint(answer)","S = input()\nT = input()\nans = 1000\nfor i in range(len(S)-len(T)+1):\n  cnt = 0\n  for j in range(len(T)):\n    if(T[j] != S[i+j]):\n      cnt += 1\n  ans = min(ans, cnt)\nprint(ans)","#akash mandal: jalpaiguri government engineering college\nimport sys,math\n\ndef ii(): return int(input())\ndef mii(): return map(int,input().split())\ndef lmii(): return list(mii())\n\n\ndef main():\n    s=input();sd=s[::-1]\n    t=input();td=t[::-1]\n    d=[];r=\"\";rd=\"\";dd=[]\n    for i in range(len(t)):\n        r=r+t[i];\n        #print(r)\n        f=s.count(r)\n        d.append(f)\n    d.reverse()\n    #print(*d)\n    for i in range(len(td)):\n        rd=rd+td[i]\n        fd=sd.count(rd)\n        dd.append(fd)\n    #print(*dd)\n    for i in range(len(d)):\n        if d[i]!=0:\n            d[i]=len(t)-(i+1)\n        else:\n            d[i]=len(t)\n    for i in range(len(dd)):\n        if dd[i]!=0:\n            dd[i]=len(t)-(i+1)\n        else:\n            dd[i]=len(t)\n    print(min(min(d),min(dd)))\n    \n    \n    \n        \n        \n                \n                \n            \n        \n            \n    \n        \nif __name__==\"__main__\":\n    main() ","s=str(input())\nt=str(input())\nn=len(t)\nm=len(s)\nans=0\na=[]\nif t in s:\n  print(0)\nelse:\n  for i in range(m-n-1):\n    for j in range(n):\n      if s[i+j]==t[j]:\n        ans+=1\n    a.append(ans)\n  print(n-max(a))","s = input()\nt = input()\n\nans = 0\nfor i in range(len(s)):\n    cnt = 0\n    if i + len(t) - 1 >= len(s):\n        break\n    for j in range(len(t)):\n        if s[i+j] == t[j]:\n            cnt += 1\n    ans = max(ans, cnt)\nprint(len(t) - ans)","S=str(input())\nT=str(input())\n\n\nU=[0]*(len(S)-len(T)+1)\nc=[0]*(len(S)-len(T)+1)\nfor j in range(len(S)-len(T)+1):\n    U[j]=S[j:j+len(T)]\n    for i in range(len(T)):\n        if U[j][i]==T[i] :c[j]=c[j]+1\n\nprint(len(T)-max(c))","def solution(s,t):\n    minv = float(\"inf\")\n    for i in range(len(s) - len(t) + 1):\n        v = 0\n        for j in range(len(t)):\n            if s[i + j] != t[j]:\n                v += 1\n        minv = min(minv, v)\n    return minv\n\ns = input()\nt = input()\nprint(solution(s, t))\n","# abc177_b.py\nS = input()\nT = input()\nfor i in range(1,len(T)):\n    if T[0:i] in S:\n        continue\n    else:\n        ans = i\n        break\nprint(len(T)-i)"],"formatted_programs":["s=input()\nt=input()\n\nmc=0\nfor i in range(len(s)-len(t)):\n    c=0\n    for j in range(len(t)):\n        if s[i+j]==t[j]:\n            c+=1\n    mc=max(c,mc)\nprint(len(t)-mc)\n","s=list(input())\nt=list(input())\nans=10**7\nfor i in range(len(s)-len(t)+1):\n  c=0\n  for j in range(len(t)):\n    if s[i+j]!=t[j]:\n      c=c+1\n  if c<ans:\n    ans=c\nprint(ans)","from collections import defaultdict\nfrom collections import deque\nfrom collections import Counter\nimport math\n\ndef readInt():\n\treturn int(input())\ndef readInts():\n\treturn list(map(int, input().split()))\ndef readChar():\n\treturn input()\ndef readChars():\n\treturn input().split()\n\ns = list(input())\nt = list(input())\n\nans = float(\"inf\")\n\nfor i in range(len(s)-len(t)+1):\n\ttar = s[i:i+len(t)]\n\tansk = 0\n\tfor j in range(len(tar)):\n\t\tif t[j]!=tar[j]:\n\t\t\tansk+=1\n\tans = min(ans, ansk)\n\nprint(ans)","#!\/usr\/bin\/env python3\n\n\ndef solve(S, T):\n    if S.find(T) >= 0:\n        return 0\n\n    for i in range(1, len(T)):\n        head = T[:-i]\n        tail = T[i:]\n\n        head_idx = S.find(head)\n        tail_idx = S.rfind(tail)\n\n        if 0 <= head_idx <= len(S) - len(T):\n            return i\n\n        if tail_idx >= i:\n            return i\n\n    return len(T)\n\n\ndef main():\n    S = input()\n    T = input()\n    result = solve(S, T)\n    print(result)\n\n\nif __name__ == \"__main__\":\n    main()\n","S = input()\nT = input()\nans = len(T)\nfor i in range(len(S)-len(T)+1):\n    diff = 0\n    for j in range(len(T)):\n        if S[i+j] != T[j]:\n            diff += 1\n    ans = min(ans, diff)\nprint(ans)","import base64\nimport subprocess\n\n\nexe_bin = \"e??420s#R400000000000{}h%0RR91U=IKQ00000KmY&$000007%l(+0000000000Kma%Z2>?I<9snHx1^@s61ONa4KmY&$00000KmY&$00000KmY&$00000_yGU_00000_yGU_000002mk;8000000{{R31ONa4I066w00000I066w00000I066w000008~^|S000008~^|S000000RR91000000RR911poj5000000000000000000000000000000X%hed00000X%hed00000001BW000000RR911^@s6ARPbz00000ARQn800000ARQn800000_yPa`00000U<CjG00000001BW000000ssI21^@s6I2`~000000I2|AW00000I2|AW000005CQ-I000005CQ-I000002mk;8000001ONa41ONa4R004100000R004100000R004100000L;wH)00000L;wH)000001ONa400000P~~)F1ONa4kP!d?00000kP!d?00000kP!d?00000L;wH)00000L;wH)000001ONa400000QRQ@G1^@s6000000000000000000000000000000000000000000000000005C8xG00000Qss1H1ONa4ARPbz00000ARQn800000ARQn800000-~s>u00000-~s>u000000RR9100000FKlUIHZ(76WG!rIZgqGqcsMpKHZ(4CZ!R(b1ONa45C8xG0RR91M^04$000000{{R30ssI2000001ONa46aWAK0{{R3M^04$_uOv>YUhfou9RsuqgUX}B}n#;0ssI2761SM0RR911^@s6000mI0RRL5761SM000006qpP{bCw4J000000000000000000000000000000-~a#s5&!@I00000000000000000000E&>1mA^-pY00000000000000000000eE<Le5&!@I00000000000000000000RR9105&!@I00000000000000000000#Q^{S5&!@I00000000000000000000CjtNf5&!@I000000000000000000008Ug?S5&!@I00000000000000000000*#H0l5&!@I000000000000000000007XbhO5&!@I000000000000000000002?78B5&!@I00000000000000000000VgUdE5&!@I00000000000000000000H30ws5&!@I000000000000000000009RUCU5&!@I000000000000000000000s#O35&!@I00000000000000000000a{vGU5&!@I000000000000000000009{>OVAOHXW00000000000000000000@Bsh-5&!@I00000000000000000000Jpup#5&!@I000000000000000000005C8xGAOHXW00000000000000000000I{*LxAOHXW00000000000000000000!2kdN5&!@I00000000000000000000SOEY45dawgKp-Fh000005CH%H00000xBvhE5dawgU?Cs?000007y$qP000000BmVub97{5D=RK@Z!R_fUtec!Z*E_6bYXIIUta)UNmNZ=WMy(?XK8bEWpY$aLu_wuWmI8eY-IpnNmNZ=a%E>}b97~LR82!{Z*FB&VPb4$0AE^DbTTksUvy}4Z+Bm8Wo~D5XkTS=a&K}_OJe|ET251MY;#3v0AE^DbTnmdWNb-eQ*<#gV`yP=UvzR|X>@Z*V?{+$Q*<#iVqtS>V_$D`baG{3ZAnyLR4`vfQ#M}!Us_XiGh=CP0AE^8Q*=0KZ*yN_VRL0PNp5L$L@`Bn0AE^UY*2OpUs_I6bU0~mb6;X%b7e6#b9ruKUw3JAXkT-5WNB|jVgO%XXLxvDaAk6HZ*F01X>@sCb}#^6T5fl30AE^8Q*=0KZ*yN_VRL0PNp5L$Lor2m0AE^DbTTwwUvy}4Z+BmBb#z~EW?yn)Zf9j*W^Hs(OJjNfUs_XiG-GddbO2vkQ*?53Nn=xVF)?FkVRBz|a$#w7b4g=GQ(;MCMMY9mbTKnxVRLC?Uuko6a%Ev{NmO4{FkeMeH(ydtQ*<|9Ut@T9F)=YRVqtS>V_$Q0a%pa7NmDdmQ#D^yF<(VR0AE^DbTK(!Uvy}4Z+Bm8Z)a&^UuAM~Z*oveV*qSvVrOGxUvn;VZ!R$aUsY~*X>Md+Qe|^>ZDjy#X<}n8b8jv-0AF8obYWv_Ut?%%UuI!xYye+hV|Za-VRU79X><T>Wo=_{c>rHuV|Za-W@&C=Y-xIB0AF8hX<}nvb97;HbYE>@X>I^VLqlIPE-(N`Oi4mRUotK<07pzoLPK9NE-^F!M@&gVLtip3GA=a$Ls(crLP=jSE;9f}Oi4mRSXf^(E;KGOFaSqPNkT(dSYI<PG%hkR07pzoLPJ<sUo$Q=000000ssR50ssO40ssU60{{X50ssX71^@>D0ssgA0ssI22>=5C000000ssO40ssI20RRC2;sF2v5C8xGAOHXWP$qc`000R9PXYh{000000RRI4{{a915C8xGKmY&$6lrM<000F5R{{V45C8xGl#!MO000C4VFCaE5C8xGbsA|200093YytoP000000RRL50RR915C8xG00000)30j<000O8cme<b5C8xGaQK%3000L7g8~2m5C8xGarl=4000I6k^%q#5C8xGbSaVu00062p#lH^00000ARQn8000002mk;800000U=RQR00000C><aG000002mk;800000Fb@C#00000FdZNO000002mk;800000AP@im000002p}K;000002mk;8000002p}K;00000&>tWG000001^@s60ssI20000000000*dHJO000001^@s65C8xG0000000000;2$6W000001^@s65&!@I0000000000=pP^e000001^@s66951J0000000000@E;%m000001^@s66aWAK0000000000_#Yqu000001^@s66#xJL00000000005Fj7`000000RR914gdfE0000000000Kp-Fh000001poj5761SM0000000000U?Cs?000001poj57XSbN0000000000U>_g=000002LJ#70RR910000000000XdfT|000002LJ#70{{R30000000000a33H5000002LJ#71ONa40000000000cpo4D000002LJ#71poj50000000000fFB?L000002LJ#71^@s60000000000h#w#T000002LJ#72LJ#70000000000kRKob000002LJ#72mk;80000000000m>(bj000002LJ#72><{90000000000pdTOr000002LJ#73IG5A0000000000s2?Bz000002LJ#73jhEB0000000000upb}*000002LJ#73;+NC0000000000xE~+@000002LJ#74FCWD0000000000z#kw0000002LJ#74*&oF0000000000$R8j8000002LJ#75dZ)H0000000000NQ3MMNQ(u<6d(Xdg}`(I|IkQ-#0bLx|1}yEAOQa*926h`4<A4P|0Nm}AOL6p0002#;Q#;s|0NO>AOL6q0002#(EtDc|0N0(AOL6r0002#!2kdM|0MzxAOL6s0002#u>b%6|0VhpAOL6t0002#p#T5>|0VJhAOL6u0002#kpKVx|0U`ZAOL6v0002#fdBvh|0UuRAOL6w0002#aR2}R|0UWJAOL6x0002#VE_OB|0U8BAOL6y0002#Q2+n`|0T*3AOL6z0002#K>z>$|0Ti`AOL6!0002#F#rGm|0TK;AOL6#0002#ApigW|0S{$AOL6$0002#5dZ)G|0SvuAOL2N0000000000L03UmG5<kTK~z;!NP+B_0001FNQ(p|C;$KeNQs0bhyVZpF~I2M{{R0-jdUa+NR3=1KuC=}^b{ZfNXG@y6(9fr0000;$3!G300000NR37iNQrbL7{){-FaSu2TqF=k$3!GZ00000NQp!wAV`fv5XM9#Pyk4YL?l4y9RL6SNQvG^iO1*>|Ns9;i(DiqNQ*=yNQvHwL?i?$#))(!2oH#E0RR9@i)<tyOk?;=jdUbnOgZ~WjaCpz4@cijiS9@N-bjg5Bw%z2O@-|bgy8@H06~ewgXjUh0RR91i9{p}4<Cd800000NQ3(i4~NzO002mfR3u<XgZlwUiO>&(`~Uy|NQK)Eh1UQ80E<K<1W1WoBxuG28URR(d?a9nzz>dL0RRAtbR-N+i$o+qF~Bj>NQ1@!K@YYJ05}W>50$}4gTMg~w#fm?NIAxJ=Shu55J5TAL=R8mNIA!J1?U3)|Nl8`BnS_Tr~m)}NQ+z~C`dWo4~G!}002yjY$PB^DeFm%Mi5AeL?mEI0qsmV`$-Q+-%N?<NQ1=zNCDUngg^iP|4oJM4}~`W|NlshJ#Pa50O)%C|Nmw#4<Cd800000NQK)Eh!g<;07#8{0qCCn|NlsdL?mEHiCiRbNQv4^iS9^=$LLo5|NlsfR3u>O5&!@H4<A4PK@YY?0Ehxei&P|F>HPlx|3Qhw4<A4PNR2(|5g-6WiRS2`{r~?+iO1;a{Qv(*i$o+4NQ-<VKuCkY5J)-4bOq=k{r~?+i$o+CNQ-<VAV`D25J)-4bOq=M{r~?lz(|X<B!~b20AxrrG$kki004D;NP)zd00016T|rzyT|r(!U&CgQG1BS6{{R0-jWs3$002mhJyQYz07!}1NQvq(!07(`|Nlsd!$^xnBoIi8d?Y|fgTN3-ImdJb=%f7q|455OBp67Gd?X-9gTN3-ImdJb=!^XS|4517==1#l|45BJ<pBTy=r{cT|LBtZ|Nmx?NR2&06CeOcgX{?Cu>Al3NQ*tO5Fh|ZjTO2OAOJ{>H6#-t07!$x2<bBX|Nmx?G3`l-(OyW2;z)z!@K97tjRk4}002mh4f6m107#8Jto;A~{}omcAOQ3aA4C8ENR2&#5Fh|mNR0(~5Fh|ZIrvD4<#ZWHiv=nWAOJ{(z;q2=|KMgW4<Cd800000UBeF_KmcYg4<Cd800000NR2%~5Fh|ZjWs$DAOKZJDgH=_<w(K)14xPRNWthoNCC!3(f)K8NQ(vW4<G<Yg}`(SUH{-_4<Cd800000UBeF_KmcYg4<Cd800000fIU$XAOHY$FGzzupAR4a098nd<#Y^4i#^H@AOPsy`~UywNdN!;#sw)7AOHbf!w(;T00000^TTEjA4C8ERY-~DUFl~3|NmwWA4C8EL03UmNr~4%RY6otjU}E8AOKZJjV-1OAOKTAiTz25_Dm_|NQ3MMNWuLB=y&@6|44=HbRaR?4<Cd800000Oo{qTiS|T^??L|*+(?7N0Z2LBb?Qii#0XnmL0myyL0&;$!;oe!4<Cd800000^TPlDNQ3MMNQ1-(!vFvP0RRF3VqtS>V_$Q0a%pa7Iy!T8VsmtI0AgWtX=7h=baH8KXF57xO<!YjWnpw>0000000000C389;Ute%<b08>pXlY|;AZc?TC3<x!AU+^;XlZjTK67b$Whf~iD0gUSV`w00b08&pbtwP<VqtS>V_$Q0a%pa7IyzrXUt@1>b98cbV{{;Hb!==PZf|rTc42I3WB>pF000000UHB5L;wH)2LJ#7p!xs*kN^Mxkoy1sxBvhEp!)y+@Bjb+p#A^<L;(N*(Eb1aU;qFB;Qs&rU;zLCQ2+n`r~v=~000006aWAK000000eVsZ0eBDr8w>{skO2n}6aWAK8~^|SX#M~HD*ylh00000000006aWAK000000eVsZ0eBDr8w>{skO2SyBme*a8~^|S2>Jj2@Bjb+01gmF4j4)g3wH>B06!W#Dl;S^000006aWAKL;wH)(E0!W2mk;800000000008~^|S000000eVnOQUC#X5C@x`4Ils;8w>{skO2SyPyhe`Bme*asQLf@{sI611it_P074EBj{-st7>)x(4j_#LLJla51wjrlh6X_nID-dA4$uJuZ~_VrI6)3DK@KQF4j@7f7(xyZLJkN+3jhEB7ytkO&;S4cRQ&({E&u=k080)KUJeKV00000L;wH)>;M1&c>VwXWdHyG074EBj{-st7>)x)4j_#LLJla51xOAsh6YFuID-dG4nT4aI6)3DK@KQF4j@7f7(xyZLJkN35C8xGGywnrp#A^<0ssI20000000000|Nj9MCItWhf3pO#1pw#;1pol_1qb@C#00000AP@im000000RR91000000RR91000000RR9100000;sF2v000000RR9100000{{a91000003;+NC000007z+RZ000004FCWD00000<PZP=0000082|tP00000ARQn8000008vp<R000005C8xG000008UO$Q00000FdZNO000008~^|S000002mk;800000_5S~F00000m;wL*000001poj50000000jU5000001^@s600000zybgO000003IG5A00000tpWf5000003jhEB000007ytkO000006#xJL0000000000000000{{R300000NFN{o000000ssI200000Pyqk{000006aWAK000002LJ#7000007XSbN00000$O!-d000002LJ#700000kO%+(000002mk;800000H~|0v000002><{9000007ytkO000009smFU000002mk;800000`~UxM000000RR9900000{{R1P00000;0FKz00000|NsAQ000000{{R300000@c;jB00000t_J`B00000`TzfK000001ONa4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000I2|AW0000000000000000000000000MhgG{00000Rto?C00000W(xoS00000b_)Oi00000h6?}y00000mJ0v?00000rV9W700000whI6N00000#tQ%d00000)(Zdt00000<_iD-00000_6q<2000001`GfI0000077PFY0000000000000000000000000000000000000000000000000000000000000000000000000002p}K;000000000000000M?*t8AShL0b#8QZAU7^GE-)=Kbz*gHbagR)F*q(TG$|lAE;TMN0000000000000000000000000000000000000000000000{{U4I066w000000000000000000000{{X5R0041000000000000000000000{{a6bOHbX000000000000000000000{{d7m;wL*000000000000000000000{{g8zybgO000000000000000000000{{j900jU5000000000000000000000{{mAt_J`B000000000000000000000{{pB;0FKz000000000000000000000{{sCkO%+(000000000000000000000{{vD$O!-d000000000000000000000{{yE7z+RZ000000000000000000000{{#FFbe<x000000000000000000000{{&GAPfKi000000000000000000000{{*HFbn_y000000000000000000000{{;I<PZP=000000000000000000000{{>J@DKn1000000000000000000000{{^KkP!d?000000000000000000000{{{L*bx8#000000000000000000000{{~MP!j+E000000000000000000000{|2NARQn8000000000000000000000{|5OFdZNO000000000000000000000{|8PI2|AW000000000000000000000{|BQNFN{o000000000000000000000{|ER03aX$000000000000000000000{|HSKp-Fh000000000000000000000{|KT000000000000000000000RR911OV~>000000000000000000005dZ)H0ssyGFb@C#00000E&u=k00000B>(^b0RR~Qc_JVH000000RR9100000Gynhq1OV~>00000000000000000000KL7v#0ssyGkPiR=000000000000000K>z>%0ssyG&<_9r000000000000000Q~&?~0ssyGAP@im000000000000000Y5)KL0RR~Qcp@MG000000RR9100000c>n+a0RR;MFdZNO000000000000000pa1{>0ssyGU=RQR000000000000000tN;K20RR*LARQn8000000000000000Gynhq1OV~>00000000000000000000%K!iX0RR#JOcMYA000000000000000000001OV~>00000000000000000000*#H0l000pHkP!d?000000000000000>;M1&0RR>NI2|AW000000000000000^#A|>000yKFdZNO0000000000000001_1y7000yKARQn8000000000000000836zQ0RR^ONFN{o000000000000000F984m5C9ke7$6`3000000000000000UIPFCAOIKu03aX$000000000000000HUR(t5daVX@DKn1000001ONa400000MF9W+5&!@I00000000000000000000bO8VWA^-pY00000000000000000000AOHXW5&#YWFbn_y00000{sI6100000kO2Sy5&!@I00000000000000000000*Z}|l5&!@I000000000000000000000|Ed55ds(h2p}K;0000000000000005CQ-IAp#fx5Fj7`000002mk;800000ECK)k5&!@I00000000000000000000Qv?725&#bX<PZP=000000000000000RssM35&!@I00000000000000000000X#xNM5&!@I00000000000000000000g8~2m5&!@I00000000000000000000VgmpG5&#YWU=IKQ00000D*ylh00000mjVC)5&!@I00000000000000000000ssaE25&!@I00000000000000000000*8>0m5&#PT7z+RZ000000000000000#sUBU5ds(h7$6`3000000000000000(gFYg5&!@I00000000000000000000MFRi;5dawgKp-Fh000005CH%H00000Tmt|A5C9ke03aX$0000000000000000RaF25C9nffFd9O000000000000000X#)TN5C9nf7$6`3000000000000000bprqZ5&!@I00000000000000000000r~?215&!@I00000000000000000000%>w`c5&#YWa1a0h00000WdHyG00000-2(ss5&!@I00000000000000000000{sRC25&!@I000000000000000000006$AhPAOHXW00000000000000000000F$4er5&!@I00000000000000000000Ndy1@5&#YW;1B=+000000ssI200000Sp)z85dawgU?Cs?000007y$qP00000Zv+4U5&!@I00000000000000000000jsySzAOHXW00000000000000000000odf^?AOHXW00000000000000000000w*&wH5&!@I000000000000000000000773=bz*aLa%pa7E@N<T0AEK;PeMUVUte=|VqZyLZDDC{0AE^DbWAv3Uukb?ZfSG?V{&wJbaiHCE@J>>WpZU_X>)XCa$j_9Ut?@<Ze?=-UteTzUuSG@Vqt7wWOQ$Gb6;U~cmQK>ZE$R5bY)~NH#Rvq0AF8ZZ(nC@Z(?C=Uu1M|a&uo{b$DN9X>Ms>VRCX|d0%C2baHtBW^!R|WnW}<ZEbk~UteZ&VQpn!WOZ$Ad0%O6X>?y<a&lpLUuAA|a(Mt>Uq(_vO+{ZtPDEc{0AF86PE}t;NMA-$K}|(pNJLTqUqo3>K}|_R0AF8eZfSI1VRCX|d0%C2WB^}ZX>MtBUtw}`VR>J3bYXII0AEK;PeMUVUr$CxQ$<u?R6#;aMPC44Wn^J=VE|uAPhWF%WNB_+b#rB80AE^8Q*=0KZ*yN_VRL0MHFJ4xV_$b^bZB35bYy97MPfieM@&gVLs(c}GcGg$UteQ*VP9rxZeeU`dSyUBM@&gVLtip3GA=a$Us_XiG-YmNY)NBNbTKhwXkl_+baG*7baP2#MMY9mbTKnxVRLC?UvG1Ca%Ev{NmO4{FkeMeHeWzMM@&gVLs(c}GcGg$Us_XiGB96XbZByKcVBE}ZfA68UuAM~Z*oveV?aPhOi4mRSXf^(E;ImNUu1J{Uua=&WNc*sL{~0yWo9m4UuSrDUvOn|b8l{8Y-x0PUv@A6Us_XiF*#pfbZByKcVBF8XK7<!WpZ+Fa!^ZSKtM-KNkT(dSYI<PGyrX7ZDVkGKtM-KNkT(kGA=PR0AF8Ycwt{*bY*yHbU;8yOi4mRUotK-E;RsOT4Zccc0fQ!Oi4mRSXf^(E;ImNT5fl3KtM-KNkT(dSYI<PGyq>;b97;2YhPn%YhPwzX>341M@&gVLtip3Gyq>;R82!)MNULtUjScPQ*?53Nn=xVF)?FkVRBz|a$#w7b4g=GQ(;MCMMY9mbTKnxVRLC?Uuko6a%Ev{NmO4{FkeMeH(ydtQ*<|9Ut@T9F)=YRVqtS>V_$Q0a%pa7NmDdmQ#D^yF<(VRKtM-KNkT(dSYI<PG%hkR0AE^DbTngcb#y>LM@&gVLs(c}GcGg$UteTlbYWj}bYXII0AF8Xb8}yFbYXII0AE^DbTTwwUvy}4Z+BmBb#z~EW?yn)Zf9j*W^Hs(OJjOKKu1hTLPJ<sUo$Q=E;29xUs_I6bU0~mb6;X%b7eG1ZfSHwF-3MjKu1hTLPJ<sUo$Q=0AF8hX<}nvV{>(1X>MtB0AF8ccz9oMWpZ<GZeeU`ba`KPFhD><SXe<qNnbH8GXP&&PE&7eb46)DKu1hTLPJ<sUo$Q=0AEQ|O<!bXa%E>}b97~LR82!{Z*FB&VPb4$0AE#ZcWG{9Us7drb!}xpKu1GEUo$Q+0AF8hX<}nvV{>(1W@&C|0AE^DbTeaVZa_dsOi4mRSXf^(E;ImNUu<b&V_$Q0VRCd|ZDDC{KtM-KNkT(kGA=SMH2_~<XKin8UvqR}a&%u`0AEQ|O<!_lXK8bEWpY$aLu_wuWmI8eY-IpnT251RIB9QlUt(c%Wi&}{X>>#}MRq_yM@&gVLs(c}GcGg$04{TRZFFH`04{TMa&%#004{TAb98caVPXI-X>N37a&Q1HZf|sDE<r*`Ep%aL04{ECbY(7QZgnnVb!lv5Eoo!`E@y6aE@)wMXaFu`d2VxgZ2&H0d2VxbasV!8ZgnnpWpZ<AZ*BlCXKr;ac4cyNX>V>{asV!JWo%(CWO;4?E^=jTVJ>iNbO0`CZfSG?E^usgE@y9a04{W8cys_RW@&C|04{QGWMOn+04`-{UuJS)ZDn6*WO4v5WoTb!a$#*{04`@^V_#)>V`Xr3Uvyz&Y-Ip0X>MtBUtw}`VR-;9W@&C|Utw}`VR-;9WO;63ZE0fwE@WYJVE`^-b8`SLV{dJ3Wo~o;00000000000000000000000000000000000000000000000000000000000000000000000000000000000008vp<R0RR910ssI200000I066w00000I066w000008~^|S0000000000000000RR91000000000000000BLDyZ2LJ#70ssI200000R004100000R004100000AOHXW0000000000000001ONa4000000000000000F#rGn2LJ#70ssI200000bOHbX00000bOHbX00000Bme*a0000000000000001ONa4000000000000000L;wH)_W%EH0ssI200000m;wL*00000m;wL*00000C;$Ke000001poj5000002mk;8000000000000000P5=M^3jhEB0ssI200000zybgO00000zybgO00000Kmq^&000001^@s60RR912mk;8000007ytkO00000RsaA10{{R30ssI20000000jU50000000jU500000tpWf50000000000000000RR91000000000000000UH||9|NsAQ0ssI200000t_J`B00000t_J`B00000FaQ7m000001poj5000000ssI2000000ssI200000YXATM{{R1P0ssI200000;0FKz00000;0FKz00000umAu6000001^@s60{{R32mk;8000000000000000dH?_b1ONa40ssI200000kO%+(00000kO%+(00000H~|0v000001poj5000002mk;8000007ytkO00000ga7~l1ONa4LI3~&00000$O!-d00000$O!-d00000Pyqk{000001poj57XSbN2mk;8000007ytkO00000jsO4v0RR911^@s6000007z+RZ000007z+RZ000007XSbN0000000000000001ONa4000000000000000i2wiq0RR911^@s600000Fbe<x00000Fbe<x00000@Bjb+0000000000000005C8xG000005C8xG00000lmGw#0RR911^@s600000APfKi00000APfKi000002mk;80000000000000002mk;8000002mk;800000od5s;0RR911^@s600000Fbn_y00000Fbn_y00000vIGDC0000000000000005C8xG000000000000000qW}N^0RR911^@s600000<PZP=00000<PZP=000002><{90000000000000001ONa4000000000000000sQ>@~0RR910ssI200000@DKn100000@DKn100000pa1{>0000000000000002mk;8000000000000000u>b%70RR910ssI200000kP!d?00000kP!d?00000L;wH)0000000000000001ONa4000000000000000zW@LL0RR910ssI200000*bx8#00000*bx8#00000cmV(a0000000000000002mk;8000000000000000$p8QV0RR910ssI200000P!j+E00000P!j+E0000082|tP0000000000000000RR91000000000000000+W-In4gdfE0{{R300000ARQn800000ARPbz000005C8xG0000000000000002mk;8000002mk;800000=Kufz4*&oF0{{R300000FdZNO00000FdYB@000002mk;80000000000000002mk;8000002mk;800000^8f$<1^@s60{{R300000I2|AW00000I2`~0000005CQ-I000001^@s6000002mk;8000005C8xG00000m;e9(0RR910{{R300000NFN{o00000NFM+I00000xBvhE0000000000000002mk;8000002mk;800000`~Uy|0RR910{{R30000003aX$0000003ZMW000007ytkO0000000000000002mk;80000000000000000s#O32mk;80{{R300000Kp-Fh000007$5)u00000Kmq^&000000000000000KmY&$0000000000000002LS*80RR91FaQ7m0000000000000007$5)u00000DF6Tf0000000000000000RR91000000RR91000000RR910ssI200000000000000000000NFV?J00000;0FKz000008~^|SE&u=k2mk;8000007ytkO000002><{90{{R300000000000000000000C@25`00000+ynps0000000000000000RR910000000000000005dZ)H0{{R3000000000000000000001T6pn000005CH%H0000000000000000RR91000000000000000\"\n\nexe_bin = base64.b85decode(exe_bin)\n\nwith open(\".\/kyomu\", 'wb') as f:\n    f.write(exe_bin)\n\nsubprocess.run([\"chmod +x .\/kyomu\"], shell=True)\nsubprocess.run([\".\/kyomu\"], shell=True)","s=input()\nt=input()\nans=len(t)\nfor i in range(len(s)-len(t)+1):\n    tmp=0\n    for j in range(len(t)):\n        if s[i+j]!=t[j]:\n            tmp+=1\n    ans=min(ans,tmp)\nprint(ans)","s = input()\nt = input()\n\nsl = len(s)\ntl = len(t)\nans = tl\nfor i in range(sl-tl+1):\n  cnt = 0\n  for j in range(tl):\n    if s[i+j] != t[j]:\n      cnt += 1\n  ans = min(ans, cnt)\nprint(ans)","S = input()\nT = input()\ns = len(S)\nt = len(T)\nL = [\"\"]*(s-t+2)\nmatch = [0]*(s-t+1)\n\n\nfor p in range(s-t+1):\n    for q in range(t):\n        L[p] += S[p+q]\n\nfor r in range(s-t+1):\n    for s in range(t):\n        if L[r][s] == T[s]:\n            match[r] += 1\n\nprint(t-max(match))\n\n\n","import sys\ns = input()\nt = input()\n\nif (t in s):\n    print(0)\n    sys.exit()\n\nans = 1000\nfor i in range(len(s)-len(t)+1):\n    diff = 0\n    for j in range(len(t)):\n        if (s[i+j] == t[j]):\n            pass\n        else:\n            diff += 1\n    \n    ans = min(ans, diff)\n\nprint(ans)\n","import sys\nfrom collections import deque\n#import numpy as np\nimport math\n#sys.setrecursionlimit(10**6)\ndef S(): return sys.stdin.readline().rstrip()\ndef SL(): return map(str,sys.stdin.readline().rstrip().split())\ndef I(): return int(sys.stdin.readline().rstrip())\ndef IL(): return map(int,sys.stdin.readline().rstrip().split())\n\ndef solve():\n    lent = len(t)\n    for i in range(lent,-1,-1):\n        for j in range(lent-i+1):\n            if lent<=i+j:    break\n            if t[j:i+j] in s[j:]:\n                return lent-i\n    return lent\n\nif __name__=='__main__':\n    s = S()\n    t = S()\n    print(solve())","import bisect\nimport sys,io\nimport math\nfrom collections import deque\nfrom heapq import heappush, heappop\n\ninput = sys.stdin.buffer.readline\n\ndef sRaw():\n    return input().rstrip(\"\\r\")\n\n\ndef iRaw():\n    return int(input())\n\n\ndef ssRaw():\n    return input().split()\n\n\ndef isRaw():\n    return list(map(int, ssRaw()))\n\nINF = 1 << 29\n\nDIV = (10**9) + 7\n#DIV = 998244353\n\ndef mod_inv_prime(a, mod=DIV):\n    return pow(a, mod-2, mod)\n\n\ndef mod_inv(a, b):\n    r = a\n    w = b\n    u = 1\n    v = 0\n    while w != 0:\n        t = r\/\/w\n        r -= t*w\n        r, w = w, r\n        u -= t*v\n        u, v = v, u\n    return (u % b+b) % b\n\n\ndef CONV_TBL(max, mod=DIV):\n    fac, finv, inv = [0]*max, [0]*max, [0]*max\n    fac[0] = fac[1] = 1\n    finv[0] = finv[1] = 1\n    inv[1] = 1\n    for i in range(2, max):\n        fac[i] = fac[i-1]*i % mod\n        inv[i] = mod - inv[mod % i] * (mod\/\/i) % mod\n        finv[i] = finv[i-1]*inv[i] % mod\n\n    class CONV:\n        def __init__(self):\n            self.fac = fac\n            self.finv = finv\n            pass\n\n        def ncr(self, n, k):\n            if(n < k):\n                return 0\n            if(n < 0 or k < 0):\n                return 0\n            return fac[n]*(finv[k]*finv[n-k] % DIV) % DIV\n\n    return CONV()\n\n\ndef cumsum(As):\n    s = 0\n    for a in As:\n        s += a\n        yield s\n\n\nsys.setrecursionlimit(200005)\n\n\ndef dijkstra(G,start=0):\n    heap = []\n    cost = [INF]*len(G)\n    heappush(heap,(0,start))\n    while len(heap)!=0:\n        c,n = heappop(heap)\n        if cost[n] !=INF:\n            continue\n        cost[n]=c\n        for e in G[n]:\n            ec,v = e\n            if cost[v]!=INF:\n                continue\n            heappush(heap,(ec+c,v))\n    return cost\n\n\ndef main():\n    S= sRaw()\n    T =sRaw()\n    ans = 10*10\n    for sidx in range(0,len(S)-len(T)+1):\n        score = sum([1 for idx in range(len(T)) if S[sidx+idx]!=T[idx]])\n        ans=min(score,ans)\n    print(ans)\n\nmain()\n","S = input()\nT = input()\n\ntc = len( T )\nans = 0\nfor i in range( len(S) - tc + 1 ):\n  cnt = 0\n  for j in range( tc ):\n    if S[ j + i ] == T[ j ]:\n      cnt += 1\n  ans = max( ans, cnt )\nprint( tc - ans )","s=input()\nt=input()\nans=float('inf')\nfor i in range(len(s)-len(t)+1):\n  tmp=0\n  for j in range(len(t)):\n    if t[j]==s[i+j]:\n      pass\n    else:\n      tmp+=1\n  ans=min(ans,tmp)\nprint(ans)","s = input()\nt = input()\n\nl = len(t)\nflag = 0\nfor i in range(1, l+1):\n    if flag == 1:\n        break\n    for j in range(i):\n        if t[j:j+(l-i)+1] in s[j:len(s)-i]:\n            flag = 1\n            print(i-1)\n            break\n\nif flag == 0:\n    print(l)","s = input()\nt = input()\n\nmax_tmp = 0\nout = 0\n\n\ndef comp(a, b):\n    cnt = 0\n    for i in range(len(a)):\n        if a[i] == b[i]:\n            cnt += 1\n    return cnt\n\n\nfor i in range(len(s) - len(t) + 1):\n    max_tmp = comp(s[i:i + len(t)], t)\n    out = max(out, max_tmp)\n\nprint(len(t) - out)","s = input()\nt = input()\nn = len(s)\nm = len(t)\nans = 1000\n\nfor i in range(n - m + 1):\n    cnt = 0\n    for j in range(m):\n        if s[i + j] != t[j]:\n            cnt += 1\n    ans = min(ans, cnt)\n\nprint(ans)","S = input()\nT = input()\n\nm = 0\nfor i in range(len(S)-len(T)+1):\n  n = 0\n  for j in range(len(T)):\n    if(S[i+j]==T[j]):\n      n+=1\n  if(n>m):\n    m = n\nprint(len(T)-m)","# coding: utf-8\n\nimport math\nimport re\nimport numpy as np\nimport copy\n\n#\u8aad\u307f\u8fbc\u3080\nS = input()\nT = input()\n\nans = len(S)\n\n#\u9ad8\u3005(10^3)^2\n\nfor i in range(len(S) - len(T)):\n    #\u4f55\u6587\u5b57\u9055\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\n    cnt = 0\n    for j in range(len(T)):\n        if T[j] != S[i+j]:\n            cnt += 1\n\n    if cnt < ans:\n        ans = cnt\n        \nprint(ans)\n\n","S = input()\nT = input()\n\nlt = len(T)\nans = lt\nfor num in range(len(S) - lt + 1):\n    s = S[num:num+lt]\n    diff = 0\n    for i in range(len(T)):\n        if(T[i] != s[i]):\n            diff += 1\n    ans = min(ans, diff)\n\nprint(ans)","s = input()\nt = input()\n\nmin = len(t)\nfor s_index in range(len(s) - len(t) + 1):\n    different_chars = 0\n    for t_index in range(len(t)):\n        if s[s_index + t_index] != t[t_index]:\n            different_chars += 1\n    if min > different_chars:\n        min = different_chars\nprint(min)","#\n# abc177 c\n#\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"cabacc\nabc\"\"\"\n        output = \"\"\"1\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"codeforces\natcoder\"\"\"\n        output = \"\"\"6\"\"\"\n        self.assertIO(input, output)\n\n\ndef resolve():\n    S = input()\n    T = input()\n\n    ans = float(\"inf\")\n    for i in range(len(S)-len(T)+1):\n        tmp = 0\n        for j in range(len(T)):\n            if T[j] != S[i+j]:\n                tmp += 1\n        ans = min(ans, tmp)\n\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    # unittest.main()\n    resolve()\n","s=input()\nt=input()\nlens=len(s)\nlent=len(t)\nmaxg=0\nfor i in range(lens-lent+1):\n  x=s[i:i+lent]\n  g=0\n  for j in range(lent):\n    if x[j]==t[j]:\n      g+=1\n  if g>maxg:\n    maxg=g\nprint(lent-maxg)","import sys, bisect, math, itertools, string, queue, copy\nmod = 10**9+7\ndef inp(): return int(input())\ndef inpm(): return map(int,input().split())\ndef inpl(): return list(map(int, input().split()))\ndef inpls(): return list(input().split())\ndef inplm(n): return list(int(input()) for _ in range(n))\ndef inplL(n): return [list(input()) for _ in range(n)]\ndef inplT(n): return [tuple(input()) for _ in range(n)]\ndef inpll(n): return [list(map(int, input().split())) for _ in range(n)]\ndef inplls(n): return sorted([list(map(int, input().split())) for _ in range(n)])\n\ns = input()\nt = input()\n\nm = 0\nfor i in range(len(s)):\n    tmp = 0\n    for j in range(len(t)):\n        if(j + i >= len(s)):\n            break\n        if(s[j + i] == t[j]):\n            tmp += 1\n        m = max(m, tmp)\nprint(len(t) - m)\n","ma = lambda :map(int,input().split())\nlma = lambda :list(map(int,input().split()))\ntma = lambda :tuple(map(int,input().split()))\nni = lambda:int(input())\nyn = lambda fl:print(\"Yes\") if fl else print(\"No\")\nimport collections\nimport math\nimport itertools\nimport heapq as hq\nceil = math.ceil\ns = input()\nt = input()\nls = len(s)\nlt = len(t)\nans = 10**9\nfor i in range(0,ls-lt+1):\n    #print(i,i+lt-1)\n    tmp=0\n    for j in range(lt):\n        if t[j]!=s[i+j]:\n            tmp+=1\n    ans =min(ans,tmp)\nprint(ans)\n","#!\/usr\/bin\/env python\n# -*- coding: utf-8 -*-\n\n\ndef main():\n    S = input()\n    T = input()\n\n    s = len(S)\n    t = len(T)\n\n    ans = t\n\n    for i in range(s - t + 1):\n        tmp = 0\n        for j in range(t):\n            if S[i + j] != T[j]:\n                tmp += 1\n        ans = min(ans, tmp)\n\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n","from sys import stdin,stdout\ndef INPUT():return list(int(i) for i in stdin.readline().split())\ndef inp():return stdin.readline()\ndef out(x):return stdout.write(x)\nimport math\nimport random\nJ=10**19\n###############################################################################\\n=17\ns=input()\nt=input()\nans=10**6\nfor i in range(len(s)-len(t)+1):\n    count=0\n    for j in range(len(t)):\n        if s[i+j]!=t[j]:\n            count+=1\n    ans=min(count,ans)\nprint(ans)\n","s=input()\nl=input()\na=len(l)\nbig=0\nfor i in range(len(s)-a+1):\n    cnt=0\n\n    for j in range(i,i+a):\n        if s[j]==l[j-i]:\n            cnt+=1\n    if cnt>big:\n        big=cnt\nprint(a-big)","import sys\ns=input()\nt=input()\nn=10**5\nk=0\nh=[]\nfor i in range(len(s)-len(t)+1):\n    h=s[i:i+len(t)]\n    l=0\n    for j in range(len(t)):\n        if h[j]!=t[j]:\n            l+=1\n    n=min(n,l)\nprint(n)\n","s=input()\nt=input()\n\nmax_itti=0\n\nfor i in range(len(s)-len(t)+1):\n    \n    ittisuu=0\n    \n    for j in range(len(t)):\n        \n        if t[j] == s[i+j]:\n            ittisuu += 1\n            \n            \n    max_itti=max(max_itti,ittisuu)  \nprint(len(t) - max_itti)\n      \n      ","s = input()\nt = input()\n\nls = len(s)\nlt = len(t)\n\nres = 0\nfor i in range(ls-lt+1):\n    ss =s[i:i+lt]\n    cnt = 0\n    for j in range(lt):\n        if ss[j] == t[j]:\n            cnt += 1\n    res = max(res, cnt)\n\nprint(lt - res)","import numpy\n\nS = numpy.array([ord(s) for s in input()])\nT = numpy.array([ord(s) for s in input()])\n\nTL = len(T)\nSL = len(S)\n\nC = [numpy.count_nonzero(S[i:i + TL] != T) for i in range(SL - TL + 1)]\nprint(numpy.min(C))","s = input()\nt = input()\nif t in s:\n  print(0)\nelse:\n  for i in range(len(t)-1):\n    i += 1\n    t1 = t[:i]\n    t2 = t[i:]\n    if t2 in s:\n      print(i)\n      break\n    i *= -1\n    t3 = t[i:]\n    t4 = t[:i]\n    if t4 in s:\n      print(i*-1)\n      break","#a,b,c = list(map(int,input().split()))\n\ns = input().rstrip()\nt = input().rstrip()\n\nbest = 99999999\n\nfor i in range(len(s) - len(t) + 1):\n  tmp = 0\n  for j in range(len(t)):\n    if t[j] != s[j+i]:\n      tmp += 1\n  best = min(best,tmp)\n  \nprint(best)","s = str(input())\n\nt = str(input())\n\nn = len(s)\nm = len(t)\n\nc = m\nfor i in range(n-m+1):\n    d = 0\n    for j in range(m):\n        if t[j] != s[i + j]:\n            d += 1\n    c = min(c,d)\n\nprint(c)\n","S=[i for i in input()]\nT=[j for j in input()]\nans=[]\nfor i in range(len(S)-len(T)):\n  count=0\n  new_S=[t for t in S[i:]]\n  for j,k in zip(new_S,T):\n    if j==k:\n      count+=1\n  else:\n    ans.append(count)\n    \nprint(len(T)-max(ans))   ","if __name__ == \"__main__\":\n    s = input()\n    t = input()\n\n    for i, e in enumerate(t):\n        compare_t = t[0:len (t) - i]\n        if compare_t in s:\n            print(i+len(t) - len(t))\n            break\n    print(0)","import sys\n\nsys.setrecursionlimit(10 ** 6)\ninput = sys.stdin.readline\nfrom math import floor, sqrt, factorial, hypot, log  # log2\u306a\u3044\uff59\uff50\nfrom heapq import heappop, heappush, heappushpop\nfrom collections import Counter, defaultdict, deque\nfrom itertools import accumulate, permutations, combinations, product, combinations_with_replacement\nfrom bisect import bisect_left, bisect_right\nfrom copy import deepcopy\nfrom fractions import gcd\nfrom random import randint\n\n\ndef ceil(a, b): return (a + b - 1) \/\/ b\n\n\ninf = float('inf')\nmod = 10 ** 9 + 7\n\n\ndef pprint(*A):\n    for a in A:     print(*a, sep='\\n')\n\n\ndef INT_(n): return int(n) - 1\n\n\ndef MI(): return map(int, input().split())\n\n\ndef MF(): return map(float, input().split())\n\n\ndef MI_(): return map(INT_, input().split())\n\n\ndef LI(): return list(MI())\n\n\ndef LI_(): return [int(x) - 1 for x in input().split()]\n\n\ndef LF(): return list(MF())\n\n\ndef LIN(n: int): return [I() for _ in range(n)]\n\n\ndef LLIN(n: int): return [LI() for _ in range(n)]\n\n\ndef LLIN_(n: int): return [LI_() for _ in range(n)]\n\n\ndef LLI(): return [list(map(int, l.split())) for l in input()]\n\n\ndef I(): return int(input())\n\n\ndef F(): return float(input())\n\n\ndef ST(): return input().replace('\\n', '')\nimport sys\nimport itertools\nimport copy\n\n\ndef main():\n    # D, T, S = MI()\n    # L = LLIN(N)\n    S = input()\n    T = input()\n\n    ushiro = 0\n    for i in range(len(T)):\n        # print(T[0:len(T)-i])\n        a = T[0:len(T)-i]\n        ushiro = i\n        if a in S:\n            break\n    mae = 0\n    for i in range(len(T)):\n        # print(T[i:len(T)])\n        b = T[i:len(T)]\n        mae = i\n        if b in S:\n            break\n    # print(ushiro)\n    # print(mae)\n    print(min(ushiro,mae) - 1)\n    #     if T[-i]\n    # if D \/ T <= S:\n    #     print('Yes')\n    # else:\n    #     print('No') \n    # cnt = 0\n    # for l in L:\n    #     num = l[0] ** 2 + l[1] ** 2 \n    #     if num <= D ** 2:\n    #         cnt+=1\n    # print(cnt)\n    # print(row)\n    # total = sum(row)\n    # target = total - K\n    # if K == total:\n    #     print(1)\n    #     sys.exit()\n    # col = []\n    # for w in range(W):\n    #     cnt = 0\n    #     for h in range(H):    \n    #         print(A[h][w])\n    #         if A[h][w] == '#':\n    #             cnt += 1\n    #     col.append(cnt)\n    # print(col)\n    # ans = 0\n    # for w in range(W):\n    #     for h in range(H):\n    #         if A[h][w] == '#':\n    #             if col[w] + row[h] - 1 == target:\n    #                 print(str(h) + str(w))\n    #                 ans +=1\n    #         else:\n    #             if col[w] + row[h] == target:\n    #                 print(str(h) + str(w))\n    #                 ans +=1\n    # print(ans)\n    #     for  in x:\n\n\n    # print('AC x ' + str(cnt['AC']))\n    # print('WA x ' + str(cnt['WA']))\n    # print('TLE x ' + str(cnt['TLE']))\n    # print('RE x ' + str(cnt['RE']))\n    \n\nif __name__ == '__main__':\n    main()","S = input()\nt = input()\nneq = len(t)\nfor i in range(len(S)-len(t)+1):\n  neq_temp = 0\n  for j in range(len(t)):\n    if S[i+j]!=t[j]:\n      neq_temp += 1\n  neq = min(neq,neq_temp)\nprint(neq)","s = input()\nt = input()\n\ndef check(a, b):\n    if len(a) != len(b):\n        return 0\n    else:\n        ans = 0\n        for i in range(len(a)):\n            if a[i] == b[i]:\n                ans += 1\n        return ans\n\nans = 0\nfor i in range(len(s)):\n    x = check(s[i:i + len(t)], t)\n    if ans  < x:\n        ans = x\n\nprint(len(t) - ans)","def abc177b():\n    s = input()\n    t = input()\n    min_val = float('inf')\n    for i in range(len(s) - len(t) + 1):\n        cnt = 0\n        for j in range(len(t)):\n            if s[i + j] != t[j]:\n                cnt += 1\n        min_val = min(cnt, min_val)\n    print(min_val)\n\n\nabc177b()","S = list(input())\nT = list(input())\nls = len(S)\nlt = len(T)\nans = lt\nfor offset in range(ls - lt + 1):\n\tcnt = 0\n\tfor i in range(lt):\n\t\tif S[offset + i] != T[i]:\n\t\t\tcnt += 1\n\tans = min(ans, cnt)\nprint(ans)","S = input()\nT = input()\nST = [0 for _ in range(len(S)-len(T)+1)]\nfor i in range(len(S)-len(T)+1):\n  for j in range(len(T)):\n    s = S[i+j]\n    t = T[j]\n    if  s==t:\n      ST[i]+=1\nprint(len(T)-max(ST))","s = input()\nt = input()\n\nnum_s = len(s)\nnum_t = len(t)\nans = len(t)\n\n# T\u306e\u5404\u4f4d\u7f6e\u306b\u304a\u3044\u3066\u3001S\u306e\u6587\u5b57\u6570\u306e\u3046\u3061\u4f55\u500b\u4e00\u81f4\u3057\u3066\u3044\u308b\u306e\u304b\u3001\u5168\u6570\u30c1\u30a7\u30c3\u30af\u3002\n# > O(T*S)\uff1e\u300010**6\u30aa\u30fc\u30c0\u30fc\n\nfor i in range(num_s):\n    end = i + num_t\n    if (end > num_s):\n        break\n    tar_s = s[i:end]\n    # print(tar_s)\n\n    count = 0\n    for a, b in zip(tar_s, t):\n        if (a != b):\n            #print('add', a)\n            count += 1\n\n    ans = min(ans, count)\n\n\nprint(ans)\n","S = input()\nT = input()\n\ndef count_common(a,b):\n    cnt = 0\n    for i in range(len(a)):\n        if a[i] == b[i]:\n            cnt += 1\n    return cnt\n\ncnt = 0\n\nfor i in range(len(S) - len(T) + 1):\n    cnt = max(cnt, count_common(S[i:i+len(T)],T))\n\nprint(len(T)-cnt)","S = input()\nT = input()\n\nL = len(T)\nans = 0\n\nfor i in range(len(S)-L+1):\n    cnt = 0\n    for j in range(L):\n        \n        if S[i+j] == T[j]:\n            cnt += 1\n        ans = max(ans,cnt)\n        \nprint(L-ans)","S = input()\nT = input()\n\n\nmax_diff = 0\nwindow = len(T)\nfor i in range(0, len(S) - window + 1):\n    x = S[i: i+window]\n    count = 0\n    for a, b in zip(T, x):\n        if a != b:\n            count += 1\n    max_diff = max(count, max_diff)\nprint(max_diff)","# \/usr\/bin\/python3\n# -*- coding: utf-8 -*-\nfrom queue import Queue\nfrom queue import LifoQueue as Stack\nfrom math import sqrt, floor, ceil, log2, log10, pi\nfrom fractions import gcd\nfrom itertools import permutations, combinations\nfrom operator import itemgetter\nfrom functools import cmp_to_key\nfrom bisect import bisect_left\n\n\nINF=1001001001\n__MOD__=(10**9)+7\nyn = 'YNeos'\njudge = False\ncnt = 0\nans = None\n\n\ndef lcm(a, b):\n    return (a*b) \/\/ gcd(a,b)\n\ndef intinput():\n    return int(input())\n\ndef mulinputs():\n    return map(int,input().split())\n\ndef lineinputs(func=intinput):\n    datas = []\n    while True:\n        try:\n            datas.append(func())\n        except EOFError:\n            break\n    return datas\n\ndef bindex(a,x):\n    i = bisect_left(a,x)\n    if i != len(a) and a[i] == x:\n        return i\n    return None\n\nclass ModInt():\n    def __init__(self, x):\n        self.__x = (x % __MOD__)\n    def __add__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__((self.__x + other.__x)%__MOD__))\n        elif type(other) == ModInt:\n            return self.__class__((self.__x + other.__x)%__MOD__)\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n    def __radd__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__((other.__x + self.__x)%__MOD__))\n        elif type(other) == ModInt:\n            return self.__class__((other.__x + self.__x)%__MOD__)\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n\n    def __sub__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__((self.__x - other.__x)%__MOD__))\n        elif type(other) == ModInt:\n            return self.__class__((self.__x - other.__x)%__MOD__)\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n    def __rsub__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__((other.__x - self.__x)%__MOD__))\n        elif type(other) == ModInt:\n            return self.__class__((other.__x - self.__x)%__MOD__)\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n\n    def __mul__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__((self.__x * other.__x)%__MOD__))\n        elif type(other) == ModInt:\n            return self.__class__((self.__x * other.__x)%__MOD__)\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n    def __rmul__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__((other.__x * self.__x)%__MOD__))\n        elif type(other) == ModInt:\n            return self.__class__((other.__x * self.__x)%__MOD__)\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n\n    def __truediv__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__((self.__x * other.__modinv())%__MOD__))\n        elif type(other) == ModInt:\n            return self.__class__((self.__x * other.__modinv())%__MOD__)\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n    def __rtruediv__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__((other.__x * self.__modinv())%__MOD__))\n        elif type(other) == ModInt:\n            return self.__class__((other.__x * self.__modinv())%__MOD__)\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n\n    def __pow__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__(pow(self.__x, other.__x, __MOD__)))\n        elif type(other) == ModInt:\n            return self.__class__(pow(self.__x, other.__x, __MOD__))\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n    def __rpow__(self, other):\n        if type(other) == int:\n            other = self.__class__(other)\n            return int(self.__class__(pow(other.__x, self.__x, __MOD__)))\n        elif type(other) == ModInt:\n            return self.__class__(pow(other.__x, self.__x, __MOD__))\n        else:\n            raise Exception(\"Not Int or Not ModInt\")\n\n    def __modinv(self, m=__MOD__):\n        a = self.__x\n        if a == 0:\n            raise ZeroDivisionError()\n        if gcd(a, m) != 1:\n            raise Exception(\"%s\u306e\u9006\u6570\u306f\u6c42\u307e\u308a\u307e\u305b\u3093\u3002\" % a)\n        b, u, v = m, 1, 0\n        while b != 0:\n            t = a\/\/b;\n            a -= t*b\n            a, b = b, a\n            u -= t * v\n            u, v = v, u\n        u %= m\n        if u < 0:\n            u += m\n        return u\n    def __int__(self):\n        return self.__x\n    def __str__(self):\n        return str(self.__x)\n\n\n\nif __name__ == '__main__':\n    S = input()\n    T = input()\n\n    i = 0\n    ans = INF\n    while i < len(S)-len(T):\n        s = S[i]\n        j, cnt = i, 0\n        for t in T:\n            if t == S[j]:\n                cnt += 1\n            j += 1\n        if cnt == len(T):\n            # matched\n            print(0)\n            exit()\n        ans = min(ans, len(T)-cnt)\n        i += 1\n    if ans >= INF:\n        print(len(T))\n    else:\n        print(ans)\n","def solve():\n    S = input()\n    T = input()\n\n    ans = float('inf')\n    for i in range(0,len(S)-len(T)+1):\n        cnt = 0\n        for j in range(len(T)):\n            if S[i+j] != T[j]:\n                cnt += 1\n        ans = min(cnt,ans)\n    \n    print(ans)\n\nif __name__ == '__main__':\n    solve()\n","S = input()\nT = input()\nans = float('inf')\n\nfor i in range(len(S)-len(T)+1):\n  tmp = 0\n  for a,b in zip(S[i:i+len(T)],T):\n    if a!=b:\n      tmp+=1\n  ans = min(ans,tmp)\n  \nprint(ans)","S = input()\nT = input()\n\nmin_length = 10000\nlen_def = len(S) - len(T)\nfor i in range(len_def + 1):\n    counter = 0\n    for j in range(len(T)):\n        if S[j + i] != T[j]:\n            counter += 1\n\n    if counter < min_length:\n        min_length = counter\nprint(min_length)\n","S = input()\nT = input()\n\nans = 0\nif T in S:\n  print(ans)\n  exit()\n\nl = len(T)\nfor t in range(1,l):\n  if (T[t:] in S) or (T[:-1*t] in S):\n    ans = t\n    break\n\nprint(ans)","#[int(i) for i in input().split()]\ndef diff(x,y):\n\tret = 0\n\tfor i in range(len(x)):\n\t\tif x[i]!=y[i]:\n\t\t\tret+=1\n\treturn ret\ns=input()\nt=input()\n\nl = len(t)\nans = float('inf')\nfor i in range(len(s)):\n\tif i+l<len(s)+1:\n\t\ttmp = diff(s[i:i+l], t)\n\t\tans = min(ans, tmp)\n\t\t\nprint(ans)\n","S = input()\nT = input()\n\nvalues = [[] for a in range(len(T))]\nfor i, s in enumerate(S):\n    for n, v in enumerate(T):\n        if v == s:\n            values[n].append(i)\n\nmaxR = 0\nfor ni, val in enumerate(values):\n    current_i = 1 + ni\n    for i in val:\n        if i < ni or len(S) - (i+1) < len(T) - (ni+1):\n            continue\n        current = 1\n        for j in range(len(T) - current_i):\n            s_index = i + j + 1\n            if s_index >= len(S):\n                break\n            if S[s_index] == T[j+current_i]:\n                current += 1\n        maxR = max(current, maxR)\n\nprint(len(T) - maxR)","s=list(input())\nt=list(input())\nn=len(t)\nval=0\nfor i in range(len(s)-n+1):\n    temp=0\n    for j in range(n):\n        if s[i+j]==t[j]:\n            temp+=1\n    val=max(val,temp)\n    if val==n:\n        break\nprint(n-val)","S = input()\nT = input()\nlen_T = len(T)\nd = len(S)-len_T\nresult = 10000\nfor i in range(d+1):\n    if i == d:\n        x = S[i:]\n    else:\n        x = S[i:-d+i]\n    sum = 0\n    for i in range(len_T):\n        if T[i] == x[i]:\n            sum += 1\n    sum = len_T - sum\n    if result > sum:\n        result = sum\nprint(result)","import sys\n\nS = list(str(input()))\nT = list(str(input()))\n\nMax = 0\n\nfor i in range(len(S)-len(T)+1):\n    hoge = 0\n    for j in range(len(T)):\n        if S[i+j] == T[j]:\n            hoge += 1\n    Max = max(Max,hoge)\n    \nprint(len(T)-Max)","from collections import defaultdict, deque, Counter\nfrom heapq import heappush, heappop, heapify\nimport math\nimport bisect\nimport random\nfrom itertools import permutations, accumulate, combinations, product\nimport sys\nimport string\nfrom bisect import bisect_left, bisect_right\nfrom math import factorial, ceil, floor\nfrom operator import mul\nfrom functools import reduce\n\n\nsys.setrecursionlimit(2147483647)\nINF = 10 ** 13\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef I(): return int(sys.stdin.readline())\ndef LS(): return sys.stdin.readline().rstrip().split()\ndef S(): return sys.stdin.readline().rstrip()\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef LSR(n): return [LS() for i in range(n)]\ndef SRL(n): return [list(S()) for i in range(n)]\ndef MSRL(n): return [[int(j) for j in list(S())] for i in range(n)]\n\nmod=10**9+7\n\n\ns=S()\nt=S()\nans=0\nfor i in range(len(s)-len(t)):\n    ret=0\n    for j in range(len(t)):\n        if t[j]==s[i+j]:\n            ret+=1\n    ans=max(ret,ans)\n\nprint(len(t)-ans)\n","S = input()\nT = input()\n\n\ndef a():\n    l = len(T)\n    for i in range(l, 0, -1):\n        for j in range(0, l-i+1):\n            if T[j:j+i] in S[j:]:\n                return l-i\n\n\nprint(a())\n","s = input()\nt = input()\n\nans = float(\"inf\")\nfor i in range(len(s)):\n    count = 0\n    if i + len(t) > len(s):\n        break\n\n    for j in range(len(t)):\n        if t[j] != s[i+j]:\n            count+=1\n    \n    ans = min(ans,count)\n\nprint(ans)","# -*- coding: utf-8 -*-\nimport sys\n\nif __name__ == '__main__':\n    S = input()\n    T = input()\n    \n    for i in range(len(T), 0, -1): #T\u306esubstring\u306e\u6587\u5b57\u6570\n        for j in range(0, len(T)-i+1): #T\u306esubstring\u306e\u958b\u59cb\u4f4d\u7f6e\n            if S[j:len(S)-1-(len(T)-i)+j+1].find(T[j:i-1+j+1]) != -1:\n                print (len(T)-i)\n                sys.exit()\n                \n                ","S = input()\nT = input()\n\nmax_count = 0\nfor i in range(len(S)-len(T)+1):\n    count = 0\n    for j in range(len(T)):\n        if T[j] == S[i+j]:\n            count += 1\n    max_count = max(max_count, count)\n\nprint(len(T)-max_count)","S = input()\nT = input()\nl = len(T)\nans = l\nprint(ans)\nfor i in range(l):\n  for j in range(l):\n    if (i<=j):\n      if T[i:j+1] in S:\n        if f >= i and f + (l-j) <= len(S):\n          ans = min(ans, l - (j+1-i))\nprint(ans)\n        ","s = input()\nt = input()\n\nans = len(t)\n\nfor i in range(len(s)-len(t)+1):\n    c = 0\n    for j in range(len(t)):\n        if s[i+j] != t[j]:\n            c += 1\n\n    ans = min(c, ans)\n\nprint(c)\n","a = \"abc\"\nprint(a[0:])","S = input()\nT = input()\n\nmin_cnt = 9999999999\nfor i in range(0, len(S) - len(T)+1):\n    s = S[i: i + len(T)]\n    cnt = 0\n    for m, n in zip(s, T):\n        if m != n:\n            cnt +=1\n    min_cnt = min(min_cnt, cnt)\n\nprint(min_cnt)\n\n","\nS = input()\nT = input()\n\ntext = ''\n\nfor moji in T:\n    text += moji\n    if S.count(text) == 0:\n        text = text[0:-1]\n        break\n\nif text == '':\n    print(len(T)-1)\nelse:\n    print(len(T)-len(text))","S = input()\nT = input()\n\ns = len(S)\nt = len(T)\n\nans = 0\n\nfor i in range(s - t + 1):\n    c = 0\n    for j in range(t):\n        if S[i + j] == T[j]:\n            c += 1\n    ans = max(ans, c)\n\nprint(t - c)","S = input()\nT = input()\nans = len(T)\nfor i in range(len(S)-len(T)+1):\n    cnt = 0\n    for j in range(len(T)):\n        # print(i, j, S[i+j], T[j])\n        if S[i+j] != T[j]:\n            cnt += 1\n    ans = min(ans, cnt)\nprint(ans)","s = input()\nt = input()\nmax = 0\na = 0\n\nfor i in range(len(s)):\n  m = i\n\n  for j in range(len(t)):\n    if i < j:\n      break\n    \n    if s[m] == t[j]:\n      a += 1\n      m += 1\n      if max < a:\n        max = a\n    else:\n      a = 0\n      m = i\n\nprint(len(t) - max)","import numpy as np\nimport difflib\nS,T = [input() for i in range(2)]\nlent=len(T)\nlens=len(S)\nmin=10000\nfor i in range (0,lens-lent+1):\n  now=S[i:i+lent]\n  curnum=0\n  for j in range(0,lent):\n    if now[j]!=T[j]:\n      curnum=curnum+1\n  if curnum<min:\n    min=curnum\nprint(min)\n   ","s = list(input())\nt = list(input())\n\na = [0] * (len(s) - len(t) + 1)\n\nfor i in range(len(s) - len(t) + 1):\n    for j in range(len(t)):\n        if s[i + j] != t[j]:\n            a[i] += 1\n\nprint(min(a))","S = input()\nT = input()\nlenS = len(S)\nlenT = len(T)\nmaxcnt = 0\nfor l in range(lenT):\n    for r in range(l,lenT):\n        if T[l:r+1] in S[l:lenS-lenT+r+1]:\n            maxcnt = max(maxcnt, r - l + 1)\nprint(lenT - maxcnt)","S = input()\nT = input()\n\nanswer = 100000\nfor i in range(len(S) - len(T) + 1):\n    distance = 0\n    for j in range(len(T)):\n        if S[i + j] != T[j]:\n            distance += 1\n    if answer > distance:\n        answer = distance\nprint(answer)","s = input()\nt = input()\n\nresult = 0\nfor i in range(len(s) - len(t) + 1):\n    cnt = 0\n    for j in range(len(t)):\n        if s[i+j] == t[j]:\n            cnt += 1\n    result = max(result, cnt)\n        \nprint(len(t) - result)\n","import math\nini = lambda : int(input())\ninm = lambda : map(int,input().split())\ninl = lambda : list(map(int,input().split()))\ngcd = lambda x,y : gcd(y,x%y) if x%y else y\ndef factorization(n):\n    arr = []\n    temp = n\n    for i in range(2, int(-(-n**0.5\/\/1))+1):\n        if temp%i==0:\n            cnt=0\n            while temp%i==0:\n                cnt+=1\n                temp \/\/= i\n            arr.append([i, cnt])\n    if temp!=1:\n        arr.append([temp, 1])\n    if arr==[]:\n        arr.append([n, 1])\n    return arr\ndef make_divisors(n):\n    divisors = []\n    for i in range(1, int(n**0.5)+1):\n        if n % i == 0:\n            divisors.append(i)\n            if i != n \/\/ i:\n                divisors.append(n\/\/i)\n    divisors.sort()\n    return divisors\n \n#maincode-------------------------------------------------\n\ns = input()\nt = input()\nans = 0\n\nfor i in range(len(t)):\n    if t[i] != s[i]:\n        ans += 1\n\nfor i in range(len(s)-len(t)):\n    c = 0\n    for j in range(len(t)):\n        if t[j] != s[i + j]:\n            c += 1\n    ans = min(c,ans)\nprint(ans)","s = input()\nt = input()\n\na = len(s)\nb = len(t)\n\nans = []\n\nfor i in range((a-b)+1):\n    an = 0\n    for j in range(b):\n        if s[i+j] != t[j]:\n            an += 1\n            \n    ans.append(an)\n\nprint(min(ans))","S=input()\nT=input()\nnum=len(S)\nfor i in range(len(S)-len(T)+1):\n    x=0\n    for j in range(len(T)):\n        if S[i+j]!=T[j]:\n            x+=1\n    if x<=num:\n        num=x\nprint(num)","def main():\n    target = input()\n    source = input()\n    diff = len(target) - len(source)\n    max_change = len(source)\n    for i in range(diff+1):\n        temp = target[i:len(target)-diff+i]\n        change = sum([1 for t, s in zip(temp, source) if(t!=s)])\n        if(change < max_change):\n            max_change = change\n    print(max_change)\nif __name__ == '__main__':\n    main()","import sys\n\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\ndef II(): return int(sys.stdin.readline())\ndef MI(): return map(int, sys.stdin.readline().split())\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef SI(): return sys.stdin.readline()[:-1]\n\ns=SI()\nt=SI()\nsn=len(s)\ntn=len(t)\nans=100000\nfor i in range(sn-tn+1):\n    cur=0\n    for j in range(tn):\n        cur+=s[i+j]!=t[j]\n    ans=min(ans,cur)\nprint(ans)\n","import re\ns = input()\nt = input()\nans = len(t)\nfor i in range(len(t)+1):\n    for j in range((len(t))-i+1):\n        pattern = \".\"*j + t[j:j+i] + \".\" *(len(t)-(i+j))\n        if(pattern == \".\"*len(t)) :\n            continue\n        r = re.search(pattern, s)\n        if r :\n            ans = min(ans,len(t)-i)\nprint(ans)","#a = list(map(int,input().split()))\na = input()\nb = input()\npointer = 0\nsmallest  = 0\ndef compare(s1,s2):\n\tcount = 0\n\tfor x in range(len(s1)):\n\t\tif s1[x] == s2[x]:\n\t\t\tcount+=1\n\treturn count\nfor x in range(len(a)- len(b)+1):\n\tvalue =  compare(b,(a[x:x+len(b)]))\n\tsmallest = max(value,smallest)\nprint(len(b) - smallest)\n","s = input()\nt = input()\nans = 0\nfor i in range(len(t)):\n    if s.count(t[i:]) != 0:\n        ans = (len(t[i:]))\n        break\nif s.count(t[:-1]) != 0:\n    ans = max((len(t[1:])),ans)\nprint(len(t)-ans)","def hamming(s,t):\n    d = 0\n    for i in range(len(s)):\n        if s[i]!=t[i]:\n            d+=1\n    return d\n\ndef main():\n    s = input()\n    t = input()\n\n    candidates = []\n    for i in range(len(s)-len(t)+1):\n        candidates.append(hamming(t,s[i:i+len(t)]))\n\n    print(min(candidates))\nif __name__ == \"__main__\":\n    main()","import sys\ninput=sys.stdin.readline\nsys.setrecursionlimit(10**6)\n\ns=input().rstrip()\nt=input().rstrip()\n\nans=10**10\n\nfor i in range(len(s)-len(t)+1):\n    now=0\n    for j in range(len(t)):\n        if t[j]!=s[i+j]:\n            now+=1\n    ans=min(ans,now)\nprint(ans)","S = list(input())\nT = list(input())\n\ndef kakikae_count(S_i):\n    count = 0\n    for i in range(len(T)):\n        if S[S_i + i] != T[i]:\n            count += 1\n    return count\n\nmin_count = len(T)\nfor i in range(0, len(S) - len(T) + 1):\n    need_count = kakikae_count(i)\n    if need_count < min_count:\n        min_count = need_count\nprint(min_count)\n            ","s = input()\nt = input()\nminr = len(t)\ns_t_d = len(s) - len(t)\nfor i in range(s_t_d):\n    cnt = 0\n    for ss, ts in zip(s[i:i + len(t)], t):\n        if ss != ts:\n            cnt += 1\n    minr = min(minr, cnt)\nprint(minr)","S=input()\nT=input()\nans=len(T)\nfor start in range(len(S)-len(T)+1):\n  diff=0\n  for i in range(len(T)):\n    if T[i]!=S[start+i]:\n      diff+=1\n  ans=min(ans,diff)\nprint(ans)\n","#from collections import deque,defaultdict\nprintn = lambda x: print(x,end='')\ninn = lambda : int(input())\ninl   = lambda: list(map(int, input().split()))\ninm   = lambda:      map(int, input().split())\nins = lambda : input().strip()\nDBG = True # and False\nBIG = 10**18\nR = 10**9 + 7\n#R = 998244353\n\ndef ddprint(x):\n  if DBG:\n    print(x)\n\ns = ins()\nt = ins()\nls = len(s)\nlt = len(t)\nmn = BIG\nfor i in range(ls-lt+1):\n    x = 0\n    for j in range(lt):\n        if s[i+j]!=t[j]:\n            x += 1\n    mn = min(mn,x)\nprint(mn)\n","# -*- coding: utf-8 -*-\n\ns = input()\nt = input()\n\nresultdiff = len(t)\n\n# print(s)\n# print(t)\n# print(\"---\")\nfor i in range(len(s)):\n  # print(i)\n  if len(s) < len(t) + i:\n    # print(\"break\")\n    break\n  subs = s[i:len(t) + i]\n  # print(subs)\n\n  diff = 0\n  for j in range(len(t)):\n    if t[j] != subs[j]:\n      diff += 1\n  if diff < resultdiff:\n    resultdiff = diff\n\n# print(\"***\")\nprint(resultdiff)\n","S = input()\nT = input()\nans = len(T)\n\nfor i in range(len(S)-len(T)+1):\n  Si = S[i:i+len(T)]\n  count = 0\n  for j in range(len(T)):\n    if Si[j] != T[j]:\n      count += 1\n  if ans > count:\n    ans = count\n\nprint(ans)","s = str(input())\nt = str(input())\n\nlens = len(s)\nlent = len(t)\n\ncon = lent;\n\nfor x in range(lens - lent + 1):\n    zz = 0;\n    for y in range(lent):\n        if s[x+y] != t[y]:\n            zz += 1;\n    if zz < con:\n        con = zz;\n\nprint(con)","\n\nS = input()\nT = input()\n\nif len(T) > len(S) or len(S) == 0:\n    print(0)\n\nanswer = float(\"inf\")\nfor i in range(len(S) - len(T) + 1):\n\n    sub = S[i: i + len(T)]\n\n    unique = 0\n    for s,o in zip(sub, T):\n        if s != o:\n            unique += 1\n    \n    answer = min(answer, unique)\n\nprint(answer)","S = input()\nT = input()\nans = 1000\nfor i in range(len(S)-len(T)+1):\n  cnt = 0\n  for j in range(len(T)):\n    if(T[j] != S[i+j]):\n      cnt += 1\n  ans = min(ans, cnt)\nprint(ans)","#akash mandal: jalpaiguri government engineering college\nimport sys,math\n\ndef ii(): return int(input())\ndef mii(): return map(int,input().split())\ndef lmii(): return list(mii())\n\n\ndef main():\n    s=input();sd=s[::-1]\n    t=input();td=t[::-1]\n    d=[];r=\"\";rd=\"\";dd=[]\n    for i in range(len(t)):\n        r=r+t[i];\n        #print(r)\n        f=s.count(r)\n        d.append(f)\n    d.reverse()\n    #print(*d)\n    for i in range(len(td)):\n        rd=rd+td[i]\n        fd=sd.count(rd)\n        dd.append(fd)\n    #print(*dd)\n    for i in range(len(d)):\n        if d[i]!=0:\n            d[i]=len(t)-(i+1)\n        else:\n            d[i]=len(t)\n    for i in range(len(dd)):\n        if dd[i]!=0:\n            dd[i]=len(t)-(i+1)\n        else:\n            dd[i]=len(t)\n    print(min(min(d),min(dd)))\n    \n    \n    \n        \n        \n                \n                \n            \n        \n            \n    \n        \nif __name__==\"__main__\":\n    main() ","s=str(input())\nt=str(input())\nn=len(t)\nm=len(s)\nans=0\na=[]\nif t in s:\n  print(0)\nelse:\n  for i in range(m-n-1):\n    for j in range(n):\n      if s[i+j]==t[j]:\n        ans+=1\n    a.append(ans)\n  print(n-max(a))","s = input()\nt = input()\n\nans = 0\nfor i in range(len(s)):\n    cnt = 0\n    if i + len(t) - 1 >= len(s):\n        break\n    for j in range(len(t)):\n        if s[i+j] == t[j]:\n            cnt += 1\n    ans = max(ans, cnt)\nprint(len(t) - ans)","S=str(input())\nT=str(input())\n\n\nU=[0]*(len(S)-len(T)+1)\nc=[0]*(len(S)-len(T)+1)\nfor j in range(len(S)-len(T)+1):\n    U[j]=S[j:j+len(T)]\n    for i in range(len(T)):\n        if U[j][i]==T[i] :c[j]=c[j]+1\n\nprint(len(T)-max(c))","def solution(s,t):\n    minv = float(\"inf\")\n    for i in range(len(s) - len(t) + 1):\n        v = 0\n        for j in range(len(t)):\n            if s[i + j] != t[j]:\n                v += 1\n        minv = min(minv, v)\n    return minv\n\ns = input()\nt = input()\nprint(solution(s, t))\n","# abc177_b.py\nS = input()\nT = input()\nfor i in range(1,len(T)):\n    if T[0:i] in S:\n        continue\n    else:\n        ans = i\n        break\nprint(len(T)-i)"]}
{"description_html":"<span class=\"lang-en\">\n<p>Score : <var>300<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>How many integer sequences <var>A_1,A_2,\\ldots,A_N<\/var> of length <var>N<\/var> satisfy all of the following conditions?<\/p>\n<ul>\n<li><var>0 \\leq A_i \\leq 9<\/var><\/li>\n<li>There exists some <var>i<\/var> such that <var>A_i=0<\/var> holds.<\/li>\n<li>There exists some <var>i<\/var> such that <var>A_i=9<\/var> holds.<\/li>\n<\/ul>\n<p>The answer can be very large, so output it modulo <var>10^9 + 7<\/var>.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li><var>1 \\leq N \\leq 10^6<\/var><\/li>\n<li><var>N<\/var> is an integer.<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>N<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>Print the answer modulo <var>10^9 + 7<\/var>.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>2\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>2\n<\/pre>\n<p>Two sequences <var>\\{0,9\\}<\/var> and <var>\\{9,0\\}<\/var> satisfy all conditions.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>1\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>0\n<\/pre>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>869121\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>2511445\n<\/pre><\/section>\n<\/div>\n<\/span>","description_string":"\nScore : 300 points\n\n\nProblem StatementHow many integer sequences A_1,A_2,\\ldots,A_N of length N satisfy all of the following conditions?\n\n0 \\leq A_i \\leq 9\nThere exists some i such that A_i=0 holds.\nThere exists some i such that A_i=9 holds.\n\nThe answer can be very large, so output it modulo 10^9 + 7.\n\n\n\n\nConstraints\n1 \\leq N \\leq 10^6\nN is an integer.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\n\n\n\n\n\nOutputPrint the answer modulo 10^9 + 7.\n\n\n\n\n\n\nSample Input 12\n\n\n\n\n\nSample Output 12\n\nTwo sequences \\{0,9\\} and \\{9,0\\} satisfy all conditions.\n\n\n\n\n\nSample Input 21\n\n\n\n\n\nSample Output 20\n\n\n\n\n\n\nSample Input 3869121\n\n\n\n\n\nSample Output 32511445\n\n\n","orig_lang_html":"<span class=\"lang-en\">\n<p>Score : <var>300<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>How many integer sequences <var>A_1,A_2,\\ldots,A_N<\/var> of length <var>N<\/var> satisfy all of the following conditions?<\/p>\n<ul>\n<li><var>0 \\leq A_i \\leq 9<\/var><\/li>\n<li>There exists some <var>i<\/var> such that <var>A_i=0<\/var> holds.<\/li>\n<li>There exists some <var>i<\/var> such that <var>A_i=9<\/var> holds.<\/li>\n<\/ul>\n<p>The answer can be very large, so output it modulo <var>10^9 + 7<\/var>.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li><var>1 \\leq N \\leq 10^6<\/var><\/li>\n<li><var>N<\/var> is an integer.<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>N<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>Print the answer modulo <var>10^9 + 7<\/var>.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>2\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>2\n<\/pre>\n<p>Two sequences <var>\\{0,9\\}<\/var> and <var>\\{9,0\\}<\/var> satisfy all conditions.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>1\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>0\n<\/pre>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>869121\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>2511445\n<\/pre><\/section>\n<\/div>\n<\/span>","orig_lang_string":"\nScore : 300 points\n\n\nProblem StatementHow many integer sequences A_1,A_2,\\ldots,A_N of length N satisfy all of the following conditions?\n\n0 \\leq A_i \\leq 9\nThere exists some i such that A_i=0 holds.\nThere exists some i such that A_i=9 holds.\n\nThe answer can be very large, so output it modulo 10^9 + 7.\n\n\n\n\nConstraints\n1 \\leq N \\leq 10^6\nN is an integer.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\n\n\n\n\n\nOutputPrint the answer modulo 10^9 + 7.\n\n\n\n\n\n\nSample Input 12\n\n\n\n\n\nSample Output 12\n\nTwo sequences \\{0,9\\} and \\{9,0\\} satisfy all conditions.\n\n\n\n\n\nSample Input 21\n\n\n\n\n\nSample Output 20\n\n\n\n\n\n\nSample Input 3869121\n\n\n\n\n\nSample Output 32511445\n\n\n","solve_rate":0.5092915583,"codenet_problem_id":"p02554","input_testcases":{"46":"188540","38":"901","72":"6100","65":"18262","101":"2","42":"4","80":"412","34":"203","81":"355","79":"694","35":"185","88":"64814","91":"189109","95":"9743","45":"6","70":"3273","62":"4521","32":"979","102":"2","36":"348","33":"1923","68":"823","47":"23","37":"479","53":"34393","52":"131677","0":"226564","71":"4064","73":"329","93":"4234","25":"2615","63":"25334","30":"1620","96":"16756","61":"8318","6":"10","66":"2221","74":"2133","8":"7","29":"3223","27":"1762","57":"17848","84":"8","11":"5344","20":"15421","2":"3","97":"7601","41":"708630","85":"18","26":"5193","49":"12","17":"21762","75":"142","100":"869121","59":"16172","58":"7969","60":"15925","7":"99752","56":"6812","83":"555348","12":"6841","14":"15610","40":"1110","23":"2282","3":"241465","94":"456","31":"2940","89":"67881","24":"1889","82":"1100","51":"9","43":"14","55":"1294","16":"19783","28":"2627","9":"112403","77":"42","48":"32828","4":"5","64":"9378","103":"1","18":"6053","67":"2217","98":"9961","50":"37402"},"output_testcases":{"46":"687604817\n","38":"912668781\n","72":"898681079\n","65":"566588237\n","101":"2\n","42":"974\n","80":"557788232\n","34":"857414219\n","81":"876042897\n","79":"315324489\n","35":"906734300\n","88":"479051401\n","91":"468819545\n","95":"740238925\n","45":"199262\n","70":"563160421\n","62":"998885280\n","32":"342705852\n","102":"2\n","36":"989385607\n","33":"317758182\n","68":"980216306\n","47":"770522840\n","37":"558011423\n","53":"727143384\n","52":"810813404\n","0":"498733826\n","71":"961003123\n","73":"744903414\n","93":"645343714\n","25":"918586851\n","63":"739064382\n","30":"564438208\n","96":"461790329\n","61":"781897777\n","6":"100172994\n","66":"792966352\n","74":"650618801\n","8":"2531214\n","29":"426636884\n","27":"506916345\n","57":"506395298\n","84":"30683774\n","11":"652951107\n","20":"778744163\n","2":"54\n","97":"472383749\n","41":"669444534\n","85":"890707888\n","26":"892461218\n","49":"860400253\n","17":"412553463\n","75":"534591177\n","100":"2511445\n","59":"606375049\n","58":"821007357\n","60":"539990163\n","7":"794180853\n","56":"797002527\n","83":"556355172\n","12":"109005595\n","14":"637069383\n","40":"160675117\n","23":"450657193\n","3":"202510248\n","94":"519286512\n","31":"392146476\n","89":"465817182\n","24":"325108626\n","82":"713874417\n","51":"359376750\n","43":"461190674\n","55":"440007546\n","16":"49073547\n","28":"951498737\n","9":"286663221\n","77":"405533191\n","48":"735815477\n","4":"14670\n","64":"349134206\n","103":"0\n","18":"584615795\n","67":"165615579\n","98":"540079694\n","50":"288115537\n"},"n_missing":19,"programs":["N = int(input())\n\ndef modpow(a, n, mod):\n    res = 1\n    n_bi = str(format(n, 'b'))\n\n    for i in range(len(n_bi)):\n        res = (res*res) % mod\n        if n_bi[i] == \"1\":\n            res = (res*a) % mod\n        \n    return res\n\np = 1000000007\n\nif (N == 1):\n    print(0)\nelif (N == 2):\n    print(2)\nelse:\n    temp = (modpow(10, N, p) - modpow(9, N, p)) % p\n    temp = (temp - modpow(9, N, p)) % p\n    temp = (temp + modpow(8, N, p)) % p\n    print(temp)","n=int(input())\nant,bnt,cnt=1,1,1\n\nfor i in range(n) :\n    ant=10*ant%1000000007\n    bnt=9*bnt%1000000007\n    cnt=8*cnt%1000000007\n\nans=(ant-(bnt*2-cnt))%1000000007\n\nif ans>=0 :\n    print(ans)\nelse :\n    print(1000000007+ans) ","N = int(input())\n\nmod = 10**9+7\nfac = [1, 1]\nfinv = [1, 1]\ninv = [0, 1]\n\ndef init(n):\n    for i in range(2, n + 1):\n        fac.append(fac[-1] * i % mod)\n        inv.append(-inv[mod % i] * (mod \/\/ i) % mod)\n        finv.append(finv[-1] * inv[-1] % mod)\n\n\ndef com(n, k, mod):\n    if n < 0 or k < 0 or n < k:\n        return 0\n    return  (2 * (N-2) * 10 * fac[n] * (finv[k] * finv[n - k] % mod)) % mod\n\ninit(N)\n\nif N == 1:\n    print(0)\nelif N == 2:\n    print(2)\nelse:\n    print(com(N, 2, mod))","import math\ndef combinations_count(n, r):\n    return math.factorial(n) \/\/ (math.factorial(n - r) * math.factorial(r))\nN = int(input())\nif N==1:\n  print(0)\nelse:\n  ans = 0\n  for i in range(N-1):\n    a1= combinations_count(N, i+2) % 1000000007\n    a2=(8**(N-(i+2))) % 1000000007\n    a3=((2**(i+2))-2)%1000000007\n    ans += a1*a2*a3\n  print(ans)","def main():\n    n = int(input())\n    MOD = 10**9 + 7\n\n    if n == 1:\n        ans = 0\n    elif n == 2:\n        ans = 1\n    else:\n        ans = pow(10, n, MOD) - 2 * pow(9, n, MOD) + pow(8, n, MOD)\n        ans %= MOD\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()","N = int(input())\nprint((10**N-2*9**N+8**N)%(10**9+7))","n = int(input())\n#a, b = map(int,input().split())\n#l = list(map(int,input().split()))\n#l = [list(map(int,input().split())) for i in range(n)]\n\n\ndef modpow(a, n, mod):\n    # a^n\u3092mod\u3067\u308f\u3063\u305f\u3042\u307e\u308a \u4e8c\u5206\u7d2f\u4e57\u6cd5O(logn)\n    res = 1\n    while n > 0:\n        if n & 1:\n            res = (res*a) % mod\n        a = (a*a) % mod\n        n = n >> 1\n    return res\n\n\nmod = 10**9 + 7\nif n == 1:\n    ans = 0\nelse:\n    ans = modpow(10, n, mod)-2*modpow(9, n, mod)+modpow(8, n, mod)\n    ans = ans % mod\nprint(ans)\n","# @author \n\nimport sys\n\nclass CUbiquity:\n    def solve(self, tc=0):\n        MOD = 10 ** 9 + 7\n\n        n = int(input())\n        if n == 1:\n            ans = 0\n        else:\n            ans = (pow(10, n, MOD) - 2 * pow(9, n, MOD) + pow(8, n, MOD)) % MOD\n        print(ans)\n\n\n\nsolver = CUbiquity()\ninput = sys.stdin.readline\n\nsolver.solve()\n","ii = lambda : int(input())\nmi = lambda : map(int,input().split())\nli = lambda : list(map(int,input().split()))\n\nmod = 10**9+7\n# m**n\ndef modpow(m,n,mod=1000000007):\n    res = 1\n    while n>0:\n        if n&1: res = res * m % mod\n        m = m * m % mod\n        n >>= 1\n    return res\n\nn = ii()\n\nb = modpow(10,n)\ns = modpow(8,n)\nm = modpow(9,n)\n\nans = b - s - 2*(m-s)\n\nprint(ans%mod)","\nimport math\n\nN=int(input())\n\nif(N==1):\n    print(0)\nelse:\n    a=10**(N-2)\n    b=math.factorial(N) \/\/  math.factorial(N-2)\n    c=b*a\n    if(c>10**9+7):\n        c1=c%10**9+7\n        print(c1)\n    else:\n        print(c)","def solve(n):\n    a, b, c, m = 1, 1, 1, 1\n    mod = 1000000007\n    while n > 0:\n        if n & 1:\n            a = (a * 10 ** m) % mod\n            b = (b * 9 ** m) % mod\n            c = (c * 8 ** m) % mod\n        n >>= 1\n        m *= 2\n    print((a - 2*b + c) % mod)\n\nsolve(int(input()))","n = int(input())\n\nprint((10 ** n - (9 ** n + 9 ** n - 8 ** n)) % (10 ** 9 + 7))","n = int(input())\nprint((10**n-2*9**n+8**n)%(10**9+7))","n=int(input())\nprint((10**n-2*9**n+8**n)%(10**9+7))","N = int(input())\nm = 1000000007\nif N == 1:\n    print(0)\nelse:\n    print((pow(10,N,m)-pow(9,N,m)-pow(9,N,m)+pow(8,N,m))%m)","def main():\n    N = input()\n    print((10 ** N - 9 ** N - 9 ** N + 8 ** N)%(10**9 + 7))\n\nmain()","n = int(input())\n\nx = 0\ni = 0\n\nk = n-2\n\nwhile(k>=i):\n  x += (i+1)*((9**i) * 10**(k-i))\n  i += 1\n\nx *= 2\n\nprint(x%(10**9 + 7))\n","mod = 10**9 + 7\nn = int(input())\nif n <= 1:\n    print(0)\nelse:\n    print((10**n-2*9**n + 8**n)%mod)","import math\n\nN = int(input())\nif N == 1:\n  A = 0\nelse:\n  A = math.factorial(N) \/ math.factorial(N -2)\n  a = A % ((10 ** 9) + 7)\nprint(int(A))","N = int(input())\n\nANS = N * (N - 1) \/ (10 ** 9 + 7)\n\nprint(ANS)","N = int(input())\nd = 10**9+7\n\nif N ==1:\n    print(0)\nelse:\n    print((10**N - 2*9**N + 8**N) % d)","N = int(input())\nMOD = 10**9 + 7\ndef f(x, y): return pow(x, y, MOD)\nprint(f(10, N) - f(9, N) - f(9, N) + f(8, N))\n","import sys\n\ninput=sys.stdin.buffer.readline\n\n\n#sys.setrecursionlimit(10**9)\n#from functools import lru_cache\n\ndef RD(): return sys.stdin.read()\n\n\ndef II(): return int(input())\n\n\ndef MI(): return map(int,input().split())\n\n\ndef MF(): return map(float,input().split())\n\n\ndef LI(): return list(map(int,input().split()))\n\n\ndef LF(): return list(map(float,input().split()))\n\n\ndef TI(): return tuple(map(int,input().split()))\n\n\n# rstrip().decode('utf-8')\n\n\ndef main():\n\tn=II()\n\ta=pow(10,n,10**9+7)\n\tb=pow(9,n,10**9+7)\n\tc=pow(8,n,10**9+7)\n\tprint((a-2*b+c)%10**9+7)\n\t\n\nif __name__==\"__main__\":\n\tmain()\n","N=int(input())\n\na=9**N\nb=8**N\nc=10**N\nA=c-2*a+b\n\nprint(A%(1000000007))\n","N = int(input())\nans = 10**N - 2*9**N + 8**N\nprint(ans%(10**9+7))","n = int(input())\nans = (10 ** n) - (9 ** n) * 2 + (8 ** n)\nprint(ans % (10 ** 9 + 7))","MAX=10**9 + 7\nn = int(input())\nprint(pow(10,n,MAX) - (pow(9,n,MAX)*2)%MAX + pow(8,n,MAX))","ans = 0\nmod = (10**9) + 7\nN = int(input())\nans = (10**N - 9**N - 9**N + 8**N)%mod\nprint(ans)","N = int(input())\nprint((10**N - 9**N - 9**N + 8**N)%(10**9+7))","MOD = 10**9+7\n#nCr\u306f\u4ee5\u4e0b\u306e\u3084\u3064\u5168\u3066\u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\nkaijo_memo = []\ndef kaijo(n):\n  if(len(kaijo_memo) > n):\n    return kaijo_memo[n]\n  if(len(kaijo_memo) == 0):\n    kaijo_memo.append(1)\n  while(len(kaijo_memo) <= n):\n    kaijo_memo.append(kaijo_memo[-1] * len(kaijo_memo) % MOD)\n  return kaijo_memo[n]\n \ngyaku_kaijo_memo = []\ndef gyaku_kaijo(n):\n  if(len(gyaku_kaijo_memo) > n):\n    return gyaku_kaijo_memo[n]\n  if(len(gyaku_kaijo_memo) == 0):\n    gyaku_kaijo_memo.append(1)\n  while(len(gyaku_kaijo_memo) <= n):\n    gyaku_kaijo_memo.append(gyaku_kaijo_memo[-1] * pow(len(gyaku_kaijo_memo),MOD-2,MOD) % MOD)\n  return gyaku_kaijo_memo[n]\n \ndef nCr(n,r):\n  if(n == r):\n    return 1\n  if(n < r or r < 0):\n    return 0\n  ret = 1\n  ret = ret * kaijo(n) % MOD\n  ret = ret * gyaku_kaijo(r) % MOD\n  ret = ret * gyaku_kaijo(n-r) % MOD\n  return ret\n\ndef nPr(n,r):\n  if(n < r or r < 0):\n    return 0\n  ret = 1\n  ret = ret * kaijo(n) % MOD\n  ret = ret * gyaku_kaijo(n-r) % MOD\n  return ret\n\nN = int(input())\nif N == 1:\n    print(0)\nelse:\n    ALL = pow(10,N,MOD)\n    p0 = pow(9,N,MOD)\n    in0 = ALL - pow(9,N,MOD)\n    in9 = ALL - pow(9,N,MOD)\n    p09 = pow(8,N,MOD)\n    in09 = ALL - p09\n    print((in0+in9-in09)%MOD)","N = int(input())\n\nmod = 10**9 + 7\n\nif N < 2:\n    print(0)\nelse:\n    #9\u304c\u306a\u3044\n    no9 = 1\n    no09 = 1\n    tot = 1\n    for i in range(N):\n        no9 *= 9\n        no9 %= mod\n        no09 *= 8\n        no09 %= mod\n        tot *= 10\n        tot %= mod\n    print((tot - 2 * no9 + no09) % mod)\n","N=int(input())\nprint((pow(10,N)-2*pow(9,N)+pow(8,N))%(pow(10,9)+7))","n=int(input())\n\nmod=10**9+7\n\nal=10**n\nex=8**n\na=9**n\n\nx=al-ex\n\nans=x-(a-ex)*2\n\nprint(ans%mod)","n = int(input())\nm = 10**9+7\na = 10**n - 9**n - 9**n + 8**n\nprint(a % m)\n","#------------------------template--------------------------#\nimport os\nimport sys\n# from math import *\nfrom collections import *\n# from fractions import *\n# from heapq import*\nfrom bisect import *\nfrom io import BytesIO, IOBase\ndef vsInput():\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nBUFSIZE = 8192\nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nALPHA='abcdefghijklmnopqrstuvwxyz'\nM=10**9+7\nEPS=1e-6\ndef value():return tuple(map(int,input().split()))\ndef array():return [int(i) for i in input().split()]\ndef Int():return int(input())\ndef Str():return input()\ndef arrayS():return [i for i in input().split()]\n\n\n#-------------------------code---------------------------#\n#vsInput()\n\n\nn=Int()\n\ntot=pow(10,n,M)\nno9no0=pow(8,n,M)\nno9but0=(pow(9,n,M)-pow(8,n,M)+M)%M\nno0but9=no9but0\n\nans=(tot-no9but0-no9no0-no0but9)%M\nprint(ans)\n\n\n\n\n    \n    \n    \n\n\n\n    \n        \n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    ","import math\nfrom math import gcd,pi,sqrt\nINF = float(\"inf\")\n\nimport sys\nsys.setrecursionlimit(10**6)\nimport itertools\nfrom collections import Counter,deque\ndef i_input(): return int(input())\ndef i_map(): return map(int, input().split())\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\n\n\ndef main():\n    n = i_input()\n    m = 10**9+7\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(2)\n    else:\n        print((10**n - 2*9**n + 8**n)%m)\n\n\nif __name__==\"__main__\":\n    main()\n","N = int(input())\n\nif N==1:\n    print(0)\nelse:\n    print((10**N + 8**N - 2*(9**N))%(10**9+7))\n","n=int(input())\nx = 10**n-2*9**n+8**n\ny = x%(10**9+7)\nprint(y)","N = int(input())\nx = 10 ** 9 + 7\nprint(((10 ** N) % x - (2 * (9 ** N)) % x + (8 ** N) % x) % x)","N = int(input())\nif N == 1:\n    print(0)\nelse:\n    a = 1\n    b = 2\n    c = 1\n    for _ in range(N):\n        a *= 10\n        b *= 9\n        c *= 8\n        a %= (10**9 + 7)\n        b %= (10**9 + 7)\n        c %= (10**9 + 7)\n    print((a - b + c)%(10**9 + 7))","N = int(input())\n\nq = int(1e9+7)\n\ncomb = [1]\n\nfor i in range(0, N):\n    comb.append((comb[-1] * (N - i) * pow(i+1, q-2, q)) % q)\n\nbase = [pow(8, N-2, q)]\nfor i in range(2, N+1):\n    base.append((base[-1] * pow(8, q-2, q)) % q)\n\nans = 0\nfor i in range(2, N + 1):\n    ans = (ans + (base[i-2] * comb[i] * (pow(2, i, q) - 2)) % q) % q\nprint(ans)","#from scipy.special import comb\ndef ge():\n    return map(int,input().split())\ndef main():\n    #a,b,c,d=ge()\n    #a=list(map(int,input().split()))\n    #a=input()\n    N=int(input())\n    if N==1:\n        print(0)\n    #elif N==2:\n        #print(2)\n    else:\n        #comb(N, 1, exact=True)\n        #ans=N*(N-1)*(10**(N-2))\n        ans=10**N-(9**N)*2+8**N\n        print(ans%(10**9+7))\n    #comb(4, 2, exact=True)\n\n\nmain()","N = int(input())\n\nans = 10**N-(2*(9**N-8**N)+8**N)\nans %= 10**9+7\nprint(ans)","N = int(input())\np = 10**9+7\na = 1\nb = 1\nc = 1\nfor _ in range(N):\n  a = a*10%p\n  b = b*9%p\n  c = c*8%p\nn = (a-2*b+c)%p\nprint(n)","def func(a, n):\n    p = 10 ** 9 + 7\n    bi = str(format(n, \"b\"))\n    res = 1\n    for i in range(len(bi)):\n        res = (res * res) % p\n        if bi[i] == \"1\":\n            res = (res * a) % p\n    return res\n\n\nN = int(input())\nn = func(10, N)\nno_0 = func(9, N)\nno_9 = func(9, N)\nno_09 = func(8, N)\nans = (n - no_0 - no_9 + no_09)\nif ans < 0:\n    ans += 10 ** 9 + 7\nprint(ans)\n","N = int(input())\nmod = 10**9+7\n\nans = 10**N-(9**N*2-8**N)\nprint(ans % mod)","N = int(input())\n\nmod = pow(10,9)+7\n\nans = pow(10,N,mod)\nans -= pow(9,N,mod)\nans -= pow(9,N,mod)\nans += pow(8,N,mod)\n\nprint(ans)","n = int(input())\nM = 10 ** n\nm1 = 8 ** n\nm2 = (9 ** n) - (8 ** n) \n\nprint((M - m1 - 2*m2)%((10 ** 9) + 7))","N = int(input())\nans =  10**N -( 9**N + 9**N - 8**N ) \nprint( ans%( 10**9 + 7) ) ","# -*- coding: utf-8 -*-\n# map(int, input().split())\nN = int(input())\n\nmod = pow(10,9)+7\n\ndef pow_mod(x,n,mod):\n    ans = 1\n    for i in range(n):\n        ans = (ans*x)%mod\n\n    return ans\n\nans = pow_mod(10,N,mod)\nans = (ans-2*pow_mod(9,N,mod))%mod\nans = (ans+pow_mod(8,N,mod))%mod\n\nprint(ans%mod)","\nN = int(input())\nmod = 10**9+7\n\nprint ((pow(10,N,mod) - 2*pow(9,N,mod) + pow(8,N,mod)) % mod)\n","N = int(input())\nmod = 10**9+7\nprint((10**N-(9**N+9**N-8**N))%mod)","n = int(input())\nif n == 1:\n    print(0)\n    exit()\nmod = pow(10, 9) + 7\nprint(pow(10, n, mod) - (pow(9, n, mod) * 2  - pow(8, n, mod)))","import os\nimport sys\nfrom collections import defaultdict, Counter\nfrom itertools import product, permutations,combinations, accumulate\nfrom operator import itemgetter\nfrom bisect import bisect_left,bisect\nfrom heapq import heappop,heappush,heapify\nfrom math import ceil, floor, sqrt, factorial\nfrom copy import deepcopy\n \ndef main():\n    n = int(input()) \n    ans = (10**n) - 2*(9**n) + (8**n) \n    print(ans%(10**9+7))\n    \n\nif __name__ == \"__main__\":\n    main()","N = int(input())\nmod = 10**9 + 7\nans = pow(10,N,mod)\nans -= pow(9,N,mod)\nans -= pow(9,N,mod)\nans += pow(8,N,mod)\nprint(ans)","from decimal import Decimal\nimport math\nN = int(input())\n\ncount = 0\n\n\n\n\nfor i in range(1,N):\n    for j in range(1,N+1-i):\n        if i+j > 1:\n            x = (Decimal(math.factorial(i+j)))\/(Decimal(math.factorial(i))*(Decimal(math.factorial(j)))) * (8**(N-i-j))\n            count += x\n\n    \n\ncount = int(count % (10**9 + 7))\n\nprint(count)","import itertools\nn=int(input())\nif n>=3:\n  #0\u306e\u6570\u304c\u5897\u3048,9\u306e\u6570\u304c\u6e1b\u308b\n  ans=0\n  for i0 in range(1,n-1\/\/2):\n    i9=n-i0\n    ans+=len(set(itertools.permutations([0]*i0+[9]*i9)))*2\n  if n%2==0:\n    ans+=1\n  print((n*8*(n-2)*2+ans) % ((10**9)+7))\nelif n==2:\n  print(2)\nelse:\n  print(0)","# -*- coding: utf-8 -*-\nN = int(input())\n\nans = (10 ** N) - (9 ** N + (9 ** N - 8 ** N))\nans %= (10 ** 9 + 7)\nprint(ans)","N = int(input())\nmod = 1000000007\ndef powmod(x,y):\n  res = 1\n  for i in range(y):\n    res = res*x%mod\n  return res\nans = powmod(10,N)-powmod(9,N)-powmod(9,N)+powmod(8,N)\nans = ans%mod\nans = (ans + mod)%mod\nprint(ans)","n = int(input())\n\n\ndef modpow(a, n):\n    mod = 10 ** 9 + 7\n    res = 1\n    while n > 0:\n        if n & 1:\n            res = res * a % mod\n        a = a * a % mod\n        n >>= 1\n    if res == 1:\n        return mod - 1\n    elif res == 0:\n        return mod - 2\n    else:\n        return res - 2\n\n\nprint(modpow(10, n) - 2 * modpow(9, n) + modpow(8, n))\n","m=int(1e9+7)\nn=int(input())\nans=pow(10,n,m)-2*pow(9,n,m)+pow(8,n,m)\nprint(ans%m)\n","n = int(input())\n\nfi = 1\nse = 1\ntot = 1\nmod = 10**9 + 7\nfor i in range(0,n):\n    fi*=8\n    fi%=mod\n    se*=9\n    se%=mod\n    tot*=10\n    tot%=mod\nse*=2\nse-=fi\nprint((tot - se)%mod)\n","N = int(input())\n\nx = 10**N - 2*(9**N) + 8**N\nprint(x % (10**9+7))\n","a,b,c,d = map(int,input().split())\nans = []\nfor i in c,d:\n    ans.append(a*i)\nfor j in c,d:\n    ans.append(b*j)\n\nprint(max(ans))","y=(2**3)-2\nx=y*9**(y-2)%(10**9+7)\nif x<10**10:print(x)\nelse:print('ERROR')","N = int(input())\nmod = 10**9+7\nprint((pow(10,N,mod)-2*pow(9,N,mod)+pow(8,N,mod))%mod)","n = int(input())\nmod = 10**9 + 7\n# ans = 1\n# for i in range(n - 2):\n#     ans *= 10\n#     ans %= mod\n# print((ans * n * (n - 1)) % mod)\n\n# print((n * (n - 1) * 10**(n - 2 ) % mod))\nprint((10**n - 9**n - 9**n + 8**n) % mod)\n","def pow_r(x, n):\n    \"\"\"\n    O(log n)\n    \"\"\"\n    if n == 0:  # exit case\n        return 1\n    if n % 2 == 0:  # standard case \u2460 n is even\n        return pow_r(x ** 2, n \/\/ 2)\n    else:  # standard case \u2461 n is odd\n        return x * pow_r(x ** 2, (n - 1) \/\/ 2)\ntotal = 0\nnum = int(input())\nfor i in range(1, num):\n    total += pow_r(2, i)\n\nprint(total)","def solve(n):\n    mod = 10 ** 9 + 7\n    return (pow(10, n, mod) - 2 * pow(9, n, mod) + pow(8, n, mod)) % mod\n\n\ndef main():\n    n = int(input())\n    res = solve(n)\n    print(res)\n\n\ndef test():\n    assert solve(2) == 2\n    assert solve(1) == 0\n    assert solve(869121) == 2511445\n\n\nif __name__ == \"__main__\":\n    test()\n    main()\n","n = int(input())\n\nk = 10 ** n + 8 ** n - 2 * (9 ** n)\n\nprint(k % (10 ** 9 + 7))","import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n \ndef main():\n    N = int(readline())\n    K = int(1e9) + 7\n    ans = pow(10, N, K) - pow(9, N, K) - pow(9, N, K) + pow(8, N, K)\n    print(ans)\nif __name__ == '__main__':\n    main()\n","MODULO = 10**9 + 7\n\nn = int(input())\nprint((pow(10, n, MODULO) - 2 * pow(9, n, MODULO) + pow(8, n, MODULO)) % MODULO)\n","N = int(input())\nmod = 10**9 + 7\nif N == 1:\n    print(0)\n    exit()\nif N == 2:\n    print(2)\n    exit()\nans = (10**N - (2*9**N - 8**N))%mod\nprint(ans)\n","n=int(input());m=10**9+7;print((pow(10,n,m)-2*pow(9,n,m)+pow(8,n,m))%m*(n>1))","import copy\nimport math\nimport time\nimport statistics\nimport math\nimport itertools\nimport bisect\nimport sys\nfrom decimal import *\nfrom collections import deque\n\n\ndef get_int():\n    return int(input())\n\ndef get_string():\n    return input()\n\ndef get_int_list():\n    return [int(x) for x in input().split()]\n\ndef get_string_list():\n    return input().split()\n\ndef get_int_multi():\n    return map(int, input().split())\n\ndef get_string_char_list():\n    return list(str(input()))\n\n# print(\"{} {}\".format(a, b))\n# a_list = [0] * a\nsys.setrecursionlimit(10 ** 6)\n\ndef main():\n    start = time.time()\n\n    n = get_int()\n    if n == 1:\n        ans = 0\n    elif n == 2:\n        ans = 2\n    else:\n        ans = n*(n-1)*10**(n-2) - n*(n-1)*10**(n-3)\n\n    print(ans % (10**9+7))\n\n\nif __name__ == '__main__':\n    main()","N = int(input())\nMOD = 10**9 + 7\n\nret = 0\nprev = 0\nfor i in range(1, N+1):\n    if prev == 0:\n        val = 8**(i-1) * 9**(N-i)\n    else:\n        val = prev * 8 \/\/ 9\n    ret = (ret+val) % MOD\n    prev = val\n\nprint((10**N - 8**N - ret*2)%MOD)\n","n = int(input())\nMOD = 10**9 + 7\nif n == 1:\n    print(0)\nelif n == 2:\n    print(1)\nelse:\n    ans = pow(10, n, MOD) + pow(8, n, MOD) - 2 * pow(9, n, MOD)\n    print(ans % MOD)","mod = 10**9 + 7\ndef solve(n):\n    s = 2*pow(9, n, mod) % mod\n    d = pow(8, n, mod) % mod\n    ans_inv = (s - d)%mod\n    ans = (pow(10, n, mod) - ans_inv) % mod\n\n    return ans\n\nn = int(input())\nprint(solve(n))\n","N = int(input())\nMOD = 10**9+7\n\na10 = 10**N\na9 = 9**N\na8 = 8**N\nprint((a10-a9-a9+a8) % MOD)\n","n=int(input())\nMOD=1000000000+7\nans=((10**n)%MOD+(8**n)%MOD-(2*9**n)%MOD)%MOD\nprint(ans)\n","N = int(input())\nmod = 10 ** 9 + 7\nA = pow(10, N, mod)\nB = pow(9, N, mod)\nC = pow(8, N, mod)\nA = A - (2 * B - C)\nA %= mod\nif A < 0:\n  A = A + mod\nprint(A)","\nN = int(input())\nif N <=1:\n    print(0)\nelse:\n    c = 0\n    l = [1]*(N+1)\n    for i in range(N):\n        l[i+1] = l[i]*(i+1)\n    for i in range(1,N):\n        d = l[N]\/\/l[N-i]\n        c +=  (8**(N-i))*d\n    a = 10**N - ((8**N) +2*c+2)\n    b = a % (10**9 +7)\n    print(b)\n","n = int(input())\nMOD = 10**9 + 7\nprint((10**n - (9**n + 9**n - 8**n))%MOD)","N = int(input())\nans = 10**N - 2*(9**N) + 8**N\nans = ans % (10**9+7)\nprint (ans)","N=int(input())\nif N>=2:\n    ans=10**N-2*9**N+8**N\nelse:\n    ans=0\nprint(ans%(10**9+7))","n = int(input())\nmod = 1000000007\ndef pow(a,n):\n    if n == 0:\n        return 1\n    if n % 2 == 0:\n        tmp = pow(a, n\/\/2)\n        return (tmp * tmp) % mod\n    else:\n        tmp = pow(a, n\/\/2)\n        return (a * tmp ** 2) % mod\n\nall_pos = pow(10, n)\nno_9 = pow(9, n)\nno_0 = no_9\nno_90 = pow(8,n)\n\nans = (all_pos - no_9 - no_0 + no_90) % mod\nprint(ans)\n","n=int(input())\nc=10**9+7\ndef pow_c(x,n,c):\n    if n == 0:\n        return 1\n    K = 1\n    while n > 1:\n        if n % 2 != 0:\n            K= (K%c)*(x%c)%c\n        x = ((x%c)**2)%c\n        n \/\/= 2\n    return (K%c) * (x%c) %c\n\nk10=pow_c(10,n,c)\nk9=pow_c(9,n,c)\nk8=pow_c(8,n,c)\nans=(k10-2*k9+k8)%c ","n = int(input())\nmod = 10 ** 9 + 7\nprint((pow(10, n, mod) - pow(9, n, mod) * 2 + pow(8, n, mod)) % mod)","N = int(input())\nmod = 10**9+7\n\nif N == 1:\n    print(0)\nelif N == 2:\n    print(2)\nelse:\n    ans = (mod*3+pow(10,N,mod)-pow(9,N,mod)*2+pow(8,N,mod))%mod\n    print(ans)","\nn = int(input())\nmod = 10**9 + 7\nif n==1:\n    print(0)\nelse:\n    #0\u304c\u5165\u3063\u3066\u308b\u3044\u308b\u500b\u6570\n    a = pow(10,n,mod) - pow(9,n,mod)\n    #9\u304c\u5165\u3063\u3066\u3044\u308b\u500b\u6570\n    b = pow(10,n,mod) - pow(9,n,mod)\n    #0\u304b9\u304c\u5165\u3063\u3066\u3044\u308b\n    c = pow(10,n,mod) - pow(8,n,mod)\n\n    ans = (a + b - c)%mod\n    print(ans)","N = int(input())\n\nprint(((10**N) - 2*(9**N) + (8**N)) % ((10**9)+7))\n","# we want to use total to subtract away, 10**n\n# both 0 and 9 doesn't appear\n# find those where 0 appear but not 9\n# find those where 9 appear but not 0\nmod = 10**9 + 7\nn = int(input())\n\n# focus on the computation where 9 doesn't appear and 0 doesn't appear\n# exactly_one_appear = 9**n - 8**n\n# 10**n-8**n-2*(9**n-8**n)\n\n# neither in the sequence 8**n\n# 0 in the sequence but 9 is not\n\nten, nine, eight = 1, 1, 1\nfor i in range(n):\n    ten *= 10 \n    nine *= 9\n    eight *= 8\n    ten %= mod\n    nine %= mod\n    eight %= mod\nprint((ten - 2*nine + eight)%mod)","#!\/usr\/bin\/env python\n# -*- coding: utf-8 -*-\n\ndef main():\n    n = int(input())\n    if n==1:\n        ans = 0\n    elif n==2:\n        ans = 2\n    else:\n        ans = 2\n        for i in range(3, n+1):\n            all = 10 ** (i-1)\n            if(all>1000000007):\n                all %= 1000000007\n            ans = ans*10 + (all-ans)*2\n            if(ans>1000000007):\n                ans %= 1000000007\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n","# -*- coding:utf-8 -*-\n\ndef solve():\n    N = int(input())\n    MOD = 10**9+7\n    ans = pow(10,N,MOD)\n    ans = (ans - (2*pow(9,N,MOD))%MOD)%MOD\n    ans = (ans + pow(8,N,MOD))%MOD\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    solve()\n","n = int(input())\nans = 10 ** n - ((10 - 1) ** n) * 2 + (10 - 2) ** n\nif n > 1:\n    print(ans % (10**9 + 7))\nelse:\n    print(0)","n = int(input())\nprint((pow(10,n) - pow(9, n) - pow(9, n) + pow(8, n))%(10**9+7))","N = int(input())\n\nans = 0\nif N == 1:\n    ans = 0\nelse:\n    ans = (10 ** N - 2 * 9 ** N + 8 ** N) % (10**9 + 7)\n\nprint(ans)\n","N = int(input())\nmod = 10**9 + 7\ndef inv(x):\n    return pow(x, mod - 2, mod)\ndef comb(n, k):\n    ue = 1\n    shita = 1\n    n %= mod\n    for i in range(k):\n        ue = ue * (n - i) % mod\n        shita = shita * (i + 1) % mod\n    return ue * inv(shita) % mod\nif N == 1:\n    print(0)\nelse:\n    print((pow(10,N,mod)-2*pow(9,N,mod)+pow(8,N,mod))%mod)\n","MOD = 10**9+7\nn = int(input())\n\nans = pow(10,n,MOD) - pow(9,n,MOD) * 2 + pow(8,n,MOD)\nprint(ans%MOD)","N = int(input())\n\nprint((10**N-2*9**N+8**N)%1000000007)"],"raw_generations":["N = int(input())\n\ndef modpow(a, n, mod):\n    res = 1\n    n_bi = str(format(n, 'b'))\n\n    for i in range(len(n_bi)):\n        res = (res*res) % mod\n        if n_bi[i] == \"1\":\n            res = (res*a) % mod\n        \n    return res\n\np = 1000000007\n\nif (N == 1):\n    print(0)\nelif (N == 2):\n    print(2)\nelse:\n    temp = (modpow(10, N, p) - modpow(9, N, p)) % p\n    temp = (temp - modpow(9, N, p)) % p\n    temp = (temp + modpow(8, N, p)) % p\n    print(temp)","n=int(input())\nant,bnt,cnt=1,1,1\n\nfor i in range(n) :\n    ant=10*ant%1000000007\n    bnt=9*bnt%1000000007\n    cnt=8*cnt%1000000007\n\nans=(ant-(bnt*2-cnt))%1000000007\n\nif ans>=0 :\n    print(ans)\nelse :\n    print(1000000007+ans) ","N = int(input())\n\nmod = 10**9+7\nfac = [1, 1]\nfinv = [1, 1]\ninv = [0, 1]\n\ndef init(n):\n    for i in range(2, n + 1):\n        fac.append(fac[-1] * i % mod)\n        inv.append(-inv[mod % i] * (mod \/\/ i) % mod)\n        finv.append(finv[-1] * inv[-1] % mod)\n\n\ndef com(n, k, mod):\n    if n < 0 or k < 0 or n < k:\n        return 0\n    return  (2 * (N-2) * 10 * fac[n] * (finv[k] * finv[n - k] % mod)) % mod\n\ninit(N)\n\nif N == 1:\n    print(0)\nelif N == 2:\n    print(2)\nelse:\n    print(com(N, 2, mod))","import math\ndef combinations_count(n, r):\n    return math.factorial(n) \/\/ (math.factorial(n - r) * math.factorial(r))\nN = int(input())\nif N==1:\n  print(0)\nelse:\n  ans = 0\n  for i in range(N-1):\n    a1= combinations_count(N, i+2) % 1000000007\n    a2=(8**(N-(i+2))) % 1000000007\n    a3=((2**(i+2))-2)%1000000007\n    ans += a1*a2*a3\n  print(ans)","def main():\n    n = int(input())\n    MOD = 10**9 + 7\n\n    if n == 1:\n        ans = 0\n    elif n == 2:\n        ans = 1\n    else:\n        ans = pow(10, n, MOD) - 2 * pow(9, n, MOD) + pow(8, n, MOD)\n        ans %= MOD\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()","N = int(input())\nprint((10**N-2*9**N+8**N)%(10**9+7))","n = int(input())\n#a, b = map(int,input().split())\n#l = list(map(int,input().split()))\n#l = [list(map(int,input().split())) for i in range(n)]\n\n\ndef modpow(a, n, mod):\n    # a^n\u3092mod\u3067\u308f\u3063\u305f\u3042\u307e\u308a \u4e8c\u5206\u7d2f\u4e57\u6cd5O(logn)\n    res = 1\n    while n > 0:\n        if n & 1:\n            res = (res*a) % mod\n        a = (a*a) % mod\n        n = n >> 1\n    return res\n\n\nmod = 10**9 + 7\nif n == 1:\n    ans = 0\nelse:\n    ans = modpow(10, n, mod)-2*modpow(9, n, mod)+modpow(8, n, mod)\n    ans = ans % mod\nprint(ans)\n","# @author \n\nimport sys\n\nclass CUbiquity:\n    def solve(self, tc=0):\n        MOD = 10 ** 9 + 7\n\n        n = int(input())\n        if n == 1:\n            ans = 0\n        else:\n            ans = (pow(10, n, MOD) - 2 * pow(9, n, MOD) + pow(8, n, MOD)) % MOD\n        print(ans)\n\n\n\nsolver = CUbiquity()\ninput = sys.stdin.readline\n\nsolver.solve()\n","ii = lambda : int(input())\nmi = lambda : map(int,input().split())\nli = lambda : list(map(int,input().split()))\n\nmod = 10**9+7\n# m**n\ndef modpow(m,n,mod=1000000007):\n    res = 1\n    while n>0:\n        if n&1: res = res * m % mod\n        m = m * m % mod\n        n >>= 1\n    return res\n\nn = ii()\n\nb = modpow(10,n)\ns = modpow(8,n)\nm = modpow(9,n)\n\nans = b - s - 2*(m-s)\n\nprint(ans%mod)","\nimport math\n\nN=int(input())\n\nif(N==1):\n    print(0)\nelse:\n    a=10**(N-2)\n    b=math.factorial(N) \/\/  math.factorial(N-2)\n    c=b*a\n    if(c>10**9+7):\n        c1=c%10**9+7\n        print(c1)\n    else:\n        print(c)","def solve(n):\n    a, b, c, m = 1, 1, 1, 1\n    mod = 1000000007\n    while n > 0:\n        if n & 1:\n            a = (a * 10 ** m) % mod\n            b = (b * 9 ** m) % mod\n            c = (c * 8 ** m) % mod\n        n >>= 1\n        m *= 2\n    print((a - 2*b + c) % mod)\n\nsolve(int(input()))","n = int(input())\n\nprint((10 ** n - (9 ** n + 9 ** n - 8 ** n)) % (10 ** 9 + 7))","n = int(input())\nprint((10**n-2*9**n+8**n)%(10**9+7))","n=int(input())\nprint((10**n-2*9**n+8**n)%(10**9+7))","N = int(input())\nm = 1000000007\nif N == 1:\n    print(0)\nelse:\n    print((pow(10,N,m)-pow(9,N,m)-pow(9,N,m)+pow(8,N,m))%m)","def main():\n    N = input()\n    print((10 ** N - 9 ** N - 9 ** N + 8 ** N)%(10**9 + 7))\n\nmain()","n = int(input())\n\nx = 0\ni = 0\n\nk = n-2\n\nwhile(k>=i):\n  x += (i+1)*((9**i) * 10**(k-i))\n  i += 1\n\nx *= 2\n\nprint(x%(10**9 + 7))\n","mod = 10**9 + 7\nn = int(input())\nif n <= 1:\n    print(0)\nelse:\n    print((10**n-2*9**n + 8**n)%mod)","import math\n\nN = int(input())\nif N == 1:\n  A = 0\nelse:\n  A = math.factorial(N) \/ math.factorial(N -2)\n  a = A % ((10 ** 9) + 7)\nprint(int(A))","N = int(input())\n\nANS = N * (N - 1) \/ (10 ** 9 + 7)\n\nprint(ANS)","N = int(input())\nd = 10**9+7\n\nif N ==1:\n    print(0)\nelse:\n    print((10**N - 2*9**N + 8**N) % d)","N = int(input())\nMOD = 10**9 + 7\ndef f(x, y): return pow(x, y, MOD)\nprint(f(10, N) - f(9, N) - f(9, N) + f(8, N))\n","import sys\n\ninput=sys.stdin.buffer.readline\n\n\n#sys.setrecursionlimit(10**9)\n#from functools import lru_cache\n\ndef RD(): return sys.stdin.read()\n\n\ndef II(): return int(input())\n\n\ndef MI(): return map(int,input().split())\n\n\ndef MF(): return map(float,input().split())\n\n\ndef LI(): return list(map(int,input().split()))\n\n\ndef LF(): return list(map(float,input().split()))\n\n\ndef TI(): return tuple(map(int,input().split()))\n\n\n# rstrip().decode('utf-8')\n\n\ndef main():\n\tn=II()\n\ta=pow(10,n,10**9+7)\n\tb=pow(9,n,10**9+7)\n\tc=pow(8,n,10**9+7)\n\tprint((a-2*b+c)%10**9+7)\n\t\n\nif __name__==\"__main__\":\n\tmain()\n","N=int(input())\n\na=9**N\nb=8**N\nc=10**N\nA=c-2*a+b\n\nprint(A%(1000000007))\n","N = int(input())\nans = 10**N - 2*9**N + 8**N\nprint(ans%(10**9+7))","n = int(input())\nans = (10 ** n) - (9 ** n) * 2 + (8 ** n)\nprint(ans % (10 ** 9 + 7))","MAX=10**9 + 7\nn = int(input())\nprint(pow(10,n,MAX) - (pow(9,n,MAX)*2)%MAX + pow(8,n,MAX))","ans = 0\nmod = (10**9) + 7\nN = int(input())\nans = (10**N - 9**N - 9**N + 8**N)%mod\nprint(ans)","N = int(input())\nprint((10**N - 9**N - 9**N + 8**N)%(10**9+7))","MOD = 10**9+7\n#nCr\u306f\u4ee5\u4e0b\u306e\u3084\u3064\u5168\u3066\u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\nkaijo_memo = []\ndef kaijo(n):\n  if(len(kaijo_memo) > n):\n    return kaijo_memo[n]\n  if(len(kaijo_memo) == 0):\n    kaijo_memo.append(1)\n  while(len(kaijo_memo) <= n):\n    kaijo_memo.append(kaijo_memo[-1] * len(kaijo_memo) % MOD)\n  return kaijo_memo[n]\n \ngyaku_kaijo_memo = []\ndef gyaku_kaijo(n):\n  if(len(gyaku_kaijo_memo) > n):\n    return gyaku_kaijo_memo[n]\n  if(len(gyaku_kaijo_memo) == 0):\n    gyaku_kaijo_memo.append(1)\n  while(len(gyaku_kaijo_memo) <= n):\n    gyaku_kaijo_memo.append(gyaku_kaijo_memo[-1] * pow(len(gyaku_kaijo_memo),MOD-2,MOD) % MOD)\n  return gyaku_kaijo_memo[n]\n \ndef nCr(n,r):\n  if(n == r):\n    return 1\n  if(n < r or r < 0):\n    return 0\n  ret = 1\n  ret = ret * kaijo(n) % MOD\n  ret = ret * gyaku_kaijo(r) % MOD\n  ret = ret * gyaku_kaijo(n-r) % MOD\n  return ret\n\ndef nPr(n,r):\n  if(n < r or r < 0):\n    return 0\n  ret = 1\n  ret = ret * kaijo(n) % MOD\n  ret = ret * gyaku_kaijo(n-r) % MOD\n  return ret\n\nN = int(input())\nif N == 1:\n    print(0)\nelse:\n    ALL = pow(10,N,MOD)\n    p0 = pow(9,N,MOD)\n    in0 = ALL - pow(9,N,MOD)\n    in9 = ALL - pow(9,N,MOD)\n    p09 = pow(8,N,MOD)\n    in09 = ALL - p09\n    print((in0+in9-in09)%MOD)","N = int(input())\n\nmod = 10**9 + 7\n\nif N < 2:\n    print(0)\nelse:\n    #9\u304c\u306a\u3044\n    no9 = 1\n    no09 = 1\n    tot = 1\n    for i in range(N):\n        no9 *= 9\n        no9 %= mod\n        no09 *= 8\n        no09 %= mod\n        tot *= 10\n        tot %= mod\n    print((tot - 2 * no9 + no09) % mod)\n","N=int(input())\nprint((pow(10,N)-2*pow(9,N)+pow(8,N))%(pow(10,9)+7))","n=int(input())\n\nmod=10**9+7\n\nal=10**n\nex=8**n\na=9**n\n\nx=al-ex\n\nans=x-(a-ex)*2\n\nprint(ans%mod)","n = int(input())\nm = 10**9+7\na = 10**n - 9**n - 9**n + 8**n\nprint(a % m)\n","#------------------------template--------------------------#\nimport os\nimport sys\n# from math import *\nfrom collections import *\n# from fractions import *\n# from heapq import*\nfrom bisect import *\nfrom io import BytesIO, IOBase\ndef vsInput():\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nBUFSIZE = 8192\nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nALPHA='abcdefghijklmnopqrstuvwxyz'\nM=10**9+7\nEPS=1e-6\ndef value():return tuple(map(int,input().split()))\ndef array():return [int(i) for i in input().split()]\ndef Int():return int(input())\ndef Str():return input()\ndef arrayS():return [i for i in input().split()]\n\n\n#-------------------------code---------------------------#\n#vsInput()\n\n\nn=Int()\n\ntot=pow(10,n,M)\nno9no0=pow(8,n,M)\nno9but0=(pow(9,n,M)-pow(8,n,M)+M)%M\nno0but9=no9but0\n\nans=(tot-no9but0-no9no0-no0but9)%M\nprint(ans)\n\n\n\n\n    \n    \n    \n\n\n\n    \n        \n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    ","import math\nfrom math import gcd,pi,sqrt\nINF = float(\"inf\")\n\nimport sys\nsys.setrecursionlimit(10**6)\nimport itertools\nfrom collections import Counter,deque\ndef i_input(): return int(input())\ndef i_map(): return map(int, input().split())\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\n\n\ndef main():\n    n = i_input()\n    m = 10**9+7\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(2)\n    else:\n        print((10**n - 2*9**n + 8**n)%m)\n\n\nif __name__==\"__main__\":\n    main()\n","N = int(input())\n\nif N==1:\n    print(0)\nelse:\n    print((10**N + 8**N - 2*(9**N))%(10**9+7))\n","n=int(input())\nx = 10**n-2*9**n+8**n\ny = x%(10**9+7)\nprint(y)","N = int(input())\nx = 10 ** 9 + 7\nprint(((10 ** N) % x - (2 * (9 ** N)) % x + (8 ** N) % x) % x)","N = int(input())\nif N == 1:\n    print(0)\nelse:\n    a = 1\n    b = 2\n    c = 1\n    for _ in range(N):\n        a *= 10\n        b *= 9\n        c *= 8\n        a %= (10**9 + 7)\n        b %= (10**9 + 7)\n        c %= (10**9 + 7)\n    print((a - b + c)%(10**9 + 7))","N = int(input())\n\nq = int(1e9+7)\n\ncomb = [1]\n\nfor i in range(0, N):\n    comb.append((comb[-1] * (N - i) * pow(i+1, q-2, q)) % q)\n\nbase = [pow(8, N-2, q)]\nfor i in range(2, N+1):\n    base.append((base[-1] * pow(8, q-2, q)) % q)\n\nans = 0\nfor i in range(2, N + 1):\n    ans = (ans + (base[i-2] * comb[i] * (pow(2, i, q) - 2)) % q) % q\nprint(ans)","#from scipy.special import comb\ndef ge():\n    return map(int,input().split())\ndef main():\n    #a,b,c,d=ge()\n    #a=list(map(int,input().split()))\n    #a=input()\n    N=int(input())\n    if N==1:\n        print(0)\n    #elif N==2:\n        #print(2)\n    else:\n        #comb(N, 1, exact=True)\n        #ans=N*(N-1)*(10**(N-2))\n        ans=10**N-(9**N)*2+8**N\n        print(ans%(10**9+7))\n    #comb(4, 2, exact=True)\n\n\nmain()","N = int(input())\n\nans = 10**N-(2*(9**N-8**N)+8**N)\nans %= 10**9+7\nprint(ans)","N = int(input())\np = 10**9+7\na = 1\nb = 1\nc = 1\nfor _ in range(N):\n  a = a*10%p\n  b = b*9%p\n  c = c*8%p\nn = (a-2*b+c)%p\nprint(n)","def func(a, n):\n    p = 10 ** 9 + 7\n    bi = str(format(n, \"b\"))\n    res = 1\n    for i in range(len(bi)):\n        res = (res * res) % p\n        if bi[i] == \"1\":\n            res = (res * a) % p\n    return res\n\n\nN = int(input())\nn = func(10, N)\nno_0 = func(9, N)\nno_9 = func(9, N)\nno_09 = func(8, N)\nans = (n - no_0 - no_9 + no_09)\nif ans < 0:\n    ans += 10 ** 9 + 7\nprint(ans)\n","N = int(input())\nmod = 10**9+7\n\nans = 10**N-(9**N*2-8**N)\nprint(ans % mod)","N = int(input())\n\nmod = pow(10,9)+7\n\nans = pow(10,N,mod)\nans -= pow(9,N,mod)\nans -= pow(9,N,mod)\nans += pow(8,N,mod)\n\nprint(ans)","n = int(input())\nM = 10 ** n\nm1 = 8 ** n\nm2 = (9 ** n) - (8 ** n) \n\nprint((M - m1 - 2*m2)%((10 ** 9) + 7))","N = int(input())\nans =  10**N -( 9**N + 9**N - 8**N ) \nprint( ans%( 10**9 + 7) ) ","# -*- coding: utf-8 -*-\n# map(int, input().split())\nN = int(input())\n\nmod = pow(10,9)+7\n\ndef pow_mod(x,n,mod):\n    ans = 1\n    for i in range(n):\n        ans = (ans*x)%mod\n\n    return ans\n\nans = pow_mod(10,N,mod)\nans = (ans-2*pow_mod(9,N,mod))%mod\nans = (ans+pow_mod(8,N,mod))%mod\n\nprint(ans%mod)","\nN = int(input())\nmod = 10**9+7\n\nprint ((pow(10,N,mod) - 2*pow(9,N,mod) + pow(8,N,mod)) % mod)\n","N = int(input())\nmod = 10**9+7\nprint((10**N-(9**N+9**N-8**N))%mod)","n = int(input())\nif n == 1:\n    print(0)\n    exit()\nmod = pow(10, 9) + 7\nprint(pow(10, n, mod) - (pow(9, n, mod) * 2  - pow(8, n, mod)))","import os\nimport sys\nfrom collections import defaultdict, Counter\nfrom itertools import product, permutations,combinations, accumulate\nfrom operator import itemgetter\nfrom bisect import bisect_left,bisect\nfrom heapq import heappop,heappush,heapify\nfrom math import ceil, floor, sqrt, factorial\nfrom copy import deepcopy\n \ndef main():\n    n = int(input()) \n    ans = (10**n) - 2*(9**n) + (8**n) \n    print(ans%(10**9+7))\n    \n\nif __name__ == \"__main__\":\n    main()","N = int(input())\nmod = 10**9 + 7\nans = pow(10,N,mod)\nans -= pow(9,N,mod)\nans -= pow(9,N,mod)\nans += pow(8,N,mod)\nprint(ans)","from decimal import Decimal\nimport math\nN = int(input())\n\ncount = 0\n\n\n\n\nfor i in range(1,N):\n    for j in range(1,N+1-i):\n        if i+j > 1:\n            x = (Decimal(math.factorial(i+j)))\/(Decimal(math.factorial(i))*(Decimal(math.factorial(j)))) * (8**(N-i-j))\n            count += x\n\n    \n\ncount = int(count % (10**9 + 7))\n\nprint(count)","import itertools\nn=int(input())\nif n>=3:\n  #0\u306e\u6570\u304c\u5897\u3048,9\u306e\u6570\u304c\u6e1b\u308b\n  ans=0\n  for i0 in range(1,n-1\/\/2):\n    i9=n-i0\n    ans+=len(set(itertools.permutations([0]*i0+[9]*i9)))*2\n  if n%2==0:\n    ans+=1\n  print((n*8*(n-2)*2+ans) % ((10**9)+7))\nelif n==2:\n  print(2)\nelse:\n  print(0)","# -*- coding: utf-8 -*-\nN = int(input())\n\nans = (10 ** N) - (9 ** N + (9 ** N - 8 ** N))\nans %= (10 ** 9 + 7)\nprint(ans)","N = int(input())\nmod = 1000000007\ndef powmod(x,y):\n  res = 1\n  for i in range(y):\n    res = res*x%mod\n  return res\nans = powmod(10,N)-powmod(9,N)-powmod(9,N)+powmod(8,N)\nans = ans%mod\nans = (ans + mod)%mod\nprint(ans)","n = int(input())\n\n\ndef modpow(a, n):\n    mod = 10 ** 9 + 7\n    res = 1\n    while n > 0:\n        if n & 1:\n            res = res * a % mod\n        a = a * a % mod\n        n >>= 1\n    if res == 1:\n        return mod - 1\n    elif res == 0:\n        return mod - 2\n    else:\n        return res - 2\n\n\nprint(modpow(10, n) - 2 * modpow(9, n) + modpow(8, n))\n","m=int(1e9+7)\nn=int(input())\nans=pow(10,n,m)-2*pow(9,n,m)+pow(8,n,m)\nprint(ans%m)\n","n = int(input())\n\nfi = 1\nse = 1\ntot = 1\nmod = 10**9 + 7\nfor i in range(0,n):\n    fi*=8\n    fi%=mod\n    se*=9\n    se%=mod\n    tot*=10\n    tot%=mod\nse*=2\nse-=fi\nprint((tot - se)%mod)\n","N = int(input())\n\nx = 10**N - 2*(9**N) + 8**N\nprint(x % (10**9+7))\n","a,b,c,d = map(int,input().split())\nans = []\nfor i in c,d:\n    ans.append(a*i)\nfor j in c,d:\n    ans.append(b*j)\n\nprint(max(ans))","y=(2**3)-2\nx=y*9**(y-2)%(10**9+7)\nif x<10**10:print(x)\nelse:print('ERROR')","N = int(input())\nmod = 10**9+7\nprint((pow(10,N,mod)-2*pow(9,N,mod)+pow(8,N,mod))%mod)","n = int(input())\nmod = 10**9 + 7\n# ans = 1\n# for i in range(n - 2):\n#     ans *= 10\n#     ans %= mod\n# print((ans * n * (n - 1)) % mod)\n\n# print((n * (n - 1) * 10**(n - 2 ) % mod))\nprint((10**n - 9**n - 9**n + 8**n) % mod)\n","def pow_r(x, n):\n    \"\"\"\n    O(log n)\n    \"\"\"\n    if n == 0:  # exit case\n        return 1\n    if n % 2 == 0:  # standard case \u2460 n is even\n        return pow_r(x ** 2, n \/\/ 2)\n    else:  # standard case \u2461 n is odd\n        return x * pow_r(x ** 2, (n - 1) \/\/ 2)\ntotal = 0\nnum = int(input())\nfor i in range(1, num):\n    total += pow_r(2, i)\n\nprint(total)","def solve(n):\n    mod = 10 ** 9 + 7\n    return (pow(10, n, mod) - 2 * pow(9, n, mod) + pow(8, n, mod)) % mod\n\n\ndef main():\n    n = int(input())\n    res = solve(n)\n    print(res)\n\n\ndef test():\n    assert solve(2) == 2\n    assert solve(1) == 0\n    assert solve(869121) == 2511445\n\n\nif __name__ == \"__main__\":\n    test()\n    main()\n","n = int(input())\n\nk = 10 ** n + 8 ** n - 2 * (9 ** n)\n\nprint(k % (10 ** 9 + 7))","import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n \ndef main():\n    N = int(readline())\n    K = int(1e9) + 7\n    ans = pow(10, N, K) - pow(9, N, K) - pow(9, N, K) + pow(8, N, K)\n    print(ans)\nif __name__ == '__main__':\n    main()\n","MODULO = 10**9 + 7\n\nn = int(input())\nprint((pow(10, n, MODULO) - 2 * pow(9, n, MODULO) + pow(8, n, MODULO)) % MODULO)\n","N = int(input())\nmod = 10**9 + 7\nif N == 1:\n    print(0)\n    exit()\nif N == 2:\n    print(2)\n    exit()\nans = (10**N - (2*9**N - 8**N))%mod\nprint(ans)\n","n=int(input());m=10**9+7;print((pow(10,n,m)-2*pow(9,n,m)+pow(8,n,m))%m*(n>1))","import copy\nimport math\nimport time\nimport statistics\nimport math\nimport itertools\nimport bisect\nimport sys\nfrom decimal import *\nfrom collections import deque\n\n\ndef get_int():\n    return int(input())\n\ndef get_string():\n    return input()\n\ndef get_int_list():\n    return [int(x) for x in input().split()]\n\ndef get_string_list():\n    return input().split()\n\ndef get_int_multi():\n    return map(int, input().split())\n\ndef get_string_char_list():\n    return list(str(input()))\n\n# print(\"{} {}\".format(a, b))\n# a_list = [0] * a\nsys.setrecursionlimit(10 ** 6)\n\ndef main():\n    start = time.time()\n\n    n = get_int()\n    if n == 1:\n        ans = 0\n    elif n == 2:\n        ans = 2\n    else:\n        ans = n*(n-1)*10**(n-2) - n*(n-1)*10**(n-3)\n\n    print(ans % (10**9+7))\n\n\nif __name__ == '__main__':\n    main()","N = int(input())\nMOD = 10**9 + 7\n\nret = 0\nprev = 0\nfor i in range(1, N+1):\n    if prev == 0:\n        val = 8**(i-1) * 9**(N-i)\n    else:\n        val = prev * 8 \/\/ 9\n    ret = (ret+val) % MOD\n    prev = val\n\nprint((10**N - 8**N - ret*2)%MOD)\n","n = int(input())\nMOD = 10**9 + 7\nif n == 1:\n    print(0)\nelif n == 2:\n    print(1)\nelse:\n    ans = pow(10, n, MOD) + pow(8, n, MOD) - 2 * pow(9, n, MOD)\n    print(ans % MOD)","mod = 10**9 + 7\ndef solve(n):\n    s = 2*pow(9, n, mod) % mod\n    d = pow(8, n, mod) % mod\n    ans_inv = (s - d)%mod\n    ans = (pow(10, n, mod) - ans_inv) % mod\n\n    return ans\n\nn = int(input())\nprint(solve(n))\n","N = int(input())\nMOD = 10**9+7\n\na10 = 10**N\na9 = 9**N\na8 = 8**N\nprint((a10-a9-a9+a8) % MOD)\n","n=int(input())\nMOD=1000000000+7\nans=((10**n)%MOD+(8**n)%MOD-(2*9**n)%MOD)%MOD\nprint(ans)\n","N = int(input())\nmod = 10 ** 9 + 7\nA = pow(10, N, mod)\nB = pow(9, N, mod)\nC = pow(8, N, mod)\nA = A - (2 * B - C)\nA %= mod\nif A < 0:\n  A = A + mod\nprint(A)","\nN = int(input())\nif N <=1:\n    print(0)\nelse:\n    c = 0\n    l = [1]*(N+1)\n    for i in range(N):\n        l[i+1] = l[i]*(i+1)\n    for i in range(1,N):\n        d = l[N]\/\/l[N-i]\n        c +=  (8**(N-i))*d\n    a = 10**N - ((8**N) +2*c+2)\n    b = a % (10**9 +7)\n    print(b)\n","n = int(input())\nMOD = 10**9 + 7\nprint((10**n - (9**n + 9**n - 8**n))%MOD)","N = int(input())\nans = 10**N - 2*(9**N) + 8**N\nans = ans % (10**9+7)\nprint (ans)","N=int(input())\nif N>=2:\n    ans=10**N-2*9**N+8**N\nelse:\n    ans=0\nprint(ans%(10**9+7))","n = int(input())\nmod = 1000000007\ndef pow(a,n):\n    if n == 0:\n        return 1\n    if n % 2 == 0:\n        tmp = pow(a, n\/\/2)\n        return (tmp * tmp) % mod\n    else:\n        tmp = pow(a, n\/\/2)\n        return (a * tmp ** 2) % mod\n\nall_pos = pow(10, n)\nno_9 = pow(9, n)\nno_0 = no_9\nno_90 = pow(8,n)\n\nans = (all_pos - no_9 - no_0 + no_90) % mod\nprint(ans)\n","n=int(input())\nc=10**9+7\ndef pow_c(x,n,c):\n    if n == 0:\n        return 1\n    K = 1\n    while n > 1:\n        if n % 2 != 0:\n            K= (K%c)*(x%c)%c\n        x = ((x%c)**2)%c\n        n \/\/= 2\n    return (K%c) * (x%c) %c\n\nk10=pow_c(10,n,c)\nk9=pow_c(9,n,c)\nk8=pow_c(8,n,c)\nans=(k10-2*k9+k8)%c ","n = int(input())\nmod = 10 ** 9 + 7\nprint((pow(10, n, mod) - pow(9, n, mod) * 2 + pow(8, n, mod)) % mod)","N = int(input())\nmod = 10**9+7\n\nif N == 1:\n    print(0)\nelif N == 2:\n    print(2)\nelse:\n    ans = (mod*3+pow(10,N,mod)-pow(9,N,mod)*2+pow(8,N,mod))%mod\n    print(ans)","\nn = int(input())\nmod = 10**9 + 7\nif n==1:\n    print(0)\nelse:\n    #0\u304c\u5165\u3063\u3066\u308b\u3044\u308b\u500b\u6570\n    a = pow(10,n,mod) - pow(9,n,mod)\n    #9\u304c\u5165\u3063\u3066\u3044\u308b\u500b\u6570\n    b = pow(10,n,mod) - pow(9,n,mod)\n    #0\u304b9\u304c\u5165\u3063\u3066\u3044\u308b\n    c = pow(10,n,mod) - pow(8,n,mod)\n\n    ans = (a + b - c)%mod\n    print(ans)","N = int(input())\n\nprint(((10**N) - 2*(9**N) + (8**N)) % ((10**9)+7))\n","# we want to use total to subtract away, 10**n\n# both 0 and 9 doesn't appear\n# find those where 0 appear but not 9\n# find those where 9 appear but not 0\nmod = 10**9 + 7\nn = int(input())\n\n# focus on the computation where 9 doesn't appear and 0 doesn't appear\n# exactly_one_appear = 9**n - 8**n\n# 10**n-8**n-2*(9**n-8**n)\n\n# neither in the sequence 8**n\n# 0 in the sequence but 9 is not\n\nten, nine, eight = 1, 1, 1\nfor i in range(n):\n    ten *= 10 \n    nine *= 9\n    eight *= 8\n    ten %= mod\n    nine %= mod\n    eight %= mod\nprint((ten - 2*nine + eight)%mod)","#!\/usr\/bin\/env python\n# -*- coding: utf-8 -*-\n\ndef main():\n    n = int(input())\n    if n==1:\n        ans = 0\n    elif n==2:\n        ans = 2\n    else:\n        ans = 2\n        for i in range(3, n+1):\n            all = 10 ** (i-1)\n            if(all>1000000007):\n                all %= 1000000007\n            ans = ans*10 + (all-ans)*2\n            if(ans>1000000007):\n                ans %= 1000000007\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n","# -*- coding:utf-8 -*-\n\ndef solve():\n    N = int(input())\n    MOD = 10**9+7\n    ans = pow(10,N,MOD)\n    ans = (ans - (2*pow(9,N,MOD))%MOD)%MOD\n    ans = (ans + pow(8,N,MOD))%MOD\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    solve()\n","n = int(input())\nans = 10 ** n - ((10 - 1) ** n) * 2 + (10 - 2) ** n\nif n > 1:\n    print(ans % (10**9 + 7))\nelse:\n    print(0)","n = int(input())\nprint((pow(10,n) - pow(9, n) - pow(9, n) + pow(8, n))%(10**9+7))","N = int(input())\n\nans = 0\nif N == 1:\n    ans = 0\nelse:\n    ans = (10 ** N - 2 * 9 ** N + 8 ** N) % (10**9 + 7)\n\nprint(ans)\n","N = int(input())\nmod = 10**9 + 7\ndef inv(x):\n    return pow(x, mod - 2, mod)\ndef comb(n, k):\n    ue = 1\n    shita = 1\n    n %= mod\n    for i in range(k):\n        ue = ue * (n - i) % mod\n        shita = shita * (i + 1) % mod\n    return ue * inv(shita) % mod\nif N == 1:\n    print(0)\nelse:\n    print((pow(10,N,mod)-2*pow(9,N,mod)+pow(8,N,mod))%mod)\n","MOD = 10**9+7\nn = int(input())\n\nans = pow(10,n,MOD) - pow(9,n,MOD) * 2 + pow(8,n,MOD)\nprint(ans%MOD)","N = int(input())\n\nprint((10**N-2*9**N+8**N)%1000000007)"],"formatted_programs":["N = int(input())\n\ndef modpow(a, n, mod):\n    res = 1\n    n_bi = str(format(n, 'b'))\n\n    for i in range(len(n_bi)):\n        res = (res*res) % mod\n        if n_bi[i] == \"1\":\n            res = (res*a) % mod\n        \n    return res\n\np = 1000000007\n\nif (N == 1):\n    print(0)\nelif (N == 2):\n    print(2)\nelse:\n    temp = (modpow(10, N, p) - modpow(9, N, p)) % p\n    temp = (temp - modpow(9, N, p)) % p\n    temp = (temp + modpow(8, N, p)) % p\n    print(temp)","n=int(input())\nant,bnt,cnt=1,1,1\n\nfor i in range(n) :\n    ant=10*ant%1000000007\n    bnt=9*bnt%1000000007\n    cnt=8*cnt%1000000007\n\nans=(ant-(bnt*2-cnt))%1000000007\n\nif ans>=0 :\n    print(ans)\nelse :\n    print(1000000007+ans) ","N = int(input())\n\nmod = 10**9+7\nfac = [1, 1]\nfinv = [1, 1]\ninv = [0, 1]\n\ndef init(n):\n    for i in range(2, n + 1):\n        fac.append(fac[-1] * i % mod)\n        inv.append(-inv[mod % i] * (mod \/\/ i) % mod)\n        finv.append(finv[-1] * inv[-1] % mod)\n\n\ndef com(n, k, mod):\n    if n < 0 or k < 0 or n < k:\n        return 0\n    return  (2 * (N-2) * 10 * fac[n] * (finv[k] * finv[n - k] % mod)) % mod\n\ninit(N)\n\nif N == 1:\n    print(0)\nelif N == 2:\n    print(2)\nelse:\n    print(com(N, 2, mod))","import math\ndef combinations_count(n, r):\n    return math.factorial(n) \/\/ (math.factorial(n - r) * math.factorial(r))\nN = int(input())\nif N==1:\n  print(0)\nelse:\n  ans = 0\n  for i in range(N-1):\n    a1= combinations_count(N, i+2) % 1000000007\n    a2=(8**(N-(i+2))) % 1000000007\n    a3=((2**(i+2))-2)%1000000007\n    ans += a1*a2*a3\n  print(ans)","def main():\n    n = int(input())\n    MOD = 10**9 + 7\n\n    if n == 1:\n        ans = 0\n    elif n == 2:\n        ans = 1\n    else:\n        ans = pow(10, n, MOD) - 2 * pow(9, n, MOD) + pow(8, n, MOD)\n        ans %= MOD\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()","N = int(input())\nprint((10**N-2*9**N+8**N)%(10**9+7))","n = int(input())\n#a, b = map(int,input().split())\n#l = list(map(int,input().split()))\n#l = [list(map(int,input().split())) for i in range(n)]\n\n\ndef modpow(a, n, mod):\n    # a^n\u3092mod\u3067\u308f\u3063\u305f\u3042\u307e\u308a \u4e8c\u5206\u7d2f\u4e57\u6cd5O(logn)\n    res = 1\n    while n > 0:\n        if n & 1:\n            res = (res*a) % mod\n        a = (a*a) % mod\n        n = n >> 1\n    return res\n\n\nmod = 10**9 + 7\nif n == 1:\n    ans = 0\nelse:\n    ans = modpow(10, n, mod)-2*modpow(9, n, mod)+modpow(8, n, mod)\n    ans = ans % mod\nprint(ans)\n","# @author \n\nimport sys\n\nclass CUbiquity:\n    def solve(self, tc=0):\n        MOD = 10 ** 9 + 7\n\n        n = int(input())\n        if n == 1:\n            ans = 0\n        else:\n            ans = (pow(10, n, MOD) - 2 * pow(9, n, MOD) + pow(8, n, MOD)) % MOD\n        print(ans)\n\n\n\nsolver = CUbiquity()\ninput = sys.stdin.readline\n\nsolver.solve()\n","ii = lambda : int(input())\nmi = lambda : map(int,input().split())\nli = lambda : list(map(int,input().split()))\n\nmod = 10**9+7\n# m**n\ndef modpow(m,n,mod=1000000007):\n    res = 1\n    while n>0:\n        if n&1: res = res * m % mod\n        m = m * m % mod\n        n >>= 1\n    return res\n\nn = ii()\n\nb = modpow(10,n)\ns = modpow(8,n)\nm = modpow(9,n)\n\nans = b - s - 2*(m-s)\n\nprint(ans%mod)","\nimport math\n\nN=int(input())\n\nif(N==1):\n    print(0)\nelse:\n    a=10**(N-2)\n    b=math.factorial(N) \/\/  math.factorial(N-2)\n    c=b*a\n    if(c>10**9+7):\n        c1=c%10**9+7\n        print(c1)\n    else:\n        print(c)","def solve(n):\n    a, b, c, m = 1, 1, 1, 1\n    mod = 1000000007\n    while n > 0:\n        if n & 1:\n            a = (a * 10 ** m) % mod\n            b = (b * 9 ** m) % mod\n            c = (c * 8 ** m) % mod\n        n >>= 1\n        m *= 2\n    print((a - 2*b + c) % mod)\n\nsolve(int(input()))","n = int(input())\n\nprint((10 ** n - (9 ** n + 9 ** n - 8 ** n)) % (10 ** 9 + 7))","n = int(input())\nprint((10**n-2*9**n+8**n)%(10**9+7))","n=int(input())\nprint((10**n-2*9**n+8**n)%(10**9+7))","N = int(input())\nm = 1000000007\nif N == 1:\n    print(0)\nelse:\n    print((pow(10,N,m)-pow(9,N,m)-pow(9,N,m)+pow(8,N,m))%m)","def main():\n    N = input()\n    print((10 ** N - 9 ** N - 9 ** N + 8 ** N)%(10**9 + 7))\n\nmain()","n = int(input())\n\nx = 0\ni = 0\n\nk = n-2\n\nwhile(k>=i):\n  x += (i+1)*((9**i) * 10**(k-i))\n  i += 1\n\nx *= 2\n\nprint(x%(10**9 + 7))\n","mod = 10**9 + 7\nn = int(input())\nif n <= 1:\n    print(0)\nelse:\n    print((10**n-2*9**n + 8**n)%mod)","import math\n\nN = int(input())\nif N == 1:\n  A = 0\nelse:\n  A = math.factorial(N) \/ math.factorial(N -2)\n  a = A % ((10 ** 9) + 7)\nprint(int(A))","N = int(input())\n\nANS = N * (N - 1) \/ (10 ** 9 + 7)\n\nprint(ANS)","N = int(input())\nd = 10**9+7\n\nif N ==1:\n    print(0)\nelse:\n    print((10**N - 2*9**N + 8**N) % d)","N = int(input())\nMOD = 10**9 + 7\ndef f(x, y): return pow(x, y, MOD)\nprint(f(10, N) - f(9, N) - f(9, N) + f(8, N))\n","import sys\n\ninput=sys.stdin.buffer.readline\n\n\n#sys.setrecursionlimit(10**9)\n#from functools import lru_cache\n\ndef RD(): return sys.stdin.read()\n\n\ndef II(): return int(input())\n\n\ndef MI(): return map(int,input().split())\n\n\ndef MF(): return map(float,input().split())\n\n\ndef LI(): return list(map(int,input().split()))\n\n\ndef LF(): return list(map(float,input().split()))\n\n\ndef TI(): return tuple(map(int,input().split()))\n\n\n# rstrip().decode('utf-8')\n\n\ndef main():\n\tn=II()\n\ta=pow(10,n,10**9+7)\n\tb=pow(9,n,10**9+7)\n\tc=pow(8,n,10**9+7)\n\tprint((a-2*b+c)%10**9+7)\n\t\n\nif __name__==\"__main__\":\n\tmain()\n","N=int(input())\n\na=9**N\nb=8**N\nc=10**N\nA=c-2*a+b\n\nprint(A%(1000000007))\n","N = int(input())\nans = 10**N - 2*9**N + 8**N\nprint(ans%(10**9+7))","n = int(input())\nans = (10 ** n) - (9 ** n) * 2 + (8 ** n)\nprint(ans % (10 ** 9 + 7))","MAX=10**9 + 7\nn = int(input())\nprint(pow(10,n,MAX) - (pow(9,n,MAX)*2)%MAX + pow(8,n,MAX))","ans = 0\nmod = (10**9) + 7\nN = int(input())\nans = (10**N - 9**N - 9**N + 8**N)%mod\nprint(ans)","N = int(input())\nprint((10**N - 9**N - 9**N + 8**N)%(10**9+7))","MOD = 10**9+7\n#nCr\u306f\u4ee5\u4e0b\u306e\u3084\u3064\u5168\u3066\u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\nkaijo_memo = []\ndef kaijo(n):\n  if(len(kaijo_memo) > n):\n    return kaijo_memo[n]\n  if(len(kaijo_memo) == 0):\n    kaijo_memo.append(1)\n  while(len(kaijo_memo) <= n):\n    kaijo_memo.append(kaijo_memo[-1] * len(kaijo_memo) % MOD)\n  return kaijo_memo[n]\n \ngyaku_kaijo_memo = []\ndef gyaku_kaijo(n):\n  if(len(gyaku_kaijo_memo) > n):\n    return gyaku_kaijo_memo[n]\n  if(len(gyaku_kaijo_memo) == 0):\n    gyaku_kaijo_memo.append(1)\n  while(len(gyaku_kaijo_memo) <= n):\n    gyaku_kaijo_memo.append(gyaku_kaijo_memo[-1] * pow(len(gyaku_kaijo_memo),MOD-2,MOD) % MOD)\n  return gyaku_kaijo_memo[n]\n \ndef nCr(n,r):\n  if(n == r):\n    return 1\n  if(n < r or r < 0):\n    return 0\n  ret = 1\n  ret = ret * kaijo(n) % MOD\n  ret = ret * gyaku_kaijo(r) % MOD\n  ret = ret * gyaku_kaijo(n-r) % MOD\n  return ret\n\ndef nPr(n,r):\n  if(n < r or r < 0):\n    return 0\n  ret = 1\n  ret = ret * kaijo(n) % MOD\n  ret = ret * gyaku_kaijo(n-r) % MOD\n  return ret\n\nN = int(input())\nif N == 1:\n    print(0)\nelse:\n    ALL = pow(10,N,MOD)\n    p0 = pow(9,N,MOD)\n    in0 = ALL - pow(9,N,MOD)\n    in9 = ALL - pow(9,N,MOD)\n    p09 = pow(8,N,MOD)\n    in09 = ALL - p09\n    print((in0+in9-in09)%MOD)","N = int(input())\n\nmod = 10**9 + 7\n\nif N < 2:\n    print(0)\nelse:\n    #9\u304c\u306a\u3044\n    no9 = 1\n    no09 = 1\n    tot = 1\n    for i in range(N):\n        no9 *= 9\n        no9 %= mod\n        no09 *= 8\n        no09 %= mod\n        tot *= 10\n        tot %= mod\n    print((tot - 2 * no9 + no09) % mod)\n","N=int(input())\nprint((pow(10,N)-2*pow(9,N)+pow(8,N))%(pow(10,9)+7))","n=int(input())\n\nmod=10**9+7\n\nal=10**n\nex=8**n\na=9**n\n\nx=al-ex\n\nans=x-(a-ex)*2\n\nprint(ans%mod)","n = int(input())\nm = 10**9+7\na = 10**n - 9**n - 9**n + 8**n\nprint(a % m)\n","#------------------------template--------------------------#\nimport os\nimport sys\n# from math import *\nfrom collections import *\n# from fractions import *\n# from heapq import*\nfrom bisect import *\nfrom io import BytesIO, IOBase\ndef vsInput():\n    sys.stdin = open('input.txt', 'r')\n    sys.stdout = open('output.txt', 'w')\nBUFSIZE = 8192\nclass FastIO(IOBase):\n    newlines = 0\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nALPHA='abcdefghijklmnopqrstuvwxyz'\nM=10**9+7\nEPS=1e-6\ndef value():return tuple(map(int,input().split()))\ndef array():return [int(i) for i in input().split()]\ndef Int():return int(input())\ndef Str():return input()\ndef arrayS():return [i for i in input().split()]\n\n\n#-------------------------code---------------------------#\n#vsInput()\n\n\nn=Int()\n\ntot=pow(10,n,M)\nno9no0=pow(8,n,M)\nno9but0=(pow(9,n,M)-pow(8,n,M)+M)%M\nno0but9=no9but0\n\nans=(tot-no9but0-no9no0-no0but9)%M\nprint(ans)\n\n\n\n\n    \n    \n    \n\n\n\n    \n        \n\n   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    ","import math\nfrom math import gcd,pi,sqrt\nINF = float(\"inf\")\n\nimport sys\nsys.setrecursionlimit(10**6)\nimport itertools\nfrom collections import Counter,deque\ndef i_input(): return int(input())\ndef i_map(): return map(int, input().split())\ndef i_list(): return list(i_map())\ndef i_row(N): return [i_input() for _ in range(N)]\ndef i_row_list(N): return [i_list() for _ in range(N)]\ndef s_input(): return input()\ndef s_map(): return input().split()\ndef s_list(): return list(s_map())\ndef s_row(N): return [s_input for _ in range(N)]\ndef s_row_str(N): return [s_list() for _ in range(N)]\ndef s_row_list(N): return [list(s_input()) for _ in range(N)]\n\n\ndef main():\n    n = i_input()\n    m = 10**9+7\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(2)\n    else:\n        print((10**n - 2*9**n + 8**n)%m)\n\n\nif __name__==\"__main__\":\n    main()\n","N = int(input())\n\nif N==1:\n    print(0)\nelse:\n    print((10**N + 8**N - 2*(9**N))%(10**9+7))\n","n=int(input())\nx = 10**n-2*9**n+8**n\ny = x%(10**9+7)\nprint(y)","N = int(input())\nx = 10 ** 9 + 7\nprint(((10 ** N) % x - (2 * (9 ** N)) % x + (8 ** N) % x) % x)","N = int(input())\nif N == 1:\n    print(0)\nelse:\n    a = 1\n    b = 2\n    c = 1\n    for _ in range(N):\n        a *= 10\n        b *= 9\n        c *= 8\n        a %= (10**9 + 7)\n        b %= (10**9 + 7)\n        c %= (10**9 + 7)\n    print((a - b + c)%(10**9 + 7))","N = int(input())\n\nq = int(1e9+7)\n\ncomb = [1]\n\nfor i in range(0, N):\n    comb.append((comb[-1] * (N - i) * pow(i+1, q-2, q)) % q)\n\nbase = [pow(8, N-2, q)]\nfor i in range(2, N+1):\n    base.append((base[-1] * pow(8, q-2, q)) % q)\n\nans = 0\nfor i in range(2, N + 1):\n    ans = (ans + (base[i-2] * comb[i] * (pow(2, i, q) - 2)) % q) % q\nprint(ans)","#from scipy.special import comb\ndef ge():\n    return map(int,input().split())\ndef main():\n    #a,b,c,d=ge()\n    #a=list(map(int,input().split()))\n    #a=input()\n    N=int(input())\n    if N==1:\n        print(0)\n    #elif N==2:\n        #print(2)\n    else:\n        #comb(N, 1, exact=True)\n        #ans=N*(N-1)*(10**(N-2))\n        ans=10**N-(9**N)*2+8**N\n        print(ans%(10**9+7))\n    #comb(4, 2, exact=True)\n\n\nmain()","N = int(input())\n\nans = 10**N-(2*(9**N-8**N)+8**N)\nans %= 10**9+7\nprint(ans)","N = int(input())\np = 10**9+7\na = 1\nb = 1\nc = 1\nfor _ in range(N):\n  a = a*10%p\n  b = b*9%p\n  c = c*8%p\nn = (a-2*b+c)%p\nprint(n)","def func(a, n):\n    p = 10 ** 9 + 7\n    bi = str(format(n, \"b\"))\n    res = 1\n    for i in range(len(bi)):\n        res = (res * res) % p\n        if bi[i] == \"1\":\n            res = (res * a) % p\n    return res\n\n\nN = int(input())\nn = func(10, N)\nno_0 = func(9, N)\nno_9 = func(9, N)\nno_09 = func(8, N)\nans = (n - no_0 - no_9 + no_09)\nif ans < 0:\n    ans += 10 ** 9 + 7\nprint(ans)\n","N = int(input())\nmod = 10**9+7\n\nans = 10**N-(9**N*2-8**N)\nprint(ans % mod)","N = int(input())\n\nmod = pow(10,9)+7\n\nans = pow(10,N,mod)\nans -= pow(9,N,mod)\nans -= pow(9,N,mod)\nans += pow(8,N,mod)\n\nprint(ans)","n = int(input())\nM = 10 ** n\nm1 = 8 ** n\nm2 = (9 ** n) - (8 ** n) \n\nprint((M - m1 - 2*m2)%((10 ** 9) + 7))","N = int(input())\nans =  10**N -( 9**N + 9**N - 8**N ) \nprint( ans%( 10**9 + 7) ) ","# -*- coding: utf-8 -*-\n# map(int, input().split())\nN = int(input())\n\nmod = pow(10,9)+7\n\ndef pow_mod(x,n,mod):\n    ans = 1\n    for i in range(n):\n        ans = (ans*x)%mod\n\n    return ans\n\nans = pow_mod(10,N,mod)\nans = (ans-2*pow_mod(9,N,mod))%mod\nans = (ans+pow_mod(8,N,mod))%mod\n\nprint(ans%mod)","\nN = int(input())\nmod = 10**9+7\n\nprint ((pow(10,N,mod) - 2*pow(9,N,mod) + pow(8,N,mod)) % mod)\n","N = int(input())\nmod = 10**9+7\nprint((10**N-(9**N+9**N-8**N))%mod)","n = int(input())\nif n == 1:\n    print(0)\n    exit()\nmod = pow(10, 9) + 7\nprint(pow(10, n, mod) - (pow(9, n, mod) * 2  - pow(8, n, mod)))","import os\nimport sys\nfrom collections import defaultdict, Counter\nfrom itertools import product, permutations,combinations, accumulate\nfrom operator import itemgetter\nfrom bisect import bisect_left,bisect\nfrom heapq import heappop,heappush,heapify\nfrom math import ceil, floor, sqrt, factorial\nfrom copy import deepcopy\n \ndef main():\n    n = int(input()) \n    ans = (10**n) - 2*(9**n) + (8**n) \n    print(ans%(10**9+7))\n    \n\nif __name__ == \"__main__\":\n    main()","N = int(input())\nmod = 10**9 + 7\nans = pow(10,N,mod)\nans -= pow(9,N,mod)\nans -= pow(9,N,mod)\nans += pow(8,N,mod)\nprint(ans)","from decimal import Decimal\nimport math\nN = int(input())\n\ncount = 0\n\n\n\n\nfor i in range(1,N):\n    for j in range(1,N+1-i):\n        if i+j > 1:\n            x = (Decimal(math.factorial(i+j)))\/(Decimal(math.factorial(i))*(Decimal(math.factorial(j)))) * (8**(N-i-j))\n            count += x\n\n    \n\ncount = int(count % (10**9 + 7))\n\nprint(count)","import itertools\nn=int(input())\nif n>=3:\n  #0\u306e\u6570\u304c\u5897\u3048,9\u306e\u6570\u304c\u6e1b\u308b\n  ans=0\n  for i0 in range(1,n-1\/\/2):\n    i9=n-i0\n    ans+=len(set(itertools.permutations([0]*i0+[9]*i9)))*2\n  if n%2==0:\n    ans+=1\n  print((n*8*(n-2)*2+ans) % ((10**9)+7))\nelif n==2:\n  print(2)\nelse:\n  print(0)","# -*- coding: utf-8 -*-\nN = int(input())\n\nans = (10 ** N) - (9 ** N + (9 ** N - 8 ** N))\nans %= (10 ** 9 + 7)\nprint(ans)","N = int(input())\nmod = 1000000007\ndef powmod(x,y):\n  res = 1\n  for i in range(y):\n    res = res*x%mod\n  return res\nans = powmod(10,N)-powmod(9,N)-powmod(9,N)+powmod(8,N)\nans = ans%mod\nans = (ans + mod)%mod\nprint(ans)","n = int(input())\n\n\ndef modpow(a, n):\n    mod = 10 ** 9 + 7\n    res = 1\n    while n > 0:\n        if n & 1:\n            res = res * a % mod\n        a = a * a % mod\n        n >>= 1\n    if res == 1:\n        return mod - 1\n    elif res == 0:\n        return mod - 2\n    else:\n        return res - 2\n\n\nprint(modpow(10, n) - 2 * modpow(9, n) + modpow(8, n))\n","m=int(1e9+7)\nn=int(input())\nans=pow(10,n,m)-2*pow(9,n,m)+pow(8,n,m)\nprint(ans%m)\n","n = int(input())\n\nfi = 1\nse = 1\ntot = 1\nmod = 10**9 + 7\nfor i in range(0,n):\n    fi*=8\n    fi%=mod\n    se*=9\n    se%=mod\n    tot*=10\n    tot%=mod\nse*=2\nse-=fi\nprint((tot - se)%mod)\n","N = int(input())\n\nx = 10**N - 2*(9**N) + 8**N\nprint(x % (10**9+7))\n","a,b,c,d = map(int,input().split())\nans = []\nfor i in c,d:\n    ans.append(a*i)\nfor j in c,d:\n    ans.append(b*j)\n\nprint(max(ans))","y=(2**3)-2\nx=y*9**(y-2)%(10**9+7)\nif x<10**10:print(x)\nelse:print('ERROR')","N = int(input())\nmod = 10**9+7\nprint((pow(10,N,mod)-2*pow(9,N,mod)+pow(8,N,mod))%mod)","n = int(input())\nmod = 10**9 + 7\n# ans = 1\n# for i in range(n - 2):\n#     ans *= 10\n#     ans %= mod\n# print((ans * n * (n - 1)) % mod)\n\n# print((n * (n - 1) * 10**(n - 2 ) % mod))\nprint((10**n - 9**n - 9**n + 8**n) % mod)\n","def pow_r(x, n):\n    \"\"\"\n    O(log n)\n    \"\"\"\n    if n == 0:  # exit case\n        return 1\n    if n % 2 == 0:  # standard case \u2460 n is even\n        return pow_r(x ** 2, n \/\/ 2)\n    else:  # standard case \u2461 n is odd\n        return x * pow_r(x ** 2, (n - 1) \/\/ 2)\ntotal = 0\nnum = int(input())\nfor i in range(1, num):\n    total += pow_r(2, i)\n\nprint(total)","def solve(n):\n    mod = 10 ** 9 + 7\n    return (pow(10, n, mod) - 2 * pow(9, n, mod) + pow(8, n, mod)) % mod\n\n\ndef main():\n    n = int(input())\n    res = solve(n)\n    print(res)\n\n\ndef test():\n    assert solve(2) == 2\n    assert solve(1) == 0\n    assert solve(869121) == 2511445\n\n\nif __name__ == \"__main__\":\n    test()\n    main()\n","n = int(input())\n\nk = 10 ** n + 8 ** n - 2 * (9 ** n)\n\nprint(k % (10 ** 9 + 7))","import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n \ndef main():\n    N = int(readline())\n    K = int(1e9) + 7\n    ans = pow(10, N, K) - pow(9, N, K) - pow(9, N, K) + pow(8, N, K)\n    print(ans)\nif __name__ == '__main__':\n    main()\n","MODULO = 10**9 + 7\n\nn = int(input())\nprint((pow(10, n, MODULO) - 2 * pow(9, n, MODULO) + pow(8, n, MODULO)) % MODULO)\n","N = int(input())\nmod = 10**9 + 7\nif N == 1:\n    print(0)\n    exit()\nif N == 2:\n    print(2)\n    exit()\nans = (10**N - (2*9**N - 8**N))%mod\nprint(ans)\n","n=int(input());m=10**9+7;print((pow(10,n,m)-2*pow(9,n,m)+pow(8,n,m))%m*(n>1))","import copy\nimport math\nimport time\nimport statistics\nimport math\nimport itertools\nimport bisect\nimport sys\nfrom decimal import *\nfrom collections import deque\n\n\ndef get_int():\n    return int(input())\n\ndef get_string():\n    return input()\n\ndef get_int_list():\n    return [int(x) for x in input().split()]\n\ndef get_string_list():\n    return input().split()\n\ndef get_int_multi():\n    return map(int, input().split())\n\ndef get_string_char_list():\n    return list(str(input()))\n\n# print(\"{} {}\".format(a, b))\n# a_list = [0] * a\nsys.setrecursionlimit(10 ** 6)\n\ndef main():\n    start = time.time()\n\n    n = get_int()\n    if n == 1:\n        ans = 0\n    elif n == 2:\n        ans = 2\n    else:\n        ans = n*(n-1)*10**(n-2) - n*(n-1)*10**(n-3)\n\n    print(ans % (10**9+7))\n\n\nif __name__ == '__main__':\n    main()","N = int(input())\nMOD = 10**9 + 7\n\nret = 0\nprev = 0\nfor i in range(1, N+1):\n    if prev == 0:\n        val = 8**(i-1) * 9**(N-i)\n    else:\n        val = prev * 8 \/\/ 9\n    ret = (ret+val) % MOD\n    prev = val\n\nprint((10**N - 8**N - ret*2)%MOD)\n","n = int(input())\nMOD = 10**9 + 7\nif n == 1:\n    print(0)\nelif n == 2:\n    print(1)\nelse:\n    ans = pow(10, n, MOD) + pow(8, n, MOD) - 2 * pow(9, n, MOD)\n    print(ans % MOD)","mod = 10**9 + 7\ndef solve(n):\n    s = 2*pow(9, n, mod) % mod\n    d = pow(8, n, mod) % mod\n    ans_inv = (s - d)%mod\n    ans = (pow(10, n, mod) - ans_inv) % mod\n\n    return ans\n\nn = int(input())\nprint(solve(n))\n","N = int(input())\nMOD = 10**9+7\n\na10 = 10**N\na9 = 9**N\na8 = 8**N\nprint((a10-a9-a9+a8) % MOD)\n","n=int(input())\nMOD=1000000000+7\nans=((10**n)%MOD+(8**n)%MOD-(2*9**n)%MOD)%MOD\nprint(ans)\n","N = int(input())\nmod = 10 ** 9 + 7\nA = pow(10, N, mod)\nB = pow(9, N, mod)\nC = pow(8, N, mod)\nA = A - (2 * B - C)\nA %= mod\nif A < 0:\n  A = A + mod\nprint(A)","\nN = int(input())\nif N <=1:\n    print(0)\nelse:\n    c = 0\n    l = [1]*(N+1)\n    for i in range(N):\n        l[i+1] = l[i]*(i+1)\n    for i in range(1,N):\n        d = l[N]\/\/l[N-i]\n        c +=  (8**(N-i))*d\n    a = 10**N - ((8**N) +2*c+2)\n    b = a % (10**9 +7)\n    print(b)\n","n = int(input())\nMOD = 10**9 + 7\nprint((10**n - (9**n + 9**n - 8**n))%MOD)","N = int(input())\nans = 10**N - 2*(9**N) + 8**N\nans = ans % (10**9+7)\nprint (ans)","N=int(input())\nif N>=2:\n    ans=10**N-2*9**N+8**N\nelse:\n    ans=0\nprint(ans%(10**9+7))","n = int(input())\nmod = 1000000007\ndef pow(a,n):\n    if n == 0:\n        return 1\n    if n % 2 == 0:\n        tmp = pow(a, n\/\/2)\n        return (tmp * tmp) % mod\n    else:\n        tmp = pow(a, n\/\/2)\n        return (a * tmp ** 2) % mod\n\nall_pos = pow(10, n)\nno_9 = pow(9, n)\nno_0 = no_9\nno_90 = pow(8,n)\n\nans = (all_pos - no_9 - no_0 + no_90) % mod\nprint(ans)\n","n=int(input())\nc=10**9+7\ndef pow_c(x,n,c):\n    if n == 0:\n        return 1\n    K = 1\n    while n > 1:\n        if n % 2 != 0:\n            K= (K%c)*(x%c)%c\n        x = ((x%c)**2)%c\n        n \/\/= 2\n    return (K%c) * (x%c) %c\n\nk10=pow_c(10,n,c)\nk9=pow_c(9,n,c)\nk8=pow_c(8,n,c)\nans=(k10-2*k9+k8)%c ","n = int(input())\nmod = 10 ** 9 + 7\nprint((pow(10, n, mod) - pow(9, n, mod) * 2 + pow(8, n, mod)) % mod)","N = int(input())\nmod = 10**9+7\n\nif N == 1:\n    print(0)\nelif N == 2:\n    print(2)\nelse:\n    ans = (mod*3+pow(10,N,mod)-pow(9,N,mod)*2+pow(8,N,mod))%mod\n    print(ans)","\nn = int(input())\nmod = 10**9 + 7\nif n==1:\n    print(0)\nelse:\n    #0\u304c\u5165\u3063\u3066\u308b\u3044\u308b\u500b\u6570\n    a = pow(10,n,mod) - pow(9,n,mod)\n    #9\u304c\u5165\u3063\u3066\u3044\u308b\u500b\u6570\n    b = pow(10,n,mod) - pow(9,n,mod)\n    #0\u304b9\u304c\u5165\u3063\u3066\u3044\u308b\n    c = pow(10,n,mod) - pow(8,n,mod)\n\n    ans = (a + b - c)%mod\n    print(ans)","N = int(input())\n\nprint(((10**N) - 2*(9**N) + (8**N)) % ((10**9)+7))\n","# we want to use total to subtract away, 10**n\n# both 0 and 9 doesn't appear\n# find those where 0 appear but not 9\n# find those where 9 appear but not 0\nmod = 10**9 + 7\nn = int(input())\n\n# focus on the computation where 9 doesn't appear and 0 doesn't appear\n# exactly_one_appear = 9**n - 8**n\n# 10**n-8**n-2*(9**n-8**n)\n\n# neither in the sequence 8**n\n# 0 in the sequence but 9 is not\n\nten, nine, eight = 1, 1, 1\nfor i in range(n):\n    ten *= 10 \n    nine *= 9\n    eight *= 8\n    ten %= mod\n    nine %= mod\n    eight %= mod\nprint((ten - 2*nine + eight)%mod)","#!\/usr\/bin\/env python\n# -*- coding: utf-8 -*-\n\ndef main():\n    n = int(input())\n    if n==1:\n        ans = 0\n    elif n==2:\n        ans = 2\n    else:\n        ans = 2\n        for i in range(3, n+1):\n            all = 10 ** (i-1)\n            if(all>1000000007):\n                all %= 1000000007\n            ans = ans*10 + (all-ans)*2\n            if(ans>1000000007):\n                ans %= 1000000007\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n","# -*- coding:utf-8 -*-\n\ndef solve():\n    N = int(input())\n    MOD = 10**9+7\n    ans = pow(10,N,MOD)\n    ans = (ans - (2*pow(9,N,MOD))%MOD)%MOD\n    ans = (ans + pow(8,N,MOD))%MOD\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    solve()\n","n = int(input())\nans = 10 ** n - ((10 - 1) ** n) * 2 + (10 - 2) ** n\nif n > 1:\n    print(ans % (10**9 + 7))\nelse:\n    print(0)","n = int(input())\nprint((pow(10,n) - pow(9, n) - pow(9, n) + pow(8, n))%(10**9+7))","N = int(input())\n\nans = 0\nif N == 1:\n    ans = 0\nelse:\n    ans = (10 ** N - 2 * 9 ** N + 8 ** N) % (10**9 + 7)\n\nprint(ans)\n","N = int(input())\nmod = 10**9 + 7\ndef inv(x):\n    return pow(x, mod - 2, mod)\ndef comb(n, k):\n    ue = 1\n    shita = 1\n    n %= mod\n    for i in range(k):\n        ue = ue * (n - i) % mod\n        shita = shita * (i + 1) % mod\n    return ue * inv(shita) % mod\nif N == 1:\n    print(0)\nelse:\n    print((pow(10,N,mod)-2*pow(9,N,mod)+pow(8,N,mod))%mod)\n","MOD = 10**9+7\nn = int(input())\n\nans = pow(10,n,MOD) - pow(9,n,MOD) * 2 + pow(8,n,MOD)\nprint(ans%MOD)","N = int(input())\n\nprint((10**N-2*9**N+8**N)%1000000007)"]}
{"description_html":"<span class=\"lang-en\">\n<p>Score : <var>600<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>We will create an artwork by painting black some squares in a white square grid with <var>10^9<\/var> rows and <var>N<\/var> columns.<br\/>\nThe current plan is as follows: for the <var>i<\/var>-th column from the left, we will paint the <var>H_i<\/var> bottommost squares and will not paint the other squares in that column.<br\/>\nBefore starting to work, you can choose at most <var>K<\/var> columns (possibly zero) and change the values of <var>H_i<\/var> for these columns to any integers of your choice between <var>0<\/var> and <var>10^9<\/var> (inclusive).<br\/>\nDifferent values can be chosen for different columns.<br\/><\/p>\n<p>Then, you will create the modified artwork by repeating the following operation:<br\/><\/p>\n<ul>\n<li>Choose one or more consecutive squares in one row and paint them black. (Squares already painted black can be painted again, but squares not to be painted according to the modified plan should not be painted.)<\/li>\n<\/ul>\n<p>Find the minimum number of times you need to perform this operation.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li><var>1 \\leq N \\leq 300<\/var><\/li>\n<li><var>0 \\leq K \\leq N<\/var><\/li>\n<li><var>0 \\leq H_i \\leq 10^9<\/var><\/li>\n<li>All values in input are integers.<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>N<\/var> <var>K<\/var>\n<var>H_1<\/var> <var>H_2<\/var> <var>...<\/var> <var>H_N<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>Print the minimum number of operations required.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>4 1\n2 3 4 1\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>3\n<\/pre>\n<p>For example, by changing the value of <var>H_3<\/var> to <var>2<\/var>, you can create the modified artwork by the following three operations:<\/p>\n<ul>\n<li>Paint black the <var>1<\/var>-st through <var>4<\/var>-th squares from the left in the <var>1<\/var>-st row from the bottom.<\/li>\n<li>Paint black the <var>1<\/var>-st through <var>3<\/var>-rd squares from the left in the <var>2<\/var>-nd row from the bottom.<\/li>\n<li>Paint black the <var>2<\/var>-nd square from the left in the <var>3<\/var>-rd row from the bottom.<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>6 2\n8 6 9 1 2 1\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>7\n<\/pre>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>10 0\n1 1000000000 1 1000000000 1 1000000000 1 1000000000 1 1000000000\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>4999999996\n<\/pre><\/section>\n<\/div>\n<\/span>","description_string":"\nScore : 600 points\n\n\nProblem StatementWe will create an artwork by painting black some squares in a white square grid with 10^9 rows and N columns.\nThe current plan is as follows: for the i-th column from the left, we will paint the H_i bottommost squares and will not paint the other squares in that column.\nBefore starting to work, you can choose at most K columns (possibly zero) and change the values of H_i for these columns to any integers of your choice between 0 and 10^9 (inclusive).\nDifferent values can be chosen for different columns.\nThen, you will create the modified artwork by repeating the following operation:\n\nChoose one or more consecutive squares in one row and paint them black. (Squares already painted black can be painted again, but squares not to be painted according to the modified plan should not be painted.)\n\nFind the minimum number of times you need to perform this operation.\n\n\n\n\nConstraints\n1 \\leq N \\leq 300\n0 \\leq K \\leq N\n0 \\leq H_i \\leq 10^9\nAll values in input are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN K\nH_1 H_2 ... H_N\n\n\n\n\n\nOutputPrint the minimum number of operations required.\n\n\n\n\n\n\nSample Input 14 1\n2 3 4 1\n\n\n\n\n\nSample Output 13\n\nFor example, by changing the value of H_3 to 2, you can create the modified artwork by the following three operations:\n\nPaint black the 1-st through 4-th squares from the left in the 1-st row from the bottom.\nPaint black the 1-st through 3-rd squares from the left in the 2-nd row from the bottom.\nPaint black the 2-nd square from the left in the 3-rd row from the bottom.\n\n\n\n\n\n\nSample Input 26 2\n8 6 9 1 2 1\n\n\n\n\n\nSample Output 27\n\n\n\n\n\n\nSample Input 310 0\n1 1000000000 1 1000000000 1 1000000000 1 1000000000 1 1000000000\n\n\n\n\n\nSample Output 34999999996\n\n\n","orig_lang_html":"<span class=\"lang-en\">\n<p>Score : <var>600<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>We will create an artwork by painting black some squares in a white square grid with <var>10^9<\/var> rows and <var>N<\/var> columns.<br\/>\nThe current plan is as follows: for the <var>i<\/var>-th column from the left, we will paint the <var>H_i<\/var> bottommost squares and will not paint the other squares in that column.<br\/>\nBefore starting to work, you can choose at most <var>K<\/var> columns (possibly zero) and change the values of <var>H_i<\/var> for these columns to any integers of your choice between <var>0<\/var> and <var>10^9<\/var> (inclusive).<br\/>\nDifferent values can be chosen for different columns.<br\/><\/p>\n<p>Then, you will create the modified artwork by repeating the following operation:<br\/><\/p>\n<ul>\n<li>Choose one or more consecutive squares in one row and paint them black. (Squares already painted black can be painted again, but squares not to be painted according to the modified plan should not be painted.)<\/li>\n<\/ul>\n<p>Find the minimum number of times you need to perform this operation.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li><var>1 \\leq N \\leq 300<\/var><\/li>\n<li><var>0 \\leq K \\leq N<\/var><\/li>\n<li><var>0 \\leq H_i \\leq 10^9<\/var><\/li>\n<li>All values in input are integers.<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>N<\/var> <var>K<\/var>\n<var>H_1<\/var> <var>H_2<\/var> <var>...<\/var> <var>H_N<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>Print the minimum number of operations required.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>4 1\n2 3 4 1\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>3\n<\/pre>\n<p>For example, by changing the value of <var>H_3<\/var> to <var>2<\/var>, you can create the modified artwork by the following three operations:<\/p>\n<ul>\n<li>Paint black the <var>1<\/var>-st through <var>4<\/var>-th squares from the left in the <var>1<\/var>-st row from the bottom.<\/li>\n<li>Paint black the <var>1<\/var>-st through <var>3<\/var>-rd squares from the left in the <var>2<\/var>-nd row from the bottom.<\/li>\n<li>Paint black the <var>2<\/var>-nd square from the left in the <var>3<\/var>-rd row from the bottom.<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>6 2\n8 6 9 1 2 1\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>7\n<\/pre>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>10 0\n1 1000000000 1 1000000000 1 1000000000 1 1000000000 1 1000000000\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>4999999996\n<\/pre><\/section>\n<\/div>\n<\/span>","orig_lang_string":"\nScore : 600 points\n\n\nProblem StatementWe will create an artwork by painting black some squares in a white square grid with 10^9 rows and N columns.\nThe current plan is as follows: for the i-th column from the left, we will paint the H_i bottommost squares and will not paint the other squares in that column.\nBefore starting to work, you can choose at most K columns (possibly zero) and change the values of H_i for these columns to any integers of your choice between 0 and 10^9 (inclusive).\nDifferent values can be chosen for different columns.\nThen, you will create the modified artwork by repeating the following operation:\n\nChoose one or more consecutive squares in one row and paint them black. (Squares already painted black can be painted again, but squares not to be painted according to the modified plan should not be painted.)\n\nFind the minimum number of times you need to perform this operation.\n\n\n\n\nConstraints\n1 \\leq N \\leq 300\n0 \\leq K \\leq N\n0 \\leq H_i \\leq 10^9\nAll values in input are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN K\nH_1 H_2 ... H_N\n\n\n\n\n\nOutputPrint the minimum number of operations required.\n\n\n\n\n\n\nSample Input 14 1\n2 3 4 1\n\n\n\n\n\nSample Output 13\n\nFor example, by changing the value of H_3 to 2, you can create the modified artwork by the following three operations:\n\nPaint black the 1-st through 4-th squares from the left in the 1-st row from the bottom.\nPaint black the 1-st through 3-rd squares from the left in the 2-nd row from the bottom.\nPaint black the 2-nd square from the left in the 3-rd row from the bottom.\n\n\n\n\n\n\nSample Input 26 2\n8 6 9 1 2 1\n\n\n\n\n\nSample Output 27\n\n\n\n\n\n\nSample Input 310 0\n1 1000000000 1 1000000000 1 1000000000 1 1000000000 1 1000000000\n\n\n\n\n\nSample Output 34999999996\n\n\n","solve_rate":0.44,"codenet_problem_id":"p02864","input_testcases":{"43":"10 0\n2 1001001000 2 1001010000 1 0000000000 1 1000000000 2 1000000000","30":"10 0\n4 1001000101 0 1000010000 2 0000000010 2 1010101010 0 1000000011","29":"10 0\n4 1001000001 0 1000010000 2 0000000010 2 1010101010 0 1000000011","94":"10 2\n0 1001001000 1 1000000000 2 0000000010 1 1000101000 0 1000000000","103":"6 2\n8 6 9 1 2 1","27":"10 1\n4 1001000001 1 1000010000 2 0000000010 2 1010101000 0 1000000011","36":"10 0\n1 1000000000 1 1000000000 2 1000000000 1 1000000000 1 1000000000","26":"10 1\n4 1001000001 1 1000010000 2 0000000010 2 1010101000 0 1000000001","99":"10 0\n4 1001010011 1 1000010001 2 0000000010 2 1010101010 0 1000000011","79":"10 0\n4 1001000101 0 1000010010 4 0000000010 5 1010101010 0 1000000011","49":"10 1\n2 1001001000 1 1000010000 2 0000000010 2 1000101000 2 1000000000","12":"10 0\n2 1001001000 1 1000010000 2 0000000000 1 1000000000 2 1000000000","58":"10 0\n4 1001000101 0 1000000000 2 0000000010 5 1010101010 0 1000000000","7":"10 0\n2 1001001000 1 1000000000 1 1000000000 1 1000000000 2 1000000000","28":"10 0\n4 1001000001 1 1000010000 2 0000000010 2 1010101010 0 1000000011","101":"4 1\n2 3 4 1","37":"10 0\n2 1001000000 1 1000000100 1 1000000000 1 1000000000 1 1000000000","53":"10 1\n4 0001000000 1 1000010000 2 0000000010 2 1010101000 0 1000000000","92":"10 1\n2 1001001000 1 1000010010 2 0010000000 1 1000101000 2 1000000000","11":"4 0\n4 0 4 1","40":"10 0\n3 1001001000 1 1000010000 1 1000000000 1 1000000000 1 1000000000","63":"10 0\n2 1001001000 0 1000100000 1 1000000000 1 1000000000 2 1000000000","22":"10 1\n2 1001001000 1 1000010000 2 0000000010 1 1000101000 0 1000000000","44":"10 0\n2 1001001000 2 1000010000 2 0000000000 1 1100000000 2 1000000000","81":"10 0\n4 1001000101 0 1000010000 3 0000000010 5 1010101010 0 1000001000","9":"10 0\n2 1001001000 2 1000010000 1 1000000000 1 1000000000 2 1000000000","56":"10 0\n4 1001010101 0 1000010000 2 0000000010 4 1010101010 0 1000000011","8":"10 0\n2 1001001000 1 1000010000 1 1000000000 1 1000000000 2 1000000000","38":"10 0\n2 1001001000 1 1000000000 0 1000000000 1 1000000000 1 1000000000","93":"10 1\n2 1001001000 0 1000010010 2 0000000010 2 1000101000 2 1000000000","71":"10 2\n2 1001001000 1 1000000000 2 0000000010 1 1000101000 0 1000000000","35":"10 0\n4 1001000101 0 1100010000 2 0000000010 5 1010101010 0 1000000000","6":"4 0\n2 5 4 2","100":"10 0\n1 1000000000 1 1000000000 1 1000000000 1 1000000000 1 1000000000","18":"10 1\n2 1001001000 1 1000010000 2 0000000000 1 1000101000 2 1000000000","50":"10 1\n2 1001001000 1 1000000000 2 0000000010 1 1000101000 0 1000000000","60":"10 0\n4 1001000101 0 1100010000 2 0000000010 5 1110101010 0 1000000000","77":"10 0\n4 1001010001 1 1000010001 2 0000000010 2 1010101010 0 1000000011","42":"10 0\n2 1001001000 1 1100010000 1 1000000000 1 1000000000 2 1000000000","69":"10 1\n2 1001001000 0 1000010000 2 0000000000 1 1000000000 0 1000000000","25":"10 1\n4 1001000001 1 1000010000 2 0000000010 2 1010101000 0 1000000000","87":"10 0\n2 1001011001 2 1000010000 0 1000000000 1 1000000000 2 1000000000","52":"10 1\n2 1001000010 1 1000010000 2 0000000010 2 1010101000 0 1000000000","83":"10 1\n0 1000000000 1 1000000000 1 1000000000 1 1000000000 1 1010000000","70":"10 2\n2 1001001000 1 1000010000 3 0000000000 1 1000001000 2 1000000000","102":"4 1\n2 3 4 1","85":"10 0\n2 1001101000 0 1000100000 1 1000000000 1 1000000000 2 1000000000","68":"10 0\n2 1001001000 1 1000010000 2 0000000000 1 1010000000 2 0000000000","32":"10 0\n4 1001000101 0 1000010000 2 0000000010 5 1010101010 0 1000000011","4":"10 0\n2 1001001000 1 1000000000 1 1000000000 1 1000000000 1 1000000000","66":"10 0\n2 1001001000 4 1000010000 2 0000000000 1 1100000000 2 1000000000","46":"10 1\n2 1001001000 1 1000010000 2 0000000000 1 1000000000 0 1000000000","23":"10 1\n2 1001001000 1 1000010000 2 0000000010 1 1010101000 0 1000000000","34":"10 0\n4 1001000101 0 1000010000 2 0000000010 5 1010101010 0 1000000000","3":"6 2\n8 0 9 1 2 1","72":"10 1\n2 1001000010 1 1000010000 2 0000010010 2 1010101000 0 1000000000","5":"6 4\n8 0 9 1 2 1","61":"10 0\n0 1000000000 1 1000000000 1 1000000000 1 1000000000 1 1010000000","57":"10 0\n4 1001000101 0 1000010000 4 0000000010 5 1010101010 0 1000000011","2":"10 0\n2 1001000000 1 1000000000 1 1000000000 1 1000000000 1 1000000000","10":"10 0\n2 1001001000 2 1000010000 1 0000000000 1 1000000000 2 1000000000","90":"10 0\n2 1001001000 1 1000010000 2 0000000000 1 1010001000 2 0000000000","33":"10 0\n4 1001000101 0 1000010000 2 0000000010 5 1010101010 0 1000000001","88":"10 0\n2 1001000000 4 1000010000 2 0000000000 1 1100000000 2 1000000000","41":"10 0\n2 1001001000 1 1000100000 1 1000000000 1 1000000000 2 1000000000","0":"10 0\n2 1000000000 1 1000000000 1 1000000000 1 1000000000 1 1000000000","84":"10 0\n3 1001001000 1 1010010000 1 1000000000 2 1000000000 1 1000000000","80":"10 0\n4 1001000111 0 1000000000 2 0000000010 5 1010101010 0 1000000000","91":"10 2\n2 1001001000 0 1000010000 3 0000000000 1 1000001000 2 1000000000","55":"10 0\n4 1001000000 1 1000010000 2 0000000010 2 1010101010 0 1000000011","59":"10 0\n4 1001000101 0 1000010000 3 0000000010 5 1010101010 0 1000000000","16":"10 1\n2 1001001000 1 1000010000 2 0000000000 1 1000001000 2 1000000000","31":"10 0\n4 1001000101 0 1000010000 2 0000000010 4 1010101010 0 1000000011","65":"10 0\n2 1001001000 2 0001010000 1 0000000000 1 1000000000 2 1000000000","96":"10 1\n6 1001000001 1 1000010000 2 0000000010 0 1010101000 0 0000000001","48":"10 1\n2 1001001000 1 1000010010 2 0000000000 1 1000101000 2 1000000000","78":"10 0\n4 1001000000 1 1000010010 2 0000000010 2 1010101010 0 1000000011","45":"10 0\n2 1001001000 1 1000010000 2 0000000000 1 1010000000 2 1000000000","24":"10 1\n2 1001000000 1 1000010000 2 0000000010 2 1010101000 0 1000000000","20":"10 1\n2 1001001000 1 1000010000 2 0000000010 1 1000101000 2 1000000000","1":"6 2\n8 3 9 1 2 1","14":"10 1\n2 1001001000 1 1000010000 2 0000000000 1 1000000000 2 1000000000"},"output_testcases":{"43":"4002010996\n","30":"4011111128\n","29":"4011111028\n","94":"2000000008\n","103":"7\n","27":"3001010019\n","36":"4999999995\n","26":"3001010009\n","99":"4011121038\n","79":"4011111133\n","49":"3000111005\n","12":"4001010997\n","58":"4011101114\n","7":"5001000995\n","28":"4011111027\n","101":"3\n","37":"5001000096\n","53":"2001010007\n","92":"3010111006\n","11":"8\n","40":"5001010996\n","63":"5001100996\n","22":"3000111008\n","44":"4101010996\n","81":"4011112113\n","9":"5001010994\n","56":"4011121126\n","8":"5001010995\n","38":"5001000997\n","93":"3000111016\n","71":"2000000009\n","35":"4111111114\n","6":"5\n","100":"4999999996\n","18":"3000110999\n","50":"3000101008\n","60":"4211111114\n","77":"4011121028\n","42":"5101010995\n","69":"3000010002\n","25":"3001010008\n","87":"5001020996\n","52":"3001010017\n","83":"3999999997\n","70":"2000001002\n","102":"3\n","85":"5001200996\n","68":"3011010999\n","32":"4011111125\n","4":"5001000996\n","66":"4101010994\n","46":"3000010001\n","23":"3001011007\n","34":"4011111114\n","3":"2\n","72":"3001020017\n","5":"1\n","61":"5009999996\n","57":"4011111123\n","2":"5000999996\n","10":"4001010996\n","90":"3011011999\n","33":"4011111115\n","88":"4101009994\n","41":"5001100995\n","0":"4999999996\n","84":"5011010995\n","80":"4011101124\n","91":"2000001003\n","55":"4011111026\n","59":"4011111113\n","16":"3000010999\n","31":"4011111126\n","65":"3002010996\n","96":"2001010009\n","48":"3000111009\n","78":"4011111036\n","45":"4011010997\n","24":"3001010007\n","20":"3000111006\n","1":"4\n","14":"3000009999\n"},"n_missing":22,"programs":["N,K=map(int,input().split())\nH=list(map(int,input().split()))+[0]\nh=[0]*(N+1)\nh[0]=H[0]\nfor i in range(1,N):\n    h[i]=max(H[i]-H[i-1],h[i])\nfor i in range(1,N+1):\n    h[i]+=h[i-1]\ndata=[[0]*N for i in range(N)]\nfor L in range(N):\n    for R in range(L,N):\n        if L==0:\n            data[L][R]=h[-1]-h[R+1]+H[R+1]\n        else:\n            data[L][R]=h[L-1]+h[-1]-h[R+1]+max(0,H[R+1]-H[L-1])\nfor L in range(N):\n    for R in range(L,N):\n        data[L][R]=h[-1]-data[L][R]\ndp=[[0]*(K+1) for i in range(N+1)]\nfor i in range(1,N+1):\n    for j in range(min(i+1,K+1)):\n        dp[i][j]=dp[i-1][j]\n        for k in range(j-1,-1,-1):\n            if dp[i][j]<dp[i-1-j+k][k]+data[i-j+k][i-1]:\n                dp[i][j]=dp[i-1-j+k][k]+data[i-j+k][i-1]\nprint(h[-1]-max(dp[N]))","def f_laminate(INF=float('inf')):\n    # \u53c2\u8003: https:\/\/atcoder.jp\/contests\/abc145\/submissions\/8491285\n    N, K = map(int, input().split())\n    H = [0] + list(map(int, input().split()))\n\n    # editorial \u3068\u540c\u3058 DP \u30c6\u30fc\u30d6\u30eb\n    dp = [[INF] * (N - K + 1) for _ in range(N + 1)]\n    dp[0][0] = 0\n    for x in range(1, N + 1):\n        for y in range(1, N - K + 1):\n            for i in range(x):\n                dp[x][y] = min(dp[x][y], dp[i][y - 1] + max(0, H[x] - H[i]))\n\n    ans = INF\n    for i in range(N + 1):\n        ans = min(ans, dp[i][N - K])\n    return ans\n\nprint(f_laminate())","import sys\ninput = sys.stdin.readline\n\nN, K = map(int, input().split())\nH = [0]+list(map(int, input().split()))\ndp = [[[10**18]*(N+1) for _ in range(K+1)] for _ in range(N+1)]\ndp[0][0][0] = 0\n\nfor i in range(N):\n    for j in range(K+1):\n        for k in range(N+1):\n            if j+1<=K:\n                dp[i+1][j+1][k] = min(dp[i+1][j+1][k], dp[i][j][k])\n            \n            dp[i+1][j][i+1] = min(dp[i+1][j][i+1], dp[i][j][k]+max(0, H[i+1]-H[k]))\n\nans = 10**18\n\nfor i in range(K+1):\n    for j in range(N+1):\n        ans = min(ans, dp[N][i][j])\n    \nprint(ans)","N, K = map(int, input().split())\nH = [0] + [int(i) for i in input().split()]\n\ndp = [[float('inf')] * (N - K + 1) for _ in range(N + 1)]\ndp[0][0] = 0\n\n# \u53f3\u7aef\u304ci\u3001\u30b5\u30a4\u30ba\u304cj\nfor i in range(1, N + 1) :\n  for j in range(N - K + 1) :\n    dp[i][j] = min(dp[k][j-1] + max(0, H[i] - H[k]) for k in range(i))\n    \nprint(dp[i][N-K])","def solve():\n    from sys import stdin\n    f_i = stdin\n    \n    N, K = map(int, f_i.readline().split())\n    H = tuple(map(int, f_i.readline().split()))\n    \n    if N == K:\n        return 0\n    \n    dp1 = list(H)\n    for i in range(1, N - K):\n        dp2 = dp1[:i]\n        for x, H_x in enumerate(H[i:], start=i):\n            v = min(dp_j + max(0, H_x - H_j) for dp_j, H_j in zip(dp1[i-1:x], H[i-1:x]))\n            dp2.append(v)\n        dp1 = dp2\n    return min(dp1[N-K-1:])\n\nprint(solve())","N, K = map(int, input().split())\nH = [0] + list(map(int, input().split()))\ndp = [[10 ** 100] * (N-K+1) for _ in range(N+1)]\ndp[0][0] = 0\nfor x in range(1, N+1):\n    for y in range(1, min(x+1, N-K+1)):\n        dp[x][y] = min(dp[i][y-1] + max(0, H[x] - H[i]) for i in range(x))\nprint(min(dp[i][N-K] for i in range(1, N+1)))","#\u8a2d\u5b9a\nimport sys\ninput = sys.stdin.buffer.readline\n\n#\u30e9\u30a4\u30d6\u30e9\u30ea\u30a4\u30f3\u30dd\u30fc\u30c8\nfrom collections import defaultdict\nimport copy\n\n#\u5165\u529b\u53d7\u3051\u53d6\u308a\ndef getlist():\n\treturn list(map(int, input().split()))\n\n\n#\u51e6\u7406\u5185\u5bb9\ndef main():\n\tN, K = getlist()\n\tH = getlist()\n\tm = min(H)\n\tHH = copy.deepcopy(H)\n\tfor i in range(K):\n\t\tind = HH.index(max(HH))\n\t\tHH[ind] = m\n\tans = m\n\t#\u5834\u5408\u5206\u3051\n\tif K == N:\n\t\tprint(0)\n\telif N == 1:\n\t\tprint(H[0])\n\telse:\n\t\tif HH[0] > HH[1]:\n\t\t\tans += HH[0] - HH[1]\n\t\telse:\n\t\t\tans += HH[0] - m\n\t\tfor i in range(1, N - 1):\n\t\t\tif HH[i] > HH[i - 1] and HH[i] > HH[i + 1]:\n\t\t\t\tans += HH[i] - max(HH[i - 1], HH[i + 1])\n\t\t\telif HH[i] > HH[i - 1]:\n\t\t\t\tans += HH[i] - HH[i - 1]\n\t\t\telif HH[i] > HH[i + 1]:\n\t\t\t\tans += HH[i] - HH[i + 1]\n\t\t\telse:\n\t\t\t\tans += HH[i] - m\n\t\tif HH[-1] > HH[-2]:\n\t\t\tans += HH[-1] - HH[-2]\n\t\telse:\n\t\t\tans += HH[-1] - m\n\t\tprint(ans)\n\n\nif __name__ == '__main__':\n\tmain()","import sys\ninput = sys.stdin.readline\nN, K = map(int, input().split())\na = [0] + list(map(int, input().split()))\ninf = 10 ** 12\ndp = [[[inf] * (N + 1) for _ in range(K + 1)] for _ in range(N + 1)]\ndp[0][0][0] = 0\nfor i in range(N):\n  for j in range(K + 1):\n    for k in range(N + 1):\n      if dp[i][j][k] == inf: continue\n      x = max(0, a[i + 1] - a[k])\n      dp[i + 1][j][i + 1] = min(dp[i + 1][j][i + 1], dp[i][j][k] + x)\n      if j < K: dp[i + 1][j + 1][k] = min(dp[i + 1][j][k], dp[i][j][k])\n#print(dp)\nres = inf\nfor j in range(K + 1): res = min(res, min(dp[-1][j]))\nprint(res)","n,K = map(int, input().split())\nh = list(map(int, input().split()))\nh = [0] + h\nINF = 1001001001001\ndp = [[INF] *(n+1) for _ in range(n+1)]  \ndp[0][0] = 0\nfor j in range(n):\n    for i in range(1,n+1):\n        for k in range(i):\n            dp[i][j+1] = min(dp[i][j+1],dp[k][j]+max(0,h[i]-h[k]))\n\nans = INF\nfor i in range(n+1):\n    ans = min(ans,dp[i][n-K])\n\nprint(ans)\n\n\n\n","# F - Laminate\nINF = 1001002003004005006\nimport numpy as np\n\nN, K = map(int, input().split())\nM = N - K\nH = np.array(list(map(int, input().split())))\nH = np.insert(H, 0, 0)\n\nDP = np.full_like(np.zeros([N + 1, M + 1]), INF)\nDP[0][0] = 0\nfor i in range(1, N + 1):\n    for j in range(M):\n        now = INF\n        for k in range(i):\n            now = min(now, DP[k][j] + max(0, H[i] - H[k]))\n        DP[i][j + 1] = now\n        \nans = INF\nfor i in range(N + 1):\n    ans = min(ans, DP[i][M])\n    \nprint(int(ans))","N,K = map(int,input().split())\nH = list(map(int,input().split()))\nH = [0]+H\ndp = [[10**12]*(N+1) for _ in range(N+1)]\ndp[0][0] = 0\nfor x in range(N+1):\n    for y in range(1,N+1):\n        for z in range(x):\n            dp[x][y] = min(dp[x][y],dp[z][y-1]+max(H[x]-H[z],0))\n\nans = 10**12\nfor x in range(N+1):\n    ans = min(dp[x][N-K],ans)\n\nprint(ans)","N, K = map(int, input().split())\nH = [0] + list(map(int, input().split()))\n\nINF = 10**12\ndp = [[INF] * (N+1) for i in range(N+1)]\ndp[0][0] = 0\n\nfor x in range(1, N+1):\n  dp[x][0] = 0\n  dp[x][1] = H[x]\n  for y in range(2, x+1):\n    for i in range(x):\n      dp[x][y] = min(dp[x][y], dp[i][y-1]+max(0, H[x]-H[i]))\n\nans = INF\nfor i in range(N+1):\n  ans = min(ans, dp[i][N-K])\n\nprint(ans)","import sys\ninput = lambda : sys.stdin.readline().rstrip()\nsys.setrecursionlimit(max(1000, 10**9))\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\nn,k = list(map(int, input().split()))\nh = list(map(int, input().split()))\n\ndp = [[0]*(n+1) for _ in range(n+1)]\n# for i in range(1,n+1):\n#     dp[i][0] = float(\"inf\")\nfor i in range(1, n+1):\n    hh = h[i-1]\n    for j in range(1, n+1):\n        if j==1:\n            dp[i][j] = hh\n        elif j<=i:\n            if i>=2:\n                dp[i][j] = min((dp[ii][j-1] + max(0, hh-(h[ii-1] if ii>=1 else 0))) for ii in range(1,i))\n            else:\n                dp[i][j] = hh\n        else:\n            dp[i][j] = float(\"inf\")\nans = min(min(dp[nn][kk] for kk in range(n-k, n+1)) for nn in range(1,n+1))\nprint(ans)","import sys\ninput = sys.stdin.buffer.readline\n\ndef main():\n    N,K = map(int,input().split())\n    H = list(map(int,input().split()))\n    H = [0]+H\n    INF = 10**15\n    \n    dp = [INF]*(N+1)\n    dp[0] = 0\n    for i in range(N-K):\n        use = [INF]*(N+1)\n        for j in range(i,N+1):\n            for k in range(j+1,N+1):\n                use[k] = min(use[k],dp[j]+max(0,H[k]-H[j]))\n        dp = use\n    \n    print(min(dp))\n\nif __name__ == \"__main__\":\n    main()\n","import numpy as np\nINF = 10**15\ndef solve(n, k, h):\n    dp = np.full((n+1, n+1), INF, dtype=int)\n    dp[0, 0] = 0\n    h = np.array([0] + h, dtype=int)\n    for i, h_i in enumerate(h[1:], 1):\n        t = np.maximum(h_i - h[:i], 0)\n        dp[i,1:] = np.min(dp[:i,:-1]+t[:,None], axis=0)\n    return np.min(dp[:, n-k])\n\nn, k = map(int, input().split())\nh = list(map(int, input().split()))\nprint(solve(n, k, h))","import sys\ninput = sys.stdin.readline\n\ndef max2(x,y):\n    return x if x > y else y\n\ndef min2(x,y):\n    return x if x < y else y\n\nN, K = map(int, input().split())\nH = [0] + list(map(int, input().split()))\n\ndp = [[10**9*N for _ in range(N-K+1)] for _ in range(N+1)]\n\ndp[0][0] = 0\nfor i, h in enumerate(H[1:], start=1):\n    for k in range(1, min2(i+1, N-K+1)):\n        dp[i][k] = min(dp[j][k-1] + max2(0, h-H[j]) for j in range(i))\nprint(min(d[-1] for d in dp))","n,k=map(int,input().split())\nh=list(map(int,input().split()))\nh.insert(0,0)\ndp=[[float(\"inf\")]*(n-k+1) for _ in range(n+1)]\ndp[0][0]=0\nfor i in range(1,n+1):\n    for j in range(1,n-k+1):\n        now=float(\"inf\")\n        for l in range(i):\n            now=min(dp[l][j-1]+max(0,h[i]-h[l]),now)\n        dp[i][j]=now\n\nans=float(\"inf\")\nfor i in range(1,n+1):\n    ans=min(ans,dp[i][n-k])\n\nprint(ans)\n\n","N,K = map(int, input().split())\nH = [int(h) for h in input().split()]\n\ndp = [[10**13]*N for _ in range(N)]\ndp[0][0] = H[0]\n    \nfor i in range(1, N):\n    for j in range(i+1):\n        if j == 0:\n            dp[i][j] = min(dp[i-1][j], H[i])\n            continue\n        dp[i][j] = dp[i-1][j]\n        for k in range(i):\n            dp[i][j] = min(dp[i][j], dp[k][j-1]+max(0, H[i]-H[k]))\n            \nif N == K:\n    ans = 0\nelse:\n    ans = 10**13\n    for i in range(N):\n        ans = min(ans, dp[i][N-K-1])\n        \nprint(ans)","from collections import defaultdict\n\nn, k = map(int, input().split())\nhhh = list(map(int, input().split()))\nINF = 10 ** 18\ndp = defaultdict(lambda: INF)\ndp[0, 0] = 0\nfor h in hhh:\n    ndp = defaultdict(lambda: INF)\n    for (changed, prev_h), operate in dp.items():\n        if h == prev_h:\n            ndp[changed, h] = min(ndp[changed, h], operate)\n        elif h > prev_h:\n            ndp[changed, h] = min(ndp[changed, h], operate + h - prev_h)\n            if changed < k:\n                ndp[changed + 1, prev_h] = min(ndp[changed + 1, prev_h], operate)\n        else:\n            ndp[changed, h] = min(ndp[changed, h], operate)\n            if changed < k:\n                ndp[changed + 1, prev_h] = min(ndp[changed + 1, prev_h], operate)\n    dp = ndp\nprint(min(dp.values()))\n","import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,copy,functools\nimport time,random\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 \/ 10**10\nmod = 10**9+7\ndd = [(-1,0),(0,1),(1,0),(0,-1)]\nddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(): return [list(map(int, l.split())) for l in sys.stdin.readlines()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\ndef pe(s): return print(str(s), file=sys.stderr)\ndef JA(a, sep): return sep.join(map(str, a))\ndef JAA(a, s, t): return s.join(t.join(map(str, b)) for b in a)\n\n\ndef main():\n    n,k = LI()\n    a = LI()\n    c = collections.defaultdict(lambda: inf)\n    c[(0,0)] = 0\n    for t in a:\n        nc = collections.defaultdict(lambda: inf)\n        for ck,cv in c.items():\n            k1,k2 = ck\n            if k1 >= t:\n                if nc[(t,k2)] > cv:\n                    nc[(t,k2)] = cv\n            else:\n                if nc[(t,k2)] > cv + t-k1:\n                    nc[(t,k2)] = cv + t-k1\n            if k2 < k:\n                if nc[(k1,k2+1)] > cv:\n                    nc[(k1,k2+1)] = cv\n        c = nc\n\n    return min(c.values())\n\n\nprint(main())\n\n\n","def main():\n    INF = 10**12\n    N, K = list(map(int, input().split()))\n    H = list(map(int, input().split()))\n    H = [0] + H\n    # dp[n][k][l]: n\u5217\u76ee\u307e\u3067\u3067\u5408\u8a08k\u5217H\u306e\u5024\u3092\u5909\u3048\u3066\u3044\u308b\uff06\u76f4\u8fd1l\u5217\u3092\u5909\u3048\u3066\u3044\u308b\u5834\u5408\u306e\u5857\u308a\u306e\u56de\u6570\u306e\u6700\u5c0f\u5024\n    # \u7b54\u3048\u306f min_{k,l}(dp[N][k][l])\n    dp = [[[INF for _ in range(K + 1)] for _ in range(K + 1)] for _ in range(N + 1)]\n    dp[0][0][0] = 0\n    for n in range(1, N + 1):\n        for k in range(min(n, K) + 1):\n            v = INF\n            for l in range(k + 1):\n                if l > 0:\n                    dp[n][k][l] = dp[n - 1][k - 1][l - 1]\n                v = min(v, dp[n - 1][k][l] + max(0, H[n] - H[n - l - 1]))\n            dp[n][k][0] = v\n    ans = INF\n    for k in range(K + 1):\n        for l in range(k + 1):\n            ans = min(ans, dp[N][k][l])\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()","def solve():\n    INF = 10**12\n\n    def max2(x, y): return x if x >= y else y\n    def min2(x, y): return x if x <= y else y\n\n    N, K = map(int, input().split())\n    Hs = [0] + list(map(int, input().split()))\n\n    dp = [[INF]*(N+1) for _ in range(N+1)]\n    dp[0][0] = 0\n    for i in range(1, N+1):\n        H = Hs[i]\n        diffs = []\n        for iPrev in range(i):\n            diff = max2(0, H-Hs[iPrev])\n            diffs.append(diff)\n        dp[i][0] = 0\n        dp[i][1] = H\n        for j in range(2, min(i, N-K)+1):\n            for iPrev in range(i):\n                dp[i][j] = min2(dp[i][j], dp[iPrev][j-1]+diffs[iPrev])\n\n    ans = min(dpi[N-K] for dpi in dp)\n    print(ans)\n\n\nsolve()\n","INF = 10 ** 15\n\nN, K = map(int, input().split())\nHs = [0] + list(map(int, input().split())) + [0]\n\n\ndp = [[INF] * (K+1) for _ in range(N+2)]\ndp[0][0] = 0\n\nfor n in range(1, N+2):\n    for k in range(K+1):\n        for l in range(1, min(n, k+1)+1):\n            dp[n][k] = min(dp[n][k], dp[n-l][k-l+1] + max(0, Hs[n] - Hs[n-l]))\n\nprint(dp[N+1][K])","import os\nimport sys\nfrom collections import defaultdict\n\nif os.getenv(\"LOCAL\"):\n    sys.stdin = open(\"_in.txt\", \"r\")\n\nsys.setrecursionlimit(10 ** 9)\nINF = float(\"inf\")\nIINF = 10 ** 18\nMOD = 10 ** 9 + 7\n# MOD = 998244353\n\nN, K = list(map(int, sys.stdin.readline().split()))\nH = list(map(int, sys.stdin.readline().split()))\n\nif K == N:\n    print(0)\n    exit()\n\n# H = np.array(H, dtype=float)\n\n# # @debug\n# def count(heights, changes):\n#     H = heights.copy()\n#     H = H[~changes]\n#     ret = 0\n#     cnt = 1\n#     height = H.min()\n#     # \u666e\u901a\u306b\u6570\u3048\u3066\u307f\u308b\n#     while height != np.inf:\n#         H -= height\n#         ret += cnt * height\n#         H[H == 0.0] = np.inf\n#         cnt = np.count_nonzero(np.diff((H != np.inf).astype(int)) == 1)\n#         cnt += H[0] != np.inf\n#         height = H.min()\n#     return int(ret)\n#\n#\n# # \u4e0a\u304b\u3089\u4f55\u500b\u5909\u3048\u308b\u304b\u3001\u4e0b\u304b\u3089\u4f55\u500b\u5909\u3048\u308b\u304b\u3092\u5168\u63a2\u7d22\n# ans = INF\n# orders = H.argsort()\n# for _ in range(K + 1):\n#     # \u5909\u3048\u308b\u3084\u3064\n#     changes = np.zeros(N, dtype=bool)\n#     changes[orders[:K]] = True\n#     ans = min(ans, count(H, changes))\n#     orders = np.roll(orders, shift=1)\n# print(ans)\n\n\n# dp[i][k][h]: i \u307e\u3067\u898b\u305f\u3001k \u500b\u7121\u8996\u3057\u305f\u3001\u4eca\u306e\u9ad8\u3055\u304c h \u3067\u3042\u308b\u3068\u304d\u306e\u5857\u308b\u6570\ndp = [[defaultdict(lambda: INF) for _ in range(K + 2)] for _ in range(N + 1)]\ndp[0][0][0] = 0\nfor i in range(N):\n    for k in range(K + 1):\n        for h, cnt in dp[i][k].items():\n            dp[i + 1][k][H[i]] = min(dp[i + 1][k][H[i]], cnt + max(0, H[i] - h))\n            dp[i + 1][k + 1][h] = min(dp[i + 1][k + 1][h], dp[i][k][h])\nans = min(dp[-1][K].values())\nprint(int(ans))\n","#!\/usr\/bin\/env python3\nfrom collections import defaultdict,deque\nfrom heapq import heappush, heappop\nfrom bisect import bisect_left, bisect_right\nimport sys, random, itertools, math\nsys.setrecursionlimit(10**5)\ninput = sys.stdin.readline\nsqrt = math.sqrt\ndef LI(): return list(map(int, input().split()))\ndef LF(): return list(map(float, input().split()))\ndef LI_(): return list(map(lambda x: int(x)-1, input().split()))\ndef II(): return int(input())\ndef IF(): return float(input())\ndef LS(): return list(map(list, input().split()))\ndef S(): return list(input().rstrip())\ndef IR(n): return [II() for _ in range(n)]\ndef LIR(n): return [LI() for _ in range(n)]\ndef FR(n): return [IF() for _ in range(n)]\ndef LFR(n): return [LI() for _ in range(n)]\ndef LIR_(n): return [LI_() for _ in range(n)]\ndef SR(n): return [S() for _ in range(n)]\ndef LSR(n): return [LS() for _ in range(n)]\nmod = 1000000007\ninf = float('INF')\nfrom copy import deepcopy\n\n#solve\ndef solve():\n    n, k = LI()\n    h = [0] + LI()\n    d = defaultdict(int)\n    d[(0, 0)] = 0\n    for i in range(1, n + 1):\n        nd = defaultdict(lambda: inf)\n        for key, value in d.items():\n            a, b = key\n            if nd[(i, b)] > value + (h[i] - h[a] if h[i] > h[a] else 0):\n                nd[(i, b)] = value + (h[i] - h[a] if h[i] > h[a] else 0)\n            if b + 1 > k:\n                continue\n            if nd[(a, b + 1)] > value:\n                nd[(a, b + 1)] = value\n        d = nd\n    ans = inf\n    for i in range(n + 1):\n        for j in range(k + 1):\n            ans = min(ans, d[(i, j)])\n    print(ans)\n    return\n\n\n#main\nif __name__ == '__main__':\n    solve()\n","\"\"\"\nimport sys\ninput = sys.stdin.readline\n#\"\"\"\n\nN,K = map(int,input().split())\n*H, = map(int,input().split())\n\ndef f(v):\n    L = len(v)\n    if L==0:return 0\n    ret = min(v)\n    v2 = [e-ret for e in v]\n    i = 0\n    for j in range(L):\n        if v2[j]==0:\n            ret += f(v2[i:j])\n            i = j+1\n    else:\n        ret += f(v2[i:])\n    return ret\n\ndef g(v):\n    u = []\n    w = v[::-1]\n    for i,h in enumerate(H):\n        if w and i == w[-1]:\n            w.pop()\n            continue\n        u.append(h)\n    return f(u)\n\nans = g([])\n\ndp = [[[ans,[]] for _ in [0]*(K+1)] for _ in [0]*(N+1)]\nfor i in range(1,N+1):\n    for k in range(1,K+1):\n        tmp = dp[i-1][k-1][1] + [i-1]\n        c = g(tmp)\n        if c<dp[i-1][k][0]:\n            dp[i][k][0] = c\n            dp[i][k][1] = tmp\n        else:\n            dp[i][k][0] = dp[i-1][k][0]\n            dp[i][k][1] = dp[i-1][k][1][:]\n\nprint(dp[-1][-1][0])","N, K = map(int, input().split())\nH = list(map(int, input().split())) + [0]\ndp = [[10**12]*(K+2) for _ in range(N+1)]\ndp[0][0] = 0\nfor i in range(N):\n  for j in range(min(i+1, K) + 1):\n    for k in range(j + 1):\n      dp[i+1][j] = min(dp[i+1][j], dp[i-k][j-k] + max(H[i] - H[i-k-1], 0))\nans = min(dp[-1])\nfor i in range(K):\n  ans = min(ans, dp[N-i][K-i])\nprint(ans)","# -*- coding: utf-8 -*-\n\n\nN,K=map(int, input().split())\nH=list(map(int, input().split()))\nG=[0]\nG.extend(H[:])\n\ndp=[[0]*(N+1) for i in range(N-K+1)]\n\n\ntempa=0\nif K<N-1:\n    for jtemp in range(N):\n        j=jtemp+1\n        dp[1][j]=G[j]#min(dp[1][j-1],G[j])\n    for itemp in range(N-K-1):\n        i=itemp+2\n        for jtemp in range(N-(i-1)):\n            j=jtemp+i\n            temp=int(N*1e9)\n            \n            for ktemp in range(j-(i-1)):\n                k=ktemp+i-1\n                val=G[j]-G[k]\n                if val<0:\n                    val=0\n                if temp>dp[i-1][k]+val:\n                    temp=dp[i-1][k]+val\n            dp[i][j]=temp\n    tempa=dp[N-K][-1]\n    for jtemp in range(N):\n        j=jtemp+1\n        if tempa>dp[N-K][j] and dp[N-K][j]!=0:\n            tempa=dp[N-K][j]\nelif N-K==1:\n    tempa=min(H[:])\nelse:\n    tempa=0\nprint(tempa)","n,K=map(int,input().split())\nl=list(map(int,input().split()))\nINF=float('inf')\ndp=[[[] for j in range(K+1)] for i in range(n+1)]\ndp[0][0]=[[0,0]]\nfor i,j in enumerate(l,1):\n    a1,b1=dp[i-1][0][0]\n    a1+=max(0,j-b1)\n    dp[i][0]=[[a1,j]]\nfor i,j in enumerate(l,1):\n    for k in range(1,min(K+1,i+1)):\n        tl=[]\n        for a1,b1 in dp[i-1][k]:\n            a1+=max(0,j-b1)\n            tl.append([a1,j])\n        dp[i][k]=tl+dp[i-1][k-1]\nprint(sorted(dp[-1][-1])[0][0])","def main():\n    n, K = map(int, input().split())\n    H = list(map(int, input().split()))\n    s = sorted(set(H+[0]))\n    d = {i: j for j, i in enumerate(s)}\n    l = len(s)\n    m = max(s)\n    a = [m-i for i in s]\n    dp = [[10**13]*l for _ in range(K+1)]\n    dp[0][0] = 0\n    for h in H:\n        dh = d[h]\n        dp2 = [[10**13]*l for _ in range(K+1)]\n        t = [[0]*l for _ in range(K+1)]\n        s_plus_a = [[i+j for i, j in zip(a, kk)] for kk in dp]\n        min_s = [[dp[i][j] for j in range(l)] for i in range(K+1)]\n        for i in range(K+1):\n            for j in range(l-2, -1, -1):\n                min_s[i][j] = min(min_s[i][j+1], min_s[i][j])\n            for j in range(1, l):\n                s_plus_a[i][j] = min(s_plus_a[i][j-1], s_plus_a[i][j])\n            for j in range(l):\n                t[i][j] = s_plus_a[i][j]-a[j]\n        for i in range(K):\n            for j in range(l):\n                dp2[i+1][j] = min(min_s[i][j], t[i][j])\n        for i in range(K+1):\n            for j in range(l):\n                dp2[i][dh] = min(dp2[i][dh], dp[i][j]+max(h-s[j], 0))\n        dp = dp2\n    print(min([min(i) for i in dp]))\n\n\nmain()\n","import sys\ninput = sys.stdin.readline\n\nN,K = map(int,input().split())\nH = [0]+list(map(int,input().split()))\n\nDP=[[1<<60]*(K+1) for i in range(N+1)]\n\nfor k in range(K+1):\n    DP[0][k]=0\n\nfor i in range(1,N+1):\n    \n    for k in range(K+1):\n        for j in range(k+1):\n            DP[i][k]=min(DP[i][k],DP[i-j-1][k-j]+max(0,H[i]-H[i-j-1]))\n        \nprint(min(DP[-1]))","n,k = map(int, input().split( ))\nif n==k:\n    print(0)\n    exit()\nh = list(map(int, input().split( )))\n#h = [0]+h#h[0]=0\u8ffd\u52a0\ninf = 10**15\n\ndp = [[inf]*n for _ in range(n+1)] #dp[i][j]\u53f3\u7aef\u304ci\u3001j+1\u672c\u6b8b\u3059\nmn = h[0]\nfor i in range(n):\n    #mn = min(mn,h[i])\n    dp[i][0] = h[i]#min(mn,h[i])\n\nfor i in range(1,n):##\u53f3\u7aef\n    for j in range(i+1):#\u672c\u6570\n        for t in range(j-1,i):#\u53f3\u304b\u30892\u756a\u76ee,\n            dp[i][j] = min(dp[i][j], dp[t][j-1] + max(h[i]-h[t], 0))\n\nans = inf \n\nfor i in range(n):\n    ans = min(ans, min(dp[i][n-k-1:]))###\nprint(ans)\n","import sys,bisect\ninput = sys.stdin.readline\n\nn,k = map(int,input().split())\nh = list(map(int,input().split()))\nhs = [0]+sorted(h)\n\nif k==0:\n    res = h[0]\n    for i in range(1,n):\n        res += max(0,h[i]-h[i-1])\n    print(res)\n    exit()\n\n#dp[i][j][l]: Hi\u307e\u3067\u3067j\u56de\u4f7f\u3044\u6700\u5f8c\u304cl\u756a\u76ee\u306e\u5c0f\u3055\u3055\u306e\u6642\u306e\u6700\u5c0f\u5024\ndp = [[[10**12]*(n+1) for i in range(k+1)] for j in range(n)]\n\nkk = bisect.bisect_left(hs,h[0])\ndp[0][0][kk] = h[0]\ndp[0][1][0] = 0\n\nfor i in range(1,n):\n    kk = bisect.bisect_left(hs,h[i])\n    #Hi used in this turn\n    for j in range(k+1):\n        tmp = 10**12\n        for l in range(n):\n            tmp = min(tmp,dp[i-1][j][l]+max(0,hs[kk]-hs[l]))\n        dp[i][j][kk] = tmp\n\n    #not used\n    for j in range(1,k+1):\n        for l in range(n):\n            dp[i][j][l] = min(dp[i][j][l],dp[i-1][j-1][l])\n\nres = 10**12\nfor j in range(k+1):\n    for l in range(n):\n        res = min(res,dp[-1][j][l])\nprint(res)\n        \n","# -*- coding: utf-8 -*-\nimport sys\nsys.setrecursionlimit(10**9)\nINF=10**18\nMOD=10**9+7\ninput=lambda: sys.stdin.readline().rstrip()\nYesNo=lambda b: bool([print('Yes')] if b else print('No'))\nYESNO=lambda b: bool([print('YES')] if b else print('NO'))\nint1=lambda x:int(x)-1\n\ndef main():\n    N,K=map(int,input().split())\n    N+=2\n    H=[0]+list(map(int,input().split()))+[0]\n    edge=[[] for _ in range(N*(K+1))]\n    for i in range(N):\n        for j in range(K+1):\n            for k in range(K+1-j):\n                if i+k+1<N and N-1-i>=K-(k+j):\n                    edge[i*(K+1)+j].append((max(H[i+k+1]-H[i],0),(i+k+1)*(K+1)+j+k))\n    from heapq import heappop,heappush\n    def dijkstra(start,n,edges):\n        d=[INF]*n\n        used=[False]*n\n        d[start]=0\n        used[start]=True\n        edgelist=[]\n        for edge in edges[start]:\n            heappush(edgelist,edge)\n        while edgelist:\n            minedge=heappop(edgelist)\n            if used[minedge[1]]:\n                continue\n            v=minedge[1]\n            d[v]=minedge[0]\n            used[v]=True\n            for edge in edges[v]:\n                if not used[edge[1]]:\n                    heappush(edgelist,(edge[0]+d[v],edge[1]))\n        return d\n    d=dijkstra(0,N*(K+1),edge)\n    print(min(d[(N-1)*(K+1):]))\n\nif __name__ == '__main__':\n    main()\n","def main():\n    N, K = (int(i) for i in input().split())\n    H = [0] + [int(i) for i in input().split()]\n    # 1-indexed\n    if N == K:\n        return print(0)\n    elif K == 0:\n        ans = 0\n        for i in range(N):\n            ans += max(H[i+1] - H[i], 0)\n        return print(ans)\n    dp = [[10**12]*(N-K+1) for _ in range(N+1)]\n\n    for x in range(N+1):\n        dp[x][1] = H[x]\n\n    for y in range(2, N-K+1):\n        for x in range(N+1):\n            for i in range(1, x):\n                dp[x][y] = min(dp[x][y], dp[i][y-1] + max(0, H[x] - H[i]))\n\n    ans = dp[0][N-K]\n    for i in range(1, N+1):\n        ans = min(ans, dp[i][N-K])\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n","\nimport sys\nsys.setrecursionlimit(10**6)\nreadline = sys.stdin.readline \n\n\n\n\nn,k = [int(i) for i in readline().split()]\na = [0]+[int(i) for i in readline().split()] + [0]\n\nn += 2\n\nINF  = 10**18\n\ndiff = [0]\nfor i in range(n-1):\n    diff.append(max(a[i+1]-a[i],0))\n\nfrom itertools import accumulate\nacc = list(accumulate(diff))\n\nans = {}\n\ndef calc(p,q,k):\n    if (p,q,k) in ans: return ans[(p,q,k)]\n    if k == 0:\n        res = acc[q] - acc[p]\n    elif k == q-p-1:\n        res = max(0,a[q] - a[p])\n    else:\n        res = INF\n        for i in range(p+1,q):\n            for l in range(min(k+1,i-p)):\n                if k-l > q-p-1: break\n                #if p ==1 and q == 4 and k == 1: print(i,l)\n                res = min(res, calc(p,i,l)+calc(i,q,k-l))\n    #print(p,q,k,res)    \n    ans[(p,q,k)] = res    \n    return res\n\n#print(acc)\n#print(a,n)\nprint(calc(0,n-1,k))\n#print(calc(0,n-1,k))\n\n\n\n        \n\n\n\n","n, k = map(int, input().split())\nh = list(map(int, input().split()))\nd = [[i, 0] for i in range(n)]\n\ndef cal_dif(h, idx):\n  if idx == 0:\n    return [i, max(h[idx]-h[idx+1], 0)]\n  elif idx == len(h)-1:\n    return [i, max(h[idx]-h[idx-1], 0)]\n  else:\n    dif = max(h[idx]-h[idx-1], 0) \\\n        + max(h[idx+1]-h[idx], 0) \\\n        - max(h[idx+1]-h[idx-1], 0)\n    return [i, dif]\n# cal max possible difference\nfor i in range(n):\n  d[i] = cal_dif(h, i)\nd2 = sorted(d, key = lambda x:x[1])\n#cal optimal\nfor i in range(k):\n  idx = d2[n-1][0]\n  d[idx][1] = 0\n  if idx == 0:\n    h[idx] = h[idx+1]\n    d[idx+1] = cal_dif(h, idx+1)\n  elif idx == n-1:\n    h[idx] = h[idx-1]\n    d[idx-1] = cal_dif(h, idx-1)\n  else:\n    h[idx] = int((h[idx-1]+h[idx+1])\/2)\n    d[idx-1] = cal_dif(h, idx-1)\n    d[idx+1] = cal_dif(h, idx+1)\n  d2 = sorted(d, key = lambda x:x[1])\n# cal optimal num\ns = h[0]\nfor i in range(1, n):\n  s += max(h[i]-h[i-1], 0)\nprint(s)\n  \n    ","n, k=map(int, input().split())\nhlist = list(map(int, input().split()))\ncost=[]\ndead=[0]*n\nif n!=1:\n    for i in range(n):\n        if i==0:\n            if hlist[i]>=hlist[i+1]:\n                cost.append(hlist[i]-hlist[i+1])\n            else:\n                cost.append(0)\n        elif i==n-1:\n            if hlist[i]>=hlist[i-1]:\n                cost.append(hlist[i]-hlist[i-1])\n            else:\n                cost.append(0)\n        else:\n            if hlist[i]>=hlist[i-1] and hlist[i]>=hlist[i+1]:\n                cost.append(hlist[i]-max(hlist[i-1], hlist[i+1]))\n            elif hlist[i]<=hlist[i-1] and hlist[i]<=hlist[i+1]:\n                cost.append(min(hlist[i-1], hlist[i+1]) - hlist[i])\n            else:\n                cost.append(0)\n    \n    #print(cost)\n    rest=k\n    while rest>0:\n        bango=cost.index(max(cost))\n        hlist=hlist[:bango]+hlist[bango+1:]\n        cost=cost[:bango]+cost[bango+1:]\n        if len(hlist)>=2:\n            for i in [bango-1, bango]:\n                if i==0:\n                    if hlist[i]>=hlist[i+1]:\n                        cost[i]=hlist[i]-hlist[i+1]\n                    else:\n                        cost[i]=0\n                elif i==len(hlist)-1:\n                    if hlist[i]>=hlist[i-1]:\n                        cost[i]=hlist[i]-hlist[i-1]\n                    else:\n                        cost[i]=0\n                else:\n                    if hlist[i]>=hlist[i-1] and hlist[i]>=hlist[i+1]:\n                        cost[i]=hlist[i]-max(hlist[i-1], hlist[i+1])\n                    elif hlist[i]<=hlist[i-1] and hlist[i]<=hlist[i+1]:\n                        cost[i]=min(hlist[i-1], hlist[i+1]) - hlist[i]\n                    else:\n                        cost[i]=0\n            rest-=1\n        else:\n            if rest>1:\n                hlist=[0]\n                break\n            else:\n                break\n        \n        #print(cost, hlist)\n    \n    nul=0\n    mae=0\n    for i in range(len(hlist)):\n        if hlist[i]>=mae:\n            nul+=hlist[i]-mae\n        mae=hlist[i]\n    print(nul)\nelse:\n    if k>=1:\n        print(0)\n    else:\n        print(hlist[0])","import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, k = map(int, input().split())\n    h = [0] + list(map(int, input().split()))\n    \n    dp = [[[0]*2 for _ in range(k+1)] for _ in range(n+1)]\n    \n    for i in range(n):\n        dp[i+1][0][0] += dp[i][0][0]\n        if h[i] < h[i+1]:\n            dp[i+1][0][0] += h[i+1] - h[i]\n        dp[i+1][0][1] = i+1\n    \n    for i in range(1, k+1):\n        for j in range(i, n):\n            sub, bef = dp[j][i]\n            if h[bef] < h[j+1]:\n                sub += h[j+1] - h[bef]\n            \n            if sub < dp[j][i-1][0]:\n                dp[j+1][i][0] = sub\n                dp[j+1][i][1] = j+1\n            elif sub > dp[j][i-1][0]:\n                dp[j+1][i][0] = dp[j][i-1][0]\n                dp[j+1][i][1] = dp[j][i-1][1]\n            else:\n                dp[j+1][i][0] = sub\n                if h[j+1] < h[dp[j][i-1][1]]:\n                    dp[j+1][i][1] = dp[j][i-1][1]\n                else:\n                    dp[j+1][i][1] = j+1\n\n    print(dp[n][k][0])\n    \n    \n    \n    \nif __name__ == \"__main__\":\n    main()\n","# dp[i][j] := i \u5217\u76ee\u307e\u3067\u898b\u3066\u3001i \u5217\u76ee\u3092\u4f7f\u3046\u3068\u3057\u3066\u3001\n#             j \u5217\u7121\u8996\u3057\u305f\u5834\u5408\u306e min\n\nN, K = map(int, input().split())\nH = [0] + list(map(int, input().split()))\ninf = 10**18\ndp = [[inf]*(K+1) for _ in range(N+1)]\ndp[0][0] = 0\nfor i, h in enumerate(H[1:], 1):\n    for j in range(K+1):\n        for k in range(K+1):  # k \u5217\u7121\u8996\u3059\u308b\n            if i-k-1 < 0 or j-k < 0:\n                continue\n            h_p = H[i-k-1]\n            #print(h_p)\n            dp[i][j] = min(dp[i][j], dp[i-k-1][j-k] + max(0, h - h_p))\n        #exit()\n\n#for d in dp:\n#    print(d)\nprint(min(dp[-1]))\n","from array import array\n\ndef main():\n    n,K = map(int, input().split())\n    h = list(map(int, input().split()))\n    inf = 1<<60\n    DP = [array(\"q\", [inf]*(K+1)) for i in range(K+1)]\n    DP[0][0] = 0\n    for i in range(n):\n        hi = h[i]\n        nxt = [array(\"q\", [inf]*(K+1)) for i in range(K+1)]\n        for j in range(min(i+1, K+1)):\n            for k in range(j+1):\n                l = i-k-1\n                if l<0:\n                    left = 0\n                else:\n                    left = h[l]\n                a = hi-left if left<hi else 0\n                nxt[j][0] = min(nxt[j][0], DP[j][k]+a)\n                if j == K:\n                    continue\n                nxt[j+1][k+1] = min(nxt[j+1][k+1], DP[j][k])\n        DP = nxt\n\n    ans = float(\"inf\")\n    for i in DP:\n        ans = min(ans, min(i))\n    print(ans)\n\nmain()","import sys\nsys.setrecursionlimit(2147483647)\nINF=float(\"inf\")\nMOD=10**9+7\ninput=lambda :sys.stdin.readline().rstrip()\ndef resolve():\n    n,k=map(int,input().split())\n    H=[0]+list(map(int,input().split()))\n\n    dp=[[INF]*(n-k+1) for _ in range(n+1)]\n    dp[0][0]=0\n\n    for x in range(1,n+1):\n        for y in range(1,n-k+1):\n            dp[x][y]=min(dp[x0][y-1]+max(0,H[x]-H[x0]) for x0 in range(x))\n\n    print(min(*(dp[x][n-k] for x in range(n+1))))\nresolve()","n, k = map(int, input().split())\nH = [0] + list(map(int, input().split()))\n\nm = n - k\nDP = [[float(\"inf\")] * (m + 1) for _ in range(n + 1)]\n\nDP[0][0] = 0\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if i < j:\n            continue\n        DP[i][j] = min(DP[k][j - 1] + max(0, H[i] - H[k]) for k in range(i))\n\nprint(min(DP[i][m] for i in range(n + 1)))\n","# pylint: disable=invalid-name\n# pylint: disable=missing-docstring\n\n\ndef main():\n    N, K = map(int, input().split())\n    H = [0] + [int(x) for x in input().split()]\n    DP = [[-1 for _ in range(K + 1)] for _ in range(N + 1)]\n    DP[0] = [0 for _ in range(K + 1)]\n    for i in range(1, N + 1):\n        for j in range(K + 1):\n            for k in range(max(i - j - 1, 0), i):\n                previous = DP[k][j - (i - k - 1)]\n                if previous == -1:\n                    continue\n\n                if DP[i][j] == -1 or previous + max(H[i] - H[k], 0) < DP[i][j]:\n                    DP[i][j] = previous + max(H[i] - H[k], 0)\n\n                if j > 0 and DP[i][j - 1] != -1 and DP[i][j - 1] < DP[i][j]:\n                    DP[i][j] = DP[i][j - 1]\n                # print('i {} j {} k {} j - (i - k - 1) {} DP_targ {} DP {}'.\n                #       format(i, j, k, j - (i - k - 1),\n                #              previous + max(H[i] - H[k], 0), DP[i][j]))\n    ans = -1\n    for i in range(N + 1):\n        if K < (N - i):\n            continue\n        if ans == -1 or DP[i][min(K - (N - i), K)] < ans:\n            ans = DP[i][min(K - (N - i), K)]\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n","n, k = map(int,input().split())\nh = list(map(int, input().split()))\n\nfor _ in range(k):\n    h.remove(max(h))\ncnt = 0\nwhile sum(h) > 0:\n    startVal = -1\n    for idx in range(len(h)):\n        if h[idx]>0:\n            if startVal < 0:\n                startVal = idx\n        else:\n            if startVal >= 0:\n                drawrank = min(h[startVal:idx])\n                for didx in range(startVal, idx):\n                    h[didx] -= drawrank\n                cnt += drawrank\n                startVal = -1\n    \n    if startVal >= 0:\n        drawrank = min(h[startVal:idx+1])\n        for didx in range(startVal, idx+1):\n            h[didx] -= drawrank\n        cnt += drawrank\nprint(cnt)\n","n,k = map(int,input().split())\nh = list(map(int,input().split()))\n\nif(n==k):\n    print(0)\n    exit()\n\ninf = 10**9 * (n+1)\ndp = [[inf] * (n-k+1) for _ in range(n+1)]\ndp[0][0] = 0\n\nfor i in range(1,n+1):\n    for j in range(1, n-k+1):\n        if(j==1):\n            dp[i][j] = h[i-1]\n        else:\n            tmp = inf\n            for l in range(1,i):\n                tmp = min(tmp, dp[l][j-1] + max(0, h[i-1]- h[l-1])  )\n            dp[i][j] = tmp\n\nprint(dp[-1][-1])","\nmax2 = lambda x,y: x if x > y else y\nmin2 = lambda x,y: x if x < y else y\n\n\ndef solve(K,H):\n    # dp[i][k] = H[i]\u306f\u6d88\u3055\u305aH[:i]\u307e\u3067\u3067k\u5217\u6d88\u3057\u305f\u3068\u4eee\u5b9a\u3057\u305f\u6642\u306e(H[:i+1]\u306e)\u30b3\u30b9\u30c8\n    H = [0]+H+[0]\n    N = len(H)\n    dp = [[float('inf')]*(i+1) for i in range(N)]\n    dp[0] = [0]\n\n\n    for r,hr in enumerate(H):\n        for l,hl in enumerate(H[:r]):\n            for k in range(l+1):\n                dp[r][k+(r-l-1)] = min2(dp[r][k+(r-l-1)], dp[l][k]+max2(0,hr-hl))\n    return dp[-1][K]\n\nif __name__ == '__main__':\n    N,K = map(int,input().split())\n    H = list(map(int,input().split()))\n\n    print(solve(K,H))","N,T=map(int,input().split())\nx=[]\nfor i in range(N):\n    Ai,Bi=map(int,input().split())\n    x.append((Ai,Bi))\n\nx.sort(key=lambda x:(x[1],x[0]))\n\ndp=[[0 for j in range(T)] for i in range(N)] # i\u756a\u76ee\u307e\u3067\u306e\u6599\u7406\uff08\u6700\u5f8c\u306e\u6599\u7406\u3092\u542b\u307e\u306a\u3044\uff09\u3067j\u5206\u5f8c\uff08<=T-1\u5206\u5f8c\uff09\u307e\u3067\u306b\u5f97\u3089\u308c\u308b\u6e80\u8db3\u5ea6\u306e\u6700\u5927\u5024\uff08\u5358\u7d14dp\uff09\n\n# \u5358\u7d14dp\nfor i in range(N-1):\n    for j in range(T):\n        if x[i][0]>j:\n            dp[i+1][j]=dp[i][j]\n        else:\n            dp[i+1][j]=max(dp[i][j],dp[i][j-x[i][0]]+x[i][1])\n\nprint(dp[N-1][T-1]+x[-1][1])","from functools import lru_cache\n\nn, k = map(int, input().split())\nh = [0] + list(map(int, input().split())) + [0]\nINF = 10 ** 18\n\n\n@lru_cache(maxsize=None)\ndef solve(i, nokori):\n    if i == 0:\n       return 0\n    res = INF\n    for j in range(nokori + 1):\n        if i - 1 - j < 0:\n            break\n        diff = max(h[i] - h[i - 1 - j], 0)\n        res = min(solve(i - 1 - j, nokori - j) + diff, res)\n    return res\n\n\nprint(solve(n + 1, k))","from random import random\n\nprint(rand())","#\n# \u3000\u3000  \u22c0_\u22c0\u3000 \n#\u3000\u3000  (\uff65\u03c9\uff65)  \n# .\uff0f \uff35 \u223d \uff35\uff3c\n#  \u2502\uff0a\u3000\u5408\u3000\uff0a\u2502\n#  \u2502\uff0a\u3000\u683c\u3000\uff0a\u2502 \n#  \u2502\uff0a\u3000\u7948\u3000\uff0a\u2502 \n#  \u2502\uff0a\u3000\u9858\u3000\uff0a\u2502 \n#  \u2502\uff0a\u3000\u3000\u3000\uff0a\u2502 \n#      \uffe3\n#\nimport sys\nsys.setrecursionlimit(10**6)\ninput=sys.stdin.readline\nfrom math import floor,ceil,sqrt,factorial,log #log2\u306a\u3044\uff59\uff50\nfrom heapq import heappop, heappush, heappushpop\nfrom collections import Counter,defaultdict,deque\nfrom itertools import accumulate,permutations,combinations,product,combinations_with_replacement\nfrom bisect import bisect_left,bisect_right\nfrom copy import deepcopy\ninf=float('inf')\nmod = 10**9+7\ndef pprint(*A): \n    for a in A:     print(*a,sep='\\n')\ndef INT_(n): return int(n)-1\ndef MI(): return map(int,input().split())\ndef MF(): return map(float, input().split())\ndef MI_(): return map(INT_,input().split())\ndef LI(): return list(MI())\ndef LI_(): return [int(x) - 1 for x in input().split()]\ndef LF(): return list(MF())\ndef LIN(n:int): return [I() for _ in range(n)]\ndef LLIN(n: int): return [LI() for _ in range(n)]\ndef LLIN_(n: int): return [LI_() for _ in range(n)]\ndef LLI(): return [list(map(int, l.split() )) for l in input()]\ndef I(): return int(input())\ndef F(): return float(input())\ndef ST(): return input().replace('\\n', '')\ndef main():\n    N,K = MI()\n    H=LI()\n    \n    dp = [[0]+[inf]*(N) for _ in range(N)] #dp[right][size]: \u6700\u3082\u53f3\u306e\u9805right, \u3044\u3058\u3063\u3066\u306a\u3044\u3084\u3064\u306e\u6570size\n    for i in range(N):\n        dp[i][1] = H[i]\n    dp[0][1]=H[0]\n    for right in range(N):\n        for size in range(2,N+1):\n\n            for i in range(right):\n                dp[right][size] = min(dp[right][size], dp[i][size-1]+max(0, H[right]-H[i]))\n    ans = dp[N-1][N-K]\n    # print(N-K)\n    # print(*dp,sep=\"\\n\")\n    print(ans)\nif __name__ == '__main__':\n    main()","N,K = map(int,input().split())\n\nH = list(map(int,input().split()))\n\nHSorted = sorted(H)\n\nHIndexToHeight = []\nHHeightToIndex = {}\n\nfor i in range(N):\n    if i != 0 and HSorted[i] == HSorted[i-1]:\n        continue\n    HIndexToHeight.append(HSorted[i])\n    HHeightToIndex[HSorted[i]] = len(HIndexToHeight) - 1\n\nINF = 10 ** 12\n\nheightCount = len(HIndexToHeight)\n\nDP = []\nfor i in range(N):\n    DP.append([])\n    for j in range(K + 1):\n        DP[i].append([])\n        for k in range(heightCount):\n            DP[i][j].append(INF)\n\nfor k in range(heightCount):\n    if k == HHeightToIndex[H[0]]:\n        DP[0][0][k] = H[0]\n    else:\n        DP[0][1][k] = HIndexToHeight[k]\n\nfor i in range(1,N):\n    currentHeight = HHeightToIndex[H[i]]\n    for j in range(K + 1):\n        for k in range(heightCount):\n            if currentHeight > k:\n                if j > 0:\n                    DP[i][j][k] = min(DP[i-1][j-1][k], DP[i][j][k])\n                DP[i][j][currentHeight] = min(DP[i-1][j][k] + HIndexToHeight[currentHeight] - HIndexToHeight[k], DP[i][j][currentHeight])\n            elif currentHeight == k:\n                DP[i][j][currentHeight] = min(DP[i-1][j][k], DP[i][j][currentHeight])\n            else:\n                if j > 0:\n                    DP[i][j][k] = min(DP[i-1][j-1][k], DP[i][j][k])\n                DP[i][j][currentHeight] = min(DP[i-1][j][k], DP[i][j][currentHeight])\nans = INF\n\nfor j in range(K + 1):\n    for k in range(heightCount):\n        if ans > DP[N-1][j][k]:\n            ans = DP[N-1][j][k]\n\nprint(ans)\n\n\n","import sys\ninput=sys.stdin.readline\n\ndef main():\n    n,k=map(int,input().split())\n    H=[0]+list(map(int,input().split()))\n    DP=[[10**12]*(n-k+1) for _ in range(n+1)]\n    DP[0][0]=0\n    for x in range(1,n+1):\n        for y in range(1,n-k+1):\n            for i in range(x):\n                DP[x][y]=min(DP[x][y],DP[i][y-1]+max(0,H[x]-H[i]))\n    print(min(DP[i][-1] for i in range(n+1)))\n\nif __name__=='__main__':\n    main()","ii = lambda : int(input())\nmi = lambda : map(int,input().split())\nli = lambda : list(map(int,input().split()))\n\nn,K = mi()\nhlis = li()\n\ninf = 10 **13 + 7\ndp = [[inf]*n for _ in range(n)]\nfor i in range(n):\n    dp[0][i] = hlis[i]\n\nfor i in range(1,n):\n    for k in range(i,n):\n        #dp[i][k] = min(dp[i][k],dp[i-1][l] + abs)\n        for l in range(k):\n            dp[i][k] = min(dp[i][k],dp[i-1][l] + max(0,hlis[k] - hlis[l]))\n\ntukau = n - K\nans = inf\nif K == n:\n    print(0)\n    exit()\nfor i in range(K,n):\n    ans = min(ans,dp[tukau-1][i])\nprint(ans)\n\n","def examA():\n    N = DI()\/dec(7)\n    ans = N\n    print(N)\n    return\n\ndef examB():\n    ans = 0\n    print(ans)\n    return\n\ndef examC():\n    ans = 0\n    print(ans)\n    return\n\ndef examD():\n    ans = 0\n    print(ans)\n    return\n\ndef examE():\n    ans = 0\n    print(ans)\n    return\n\ndef examF():\n    N, K = LI()\n    H = LI()\n    H.insert(0,0)\n    dp = [[[inf]*(K+1)for _ in range(N+1)] for _ in range(N+1)]\n    dp[0][0][0] = 0\n    for i in range(N):\n        for j in range(i+1):\n            for k in range(K+1):\n                dp[i+1][i+1][k] = min(dp[i+1][i+1][k],dp[i][j][k]+max(0,H[i+1]-H[j]))\n                if k<K:\n                    dp[i+1][j][k+1] = min(dp[i+1][j][k+1],dp[i][j][k])\n\n    ans = inf\n    for j in range(N+1):\n        ans = min(ans,dp[-1][j][-1])\n    #for v in dp:\n    #    print(v)\n    print(ans)\n    return\n\nfrom decimal import getcontext,Decimal as dec\nimport sys,bisect,itertools,heapq,math,random\nfrom copy import deepcopy\nfrom heapq import heappop,heappush,heapify\nfrom collections import Counter,defaultdict,deque\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\ndef I(): return int(input())\ndef LI(): return list(map(int,sys.stdin.readline().split()))\ndef DI(): return dec(input())\ndef LDI(): return list(map(dec,sys.stdin.readline().split()))\ndef LSI(): return list(map(str,sys.stdin.readline().split()))\ndef LS(): return sys.stdin.readline().split()\ndef SI(): return sys.stdin.readline().strip()\nglobal mod,mod2,inf,alphabet,_ep\nmod = 10**9 + 7\nmod2 = 998244353\ninf = 10**18\n_ep = dec(\"0.000000000001\")\nalphabet = [chr(ord('a') + i) for i in range(26)]\nalphabet_convert = {chr(ord('a') + i): i for i in range(26)}\n\ngetcontext().prec = 28\n\nsys.setrecursionlimit(10**7)\n\nif __name__ == '__main__':\n    examF()\n\n\"\"\"\n8 7\n7 3 9 1 5 2 8 3\n\"\"\"","def solve(n, k, h_list):\n    # dp table\n    large = sum(h_list) + 1\n    dp = [[large] * n for _ in range(n + 1)]\n    dp[1][0] = h_list[0]\n    # update\n    for i in range(1, n):\n        for s in range(2, n + 1):\n            dp[s][i] = min([dp[s - 1][j] + max(0, h_list[i] - h_list[j]) for j in range(i)])\n        dp[1][i] = h_list[i]\n    #print(dp)\n    return min(dp[n - k])\n\n\ndef main():\n    n, k = map(int, input().split())\n    h_list = list(map(int, input().split()))\n    res = solve(n, k, h_list)\n    print(res)\n\n\ndef test():\n    assert solve(4, 1, [2, 3, 4, 1]) == 3\n    assert solve(6, 2, [8, 6, 9, 1, 2, 1]) == 7\n    assert solve(10, 0, [1, 1000000000, 1, 1000000000, 1, 1000000000, 1, 1000000000, 1, 1000000000]) == 4999999996\n\n\nif __name__ == \"__main__\":\n    # test()\n    main()\n","n, k = map(int, input().split())\nl_h = list(map(int, input().split()))\n\ndel_num = []\nfor i in range(n):\n  if i == 0:\n    del_num.append(max(0, l_h[i]-l_h[i+1]))\n  elif i == n-1:\n    del_num.append(max(0, l_h[i]-l_h[i-1]))\n  else:\n    del_num.append(max(0, l_h[i]-l_h[i-1], l_h[i]-l_h[i+1]))\nfor i in range(k):\n  idx = del_num.index(max(del_num))\n  l_h[idx] = l_h[idx] - del_num[idx]\n  del_num[idx] = 0\n\nd = []\na = []\nx = 0\ny = 0\nwhile y < len(l_h)-1:\n  if l_h[y] == l_h[y+1]:\n    l_h.pop(y)\n    y -= 1\n  y += 1\nfor i in range(1,len(l_h) - 1):\n  if l_h[i-1] > l_h[i] < l_h[i+1]:\n    a.append(l_h[i])\n    x = 1\nfor i in range(1,len(l_h) - 1):\n  if l_h[i-1] < l_h[i] > l_h[i+1]:\n    d.append(l_h[i])\n    x = 1\nif len(l_h) >= 2:\n  if l_h[0] >= l_h[1]:\n    d.append(l_h[0])\n  if l_h[-1] >= l_h[-2]:\n    d.append(l_h[-1])\n  print(sum(d) - sum(a))\nelse:\n  print(l_h[0])","n, k = map(int, input().split())\nh = list(map(int, input().split()))\n\n#dp[a][b][c]: a\u307e\u3067\u898b\u3066b\u500b\u6d88\u3057\u3066\u3044\u3066\u6d88\u3057\u3066\u306a\u3044\u53f3\u7aef\u304cc\u306e\u3068\u304d\u306e\u6700\u5c0f\u5024(\u305c\u3093\u30761-indexed)\ndp = [[[10**12 for _ in range(n+1)] for _ in range(k+1)] for _ in range(n+1)]\ndp[0][0][0] = 0\n\nfor a in range(n):\n\tfor b in range(k+1):\n\n\t\tfor c in range(a+1):\n\t\t\t#h[a]\u3092\u6d88\u3059\u5834\u5408\n\t\t\tif b < k:\n\t\t\t\tdp[a+1][b+1][c] = min(dp[a+1][b+1][c], dp[a][b][c])\n\n\t\t\t#h[a]\u3092\u6d88\u3055\u306a\u3044\u5834\u5408\n\t\t\tdp[a+1][b][a+1] = min(dp[a+1][b][a+1], dp[a][b][c] + max(0, h[a] - h[c-1]))\n\nprint(min(dp[n][k])+1)","import sys\nsys.setrecursionlimit(10**7)\nINTMAX = 9223372036854775807\nINTMIN = -9223372036854775808\nDVSR = 1000000007\ndef POW(x, y): return pow(x, y, DVSR)\ndef INV(x, m=DVSR): return pow(x, m - 2, m)\ndef DIV(x, y, m=DVSR): return (x * INV(y, m)) % m\ndef LI(): return [int(x) for x in input().split()]\ndef LF(): return [float(x) for x in input().split()]\ndef LS(): return input().split()\ndef II(): return int(input())\ndef FLIST(n):\n    res = [1]\n    for i in range(1, n+1): res.append(res[i-1]*i%DVSR)\n    return res\n\n\nN,K=LI()\nMP=[0] + LI()\nLG = 10**15\nDP=[[LG]*(N+1) for i in range(N-K+1)]\nDP[0][0] = 0\n\nfor i in range(1, N+1):\n    DP[1][i] = MP[i]\n\nfor i in range(1, N-K):\n    for j in range(1, N+1):\n        for k in range(1, j):\n            DP[i+1][j] = min(DP[i+1][j], DP[i][k] + max(0, MP[j] - MP[k]))\n\nres = 10**15\nfor i in range(1, N+1):\n    res = min(res, DP[N-K][i])\nprint(res)\n","def main():\n    n, k = map(int, input().split())\n    tmp = list(map(int, input().split()))\n    h = [0]\n    for v in tmp:\n        h.append(v)\n    dp = [[float(\"inf\")]*(n-k+1) for i in range(n+1)]\n    dp[0][0] = 0\n    for i in range(1, n+1):\n        for j in range(1, n-k+1):\n            tmp = float(\"inf\")\n            for l in range(i):\n                p = max(0, h[i] - h[l])\n                if tmp > dp[l][j-1] + p:\n                    tmp = dp[l][j-1] + p\n            dp[i][j] = tmp\n    ans = float(\"inf\")\n    for i in range(n+1):\n        if ans > dp[i][n-k]:\n            ans = dp[i][n-k]\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()","N, K = [int(s) for s in input().split(' ')]\nH = [int(s) for s in input().split(' ')]\n\n# state: up to nth column, how many skipped, current height(dict)\n# value: how many times it takes to cover\ndp = [[] for _ in range(N)]\n\nfor n, h in enumerate(H):\n  if n == 0:\n    before = [{0: 0}] + [{} for _ in range(K)]\n  else:\n    before = dp[n-1]\n  # skip (k -> k+1)\n  dp[n] = [{}] + before[:-1]\n  current = dp[n]\n  # not skip (update h and count)\n  for k in range(K+1):\n    # before[k] = current[k+1]\n    for h_before, count in before[k].items():\n      candidate = current[k].get(h, float(\"inf\"))\n      if h_before >= h:\n        current[k][h] = min(candidate, count)\n      else:\n        current[k][h] = min(candidate, count + h - h_before)\n      #print(n, k, h, h_before, count, candidate, current[k][h])\n  #print(current)\n\nprint(min([v for d in dp[-1] for v in d.values()]))\n\n\n        \n  \n  ","N,K = map(int,input().split())\nH = [0] + list(map(int,input().split()))\n\nINF = float('inf')\ndp = [[INF]*(N-K+1) for _ in range(N+1)]\ndp[0][0] = 0\n\nfor i,h in enumerate(H):\n    if i==0: continue\n    for j in range(N-K,0,-1):\n        for k in range(i):\n            c = max(0, h - H[k])\n            dp[i][j] = min(dp[i][j], dp[k][j-1] + c)\nprint(min(row[-1] for row in dp))","n,k = map(int,input().split())\nlis = list(map(int,input().split()))\nlis.insert(0,0)\nlis.append(0)\nn += 2\nnum = 0\nfor nu in lis:\n    if nu != 0:\n        num += 1\nif num <= k:\n    print(0)\n    exit()\ncnt = [0 for i in range(n)]\nfor _ in range(k):\n    li = [0 for i in range(n)]\n    for i in range(n):\n        if i != n-1:\n            li[i] = max(li[i],lis[i]-lis[i+1])\n        if i != 0:\n            li[i] = max(li[i],lis[i]-lis[i-1])\n    numm = li.index(max(li))\n    cnt[numm] = 1\n    if numm == 0:\n        lis[0] = lis[1]\n    elif numm == n-1:\n        lis[n-1] = lis[n-2]\n    else:\n        lis[numm] = min(lis[numm-1],lis[numm+1])\nnn = 10 ** 10\nfor i in range(n):\n    if cnt[i] == 1:\n        nn = min(nn,cnt[i])\nfor i in range(n):\n    if cnt[i] == 1:\n        lis[i] = nn    \nans = 0\nnum = 0\nfor i in range(n):\n    if lis[i] >= num:\n        num = lis[i]\n    else:\n        ans += num-lis[i]\n        num = lis[i]\nans += num\nprint(ans)","n, k = map(int, input().split())\nh = list(map(int, input().split()))\n\nif k == n:\n    print(0)\n    exit()\n\ndp = [[0 for _ in range(n)] for _ in range(n-k)]\n\ndp[0] = [] + h\n\nfor x in range(1, n-k):\n    for y in range(n):\n        temp = float('inf')\n        for i in range(y):\n            temp = min(temp, dp[x-1][i] + max(0, h[y] - h[i]))\n        dp[x][y] = temp\n\n#for x in dp: print(x)\n\nprint(min(dp[n-k-1]))","def main():\n    import sys\n    input = sys.stdin.readline\n\n    N, K = map(int, input().split())\n    H = list(map(int, input().split()))\n    H.append(0)\n    H.insert(0, 0)\n    N += 2\n\n    inf = 10**12\n    dp = [[inf] * (K+1) for _ in range(N)]\n    dp[0][0] = 0\n    for i in range(N):\n        for k in range(K+1):\n            for j in range(K-k+1):\n                if i + j + 1 < N:\n                    dp[i+j+1][k+j] = min(dp[i+j+1][k+j], dp[i][k] + max(0, H[i+j+1] - H[i]))\n    print(min(dp[-1]))\n\n\nif __name__ == '__main__':\n    main()\n","N, K = list(map(int, input().split()))\nH = list(map(int, input().split()))\n\nN += 1\nH = [0] + H\n\nDP = [[0] * N for _ in range(N)]\n\nfor i in range(1, N):\n  DP[i][i - 1] = max(0, H[i] - H[0])\n  for j in range(i - 1):\n    DP[i][j] = DP[i - 1][j] + max(0, H[i] - H[i - 1])\n    for k in range(j + 1):\n      DP[i][j] = min(DP[i][j], DP[i - k - 1][j - k] + max(0, H[i] - H[i - k - 1]))\n\nans = DP[-1][K]\nfor i in range(K - 1, -1, -1):\n  ans = min(ans, DP[N - K + i][K])\n\nprint(ans)","n,k=map(int,input().split())\ndp=[]\nfor i in range(n+2):\n  dp.append([])\n  for j in range(n+2):\n    dp[-1].append([])\n    for l in range(k+1):\n      dp[-1][-1].append(10**12)\nfor l in range(k+1):\n    dp[0][0][l]=0\nh=list(map(int,input().split()))\nh.append(0)\nh.reverse()\nh.append(0)\nh.reverse()\nfor i in range(1,n+2):\n  for j in range(n+2):\n    for l in range(k+1):\n      dp[i][i][l]=min(dp[i][i][l],dp[i-1][j][l]+max(0,h[i]-h[j]))\n      if l>0:\n        dp[i][j][l]=min(dp[i][j][l],dp[i-1][j][l-1])\n        dp[i][0][l]=min(dp[i][0][l],dp[i-1][j][l-1]+h[j])\nans=dp[n+1][0][0]\nfor j in range(n+2):\n  for l in range(k+1):\n    ans=min(ans,dp[n+1][j][l])\nprint(ans)","import sys\nN, K = map(int, input().split())\nH = list(map(int, input().split()))\nif N<=K:\n    print(0)\n    sys.exit()\ndp = [[[float('inf')]*(K+2) for i in range(N+2)] for j in range(N+1)]\ndp[0][0][0] = H[0]\ndp[0][-1][1] = 0\nfor i in range(N-1):\n    for j in range(i+1):\n        for k in range(K+1):\n            if H[j]>H[i+1]:\n                dp[i+1][i+1][k] = min(dp[i][j][k], dp[i+1][i+1][k])\n            else:\n                dp[i+1][i+1][k] = min(dp[i+1][i+1][k], dp[i][j][k]+H[i+1]-H[j])\n                dp[i+1][j][k+1] = min(dp[i][j][k], dp[i+1][j][k+1])\n    for k in range(K):\n        dp[i+1][-1][k+1] = min(dp[i][-1][k], dp[i+1][-1][k+1])\n        dp[i+1][i+1][k] = min(dp[i+1][i+1][k], dp[i][-1][k]+H[i+1])\n\nans = float('inf')\nfor i in range(K+1):\n    res = min(dp[N-1][j][i] for j in range(N))\n    ans = min(ans, res)\nprint(ans)\n\n\n            \n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n\n        \n\n\n\n\n","N,K= map(int,input().split())\nH= list(map(int,input().split()))\n\ndef dpinit(ps, val=0):\n    res = [val for i in [0]*ps[-1]]\n    for i in ps[:-1][::-1]:\n        res = [res[:] for k in [0]*i]\n    return res\n\nH = [0] + H + [0]\ndp = dpinit((N+2,K+2))\n\nfor i in range(1,N+2):\n    for j in range(K+1):\n        l = min(j+1,i)\n        cand = [dp[i-k][j-k+1] + max(0, H[i]-H[i-k]) for k in range(1,l+1)]\n        dp[i][j] = min(cand)\n\nprint(dp[N+1][K])\n\n","import sys\n\n\nN,K = map(int,input().split())\n\nif N == K:\n    print (0)\n    sys.exit()\n\nH = list(map(int,input().split()))\n\n\ndp = [[None] * (N-K+1) for i in range(N) ]\n\nfor i in range(N):\n\n    nh = H[i]\n\n    dp[i][1] = nh\n\n    for j in range(i):\n        for k in range(N-K):\n\n            if dp[j][k] != None:\n\n                if dp[i][k+1] == None:\n                    \n                    dp[i][k+1] = dp[j][k] + max(0, H[i]-H[j])\n\n                else:\n\n                    dp[i][k+1] = min(dp[i][k+1] , dp[j][k] + max(0, H[i]-H[j]))\n\nans = float(\"inf\")\nfor i in range(N):\n\n    if dp[i][-1] != None:\n        ans = min(ans,dp[i][-1])\n\nprint (ans)\n\n","N,K=map(int,input().split())\nh=list(map(int,input().split()))\n\ndp=[[float(\"inf\") for j in range(N+1)] for k in range(N)]\n\nfor j in range(N):\n    dp[j][1]=h[j]\n    dp[j][0]=0\n\nfor i in range(1,N):\n    for j in range(2,N+1):\n        dp[i][j]=min(dp[k][j-1]+(h[i]-h[k])*(h[i]>=h[k]) for k in range(i))\n\ntest1=min(dp[i][N-K] for i in range(N))\nprint(test1)\n","inpl = lambda: list(map(int,input().split()))\nN, K = inpl()\nH = [0] + inpl() + [0]\ndp = [[0]*(K+1) for _ in range(N+2)]\nfor n in range(1,N+2):\n    for k in range(K+1):\n        if k >= n-1:\n            dp[n][k] = H[n]\n        else:\n            dp[n][k] = min(dp[n-1-l][k-l] + max(0,H[n]-H[n-1-l]) for l in range(k+1))\nprint(dp[-1][-1])","\nfrom collections import defaultdict,deque\nimport sys,heapq,bisect,math,itertools,string,queue,copy,time\nimport numpy as np\nsys.setrecursionlimit(10**8)\nINF = float('inf')\nmod = 10**9+7\neps = 10**-7\ndef inp(): return int(sys.stdin.readline())\ndef inpl(): return list(map(int, sys.stdin.readline().split()))\ndef inpl_str(): return list(sys.stdin.readline().split())\n\nN,K = inpl()\ndp = np.zeros((N,K+1),np.uint64)\nHH = inpl()\n\n\nbHs = np.zeros((K+1),int)\nfor n,H in enumerate(HH):\n    for k in reversed(range(1,K+1)):\n        used = dp[n-1][k-1]\n        unused = dp[n-1][k] + max(0,H-bHs[k])\n        # print(bHs,used,unused)\n        if used < unused:\n            dp[n][k] = used\n            bHs[k] = bHs[k-1]\n        else:\n            dp[n][k] = unused\n            bHs[k] = H\n\n    dp[n][0] = dp[n-1][0] + max(0,H-bHs[0])\n    bHs[0] = H\n\n    # print(dp[n], bHs)\n\nprint(min(dp[-1]))\n","n,k = map(int,input().split())\na = [0]+list(map(int,input().split()))\ndp = [[(10**18,0) for i in range(k+1)] for j in range(n+1)]\ndp[0][0] = (0,0)\nmx = 0\nfor i in range(1,n+1):\n  x = a[i]\n  dp[i][0] = (dp[i-1][0][0]+max(0,a[i]-a[i-1]),x)\n  for j in range(1,k+1):\n    pr = dp[i-1][j][1]\n    y = max(0,x-pr)\n    if dp[i-1][j][0]+y > dp[i-1][j-1][0]:\n      dp[i][j] = (dp[i-1][j-1][0],dp[i-1][j-1][1])\n    else:\n      dp[i][j] = (dp[i-1][j][0]+y,x)\nprint(dp[n][k][0])","import sys\ninput = sys.stdin.readline\n\ndef I(): return int(input())\ndef MI(): return map(int, input().split())\ndef LI(): return list(map(int, input().split()))\n\ndef main():\n    \"\"\"\n    \u30e1\u30e2\n    K=0\u306a\u3089\uff0c\u5de6\u304b\u3089\u898b\u3066\u767b\u3063\u305f\u6570\u3092\u6570\u3048\u308b\uff0cgrandGarden\n    K>=1\u306e\u6642\uff0c\u5857\u308b\u5217\u306f\u5de6\u53f3\u3069\u3061\u3089\u304b\u3068\u540c\u3058\u9ad8\u3055\u306b\u3059\u308b\uff0e\u540c\u3058\u9ad8\u3055\u3067\u4f55\u500b\u304b\u9023\u306a\u3063\u3066\u3044\u308b\u3068\u9762\u5012\u304b\u3082\uff1f\n    \u5de6\u53f3\u3069\u3061\u3089\u304b\u3068\u540c\u3058\u9ad8\u3055\u306b\u3059\u308b\u3068\u3044\u3046\u306e\u306f\u9010\u6b21\u7684\u306a\u8a71\uff0c1,1,1,5,4,5,1\u3067K=3\u306a\u3089\u7b54\u3048\u306f1\n    K\u500b\u3092\u7121\u8996\u3067\u304d\u308b\u3068\u8003\u3048\u308b\uff0e\n    dp[x][y][k]\u3067\uff0cx\u301cy\u307e\u3067\uff0ck\u500b\u7121\u8996\u3068\u8003\u3048\u308c\u3070\u9077\u79fb\u3082\u542b\u3081\u30665\u4e57\u304f\u3089\u3044\u3067\u884c\u3051\u305d\u3046\n    =>0\u304b\u3089\u30b9\u30bf\u30fc\u30c8\u3060\u3051\u3067\u826f\u3044\uff0cdp[x][k]\u3067\u884c\u3051\u305d\u3046\uff1f\uff0ex\u306e\u3068\u3053\u308d\u306f\u4f7f\u3063\u3066\u3044\u308b\u3082\u306e\u3068\u3059\u308b\uff0e\n    =>\u300cK\u56de\u4f7f\u3048\u308b\u300d\u3088\u308a\u3082\u300c\u4f7f\u3063\u305f\u6570\u304c\u3044\u304f\u3064\u304b\u300d\u3092\u8a18\u61b6\u3057\u3066\u304a\u304f\u307b\u3046\u304c\u697d\u305d\u3046\n    \"\"\"\n    N,K=MI()\n    H=[0]+LI()\n    N+=1\n    inf=10**12\n    dp=[[inf]*(N) for _ in range(N)]\n    # dp[i][j]\u306fi\u756a\u76ee\u307e\u3067\u898b\u3066\uff0cj\u500b\u306e\u8981\u7d20\u304b\u3089\u306a\u308b\n    dp[0][0]=0\n    \n    for i in range(1,N):\n        for j in range(N):\n            temp=inf\n            for k in range(i):#\u3069\u3053\u304b\u3089\u304f\u308b\u304b\n                temp=min(temp,dp[k][j-1]+max(0,H[i]-H[k]))\n            dp[i][j]=temp\n    \n    ans=inf\n    \n    for i in range(N):\n        ans=min(ans,dp[i][N-K-1])\n    print(ans)\n\nmain()\n","N, K = map(int, input().split())\nH = list(map(int, [0] + input().split() + [0]))\nd = [[10**18]*(K+1) for _ in range(N+2)]\nfor i in range(K+1):\n    d[0][i] = 0\nfor hi in range(N+1):\n    hi+=1\n    h = H[hi]\n    for i in range(min(K+1, hi)):\n        for k in range(i+1):\n            d[hi][i] = min(d[hi][i], d[hi-k-1][i-k] + max(H[hi-k-1]-h, 0))\nprint(min(d[-1]))\n","import numpy as np\n\nn, k = map(int, input().split())\nh = np.array(input().split(), dtype=np.int)\n\nif k < n:\n  dp = np.zeros((n - k, n), dtype=np.int)\n  dp[0] = h\n  for i in range(n - k - 1):\n    for j in range(i + 1, n):\n      dp[i+1, j] = np.min(dp[i][i:j] + np.maximum(h[j] - h[i:j], 0))\n  print(dp[n-k-1, n-k-1:])\nelse:\n  print(0)","INF = float(\"inf\")\n\nN, K, *H = map(int, open(0).read().split())\nH = [0] + H\n\nif N == K:\n    print(0)\n    quit()\n\ndp = [0] + [INF] * N\nfor i in range(1, N - K + 1):\n    dp = [INF] * i + [min(dp[k] + max(0, h - H[k]) for k in range(i - 1, j)) for j, h in enumerate(H[i:], i)]\n\nprint(min(dp))","n, k = list(map(int, input().split()))\nhs = [0] + list(map(int, input().split())) \n\n\nmax_val = sum([max(hs[i + 1] - hs[i], 0) for i in range(n)])\ndp = [[max_val for _ in range(n + 1)] for _ in range(n + 1)]\n\ndp[0][0] = 0\nfor i in range(1, n + 1):\n\tfor j in range(1, n + 1):\t\n\t\tdp[i][j] = min([dp[i - 1][l] + max(hs[j] - hs[l], 0) for l in range(j)])\n\nprint(min([dp[n - k][l] for l in range(n + 1)]))","import sys\nimport math\nfrom collections import defaultdict\n\nsys.setrecursionlimit(10**7)\ndef input():\n    return sys.stdin.readline()[:-1]\n\nmod = 10**9 + 7\n\ndef I(): return int(input())\ndef II(): return map(int, input().split())\ndef III(): return list(map(int, input().split()))\ndef Line(N,num):\n    if N<=0:\n        return [[]]*num\n    elif num==1:\n        return [I() for _ in range(N)]\n    else:\n        read_all = [tuple(II()) for _ in range(N)]\n        return map(list, zip(*read_all))\n\n#################\n\nN,K = II()\nH = III()\n\nif N==1:\n    if K>=1:\n        print(0)\n        exit()\n    else:\n        print(H[0])\n        exit()\n\nans = 0\nfor i in range(N):\n    if i==0:\n        ans += H[i]\n    else:\n        if H[i]>H[i-1]:\n            ans += H[i]-H[i-1]\n\ndef calc(H):\n    N = len(H)\n    x = [0]*N\n    muki = [0]*N\n    for i in range(N):\n        if i!=0 and i!=N-1:\n            if H[i]>H[i-1] and H[i]>H[i+1]:\n                x[i] = min(H[i]-H[i-1], H[i]-H[i+1])\n                muki[i] = 1\n            if H[i]<H[i-1] and H[i]<H[i+1]:\n                x[i] = min(-H[i]+H[i-1], -H[i]+H[i+1])\n                muki[i] = -1\n        if i==0:\n            if H[i]>H[i+1]:\n                x[i] = H[i]-H[i+1]\n        if i==N-1:\n            if H[i]>H[i-1]:\n                x[i] = H[i]-H[i-1]\n    return x,muki\n\nfor k in range(K):\n    x,muki = calc(H)\n    maxi = -1\n    maxval = -1\n    for i in range(N):\n        if x[i]>maxval:\n            maxval = x[i]\n            maxi = i\n    if maxval<=0:\n        break\n    else:\n        if maxi==0:\n            H[0] = H[1]\n            ans -= x[0]\n        elif maxi==N-1:\n            H[N-1] = H[N-2]\n            ans -= x[N-1]\n        else:\n            if muki[i]==1:\n                H[maxi] = min(H[maxi-1], H[maxi+1])\n            if muki[i]==-1:\n                H[maxi] = max(H[maxi-1], H[maxi+1])\n            ans -= x[maxi]\n\nprint(ans)","n,k=map(int,input().split())\nA=list(map(int,input().split()))\n\ndp1=[(10**18,0)for i in range(k+2)]\ndp2=[(10**18,0)for i in range(k+2)]\ndp1[0]=(0,0)\ndp2[0]=(0,0)\n\nfor t,h in enumerate(A):\n    for i in range(min(t+1,k),-1,-1):\n        ca1,la1=dp1[i]\n        cb1,lb1=dp2[i]\n        ca2,la2=dp1[i-1]\n        cb2,lb2=dp2[i-1]\n        #\u4f7f\u308f\u306a\u3044\n        t1=(ca1+h-la1,h) if la1<h else (ca1,h)\n        t2=(cb1+h-lb1,h) if lb1<h else (cb1,h)\n        #\u4f7f\u3046\n        t3=(ca2,min(h,la2))\n        t4=(cb2,min(h,lb2))\n        T=[t1,t2,t3,t4]\n        dp1[i]=min(T,key=lambda x: (x[0],-x[1]))\n        dp2[i]=min(T,key=lambda x: (-x[1],x[0]))\n\nprint(min(dp1[k][0],dp2[k][0]))\n\n\"\"\"\n0 2\n100 100000 1000021 100\n\n\"\"\"\n","import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nimport numpy as np\n\nN,K = map(int,readline().split())\nH = np.array([0] + read().split(),np.int64)\n\nINF = 10 ** 17\ndp = np.full((N+1,N+1),INF,np.int64)\ndp[0,0] = 0\n\nfor n,x in enumerate(H[1:],1):\n    add = np.maximum(0, x - H[:n])\n    dp[n,1:] = np.min(dp[:n,:-1] + add[:,None], axis=0)\n\nanswer = dp[:,N-K:].min()\nprint(answer)","N,K=map(int,input().split())\nH=list(map(int,input().split()))\ndef f(H):\n    x,y=0,0\n    for h in H:\n        if h>y:\n            x+=h-y\n        y=h\n    return x\ndp=[(f(H),H)]+[(0,[])]*K\nfor i in range(1,K+1):\n    x,y=dp[i-1]\n    for j in range(len(dp[i-1][1])):\n        z=f(dp[i-1][1][:j]+dp[i-1][1][j+1:])\n        if z<x:\n            x,y=z,dp[i-1][1][:j]+dp[i-1][1][j+1:]\n    dp[i]=x,y\nprint(dp[-1][0])","n, k = map(int, input().split())\nh = [0] + list(map(int, input().split())) + [0]\n\nfor i in range(k):\n    dif = []\n    for j in range(len(h) - 2):\n        temp = [h[j + 1] - h[j], h[j + 1] - h[j + 2]]\n        if temp[0] * temp[1] <= 0:\n            dif.append(0)\n        else:\n            dif.append(min([abs(temp[0]), abs(temp[1])]))\n    del h[dif.index(max(dif)) + 1]\ncount = 0\nfor i in range(len(h) - 1):\n    if h[i] < h[i + 1]:\n        count += (h[i + 1] - h[i])\nprint(count)","import sys\n\nstdin = sys.stdin\n\nni = lambda: int(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nns = lambda: stdin.readline().rstrip()  # ignore trailing spaces\n\nn, k = na()\nh = na()\n\nys = h[:] + [0]\nys.sort()\n\nys2 = []\nfor v in ys:\n    if len(ys2) > 0 and ys2[-1] == v:\n        continue\n    ys2.append(v)\nys = ys2\nm = len(ys)\n\ndp = [[999999999999999999] * m for _ in range(k+1)]\ndp[0][0] = 0\n\nfor v in h:\n    ndp = [[999999999999999999] * m for _ in range(k + 1)]\n    for i in range(k+1):\n        plus = 99999999999999999\n        for j in range(m):\n            plus = min(plus + (ys[j] - ys[j-1] if j > 0 else 0), dp[i][j])\n            if ys[j] == v:\n                ndp[i][j] = min(ndp[i][j], plus)\n            elif i+1 <= k:\n                ndp[i+1][j] = min(ndp[i+1][j], plus)\n        plus = 99999999999999999\n        for j in range(m-1, -1, -1):\n            plus = min(plus, dp[i][j])\n            if ys[j] == v:\n                ndp[i][j] = min(ndp[i][j], plus)\n            elif i+1 <= k:\n                ndp[i+1][j] = min(ndp[i+1][j], plus)\n    dp = ndp\n\nans = min(min(row) for row in dp)\nprint(ans)\n","#!\/usr\/bin\/env python3\nimport sys\ninput = sys.stdin.readline\nMOD = 10**9 + 7\nINF = 10**13\n\nn, K = [int(item) for item in input().split()]\nh = [0] + [int(item) for item in input().split()]\n\n# dp[i][j][k] i:till ith, j:skipped j, k: previous index\ndp = [[[INF] * (n + 1) for _ in range(n + 1)] for _ in range(n + 1)]\nfor i, item in enumerate(h):\n    if i == 0:\n        dp[0][0][0] = 0\n        continue\n    for j in range(n-1, -1, -1):\n        for k in range(n-1, -1, -1):\n            if dp[i-1][j][k] == INF:\n                continue\n            # skip\n            dp[i][j+1][k] = min(dp[i][j+1][k], dp[i-1][j][k])\n            # use\n            dp[i][j][i] = min(dp[i][j][i], dp[i-1][j][k] + max(0, h[i] - h[k]))\n            \nans = INF\nfor j in range(n+1):\n    ans = min(ans, dp[n][K][j])\n\nprint(ans)","n, k = map(int, input().split())\nh = [0] + list(map(int, input().split())) + [0]\ninf = 10 ** 13\ndp = [[0] * (k + 1)]\nfor i in range(1, n + 2):\n    dp.append([inf] * (k + 1))\n    for j in range(i):\n        for u in range(i - j - 1, k + 1):\n            dp[-1][u] = min(dp[-1][u], dp[j][u - i + j + 1] + max(h[i] - h[j], 0))\nprint(min(dp[-1]))\n","N, K = map(int, input().split())\nH = [0] + list(map(int, input().split())) + [0]\n\n# dp[i][j] = minimum operations upto col i (fixed), with j moves remaining\ndp = [[float('inf') for i in range(K+1)] for j in range(N+2)]\ndp[0] = [0 for i in range(K+1)]\n\ndef cost(i, j):\n    return max(0, H[j] - H[i])\n\nfor i in range(1, N+2):\n    for j in range(K+1):\n        for d in range(j+1):\n            if i-d-1 < 0: break\n            dp[i][j] = min(dp[i][j], cost(i-d-1, i) + dp[i-d-1][j-d])\n                \nprint(dp[-1][K])\n","def main():\n    N, K = map(int, input().split())\n    H = [0] + list(map(int, input().split()))\n    dp = [[float(\"inf\")] * (N+1) for _ in range(N+1)]\n    dp[0][0] = 0\n    for i in range(1, N+1):\n        for j in range(i):\n            diff = max(H[i] - H[j], 0)\n            for k in range(min(N-K, j+1)):\n                dp[i][k+1] = min(dp[i][k+1], dp[j][k] + diff)\n    ans = float(\"inf\")\n    for i in range(N+1):\n        ans = min(ans, dp[i][N-K])\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n","\nimport sys\ndef input():\n\treturn sys.stdin.readline().strip()\n\n\nclass Union_Find():\n\tdef __init__(self, n):\n\t\tself.union = [i for i in range(n)]\n\t\tself.level = [0 for i in range(n)]\n\n\tdef root(self, i, mode=0):\n\t\tkeiro = [i]\n\t\tans = i\n\t\twhile ans != self.union[ans]:\n\t\t\tans = self.union[ans]\n\t\t\tkeiro.append(ans)\n\t\tif mode == 0:\n\t\t\treturn ans\n\t\telse:\n\t\t\treturn ans, keiro\n\n\tdef unite(self, i, j):\n\t\troot_i, list_i = self.root(i, 1)\n\t\troot_j, list_j = self.root(j, 1)\n\t\tif root_i != root_j:\n\t\t\tif self.level[root_i] < self.level[root_j]:\n\t\t\t\tself.level[root_j] = max(self.level[root_i] + 1, self.level[root_j])\n\t\t\t\tfor node in list_i:\n\t\t\t\t\tself.union[node] = root_j\n\t\t\telse:\n\t\t\t\tself.level[root_i] = max(self.level[root_j] + 1, self.level[root_i])\n\t\t\t\tfor node in list_j:\n\t\t\t\t\tself.union[node] = root_i\n\n\nN, T = list(map(int, input().split()))\n\nH = [0]\n\nH.extend(list(map(int, input().split())))\n\nH.append(0)\n\nUF = Union_Find(N + 2)\nfor i in range(1, N):\n\tif H[i] == H[i + 1]:\n\t\tUF.unite(i, i + 1)\n\n\nfor t in range(T):\n\tmax_diff = 0\n\tmax_next = -1\n\tmax_next_next = -1\n\tfor i in range(1, N + 1):\n\t\tif UF.root(i) != i:\n\t\t\tcontinue\n\t\tbase = i + 1\n\t\twhile True:\n\t\t\tif UF.root(base) != i or base == N + 1:\n\t\t\t\tright = base\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tbase += 1\n\t\tbase = i - 1\n\t\twhile True:\n\t\t\tif UF.root(base) != i or base == 0:\n\t\t\t\tleft = base\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tbase -= 1\n\t\tdiff = min(abs(H[i] - H[right]), abs(H[i] - H[left]))\n\t\tif (H[i] - H[right])*(H[i] - H[left]) < 0:\n\t\t\tcontinue\n\t\tif diff >= max_diff:\n\t\t\tmax_diff = diff\n\t\t\tmax_next = i\n\t\t\tif abs(H[i] - H[right]) < abs(H[i] - H[left]):\n\t\t\t\tmax_next_next = right\n\t\t\telse:\n\t\t\t\tmax_next_next = left\n\tUF.unite(max_next, max_next_next)\n\t_, keiro = UF.root(max_next, mode=1)\n\tfor num in keiro:\n\t\tH[num] = H[max_next_next]\n\nfor i in range(1, N + 1):\n\tH[i] = H[UF.root(i)]\n\nlength_list = set()\nfor i in range(1, N + 1):\n\tif i == UF.root(i):\n\t\tlength_list.add(H[i])\nlength_list = list(length_list)\nlength_list.sort()\n\nsum = 0\nbefore_length = 0\nfor length in length_list:\n\tsum_part = 0\n\tnum_disjoin = 0\n\tfor i in range(1, N + 1):\n\t\tif H[i] >= length and H[i - 1] < length:\n\t\t\tsum_part += 1\n\n\tsum += sum_part*(length - before_length)\n\tbefore_length = length\n\nprint(sum)","import math\nimport sys\n\nN, K = map(int, input().split())\nH = [0] + list(map(int, input().split()))\nif K == 0:\n    ans = 0\n    pre = 0\n    for h in H:\n        ans += max(0, h - pre)\n        pre = h\n    print(ans)\n    sys.exit()\ndp = [[math.inf]*(K+1) for _ in range(N+1)]  # (\u76f4\u524d\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9, \u4f7f\u3063\u305fk) =>\u3000\u6700\u5c0f\ndp[0][0] = 0\nfor i in range(1, N + 1):\n    for j in range(i):\n        for k in range(K+1):\n            dp[i][k] = min(dp[j][k] + max(0, H[i] - H[j]), dp[i][k])\n    for j in range(i):\n        for k in range(K-1, -1, -1):\n            dp[j][k + 1] = dp[j][k]\n        dp[j][0] = math.inf\nans = math.inf\nfor i in range(N + 1):\n    ans = min(ans, min(dp[i]))\nprint(ans)\n","LI = lambda: list(map(int, input().split()))\n\nN, K = LI()\nH = LI()\n\nINF = 10 ** 15\n\n\ndef main():\n    h = [0] + H\n    dp = [[INF] * (N + 1) for _ in range(N + 1)]\n    dp[0][0] = 0\n    for i in range(1, N + 1):\n        for j in range(1, i + 1):\n            v = INF\n            for k in range(i):\n                x = max(0, h[i] - h[k])\n                v = min(v, dp[k][j - 1] + x)\n            dp[i][j] = v\n\n    ans = min([dp[i][N - K] for i in range(N - K, N + 1)])\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n","import sys\nreadline = sys.stdin.readline\nN, K = map(int, readline().split())\nH = list(map(int, readline().split()))\nH = [0] + H\nN += 1\ninf = 10**18\ndp = [[[inf]*(K+1) for j in range(N)] for i in range(N)]\ndp[0][0][0] = 0\nfor i in range(1, N):\n    hi = H[i]\n    for j in range(i):\n        hj = H[j]\n        for k in range(1, 1 + min(K, i)):\n            dp[i][j][k] = dp[i-1][j][k-1]\n    for k in range(min(K+1, i)):\n        dp[i][i][k] = min(dp[i-1][j][k] + max(0, hi - H[j]) for j in range(i))\n\nprint(min(min(dp[N-1][j]) for j in range(N)))","N, K = map(int, input().split())\nH = [0] + [int(a) for a in input().split()]\nX = [[1<<100] * (N-K+1) for _ in range(N+1)]\nX[0][0] = 0\nfor i in range(1, N+1):\n    for j in range(1, min(i+1, N-K+1)):\n        X[i][j] = min([X[ii][j-1] + max(H[i] - H[ii], 0) for ii in range(i)])\n\nprint(min([x[-1] for x in X]))","N, K = map(int, input().split())\nH = list(map(int, input().split()))\nH = [0] + H\n\n\ndp = [[float('inf')] * (N + 1) for i in range(N + 1)]\ndp[0][0] = 0\n\nfor i in range(1, N + 1):\n    for j in range(1, N + 1):\n        for x in range(i):\n            dp[i][j] = min(dp[i][j], dp[x][j - 1] + max(0, H[i] - H[x]))\n\n\nans = float('inf')\nfor i in range(N + 1):\n    ans = min(ans, dp[i][max(0,  N - K)])\n\nprint(ans)\n","import sys\n\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\n\ndef main():\n    inf = 10 ** 16\n    n, k = map(int, input().split())\n    hh = [0] + list(map(int, input().split()))\n    dp = [[0] * (k + 1) for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        h = hh[i]\n        for j in range(k + 1):\n            v = inf\n            for nd in range(k + 1):\n                if i - 1 - nd < 0 or j - nd < 0: break\n                v = min(v, dp[i - 1 - nd][j - nd] + max(0, h - hh[i - 1 - nd]))\n            dp[i][j] = v\n    print(min(dp[n]))\n\nmain()\n","import sys\n\nreadline = sys.stdin.readline\nMOD = 10 ** 9 + 7\nINF = float('INF')\nsys.setrecursionlimit(10 ** 5)\n\n\ndef main():\n    N, K = map(int, readline().split())\n    H = [0] + list(map(int, readline().split())) + [0]\n\n    dp = [[INF] * (N + 1) for _ in range(N + 1)]\n\n    for i in range(N + 1):\n        dp[i][0] = 0\n\n    for i in range(1, N + 1):\n        dp[i][1] = H[i]\n        for j in range(2, i + 1):\n            for k in range(1, i):\n                dp[i][j] = min(dp[i][j], dp[k][j - 1] + max(0, H[i] - H[k]))\n\n    print(dp[N][N - K])\n\n\nif __name__ == '__main__':\n    main()\n","import sys\ninput = sys.stdin.readline\n\nINF = 10**18\n\nN, K = map(int, input().split())\nA = [0] + list(map(int, input().split())) + [0]\n\ndp = [[INF]*(K+1) for _ in range(N+2)]\ndp[0][0] = 0\nfor i in range(1, N+2):\n    for k in range(K+1):\n        tmp = INF\n        for j in range(max(0, i-k-1), i):\n            tmp = min(tmp, dp[j][k-(i-j-1)] + max(0, A[i]-A[j]))\n        dp[i][k] = tmp\n\nprint(min(dp[-1]))","# -*- coding: utf-8 -*-\n\nimport sys\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x \/\/ y))\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nsys.setrecursionlimit(10 ** 9)\nINF = 10 ** 18\nMOD = 10 ** 9 + 7\n\nN, K = MAP()\nM = N - K\nA = [0] + LIST()\n\n# dp[i][j] := \u5217\u3092i\u500b\u4f7f\u3063\u3066\u3001\u6700\u5f8c\u306b\u4f7f\u3063\u305f\u306e\u304cj\u5217\u76ee\u306e\u6642\u306e\u6700\u5c0f\u30b3\u30b9\u30c8\ndp = list2d(M+1, N+1, INF)\ndp[0][0] = 0\nfor i in range(M):\n    for j, h1 in enumerate(A[i:], i):\n        if dp[i][j] == INF:\n            break\n        for k in range(j+1, N+1):\n            h2 = A[k]\n            dp[i+1][k] = min(dp[i+1][k], dp[i][j] + max(h2 - h1, 0))\nprint(min(dp[M]))\n","#!usr\/bin\/env python3\nfrom collections import defaultdict,deque\nfrom heapq import heappush, heappop\nimport sys\nimport math\nimport bisect\nimport random\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef I(): return int(sys.stdin.readline())\ndef LS():return [list(x) for x in sys.stdin.readline().split()]\ndef S():\n    res = list(sys.stdin.readline())\n    if res[-1] == \"\\n\":\n        return res[:-1]\n    return res\ndef IR(n):\n    return [I() for i in range(n)]\ndef LIR(n):\n    return [LI() for i in range(n)]\ndef SR(n):\n    return [S() for i in range(n)]\ndef LSR(n):\n    return [LS() for i in range(n)]\n\nsys.setrecursionlimit(1000000)\nmod = 1000000007\n\ndef solve():\n    n,k = LI()\n    h = LI()\n    h.insert(0,0)\n    dp = [[float(\"inf\")]*(n+1) for i in range(n+1)]\n    dp[0][0] = 0\n    for i in range(n):\n        ni = i+1\n        hi = h[ni]\n        for s in range(n):\n            ns = s+1\n            for j in range(ni):\n                hj = h[j]\n                nd = dp[j][s]+max(0,hi-hj)\n                if nd < dp[ni][ns]:\n                    dp[ni][ns] = nd\n    ans = min([dp[i][n-k] for i in range(n+1)])\n    print(ans)\n    return\n\n#Solve\nif __name__ == \"__main__\":\n    solve()\n"],"raw_generations":["N,K=map(int,input().split())\nH=list(map(int,input().split()))+[0]\nh=[0]*(N+1)\nh[0]=H[0]\nfor i in range(1,N):\n    h[i]=max(H[i]-H[i-1],h[i])\nfor i in range(1,N+1):\n    h[i]+=h[i-1]\ndata=[[0]*N for i in range(N)]\nfor L in range(N):\n    for R in range(L,N):\n        if L==0:\n            data[L][R]=h[-1]-h[R+1]+H[R+1]\n        else:\n            data[L][R]=h[L-1]+h[-1]-h[R+1]+max(0,H[R+1]-H[L-1])\nfor L in range(N):\n    for R in range(L,N):\n        data[L][R]=h[-1]-data[L][R]\ndp=[[0]*(K+1) for i in range(N+1)]\nfor i in range(1,N+1):\n    for j in range(min(i+1,K+1)):\n        dp[i][j]=dp[i-1][j]\n        for k in range(j-1,-1,-1):\n            if dp[i][j]<dp[i-1-j+k][k]+data[i-j+k][i-1]:\n                dp[i][j]=dp[i-1-j+k][k]+data[i-j+k][i-1]\nprint(h[-1]-max(dp[N]))","def f_laminate(INF=float('inf')):\n    # \u53c2\u8003: https:\/\/atcoder.jp\/contests\/abc145\/submissions\/8491285\n    N, K = map(int, input().split())\n    H = [0] + list(map(int, input().split()))\n\n    # editorial \u3068\u540c\u3058 DP \u30c6\u30fc\u30d6\u30eb\n    dp = [[INF] * (N - K + 1) for _ in range(N + 1)]\n    dp[0][0] = 0\n    for x in range(1, N + 1):\n        for y in range(1, N - K + 1):\n            for i in range(x):\n                dp[x][y] = min(dp[x][y], dp[i][y - 1] + max(0, H[x] - H[i]))\n\n    ans = INF\n    for i in range(N + 1):\n        ans = min(ans, dp[i][N - K])\n    return ans\n\nprint(f_laminate())","import sys\ninput = sys.stdin.readline\n\nN, K = map(int, input().split())\nH = [0]+list(map(int, input().split()))\ndp = [[[10**18]*(N+1) for _ in range(K+1)] for _ in range(N+1)]\ndp[0][0][0] = 0\n\nfor i in range(N):\n    for j in range(K+1):\n        for k in range(N+1):\n            if j+1<=K:\n                dp[i+1][j+1][k] = min(dp[i+1][j+1][k], dp[i][j][k])\n            \n            dp[i+1][j][i+1] = min(dp[i+1][j][i+1], dp[i][j][k]+max(0, H[i+1]-H[k]))\n\nans = 10**18\n\nfor i in range(K+1):\n    for j in range(N+1):\n        ans = min(ans, dp[N][i][j])\n    \nprint(ans)","N, K = map(int, input().split())\nH = [0] + [int(i) for i in input().split()]\n\ndp = [[float('inf')] * (N - K + 1) for _ in range(N + 1)]\ndp[0][0] = 0\n\n# \u53f3\u7aef\u304ci\u3001\u30b5\u30a4\u30ba\u304cj\nfor i in range(1, N + 1) :\n  for j in range(N - K + 1) :\n    dp[i][j] = min(dp[k][j-1] + max(0, H[i] - H[k]) for k in range(i))\n    \nprint(dp[i][N-K])","def solve():\n    from sys import stdin\n    f_i = stdin\n    \n    N, K = map(int, f_i.readline().split())\n    H = tuple(map(int, f_i.readline().split()))\n    \n    if N == K:\n        return 0\n    \n    dp1 = list(H)\n    for i in range(1, N - K):\n        dp2 = dp1[:i]\n        for x, H_x in enumerate(H[i:], start=i):\n            v = min(dp_j + max(0, H_x - H_j) for dp_j, H_j in zip(dp1[i-1:x], H[i-1:x]))\n            dp2.append(v)\n        dp1 = dp2\n    return min(dp1[N-K-1:])\n\nprint(solve())","N, K = map(int, input().split())\nH = [0] + list(map(int, input().split()))\ndp = [[10 ** 100] * (N-K+1) for _ in range(N+1)]\ndp[0][0] = 0\nfor x in range(1, N+1):\n    for y in range(1, min(x+1, N-K+1)):\n        dp[x][y] = min(dp[i][y-1] + max(0, H[x] - H[i]) for i in range(x))\nprint(min(dp[i][N-K] for i in range(1, N+1)))","#\u8a2d\u5b9a\nimport sys\ninput = sys.stdin.buffer.readline\n\n#\u30e9\u30a4\u30d6\u30e9\u30ea\u30a4\u30f3\u30dd\u30fc\u30c8\nfrom collections import defaultdict\nimport copy\n\n#\u5165\u529b\u53d7\u3051\u53d6\u308a\ndef getlist():\n\treturn list(map(int, input().split()))\n\n\n#\u51e6\u7406\u5185\u5bb9\ndef main():\n\tN, K = getlist()\n\tH = getlist()\n\tm = min(H)\n\tHH = copy.deepcopy(H)\n\tfor i in range(K):\n\t\tind = HH.index(max(HH))\n\t\tHH[ind] = m\n\tans = m\n\t#\u5834\u5408\u5206\u3051\n\tif K == N:\n\t\tprint(0)\n\telif N == 1:\n\t\tprint(H[0])\n\telse:\n\t\tif HH[0] > HH[1]:\n\t\t\tans += HH[0] - HH[1]\n\t\telse:\n\t\t\tans += HH[0] - m\n\t\tfor i in range(1, N - 1):\n\t\t\tif HH[i] > HH[i - 1] and HH[i] > HH[i + 1]:\n\t\t\t\tans += HH[i] - max(HH[i - 1], HH[i + 1])\n\t\t\telif HH[i] > HH[i - 1]:\n\t\t\t\tans += HH[i] - HH[i - 1]\n\t\t\telif HH[i] > HH[i + 1]:\n\t\t\t\tans += HH[i] - HH[i + 1]\n\t\t\telse:\n\t\t\t\tans += HH[i] - m\n\t\tif HH[-1] > HH[-2]:\n\t\t\tans += HH[-1] - HH[-2]\n\t\telse:\n\t\t\tans += HH[-1] - m\n\t\tprint(ans)\n\n\nif __name__ == '__main__':\n\tmain()","import sys\ninput = sys.stdin.readline\nN, K = map(int, input().split())\na = [0] + list(map(int, input().split()))\ninf = 10 ** 12\ndp = [[[inf] * (N + 1) for _ in range(K + 1)] for _ in range(N + 1)]\ndp[0][0][0] = 0\nfor i in range(N):\n  for j in range(K + 1):\n    for k in range(N + 1):\n      if dp[i][j][k] == inf: continue\n      x = max(0, a[i + 1] - a[k])\n      dp[i + 1][j][i + 1] = min(dp[i + 1][j][i + 1], dp[i][j][k] + x)\n      if j < K: dp[i + 1][j + 1][k] = min(dp[i + 1][j][k], dp[i][j][k])\n#print(dp)\nres = inf\nfor j in range(K + 1): res = min(res, min(dp[-1][j]))\nprint(res)","n,K = map(int, input().split())\nh = list(map(int, input().split()))\nh = [0] + h\nINF = 1001001001001\ndp = [[INF] *(n+1) for _ in range(n+1)]  \ndp[0][0] = 0\nfor j in range(n):\n    for i in range(1,n+1):\n        for k in range(i):\n            dp[i][j+1] = min(dp[i][j+1],dp[k][j]+max(0,h[i]-h[k]))\n\nans = INF\nfor i in range(n+1):\n    ans = min(ans,dp[i][n-K])\n\nprint(ans)\n\n\n\n","# F - Laminate\nINF = 1001002003004005006\nimport numpy as np\n\nN, K = map(int, input().split())\nM = N - K\nH = np.array(list(map(int, input().split())))\nH = np.insert(H, 0, 0)\n\nDP = np.full_like(np.zeros([N + 1, M + 1]), INF)\nDP[0][0] = 0\nfor i in range(1, N + 1):\n    for j in range(M):\n        now = INF\n        for k in range(i):\n            now = min(now, DP[k][j] + max(0, H[i] - H[k]))\n        DP[i][j + 1] = now\n        \nans = INF\nfor i in range(N + 1):\n    ans = min(ans, DP[i][M])\n    \nprint(int(ans))","N,K = map(int,input().split())\nH = list(map(int,input().split()))\nH = [0]+H\ndp = [[10**12]*(N+1) for _ in range(N+1)]\ndp[0][0] = 0\nfor x in range(N+1):\n    for y in range(1,N+1):\n        for z in range(x):\n            dp[x][y] = min(dp[x][y],dp[z][y-1]+max(H[x]-H[z],0))\n\nans = 10**12\nfor x in range(N+1):\n    ans = min(dp[x][N-K],ans)\n\nprint(ans)","N, K = map(int, input().split())\nH = [0] + list(map(int, input().split()))\n\nINF = 10**12\ndp = [[INF] * (N+1) for i in range(N+1)]\ndp[0][0] = 0\n\nfor x in range(1, N+1):\n  dp[x][0] = 0\n  dp[x][1] = H[x]\n  for y in range(2, x+1):\n    for i in range(x):\n      dp[x][y] = min(dp[x][y], dp[i][y-1]+max(0, H[x]-H[i]))\n\nans = INF\nfor i in range(N+1):\n  ans = min(ans, dp[i][N-K])\n\nprint(ans)","import sys\ninput = lambda : sys.stdin.readline().rstrip()\nsys.setrecursionlimit(max(1000, 10**9))\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\nn,k = list(map(int, input().split()))\nh = list(map(int, input().split()))\n\ndp = [[0]*(n+1) for _ in range(n+1)]\n# for i in range(1,n+1):\n#     dp[i][0] = float(\"inf\")\nfor i in range(1, n+1):\n    hh = h[i-1]\n    for j in range(1, n+1):\n        if j==1:\n            dp[i][j] = hh\n        elif j<=i:\n            if i>=2:\n                dp[i][j] = min((dp[ii][j-1] + max(0, hh-(h[ii-1] if ii>=1 else 0))) for ii in range(1,i))\n            else:\n                dp[i][j] = hh\n        else:\n            dp[i][j] = float(\"inf\")\nans = min(min(dp[nn][kk] for kk in range(n-k, n+1)) for nn in range(1,n+1))\nprint(ans)","import sys\ninput = sys.stdin.buffer.readline\n\ndef main():\n    N,K = map(int,input().split())\n    H = list(map(int,input().split()))\n    H = [0]+H\n    INF = 10**15\n    \n    dp = [INF]*(N+1)\n    dp[0] = 0\n    for i in range(N-K):\n        use = [INF]*(N+1)\n        for j in range(i,N+1):\n            for k in range(j+1,N+1):\n                use[k] = min(use[k],dp[j]+max(0,H[k]-H[j]))\n        dp = use\n    \n    print(min(dp))\n\nif __name__ == \"__main__\":\n    main()\n","import numpy as np\nINF = 10**15\ndef solve(n, k, h):\n    dp = np.full((n+1, n+1), INF, dtype=int)\n    dp[0, 0] = 0\n    h = np.array([0] + h, dtype=int)\n    for i, h_i in enumerate(h[1:], 1):\n        t = np.maximum(h_i - h[:i], 0)\n        dp[i,1:] = np.min(dp[:i,:-1]+t[:,None], axis=0)\n    return np.min(dp[:, n-k])\n\nn, k = map(int, input().split())\nh = list(map(int, input().split()))\nprint(solve(n, k, h))","import sys\ninput = sys.stdin.readline\n\ndef max2(x,y):\n    return x if x > y else y\n\ndef min2(x,y):\n    return x if x < y else y\n\nN, K = map(int, input().split())\nH = [0] + list(map(int, input().split()))\n\ndp = [[10**9*N for _ in range(N-K+1)] for _ in range(N+1)]\n\ndp[0][0] = 0\nfor i, h in enumerate(H[1:], start=1):\n    for k in range(1, min2(i+1, N-K+1)):\n        dp[i][k] = min(dp[j][k-1] + max2(0, h-H[j]) for j in range(i))\nprint(min(d[-1] for d in dp))","n,k=map(int,input().split())\nh=list(map(int,input().split()))\nh.insert(0,0)\ndp=[[float(\"inf\")]*(n-k+1) for _ in range(n+1)]\ndp[0][0]=0\nfor i in range(1,n+1):\n    for j in range(1,n-k+1):\n        now=float(\"inf\")\n        for l in range(i):\n            now=min(dp[l][j-1]+max(0,h[i]-h[l]),now)\n        dp[i][j]=now\n\nans=float(\"inf\")\nfor i in range(1,n+1):\n    ans=min(ans,dp[i][n-k])\n\nprint(ans)\n\n","N,K = map(int, input().split())\nH = [int(h) for h in input().split()]\n\ndp = [[10**13]*N for _ in range(N)]\ndp[0][0] = H[0]\n    \nfor i in range(1, N):\n    for j in range(i+1):\n        if j == 0:\n            dp[i][j] = min(dp[i-1][j], H[i])\n            continue\n        dp[i][j] = dp[i-1][j]\n        for k in range(i):\n            dp[i][j] = min(dp[i][j], dp[k][j-1]+max(0, H[i]-H[k]))\n            \nif N == K:\n    ans = 0\nelse:\n    ans = 10**13\n    for i in range(N):\n        ans = min(ans, dp[i][N-K-1])\n        \nprint(ans)","from collections import defaultdict\n\nn, k = map(int, input().split())\nhhh = list(map(int, input().split()))\nINF = 10 ** 18\ndp = defaultdict(lambda: INF)\ndp[0, 0] = 0\nfor h in hhh:\n    ndp = defaultdict(lambda: INF)\n    for (changed, prev_h), operate in dp.items():\n        if h == prev_h:\n            ndp[changed, h] = min(ndp[changed, h], operate)\n        elif h > prev_h:\n            ndp[changed, h] = min(ndp[changed, h], operate + h - prev_h)\n            if changed < k:\n                ndp[changed + 1, prev_h] = min(ndp[changed + 1, prev_h], operate)\n        else:\n            ndp[changed, h] = min(ndp[changed, h], operate)\n            if changed < k:\n                ndp[changed + 1, prev_h] = min(ndp[changed + 1, prev_h], operate)\n    dp = ndp\nprint(min(dp.values()))\n","import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,copy,functools\nimport time,random\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 \/ 10**10\nmod = 10**9+7\ndd = [(-1,0),(0,1),(1,0),(0,-1)]\nddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(): return [list(map(int, l.split())) for l in sys.stdin.readlines()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\ndef pe(s): return print(str(s), file=sys.stderr)\ndef JA(a, sep): return sep.join(map(str, a))\ndef JAA(a, s, t): return s.join(t.join(map(str, b)) for b in a)\n\n\ndef main():\n    n,k = LI()\n    a = LI()\n    c = collections.defaultdict(lambda: inf)\n    c[(0,0)] = 0\n    for t in a:\n        nc = collections.defaultdict(lambda: inf)\n        for ck,cv in c.items():\n            k1,k2 = ck\n            if k1 >= t:\n                if nc[(t,k2)] > cv:\n                    nc[(t,k2)] = cv\n            else:\n                if nc[(t,k2)] > cv + t-k1:\n                    nc[(t,k2)] = cv + t-k1\n            if k2 < k:\n                if nc[(k1,k2+1)] > cv:\n                    nc[(k1,k2+1)] = cv\n        c = nc\n\n    return min(c.values())\n\n\nprint(main())\n\n\n","def main():\n    INF = 10**12\n    N, K = list(map(int, input().split()))\n    H = list(map(int, input().split()))\n    H = [0] + H\n    # dp[n][k][l]: n\u5217\u76ee\u307e\u3067\u3067\u5408\u8a08k\u5217H\u306e\u5024\u3092\u5909\u3048\u3066\u3044\u308b\uff06\u76f4\u8fd1l\u5217\u3092\u5909\u3048\u3066\u3044\u308b\u5834\u5408\u306e\u5857\u308a\u306e\u56de\u6570\u306e\u6700\u5c0f\u5024\n    # \u7b54\u3048\u306f min_{k,l}(dp[N][k][l])\n    dp = [[[INF for _ in range(K + 1)] for _ in range(K + 1)] for _ in range(N + 1)]\n    dp[0][0][0] = 0\n    for n in range(1, N + 1):\n        for k in range(min(n, K) + 1):\n            v = INF\n            for l in range(k + 1):\n                if l > 0:\n                    dp[n][k][l] = dp[n - 1][k - 1][l - 1]\n                v = min(v, dp[n - 1][k][l] + max(0, H[n] - H[n - l - 1]))\n            dp[n][k][0] = v\n    ans = INF\n    for k in range(K + 1):\n        for l in range(k + 1):\n            ans = min(ans, dp[N][k][l])\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()","def solve():\n    INF = 10**12\n\n    def max2(x, y): return x if x >= y else y\n    def min2(x, y): return x if x <= y else y\n\n    N, K = map(int, input().split())\n    Hs = [0] + list(map(int, input().split()))\n\n    dp = [[INF]*(N+1) for _ in range(N+1)]\n    dp[0][0] = 0\n    for i in range(1, N+1):\n        H = Hs[i]\n        diffs = []\n        for iPrev in range(i):\n            diff = max2(0, H-Hs[iPrev])\n            diffs.append(diff)\n        dp[i][0] = 0\n        dp[i][1] = H\n        for j in range(2, min(i, N-K)+1):\n            for iPrev in range(i):\n                dp[i][j] = min2(dp[i][j], dp[iPrev][j-1]+diffs[iPrev])\n\n    ans = min(dpi[N-K] for dpi in dp)\n    print(ans)\n\n\nsolve()\n","INF = 10 ** 15\n\nN, K = map(int, input().split())\nHs = [0] + list(map(int, input().split())) + [0]\n\n\ndp = [[INF] * (K+1) for _ in range(N+2)]\ndp[0][0] = 0\n\nfor n in range(1, N+2):\n    for k in range(K+1):\n        for l in range(1, min(n, k+1)+1):\n            dp[n][k] = min(dp[n][k], dp[n-l][k-l+1] + max(0, Hs[n] - Hs[n-l]))\n\nprint(dp[N+1][K])","import os\nimport sys\nfrom collections import defaultdict\n\nif os.getenv(\"LOCAL\"):\n    sys.stdin = open(\"_in.txt\", \"r\")\n\nsys.setrecursionlimit(10 ** 9)\nINF = float(\"inf\")\nIINF = 10 ** 18\nMOD = 10 ** 9 + 7\n# MOD = 998244353\n\nN, K = list(map(int, sys.stdin.readline().split()))\nH = list(map(int, sys.stdin.readline().split()))\n\nif K == N:\n    print(0)\n    exit()\n\n# H = np.array(H, dtype=float)\n\n# # @debug\n# def count(heights, changes):\n#     H = heights.copy()\n#     H = H[~changes]\n#     ret = 0\n#     cnt = 1\n#     height = H.min()\n#     # \u666e\u901a\u306b\u6570\u3048\u3066\u307f\u308b\n#     while height != np.inf:\n#         H -= height\n#         ret += cnt * height\n#         H[H == 0.0] = np.inf\n#         cnt = np.count_nonzero(np.diff((H != np.inf).astype(int)) == 1)\n#         cnt += H[0] != np.inf\n#         height = H.min()\n#     return int(ret)\n#\n#\n# # \u4e0a\u304b\u3089\u4f55\u500b\u5909\u3048\u308b\u304b\u3001\u4e0b\u304b\u3089\u4f55\u500b\u5909\u3048\u308b\u304b\u3092\u5168\u63a2\u7d22\n# ans = INF\n# orders = H.argsort()\n# for _ in range(K + 1):\n#     # \u5909\u3048\u308b\u3084\u3064\n#     changes = np.zeros(N, dtype=bool)\n#     changes[orders[:K]] = True\n#     ans = min(ans, count(H, changes))\n#     orders = np.roll(orders, shift=1)\n# print(ans)\n\n\n# dp[i][k][h]: i \u307e\u3067\u898b\u305f\u3001k \u500b\u7121\u8996\u3057\u305f\u3001\u4eca\u306e\u9ad8\u3055\u304c h \u3067\u3042\u308b\u3068\u304d\u306e\u5857\u308b\u6570\ndp = [[defaultdict(lambda: INF) for _ in range(K + 2)] for _ in range(N + 1)]\ndp[0][0][0] = 0\nfor i in range(N):\n    for k in range(K + 1):\n        for h, cnt in dp[i][k].items():\n            dp[i + 1][k][H[i]] = min(dp[i + 1][k][H[i]], cnt + max(0, H[i] - h))\n            dp[i + 1][k + 1][h] = min(dp[i + 1][k + 1][h], dp[i][k][h])\nans = min(dp[-1][K].values())\nprint(int(ans))\n","#!\/usr\/bin\/env python3\nfrom collections import defaultdict,deque\nfrom heapq import heappush, heappop\nfrom bisect import bisect_left, bisect_right\nimport sys, random, itertools, math\nsys.setrecursionlimit(10**5)\ninput = sys.stdin.readline\nsqrt = math.sqrt\ndef LI(): return list(map(int, input().split()))\ndef LF(): return list(map(float, input().split()))\ndef LI_(): return list(map(lambda x: int(x)-1, input().split()))\ndef II(): return int(input())\ndef IF(): return float(input())\ndef LS(): return list(map(list, input().split()))\ndef S(): return list(input().rstrip())\ndef IR(n): return [II() for _ in range(n)]\ndef LIR(n): return [LI() for _ in range(n)]\ndef FR(n): return [IF() for _ in range(n)]\ndef LFR(n): return [LI() for _ in range(n)]\ndef LIR_(n): return [LI_() for _ in range(n)]\ndef SR(n): return [S() for _ in range(n)]\ndef LSR(n): return [LS() for _ in range(n)]\nmod = 1000000007\ninf = float('INF')\nfrom copy import deepcopy\n\n#solve\ndef solve():\n    n, k = LI()\n    h = [0] + LI()\n    d = defaultdict(int)\n    d[(0, 0)] = 0\n    for i in range(1, n + 1):\n        nd = defaultdict(lambda: inf)\n        for key, value in d.items():\n            a, b = key\n            if nd[(i, b)] > value + (h[i] - h[a] if h[i] > h[a] else 0):\n                nd[(i, b)] = value + (h[i] - h[a] if h[i] > h[a] else 0)\n            if b + 1 > k:\n                continue\n            if nd[(a, b + 1)] > value:\n                nd[(a, b + 1)] = value\n        d = nd\n    ans = inf\n    for i in range(n + 1):\n        for j in range(k + 1):\n            ans = min(ans, d[(i, j)])\n    print(ans)\n    return\n\n\n#main\nif __name__ == '__main__':\n    solve()\n","\"\"\"\nimport sys\ninput = sys.stdin.readline\n#\"\"\"\n\nN,K = map(int,input().split())\n*H, = map(int,input().split())\n\ndef f(v):\n    L = len(v)\n    if L==0:return 0\n    ret = min(v)\n    v2 = [e-ret for e in v]\n    i = 0\n    for j in range(L):\n        if v2[j]==0:\n            ret += f(v2[i:j])\n            i = j+1\n    else:\n        ret += f(v2[i:])\n    return ret\n\ndef g(v):\n    u = []\n    w = v[::-1]\n    for i,h in enumerate(H):\n        if w and i == w[-1]:\n            w.pop()\n            continue\n        u.append(h)\n    return f(u)\n\nans = g([])\n\ndp = [[[ans,[]] for _ in [0]*(K+1)] for _ in [0]*(N+1)]\nfor i in range(1,N+1):\n    for k in range(1,K+1):\n        tmp = dp[i-1][k-1][1] + [i-1]\n        c = g(tmp)\n        if c<dp[i-1][k][0]:\n            dp[i][k][0] = c\n            dp[i][k][1] = tmp\n        else:\n            dp[i][k][0] = dp[i-1][k][0]\n            dp[i][k][1] = dp[i-1][k][1][:]\n\nprint(dp[-1][-1][0])","N, K = map(int, input().split())\nH = list(map(int, input().split())) + [0]\ndp = [[10**12]*(K+2) for _ in range(N+1)]\ndp[0][0] = 0\nfor i in range(N):\n  for j in range(min(i+1, K) + 1):\n    for k in range(j + 1):\n      dp[i+1][j] = min(dp[i+1][j], dp[i-k][j-k] + max(H[i] - H[i-k-1], 0))\nans = min(dp[-1])\nfor i in range(K):\n  ans = min(ans, dp[N-i][K-i])\nprint(ans)","# -*- coding: utf-8 -*-\n\n\nN,K=map(int, input().split())\nH=list(map(int, input().split()))\nG=[0]\nG.extend(H[:])\n\ndp=[[0]*(N+1) for i in range(N-K+1)]\n\n\ntempa=0\nif K<N-1:\n    for jtemp in range(N):\n        j=jtemp+1\n        dp[1][j]=G[j]#min(dp[1][j-1],G[j])\n    for itemp in range(N-K-1):\n        i=itemp+2\n        for jtemp in range(N-(i-1)):\n            j=jtemp+i\n            temp=int(N*1e9)\n            \n            for ktemp in range(j-(i-1)):\n                k=ktemp+i-1\n                val=G[j]-G[k]\n                if val<0:\n                    val=0\n                if temp>dp[i-1][k]+val:\n                    temp=dp[i-1][k]+val\n            dp[i][j]=temp\n    tempa=dp[N-K][-1]\n    for jtemp in range(N):\n        j=jtemp+1\n        if tempa>dp[N-K][j] and dp[N-K][j]!=0:\n            tempa=dp[N-K][j]\nelif N-K==1:\n    tempa=min(H[:])\nelse:\n    tempa=0\nprint(tempa)","n,K=map(int,input().split())\nl=list(map(int,input().split()))\nINF=float('inf')\ndp=[[[] for j in range(K+1)] for i in range(n+1)]\ndp[0][0]=[[0,0]]\nfor i,j in enumerate(l,1):\n    a1,b1=dp[i-1][0][0]\n    a1+=max(0,j-b1)\n    dp[i][0]=[[a1,j]]\nfor i,j in enumerate(l,1):\n    for k in range(1,min(K+1,i+1)):\n        tl=[]\n        for a1,b1 in dp[i-1][k]:\n            a1+=max(0,j-b1)\n            tl.append([a1,j])\n        dp[i][k]=tl+dp[i-1][k-1]\nprint(sorted(dp[-1][-1])[0][0])","def main():\n    n, K = map(int, input().split())\n    H = list(map(int, input().split()))\n    s = sorted(set(H+[0]))\n    d = {i: j for j, i in enumerate(s)}\n    l = len(s)\n    m = max(s)\n    a = [m-i for i in s]\n    dp = [[10**13]*l for _ in range(K+1)]\n    dp[0][0] = 0\n    for h in H:\n        dh = d[h]\n        dp2 = [[10**13]*l for _ in range(K+1)]\n        t = [[0]*l for _ in range(K+1)]\n        s_plus_a = [[i+j for i, j in zip(a, kk)] for kk in dp]\n        min_s = [[dp[i][j] for j in range(l)] for i in range(K+1)]\n        for i in range(K+1):\n            for j in range(l-2, -1, -1):\n                min_s[i][j] = min(min_s[i][j+1], min_s[i][j])\n            for j in range(1, l):\n                s_plus_a[i][j] = min(s_plus_a[i][j-1], s_plus_a[i][j])\n            for j in range(l):\n                t[i][j] = s_plus_a[i][j]-a[j]\n        for i in range(K):\n            for j in range(l):\n                dp2[i+1][j] = min(min_s[i][j], t[i][j])\n        for i in range(K+1):\n            for j in range(l):\n                dp2[i][dh] = min(dp2[i][dh], dp[i][j]+max(h-s[j], 0))\n        dp = dp2\n    print(min([min(i) for i in dp]))\n\n\nmain()\n","import sys\ninput = sys.stdin.readline\n\nN,K = map(int,input().split())\nH = [0]+list(map(int,input().split()))\n\nDP=[[1<<60]*(K+1) for i in range(N+1)]\n\nfor k in range(K+1):\n    DP[0][k]=0\n\nfor i in range(1,N+1):\n    \n    for k in range(K+1):\n        for j in range(k+1):\n            DP[i][k]=min(DP[i][k],DP[i-j-1][k-j]+max(0,H[i]-H[i-j-1]))\n        \nprint(min(DP[-1]))","n,k = map(int, input().split( ))\nif n==k:\n    print(0)\n    exit()\nh = list(map(int, input().split( )))\n#h = [0]+h#h[0]=0\u8ffd\u52a0\ninf = 10**15\n\ndp = [[inf]*n for _ in range(n+1)] #dp[i][j]\u53f3\u7aef\u304ci\u3001j+1\u672c\u6b8b\u3059\nmn = h[0]\nfor i in range(n):\n    #mn = min(mn,h[i])\n    dp[i][0] = h[i]#min(mn,h[i])\n\nfor i in range(1,n):##\u53f3\u7aef\n    for j in range(i+1):#\u672c\u6570\n        for t in range(j-1,i):#\u53f3\u304b\u30892\u756a\u76ee,\n            dp[i][j] = min(dp[i][j], dp[t][j-1] + max(h[i]-h[t], 0))\n\nans = inf \n\nfor i in range(n):\n    ans = min(ans, min(dp[i][n-k-1:]))###\nprint(ans)\n","import sys,bisect\ninput = sys.stdin.readline\n\nn,k = map(int,input().split())\nh = list(map(int,input().split()))\nhs = [0]+sorted(h)\n\nif k==0:\n    res = h[0]\n    for i in range(1,n):\n        res += max(0,h[i]-h[i-1])\n    print(res)\n    exit()\n\n#dp[i][j][l]: Hi\u307e\u3067\u3067j\u56de\u4f7f\u3044\u6700\u5f8c\u304cl\u756a\u76ee\u306e\u5c0f\u3055\u3055\u306e\u6642\u306e\u6700\u5c0f\u5024\ndp = [[[10**12]*(n+1) for i in range(k+1)] for j in range(n)]\n\nkk = bisect.bisect_left(hs,h[0])\ndp[0][0][kk] = h[0]\ndp[0][1][0] = 0\n\nfor i in range(1,n):\n    kk = bisect.bisect_left(hs,h[i])\n    #Hi used in this turn\n    for j in range(k+1):\n        tmp = 10**12\n        for l in range(n):\n            tmp = min(tmp,dp[i-1][j][l]+max(0,hs[kk]-hs[l]))\n        dp[i][j][kk] = tmp\n\n    #not used\n    for j in range(1,k+1):\n        for l in range(n):\n            dp[i][j][l] = min(dp[i][j][l],dp[i-1][j-1][l])\n\nres = 10**12\nfor j in range(k+1):\n    for l in range(n):\n        res = min(res,dp[-1][j][l])\nprint(res)\n        \n","# -*- coding: utf-8 -*-\nimport sys\nsys.setrecursionlimit(10**9)\nINF=10**18\nMOD=10**9+7\ninput=lambda: sys.stdin.readline().rstrip()\nYesNo=lambda b: bool([print('Yes')] if b else print('No'))\nYESNO=lambda b: bool([print('YES')] if b else print('NO'))\nint1=lambda x:int(x)-1\n\ndef main():\n    N,K=map(int,input().split())\n    N+=2\n    H=[0]+list(map(int,input().split()))+[0]\n    edge=[[] for _ in range(N*(K+1))]\n    for i in range(N):\n        for j in range(K+1):\n            for k in range(K+1-j):\n                if i+k+1<N and N-1-i>=K-(k+j):\n                    edge[i*(K+1)+j].append((max(H[i+k+1]-H[i],0),(i+k+1)*(K+1)+j+k))\n    from heapq import heappop,heappush\n    def dijkstra(start,n,edges):\n        d=[INF]*n\n        used=[False]*n\n        d[start]=0\n        used[start]=True\n        edgelist=[]\n        for edge in edges[start]:\n            heappush(edgelist,edge)\n        while edgelist:\n            minedge=heappop(edgelist)\n            if used[minedge[1]]:\n                continue\n            v=minedge[1]\n            d[v]=minedge[0]\n            used[v]=True\n            for edge in edges[v]:\n                if not used[edge[1]]:\n                    heappush(edgelist,(edge[0]+d[v],edge[1]))\n        return d\n    d=dijkstra(0,N*(K+1),edge)\n    print(min(d[(N-1)*(K+1):]))\n\nif __name__ == '__main__':\n    main()\n","def main():\n    N, K = (int(i) for i in input().split())\n    H = [0] + [int(i) for i in input().split()]\n    # 1-indexed\n    if N == K:\n        return print(0)\n    elif K == 0:\n        ans = 0\n        for i in range(N):\n            ans += max(H[i+1] - H[i], 0)\n        return print(ans)\n    dp = [[10**12]*(N-K+1) for _ in range(N+1)]\n\n    for x in range(N+1):\n        dp[x][1] = H[x]\n\n    for y in range(2, N-K+1):\n        for x in range(N+1):\n            for i in range(1, x):\n                dp[x][y] = min(dp[x][y], dp[i][y-1] + max(0, H[x] - H[i]))\n\n    ans = dp[0][N-K]\n    for i in range(1, N+1):\n        ans = min(ans, dp[i][N-K])\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n","\nimport sys\nsys.setrecursionlimit(10**6)\nreadline = sys.stdin.readline \n\n\n\n\nn,k = [int(i) for i in readline().split()]\na = [0]+[int(i) for i in readline().split()] + [0]\n\nn += 2\n\nINF  = 10**18\n\ndiff = [0]\nfor i in range(n-1):\n    diff.append(max(a[i+1]-a[i],0))\n\nfrom itertools import accumulate\nacc = list(accumulate(diff))\n\nans = {}\n\ndef calc(p,q,k):\n    if (p,q,k) in ans: return ans[(p,q,k)]\n    if k == 0:\n        res = acc[q] - acc[p]\n    elif k == q-p-1:\n        res = max(0,a[q] - a[p])\n    else:\n        res = INF\n        for i in range(p+1,q):\n            for l in range(min(k+1,i-p)):\n                if k-l > q-p-1: break\n                #if p ==1 and q == 4 and k == 1: print(i,l)\n                res = min(res, calc(p,i,l)+calc(i,q,k-l))\n    #print(p,q,k,res)    \n    ans[(p,q,k)] = res    \n    return res\n\n#print(acc)\n#print(a,n)\nprint(calc(0,n-1,k))\n#print(calc(0,n-1,k))\n\n\n\n        \n\n\n\n","n, k = map(int, input().split())\nh = list(map(int, input().split()))\nd = [[i, 0] for i in range(n)]\n\ndef cal_dif(h, idx):\n  if idx == 0:\n    return [i, max(h[idx]-h[idx+1], 0)]\n  elif idx == len(h)-1:\n    return [i, max(h[idx]-h[idx-1], 0)]\n  else:\n    dif = max(h[idx]-h[idx-1], 0) \\\n        + max(h[idx+1]-h[idx], 0) \\\n        - max(h[idx+1]-h[idx-1], 0)\n    return [i, dif]\n# cal max possible difference\nfor i in range(n):\n  d[i] = cal_dif(h, i)\nd2 = sorted(d, key = lambda x:x[1])\n#cal optimal\nfor i in range(k):\n  idx = d2[n-1][0]\n  d[idx][1] = 0\n  if idx == 0:\n    h[idx] = h[idx+1]\n    d[idx+1] = cal_dif(h, idx+1)\n  elif idx == n-1:\n    h[idx] = h[idx-1]\n    d[idx-1] = cal_dif(h, idx-1)\n  else:\n    h[idx] = int((h[idx-1]+h[idx+1])\/2)\n    d[idx-1] = cal_dif(h, idx-1)\n    d[idx+1] = cal_dif(h, idx+1)\n  d2 = sorted(d, key = lambda x:x[1])\n# cal optimal num\ns = h[0]\nfor i in range(1, n):\n  s += max(h[i]-h[i-1], 0)\nprint(s)\n  \n    ","n, k=map(int, input().split())\nhlist = list(map(int, input().split()))\ncost=[]\ndead=[0]*n\nif n!=1:\n    for i in range(n):\n        if i==0:\n            if hlist[i]>=hlist[i+1]:\n                cost.append(hlist[i]-hlist[i+1])\n            else:\n                cost.append(0)\n        elif i==n-1:\n            if hlist[i]>=hlist[i-1]:\n                cost.append(hlist[i]-hlist[i-1])\n            else:\n                cost.append(0)\n        else:\n            if hlist[i]>=hlist[i-1] and hlist[i]>=hlist[i+1]:\n                cost.append(hlist[i]-max(hlist[i-1], hlist[i+1]))\n            elif hlist[i]<=hlist[i-1] and hlist[i]<=hlist[i+1]:\n                cost.append(min(hlist[i-1], hlist[i+1]) - hlist[i])\n            else:\n                cost.append(0)\n    \n    #print(cost)\n    rest=k\n    while rest>0:\n        bango=cost.index(max(cost))\n        hlist=hlist[:bango]+hlist[bango+1:]\n        cost=cost[:bango]+cost[bango+1:]\n        if len(hlist)>=2:\n            for i in [bango-1, bango]:\n                if i==0:\n                    if hlist[i]>=hlist[i+1]:\n                        cost[i]=hlist[i]-hlist[i+1]\n                    else:\n                        cost[i]=0\n                elif i==len(hlist)-1:\n                    if hlist[i]>=hlist[i-1]:\n                        cost[i]=hlist[i]-hlist[i-1]\n                    else:\n                        cost[i]=0\n                else:\n                    if hlist[i]>=hlist[i-1] and hlist[i]>=hlist[i+1]:\n                        cost[i]=hlist[i]-max(hlist[i-1], hlist[i+1])\n                    elif hlist[i]<=hlist[i-1] and hlist[i]<=hlist[i+1]:\n                        cost[i]=min(hlist[i-1], hlist[i+1]) - hlist[i]\n                    else:\n                        cost[i]=0\n            rest-=1\n        else:\n            if rest>1:\n                hlist=[0]\n                break\n            else:\n                break\n        \n        #print(cost, hlist)\n    \n    nul=0\n    mae=0\n    for i in range(len(hlist)):\n        if hlist[i]>=mae:\n            nul+=hlist[i]-mae\n        mae=hlist[i]\n    print(nul)\nelse:\n    if k>=1:\n        print(0)\n    else:\n        print(hlist[0])","import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, k = map(int, input().split())\n    h = [0] + list(map(int, input().split()))\n    \n    dp = [[[0]*2 for _ in range(k+1)] for _ in range(n+1)]\n    \n    for i in range(n):\n        dp[i+1][0][0] += dp[i][0][0]\n        if h[i] < h[i+1]:\n            dp[i+1][0][0] += h[i+1] - h[i]\n        dp[i+1][0][1] = i+1\n    \n    for i in range(1, k+1):\n        for j in range(i, n):\n            sub, bef = dp[j][i]\n            if h[bef] < h[j+1]:\n                sub += h[j+1] - h[bef]\n            \n            if sub < dp[j][i-1][0]:\n                dp[j+1][i][0] = sub\n                dp[j+1][i][1] = j+1\n            elif sub > dp[j][i-1][0]:\n                dp[j+1][i][0] = dp[j][i-1][0]\n                dp[j+1][i][1] = dp[j][i-1][1]\n            else:\n                dp[j+1][i][0] = sub\n                if h[j+1] < h[dp[j][i-1][1]]:\n                    dp[j+1][i][1] = dp[j][i-1][1]\n                else:\n                    dp[j+1][i][1] = j+1\n\n    print(dp[n][k][0])\n    \n    \n    \n    \nif __name__ == \"__main__\":\n    main()\n","# dp[i][j] := i \u5217\u76ee\u307e\u3067\u898b\u3066\u3001i \u5217\u76ee\u3092\u4f7f\u3046\u3068\u3057\u3066\u3001\n#             j \u5217\u7121\u8996\u3057\u305f\u5834\u5408\u306e min\n\nN, K = map(int, input().split())\nH = [0] + list(map(int, input().split()))\ninf = 10**18\ndp = [[inf]*(K+1) for _ in range(N+1)]\ndp[0][0] = 0\nfor i, h in enumerate(H[1:], 1):\n    for j in range(K+1):\n        for k in range(K+1):  # k \u5217\u7121\u8996\u3059\u308b\n            if i-k-1 < 0 or j-k < 0:\n                continue\n            h_p = H[i-k-1]\n            #print(h_p)\n            dp[i][j] = min(dp[i][j], dp[i-k-1][j-k] + max(0, h - h_p))\n        #exit()\n\n#for d in dp:\n#    print(d)\nprint(min(dp[-1]))\n","from array import array\n\ndef main():\n    n,K = map(int, input().split())\n    h = list(map(int, input().split()))\n    inf = 1<<60\n    DP = [array(\"q\", [inf]*(K+1)) for i in range(K+1)]\n    DP[0][0] = 0\n    for i in range(n):\n        hi = h[i]\n        nxt = [array(\"q\", [inf]*(K+1)) for i in range(K+1)]\n        for j in range(min(i+1, K+1)):\n            for k in range(j+1):\n                l = i-k-1\n                if l<0:\n                    left = 0\n                else:\n                    left = h[l]\n                a = hi-left if left<hi else 0\n                nxt[j][0] = min(nxt[j][0], DP[j][k]+a)\n                if j == K:\n                    continue\n                nxt[j+1][k+1] = min(nxt[j+1][k+1], DP[j][k])\n        DP = nxt\n\n    ans = float(\"inf\")\n    for i in DP:\n        ans = min(ans, min(i))\n    print(ans)\n\nmain()","import sys\nsys.setrecursionlimit(2147483647)\nINF=float(\"inf\")\nMOD=10**9+7\ninput=lambda :sys.stdin.readline().rstrip()\ndef resolve():\n    n,k=map(int,input().split())\n    H=[0]+list(map(int,input().split()))\n\n    dp=[[INF]*(n-k+1) for _ in range(n+1)]\n    dp[0][0]=0\n\n    for x in range(1,n+1):\n        for y in range(1,n-k+1):\n            dp[x][y]=min(dp[x0][y-1]+max(0,H[x]-H[x0]) for x0 in range(x))\n\n    print(min(*(dp[x][n-k] for x in range(n+1))))\nresolve()","n, k = map(int, input().split())\nH = [0] + list(map(int, input().split()))\n\nm = n - k\nDP = [[float(\"inf\")] * (m + 1) for _ in range(n + 1)]\n\nDP[0][0] = 0\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if i < j:\n            continue\n        DP[i][j] = min(DP[k][j - 1] + max(0, H[i] - H[k]) for k in range(i))\n\nprint(min(DP[i][m] for i in range(n + 1)))\n","# pylint: disable=invalid-name\n# pylint: disable=missing-docstring\n\n\ndef main():\n    N, K = map(int, input().split())\n    H = [0] + [int(x) for x in input().split()]\n    DP = [[-1 for _ in range(K + 1)] for _ in range(N + 1)]\n    DP[0] = [0 for _ in range(K + 1)]\n    for i in range(1, N + 1):\n        for j in range(K + 1):\n            for k in range(max(i - j - 1, 0), i):\n                previous = DP[k][j - (i - k - 1)]\n                if previous == -1:\n                    continue\n\n                if DP[i][j] == -1 or previous + max(H[i] - H[k], 0) < DP[i][j]:\n                    DP[i][j] = previous + max(H[i] - H[k], 0)\n\n                if j > 0 and DP[i][j - 1] != -1 and DP[i][j - 1] < DP[i][j]:\n                    DP[i][j] = DP[i][j - 1]\n                # print('i {} j {} k {} j - (i - k - 1) {} DP_targ {} DP {}'.\n                #       format(i, j, k, j - (i - k - 1),\n                #              previous + max(H[i] - H[k], 0), DP[i][j]))\n    ans = -1\n    for i in range(N + 1):\n        if K < (N - i):\n            continue\n        if ans == -1 or DP[i][min(K - (N - i), K)] < ans:\n            ans = DP[i][min(K - (N - i), K)]\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n","n, k = map(int,input().split())\nh = list(map(int, input().split()))\n\nfor _ in range(k):\n    h.remove(max(h))\ncnt = 0\nwhile sum(h) > 0:\n    startVal = -1\n    for idx in range(len(h)):\n        if h[idx]>0:\n            if startVal < 0:\n                startVal = idx\n        else:\n            if startVal >= 0:\n                drawrank = min(h[startVal:idx])\n                for didx in range(startVal, idx):\n                    h[didx] -= drawrank\n                cnt += drawrank\n                startVal = -1\n    \n    if startVal >= 0:\n        drawrank = min(h[startVal:idx+1])\n        for didx in range(startVal, idx+1):\n            h[didx] -= drawrank\n        cnt += drawrank\nprint(cnt)\n","n,k = map(int,input().split())\nh = list(map(int,input().split()))\n\nif(n==k):\n    print(0)\n    exit()\n\ninf = 10**9 * (n+1)\ndp = [[inf] * (n-k+1) for _ in range(n+1)]\ndp[0][0] = 0\n\nfor i in range(1,n+1):\n    for j in range(1, n-k+1):\n        if(j==1):\n            dp[i][j] = h[i-1]\n        else:\n            tmp = inf\n            for l in range(1,i):\n                tmp = min(tmp, dp[l][j-1] + max(0, h[i-1]- h[l-1])  )\n            dp[i][j] = tmp\n\nprint(dp[-1][-1])","\nmax2 = lambda x,y: x if x > y else y\nmin2 = lambda x,y: x if x < y else y\n\n\ndef solve(K,H):\n    # dp[i][k] = H[i]\u306f\u6d88\u3055\u305aH[:i]\u307e\u3067\u3067k\u5217\u6d88\u3057\u305f\u3068\u4eee\u5b9a\u3057\u305f\u6642\u306e(H[:i+1]\u306e)\u30b3\u30b9\u30c8\n    H = [0]+H+[0]\n    N = len(H)\n    dp = [[float('inf')]*(i+1) for i in range(N)]\n    dp[0] = [0]\n\n\n    for r,hr in enumerate(H):\n        for l,hl in enumerate(H[:r]):\n            for k in range(l+1):\n                dp[r][k+(r-l-1)] = min2(dp[r][k+(r-l-1)], dp[l][k]+max2(0,hr-hl))\n    return dp[-1][K]\n\nif __name__ == '__main__':\n    N,K = map(int,input().split())\n    H = list(map(int,input().split()))\n\n    print(solve(K,H))","N,T=map(int,input().split())\nx=[]\nfor i in range(N):\n    Ai,Bi=map(int,input().split())\n    x.append((Ai,Bi))\n\nx.sort(key=lambda x:(x[1],x[0]))\n\ndp=[[0 for j in range(T)] for i in range(N)] # i\u756a\u76ee\u307e\u3067\u306e\u6599\u7406\uff08\u6700\u5f8c\u306e\u6599\u7406\u3092\u542b\u307e\u306a\u3044\uff09\u3067j\u5206\u5f8c\uff08<=T-1\u5206\u5f8c\uff09\u307e\u3067\u306b\u5f97\u3089\u308c\u308b\u6e80\u8db3\u5ea6\u306e\u6700\u5927\u5024\uff08\u5358\u7d14dp\uff09\n\n# \u5358\u7d14dp\nfor i in range(N-1):\n    for j in range(T):\n        if x[i][0]>j:\n            dp[i+1][j]=dp[i][j]\n        else:\n            dp[i+1][j]=max(dp[i][j],dp[i][j-x[i][0]]+x[i][1])\n\nprint(dp[N-1][T-1]+x[-1][1])","from functools import lru_cache\n\nn, k = map(int, input().split())\nh = [0] + list(map(int, input().split())) + [0]\nINF = 10 ** 18\n\n\n@lru_cache(maxsize=None)\ndef solve(i, nokori):\n    if i == 0:\n       return 0\n    res = INF\n    for j in range(nokori + 1):\n        if i - 1 - j < 0:\n            break\n        diff = max(h[i] - h[i - 1 - j], 0)\n        res = min(solve(i - 1 - j, nokori - j) + diff, res)\n    return res\n\n\nprint(solve(n + 1, k))","from random import random\n\nprint(rand())","#\n# \u3000\u3000  \u22c0_\u22c0\u3000 \n#\u3000\u3000  (\uff65\u03c9\uff65)  \n# .\uff0f \uff35 \u223d \uff35\uff3c\n#  \u2502\uff0a\u3000\u5408\u3000\uff0a\u2502\n#  \u2502\uff0a\u3000\u683c\u3000\uff0a\u2502 \n#  \u2502\uff0a\u3000\u7948\u3000\uff0a\u2502 \n#  \u2502\uff0a\u3000\u9858\u3000\uff0a\u2502 \n#  \u2502\uff0a\u3000\u3000\u3000\uff0a\u2502 \n#      \uffe3\n#\nimport sys\nsys.setrecursionlimit(10**6)\ninput=sys.stdin.readline\nfrom math import floor,ceil,sqrt,factorial,log #log2\u306a\u3044\uff59\uff50\nfrom heapq import heappop, heappush, heappushpop\nfrom collections import Counter,defaultdict,deque\nfrom itertools import accumulate,permutations,combinations,product,combinations_with_replacement\nfrom bisect import bisect_left,bisect_right\nfrom copy import deepcopy\ninf=float('inf')\nmod = 10**9+7\ndef pprint(*A): \n    for a in A:     print(*a,sep='\\n')\ndef INT_(n): return int(n)-1\ndef MI(): return map(int,input().split())\ndef MF(): return map(float, input().split())\ndef MI_(): return map(INT_,input().split())\ndef LI(): return list(MI())\ndef LI_(): return [int(x) - 1 for x in input().split()]\ndef LF(): return list(MF())\ndef LIN(n:int): return [I() for _ in range(n)]\ndef LLIN(n: int): return [LI() for _ in range(n)]\ndef LLIN_(n: int): return [LI_() for _ in range(n)]\ndef LLI(): return [list(map(int, l.split() )) for l in input()]\ndef I(): return int(input())\ndef F(): return float(input())\ndef ST(): return input().replace('\\n', '')\ndef main():\n    N,K = MI()\n    H=LI()\n    \n    dp = [[0]+[inf]*(N) for _ in range(N)] #dp[right][size]: \u6700\u3082\u53f3\u306e\u9805right, \u3044\u3058\u3063\u3066\u306a\u3044\u3084\u3064\u306e\u6570size\n    for i in range(N):\n        dp[i][1] = H[i]\n    dp[0][1]=H[0]\n    for right in range(N):\n        for size in range(2,N+1):\n\n            for i in range(right):\n                dp[right][size] = min(dp[right][size], dp[i][size-1]+max(0, H[right]-H[i]))\n    ans = dp[N-1][N-K]\n    # print(N-K)\n    # print(*dp,sep=\"\\n\")\n    print(ans)\nif __name__ == '__main__':\n    main()","N,K = map(int,input().split())\n\nH = list(map(int,input().split()))\n\nHSorted = sorted(H)\n\nHIndexToHeight = []\nHHeightToIndex = {}\n\nfor i in range(N):\n    if i != 0 and HSorted[i] == HSorted[i-1]:\n        continue\n    HIndexToHeight.append(HSorted[i])\n    HHeightToIndex[HSorted[i]] = len(HIndexToHeight) - 1\n\nINF = 10 ** 12\n\nheightCount = len(HIndexToHeight)\n\nDP = []\nfor i in range(N):\n    DP.append([])\n    for j in range(K + 1):\n        DP[i].append([])\n        for k in range(heightCount):\n            DP[i][j].append(INF)\n\nfor k in range(heightCount):\n    if k == HHeightToIndex[H[0]]:\n        DP[0][0][k] = H[0]\n    else:\n        DP[0][1][k] = HIndexToHeight[k]\n\nfor i in range(1,N):\n    currentHeight = HHeightToIndex[H[i]]\n    for j in range(K + 1):\n        for k in range(heightCount):\n            if currentHeight > k:\n                if j > 0:\n                    DP[i][j][k] = min(DP[i-1][j-1][k], DP[i][j][k])\n                DP[i][j][currentHeight] = min(DP[i-1][j][k] + HIndexToHeight[currentHeight] - HIndexToHeight[k], DP[i][j][currentHeight])\n            elif currentHeight == k:\n                DP[i][j][currentHeight] = min(DP[i-1][j][k], DP[i][j][currentHeight])\n            else:\n                if j > 0:\n                    DP[i][j][k] = min(DP[i-1][j-1][k], DP[i][j][k])\n                DP[i][j][currentHeight] = min(DP[i-1][j][k], DP[i][j][currentHeight])\nans = INF\n\nfor j in range(K + 1):\n    for k in range(heightCount):\n        if ans > DP[N-1][j][k]:\n            ans = DP[N-1][j][k]\n\nprint(ans)\n\n\n","import sys\ninput=sys.stdin.readline\n\ndef main():\n    n,k=map(int,input().split())\n    H=[0]+list(map(int,input().split()))\n    DP=[[10**12]*(n-k+1) for _ in range(n+1)]\n    DP[0][0]=0\n    for x in range(1,n+1):\n        for y in range(1,n-k+1):\n            for i in range(x):\n                DP[x][y]=min(DP[x][y],DP[i][y-1]+max(0,H[x]-H[i]))\n    print(min(DP[i][-1] for i in range(n+1)))\n\nif __name__=='__main__':\n    main()","ii = lambda : int(input())\nmi = lambda : map(int,input().split())\nli = lambda : list(map(int,input().split()))\n\nn,K = mi()\nhlis = li()\n\ninf = 10 **13 + 7\ndp = [[inf]*n for _ in range(n)]\nfor i in range(n):\n    dp[0][i] = hlis[i]\n\nfor i in range(1,n):\n    for k in range(i,n):\n        #dp[i][k] = min(dp[i][k],dp[i-1][l] + abs)\n        for l in range(k):\n            dp[i][k] = min(dp[i][k],dp[i-1][l] + max(0,hlis[k] - hlis[l]))\n\ntukau = n - K\nans = inf\nif K == n:\n    print(0)\n    exit()\nfor i in range(K,n):\n    ans = min(ans,dp[tukau-1][i])\nprint(ans)\n\n","def examA():\n    N = DI()\/dec(7)\n    ans = N\n    print(N)\n    return\n\ndef examB():\n    ans = 0\n    print(ans)\n    return\n\ndef examC():\n    ans = 0\n    print(ans)\n    return\n\ndef examD():\n    ans = 0\n    print(ans)\n    return\n\ndef examE():\n    ans = 0\n    print(ans)\n    return\n\ndef examF():\n    N, K = LI()\n    H = LI()\n    H.insert(0,0)\n    dp = [[[inf]*(K+1)for _ in range(N+1)] for _ in range(N+1)]\n    dp[0][0][0] = 0\n    for i in range(N):\n        for j in range(i+1):\n            for k in range(K+1):\n                dp[i+1][i+1][k] = min(dp[i+1][i+1][k],dp[i][j][k]+max(0,H[i+1]-H[j]))\n                if k<K:\n                    dp[i+1][j][k+1] = min(dp[i+1][j][k+1],dp[i][j][k])\n\n    ans = inf\n    for j in range(N+1):\n        ans = min(ans,dp[-1][j][-1])\n    #for v in dp:\n    #    print(v)\n    print(ans)\n    return\n\nfrom decimal import getcontext,Decimal as dec\nimport sys,bisect,itertools,heapq,math,random\nfrom copy import deepcopy\nfrom heapq import heappop,heappush,heapify\nfrom collections import Counter,defaultdict,deque\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\ndef I(): return int(input())\ndef LI(): return list(map(int,sys.stdin.readline().split()))\ndef DI(): return dec(input())\ndef LDI(): return list(map(dec,sys.stdin.readline().split()))\ndef LSI(): return list(map(str,sys.stdin.readline().split()))\ndef LS(): return sys.stdin.readline().split()\ndef SI(): return sys.stdin.readline().strip()\nglobal mod,mod2,inf,alphabet,_ep\nmod = 10**9 + 7\nmod2 = 998244353\ninf = 10**18\n_ep = dec(\"0.000000000001\")\nalphabet = [chr(ord('a') + i) for i in range(26)]\nalphabet_convert = {chr(ord('a') + i): i for i in range(26)}\n\ngetcontext().prec = 28\n\nsys.setrecursionlimit(10**7)\n\nif __name__ == '__main__':\n    examF()\n\n\"\"\"\n8 7\n7 3 9 1 5 2 8 3\n\"\"\"","def solve(n, k, h_list):\n    # dp table\n    large = sum(h_list) + 1\n    dp = [[large] * n for _ in range(n + 1)]\n    dp[1][0] = h_list[0]\n    # update\n    for i in range(1, n):\n        for s in range(2, n + 1):\n            dp[s][i] = min([dp[s - 1][j] + max(0, h_list[i] - h_list[j]) for j in range(i)])\n        dp[1][i] = h_list[i]\n    #print(dp)\n    return min(dp[n - k])\n\n\ndef main():\n    n, k = map(int, input().split())\n    h_list = list(map(int, input().split()))\n    res = solve(n, k, h_list)\n    print(res)\n\n\ndef test():\n    assert solve(4, 1, [2, 3, 4, 1]) == 3\n    assert solve(6, 2, [8, 6, 9, 1, 2, 1]) == 7\n    assert solve(10, 0, [1, 1000000000, 1, 1000000000, 1, 1000000000, 1, 1000000000, 1, 1000000000]) == 4999999996\n\n\nif __name__ == \"__main__\":\n    # test()\n    main()\n","n, k = map(int, input().split())\nl_h = list(map(int, input().split()))\n\ndel_num = []\nfor i in range(n):\n  if i == 0:\n    del_num.append(max(0, l_h[i]-l_h[i+1]))\n  elif i == n-1:\n    del_num.append(max(0, l_h[i]-l_h[i-1]))\n  else:\n    del_num.append(max(0, l_h[i]-l_h[i-1], l_h[i]-l_h[i+1]))\nfor i in range(k):\n  idx = del_num.index(max(del_num))\n  l_h[idx] = l_h[idx] - del_num[idx]\n  del_num[idx] = 0\n\nd = []\na = []\nx = 0\ny = 0\nwhile y < len(l_h)-1:\n  if l_h[y] == l_h[y+1]:\n    l_h.pop(y)\n    y -= 1\n  y += 1\nfor i in range(1,len(l_h) - 1):\n  if l_h[i-1] > l_h[i] < l_h[i+1]:\n    a.append(l_h[i])\n    x = 1\nfor i in range(1,len(l_h) - 1):\n  if l_h[i-1] < l_h[i] > l_h[i+1]:\n    d.append(l_h[i])\n    x = 1\nif len(l_h) >= 2:\n  if l_h[0] >= l_h[1]:\n    d.append(l_h[0])\n  if l_h[-1] >= l_h[-2]:\n    d.append(l_h[-1])\n  print(sum(d) - sum(a))\nelse:\n  print(l_h[0])","n, k = map(int, input().split())\nh = list(map(int, input().split()))\n\n#dp[a][b][c]: a\u307e\u3067\u898b\u3066b\u500b\u6d88\u3057\u3066\u3044\u3066\u6d88\u3057\u3066\u306a\u3044\u53f3\u7aef\u304cc\u306e\u3068\u304d\u306e\u6700\u5c0f\u5024(\u305c\u3093\u30761-indexed)\ndp = [[[10**12 for _ in range(n+1)] for _ in range(k+1)] for _ in range(n+1)]\ndp[0][0][0] = 0\n\nfor a in range(n):\n\tfor b in range(k+1):\n\n\t\tfor c in range(a+1):\n\t\t\t#h[a]\u3092\u6d88\u3059\u5834\u5408\n\t\t\tif b < k:\n\t\t\t\tdp[a+1][b+1][c] = min(dp[a+1][b+1][c], dp[a][b][c])\n\n\t\t\t#h[a]\u3092\u6d88\u3055\u306a\u3044\u5834\u5408\n\t\t\tdp[a+1][b][a+1] = min(dp[a+1][b][a+1], dp[a][b][c] + max(0, h[a] - h[c-1]))\n\nprint(min(dp[n][k])+1)","import sys\nsys.setrecursionlimit(10**7)\nINTMAX = 9223372036854775807\nINTMIN = -9223372036854775808\nDVSR = 1000000007\ndef POW(x, y): return pow(x, y, DVSR)\ndef INV(x, m=DVSR): return pow(x, m - 2, m)\ndef DIV(x, y, m=DVSR): return (x * INV(y, m)) % m\ndef LI(): return [int(x) for x in input().split()]\ndef LF(): return [float(x) for x in input().split()]\ndef LS(): return input().split()\ndef II(): return int(input())\ndef FLIST(n):\n    res = [1]\n    for i in range(1, n+1): res.append(res[i-1]*i%DVSR)\n    return res\n\n\nN,K=LI()\nMP=[0] + LI()\nLG = 10**15\nDP=[[LG]*(N+1) for i in range(N-K+1)]\nDP[0][0] = 0\n\nfor i in range(1, N+1):\n    DP[1][i] = MP[i]\n\nfor i in range(1, N-K):\n    for j in range(1, N+1):\n        for k in range(1, j):\n            DP[i+1][j] = min(DP[i+1][j], DP[i][k] + max(0, MP[j] - MP[k]))\n\nres = 10**15\nfor i in range(1, N+1):\n    res = min(res, DP[N-K][i])\nprint(res)\n","def main():\n    n, k = map(int, input().split())\n    tmp = list(map(int, input().split()))\n    h = [0]\n    for v in tmp:\n        h.append(v)\n    dp = [[float(\"inf\")]*(n-k+1) for i in range(n+1)]\n    dp[0][0] = 0\n    for i in range(1, n+1):\n        for j in range(1, n-k+1):\n            tmp = float(\"inf\")\n            for l in range(i):\n                p = max(0, h[i] - h[l])\n                if tmp > dp[l][j-1] + p:\n                    tmp = dp[l][j-1] + p\n            dp[i][j] = tmp\n    ans = float(\"inf\")\n    for i in range(n+1):\n        if ans > dp[i][n-k]:\n            ans = dp[i][n-k]\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()","N, K = [int(s) for s in input().split(' ')]\nH = [int(s) for s in input().split(' ')]\n\n# state: up to nth column, how many skipped, current height(dict)\n# value: how many times it takes to cover\ndp = [[] for _ in range(N)]\n\nfor n, h in enumerate(H):\n  if n == 0:\n    before = [{0: 0}] + [{} for _ in range(K)]\n  else:\n    before = dp[n-1]\n  # skip (k -> k+1)\n  dp[n] = [{}] + before[:-1]\n  current = dp[n]\n  # not skip (update h and count)\n  for k in range(K+1):\n    # before[k] = current[k+1]\n    for h_before, count in before[k].items():\n      candidate = current[k].get(h, float(\"inf\"))\n      if h_before >= h:\n        current[k][h] = min(candidate, count)\n      else:\n        current[k][h] = min(candidate, count + h - h_before)\n      #print(n, k, h, h_before, count, candidate, current[k][h])\n  #print(current)\n\nprint(min([v for d in dp[-1] for v in d.values()]))\n\n\n        \n  \n  ","N,K = map(int,input().split())\nH = [0] + list(map(int,input().split()))\n\nINF = float('inf')\ndp = [[INF]*(N-K+1) for _ in range(N+1)]\ndp[0][0] = 0\n\nfor i,h in enumerate(H):\n    if i==0: continue\n    for j in range(N-K,0,-1):\n        for k in range(i):\n            c = max(0, h - H[k])\n            dp[i][j] = min(dp[i][j], dp[k][j-1] + c)\nprint(min(row[-1] for row in dp))","n,k = map(int,input().split())\nlis = list(map(int,input().split()))\nlis.insert(0,0)\nlis.append(0)\nn += 2\nnum = 0\nfor nu in lis:\n    if nu != 0:\n        num += 1\nif num <= k:\n    print(0)\n    exit()\ncnt = [0 for i in range(n)]\nfor _ in range(k):\n    li = [0 for i in range(n)]\n    for i in range(n):\n        if i != n-1:\n            li[i] = max(li[i],lis[i]-lis[i+1])\n        if i != 0:\n            li[i] = max(li[i],lis[i]-lis[i-1])\n    numm = li.index(max(li))\n    cnt[numm] = 1\n    if numm == 0:\n        lis[0] = lis[1]\n    elif numm == n-1:\n        lis[n-1] = lis[n-2]\n    else:\n        lis[numm] = min(lis[numm-1],lis[numm+1])\nnn = 10 ** 10\nfor i in range(n):\n    if cnt[i] == 1:\n        nn = min(nn,cnt[i])\nfor i in range(n):\n    if cnt[i] == 1:\n        lis[i] = nn    \nans = 0\nnum = 0\nfor i in range(n):\n    if lis[i] >= num:\n        num = lis[i]\n    else:\n        ans += num-lis[i]\n        num = lis[i]\nans += num\nprint(ans)","n, k = map(int, input().split())\nh = list(map(int, input().split()))\n\nif k == n:\n    print(0)\n    exit()\n\ndp = [[0 for _ in range(n)] for _ in range(n-k)]\n\ndp[0] = [] + h\n\nfor x in range(1, n-k):\n    for y in range(n):\n        temp = float('inf')\n        for i in range(y):\n            temp = min(temp, dp[x-1][i] + max(0, h[y] - h[i]))\n        dp[x][y] = temp\n\n#for x in dp: print(x)\n\nprint(min(dp[n-k-1]))","def main():\n    import sys\n    input = sys.stdin.readline\n\n    N, K = map(int, input().split())\n    H = list(map(int, input().split()))\n    H.append(0)\n    H.insert(0, 0)\n    N += 2\n\n    inf = 10**12\n    dp = [[inf] * (K+1) for _ in range(N)]\n    dp[0][0] = 0\n    for i in range(N):\n        for k in range(K+1):\n            for j in range(K-k+1):\n                if i + j + 1 < N:\n                    dp[i+j+1][k+j] = min(dp[i+j+1][k+j], dp[i][k] + max(0, H[i+j+1] - H[i]))\n    print(min(dp[-1]))\n\n\nif __name__ == '__main__':\n    main()\n","N, K = list(map(int, input().split()))\nH = list(map(int, input().split()))\n\nN += 1\nH = [0] + H\n\nDP = [[0] * N for _ in range(N)]\n\nfor i in range(1, N):\n  DP[i][i - 1] = max(0, H[i] - H[0])\n  for j in range(i - 1):\n    DP[i][j] = DP[i - 1][j] + max(0, H[i] - H[i - 1])\n    for k in range(j + 1):\n      DP[i][j] = min(DP[i][j], DP[i - k - 1][j - k] + max(0, H[i] - H[i - k - 1]))\n\nans = DP[-1][K]\nfor i in range(K - 1, -1, -1):\n  ans = min(ans, DP[N - K + i][K])\n\nprint(ans)","n,k=map(int,input().split())\ndp=[]\nfor i in range(n+2):\n  dp.append([])\n  for j in range(n+2):\n    dp[-1].append([])\n    for l in range(k+1):\n      dp[-1][-1].append(10**12)\nfor l in range(k+1):\n    dp[0][0][l]=0\nh=list(map(int,input().split()))\nh.append(0)\nh.reverse()\nh.append(0)\nh.reverse()\nfor i in range(1,n+2):\n  for j in range(n+2):\n    for l in range(k+1):\n      dp[i][i][l]=min(dp[i][i][l],dp[i-1][j][l]+max(0,h[i]-h[j]))\n      if l>0:\n        dp[i][j][l]=min(dp[i][j][l],dp[i-1][j][l-1])\n        dp[i][0][l]=min(dp[i][0][l],dp[i-1][j][l-1]+h[j])\nans=dp[n+1][0][0]\nfor j in range(n+2):\n  for l in range(k+1):\n    ans=min(ans,dp[n+1][j][l])\nprint(ans)","import sys\nN, K = map(int, input().split())\nH = list(map(int, input().split()))\nif N<=K:\n    print(0)\n    sys.exit()\ndp = [[[float('inf')]*(K+2) for i in range(N+2)] for j in range(N+1)]\ndp[0][0][0] = H[0]\ndp[0][-1][1] = 0\nfor i in range(N-1):\n    for j in range(i+1):\n        for k in range(K+1):\n            if H[j]>H[i+1]:\n                dp[i+1][i+1][k] = min(dp[i][j][k], dp[i+1][i+1][k])\n            else:\n                dp[i+1][i+1][k] = min(dp[i+1][i+1][k], dp[i][j][k]+H[i+1]-H[j])\n                dp[i+1][j][k+1] = min(dp[i][j][k], dp[i+1][j][k+1])\n    for k in range(K):\n        dp[i+1][-1][k+1] = min(dp[i][-1][k], dp[i+1][-1][k+1])\n        dp[i+1][i+1][k] = min(dp[i+1][i+1][k], dp[i][-1][k]+H[i+1])\n\nans = float('inf')\nfor i in range(K+1):\n    res = min(dp[N-1][j][i] for j in range(N))\n    ans = min(ans, res)\nprint(ans)\n\n\n            \n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n\n        \n\n\n\n\n","N,K= map(int,input().split())\nH= list(map(int,input().split()))\n\ndef dpinit(ps, val=0):\n    res = [val for i in [0]*ps[-1]]\n    for i in ps[:-1][::-1]:\n        res = [res[:] for k in [0]*i]\n    return res\n\nH = [0] + H + [0]\ndp = dpinit((N+2,K+2))\n\nfor i in range(1,N+2):\n    for j in range(K+1):\n        l = min(j+1,i)\n        cand = [dp[i-k][j-k+1] + max(0, H[i]-H[i-k]) for k in range(1,l+1)]\n        dp[i][j] = min(cand)\n\nprint(dp[N+1][K])\n\n","import sys\n\n\nN,K = map(int,input().split())\n\nif N == K:\n    print (0)\n    sys.exit()\n\nH = list(map(int,input().split()))\n\n\ndp = [[None] * (N-K+1) for i in range(N) ]\n\nfor i in range(N):\n\n    nh = H[i]\n\n    dp[i][1] = nh\n\n    for j in range(i):\n        for k in range(N-K):\n\n            if dp[j][k] != None:\n\n                if dp[i][k+1] == None:\n                    \n                    dp[i][k+1] = dp[j][k] + max(0, H[i]-H[j])\n\n                else:\n\n                    dp[i][k+1] = min(dp[i][k+1] , dp[j][k] + max(0, H[i]-H[j]))\n\nans = float(\"inf\")\nfor i in range(N):\n\n    if dp[i][-1] != None:\n        ans = min(ans,dp[i][-1])\n\nprint (ans)\n\n","N,K=map(int,input().split())\nh=list(map(int,input().split()))\n\ndp=[[float(\"inf\") for j in range(N+1)] for k in range(N)]\n\nfor j in range(N):\n    dp[j][1]=h[j]\n    dp[j][0]=0\n\nfor i in range(1,N):\n    for j in range(2,N+1):\n        dp[i][j]=min(dp[k][j-1]+(h[i]-h[k])*(h[i]>=h[k]) for k in range(i))\n\ntest1=min(dp[i][N-K] for i in range(N))\nprint(test1)\n","inpl = lambda: list(map(int,input().split()))\nN, K = inpl()\nH = [0] + inpl() + [0]\ndp = [[0]*(K+1) for _ in range(N+2)]\nfor n in range(1,N+2):\n    for k in range(K+1):\n        if k >= n-1:\n            dp[n][k] = H[n]\n        else:\n            dp[n][k] = min(dp[n-1-l][k-l] + max(0,H[n]-H[n-1-l]) for l in range(k+1))\nprint(dp[-1][-1])","\nfrom collections import defaultdict,deque\nimport sys,heapq,bisect,math,itertools,string,queue,copy,time\nimport numpy as np\nsys.setrecursionlimit(10**8)\nINF = float('inf')\nmod = 10**9+7\neps = 10**-7\ndef inp(): return int(sys.stdin.readline())\ndef inpl(): return list(map(int, sys.stdin.readline().split()))\ndef inpl_str(): return list(sys.stdin.readline().split())\n\nN,K = inpl()\ndp = np.zeros((N,K+1),np.uint64)\nHH = inpl()\n\n\nbHs = np.zeros((K+1),int)\nfor n,H in enumerate(HH):\n    for k in reversed(range(1,K+1)):\n        used = dp[n-1][k-1]\n        unused = dp[n-1][k] + max(0,H-bHs[k])\n        # print(bHs,used,unused)\n        if used < unused:\n            dp[n][k] = used\n            bHs[k] = bHs[k-1]\n        else:\n            dp[n][k] = unused\n            bHs[k] = H\n\n    dp[n][0] = dp[n-1][0] + max(0,H-bHs[0])\n    bHs[0] = H\n\n    # print(dp[n], bHs)\n\nprint(min(dp[-1]))\n","n,k = map(int,input().split())\na = [0]+list(map(int,input().split()))\ndp = [[(10**18,0) for i in range(k+1)] for j in range(n+1)]\ndp[0][0] = (0,0)\nmx = 0\nfor i in range(1,n+1):\n  x = a[i]\n  dp[i][0] = (dp[i-1][0][0]+max(0,a[i]-a[i-1]),x)\n  for j in range(1,k+1):\n    pr = dp[i-1][j][1]\n    y = max(0,x-pr)\n    if dp[i-1][j][0]+y > dp[i-1][j-1][0]:\n      dp[i][j] = (dp[i-1][j-1][0],dp[i-1][j-1][1])\n    else:\n      dp[i][j] = (dp[i-1][j][0]+y,x)\nprint(dp[n][k][0])","import sys\ninput = sys.stdin.readline\n\ndef I(): return int(input())\ndef MI(): return map(int, input().split())\ndef LI(): return list(map(int, input().split()))\n\ndef main():\n    \"\"\"\n    \u30e1\u30e2\n    K=0\u306a\u3089\uff0c\u5de6\u304b\u3089\u898b\u3066\u767b\u3063\u305f\u6570\u3092\u6570\u3048\u308b\uff0cgrandGarden\n    K>=1\u306e\u6642\uff0c\u5857\u308b\u5217\u306f\u5de6\u53f3\u3069\u3061\u3089\u304b\u3068\u540c\u3058\u9ad8\u3055\u306b\u3059\u308b\uff0e\u540c\u3058\u9ad8\u3055\u3067\u4f55\u500b\u304b\u9023\u306a\u3063\u3066\u3044\u308b\u3068\u9762\u5012\u304b\u3082\uff1f\n    \u5de6\u53f3\u3069\u3061\u3089\u304b\u3068\u540c\u3058\u9ad8\u3055\u306b\u3059\u308b\u3068\u3044\u3046\u306e\u306f\u9010\u6b21\u7684\u306a\u8a71\uff0c1,1,1,5,4,5,1\u3067K=3\u306a\u3089\u7b54\u3048\u306f1\n    K\u500b\u3092\u7121\u8996\u3067\u304d\u308b\u3068\u8003\u3048\u308b\uff0e\n    dp[x][y][k]\u3067\uff0cx\u301cy\u307e\u3067\uff0ck\u500b\u7121\u8996\u3068\u8003\u3048\u308c\u3070\u9077\u79fb\u3082\u542b\u3081\u30665\u4e57\u304f\u3089\u3044\u3067\u884c\u3051\u305d\u3046\n    =>0\u304b\u3089\u30b9\u30bf\u30fc\u30c8\u3060\u3051\u3067\u826f\u3044\uff0cdp[x][k]\u3067\u884c\u3051\u305d\u3046\uff1f\uff0ex\u306e\u3068\u3053\u308d\u306f\u4f7f\u3063\u3066\u3044\u308b\u3082\u306e\u3068\u3059\u308b\uff0e\n    =>\u300cK\u56de\u4f7f\u3048\u308b\u300d\u3088\u308a\u3082\u300c\u4f7f\u3063\u305f\u6570\u304c\u3044\u304f\u3064\u304b\u300d\u3092\u8a18\u61b6\u3057\u3066\u304a\u304f\u307b\u3046\u304c\u697d\u305d\u3046\n    \"\"\"\n    N,K=MI()\n    H=[0]+LI()\n    N+=1\n    inf=10**12\n    dp=[[inf]*(N) for _ in range(N)]\n    # dp[i][j]\u306fi\u756a\u76ee\u307e\u3067\u898b\u3066\uff0cj\u500b\u306e\u8981\u7d20\u304b\u3089\u306a\u308b\n    dp[0][0]=0\n    \n    for i in range(1,N):\n        for j in range(N):\n            temp=inf\n            for k in range(i):#\u3069\u3053\u304b\u3089\u304f\u308b\u304b\n                temp=min(temp,dp[k][j-1]+max(0,H[i]-H[k]))\n            dp[i][j]=temp\n    \n    ans=inf\n    \n    for i in range(N):\n        ans=min(ans,dp[i][N-K-1])\n    print(ans)\n\nmain()\n","N, K = map(int, input().split())\nH = list(map(int, [0] + input().split() + [0]))\nd = [[10**18]*(K+1) for _ in range(N+2)]\nfor i in range(K+1):\n    d[0][i] = 0\nfor hi in range(N+1):\n    hi+=1\n    h = H[hi]\n    for i in range(min(K+1, hi)):\n        for k in range(i+1):\n            d[hi][i] = min(d[hi][i], d[hi-k-1][i-k] + max(H[hi-k-1]-h, 0))\nprint(min(d[-1]))\n","import numpy as np\n\nn, k = map(int, input().split())\nh = np.array(input().split(), dtype=np.int)\n\nif k < n:\n  dp = np.zeros((n - k, n), dtype=np.int)\n  dp[0] = h\n  for i in range(n - k - 1):\n    for j in range(i + 1, n):\n      dp[i+1, j] = np.min(dp[i][i:j] + np.maximum(h[j] - h[i:j], 0))\n  print(dp[n-k-1, n-k-1:])\nelse:\n  print(0)","INF = float(\"inf\")\n\nN, K, *H = map(int, open(0).read().split())\nH = [0] + H\n\nif N == K:\n    print(0)\n    quit()\n\ndp = [0] + [INF] * N\nfor i in range(1, N - K + 1):\n    dp = [INF] * i + [min(dp[k] + max(0, h - H[k]) for k in range(i - 1, j)) for j, h in enumerate(H[i:], i)]\n\nprint(min(dp))","n, k = list(map(int, input().split()))\nhs = [0] + list(map(int, input().split())) \n\n\nmax_val = sum([max(hs[i + 1] - hs[i], 0) for i in range(n)])\ndp = [[max_val for _ in range(n + 1)] for _ in range(n + 1)]\n\ndp[0][0] = 0\nfor i in range(1, n + 1):\n\tfor j in range(1, n + 1):\t\n\t\tdp[i][j] = min([dp[i - 1][l] + max(hs[j] - hs[l], 0) for l in range(j)])\n\nprint(min([dp[n - k][l] for l in range(n + 1)]))","import sys\nimport math\nfrom collections import defaultdict\n\nsys.setrecursionlimit(10**7)\ndef input():\n    return sys.stdin.readline()[:-1]\n\nmod = 10**9 + 7\n\ndef I(): return int(input())\ndef II(): return map(int, input().split())\ndef III(): return list(map(int, input().split()))\ndef Line(N,num):\n    if N<=0:\n        return [[]]*num\n    elif num==1:\n        return [I() for _ in range(N)]\n    else:\n        read_all = [tuple(II()) for _ in range(N)]\n        return map(list, zip(*read_all))\n\n#################\n\nN,K = II()\nH = III()\n\nif N==1:\n    if K>=1:\n        print(0)\n        exit()\n    else:\n        print(H[0])\n        exit()\n\nans = 0\nfor i in range(N):\n    if i==0:\n        ans += H[i]\n    else:\n        if H[i]>H[i-1]:\n            ans += H[i]-H[i-1]\n\ndef calc(H):\n    N = len(H)\n    x = [0]*N\n    muki = [0]*N\n    for i in range(N):\n        if i!=0 and i!=N-1:\n            if H[i]>H[i-1] and H[i]>H[i+1]:\n                x[i] = min(H[i]-H[i-1], H[i]-H[i+1])\n                muki[i] = 1\n            if H[i]<H[i-1] and H[i]<H[i+1]:\n                x[i] = min(-H[i]+H[i-1], -H[i]+H[i+1])\n                muki[i] = -1\n        if i==0:\n            if H[i]>H[i+1]:\n                x[i] = H[i]-H[i+1]\n        if i==N-1:\n            if H[i]>H[i-1]:\n                x[i] = H[i]-H[i-1]\n    return x,muki\n\nfor k in range(K):\n    x,muki = calc(H)\n    maxi = -1\n    maxval = -1\n    for i in range(N):\n        if x[i]>maxval:\n            maxval = x[i]\n            maxi = i\n    if maxval<=0:\n        break\n    else:\n        if maxi==0:\n            H[0] = H[1]\n            ans -= x[0]\n        elif maxi==N-1:\n            H[N-1] = H[N-2]\n            ans -= x[N-1]\n        else:\n            if muki[i]==1:\n                H[maxi] = min(H[maxi-1], H[maxi+1])\n            if muki[i]==-1:\n                H[maxi] = max(H[maxi-1], H[maxi+1])\n            ans -= x[maxi]\n\nprint(ans)","n,k=map(int,input().split())\nA=list(map(int,input().split()))\n\ndp1=[(10**18,0)for i in range(k+2)]\ndp2=[(10**18,0)for i in range(k+2)]\ndp1[0]=(0,0)\ndp2[0]=(0,0)\n\nfor t,h in enumerate(A):\n    for i in range(min(t+1,k),-1,-1):\n        ca1,la1=dp1[i]\n        cb1,lb1=dp2[i]\n        ca2,la2=dp1[i-1]\n        cb2,lb2=dp2[i-1]\n        #\u4f7f\u308f\u306a\u3044\n        t1=(ca1+h-la1,h) if la1<h else (ca1,h)\n        t2=(cb1+h-lb1,h) if lb1<h else (cb1,h)\n        #\u4f7f\u3046\n        t3=(ca2,min(h,la2))\n        t4=(cb2,min(h,lb2))\n        T=[t1,t2,t3,t4]\n        dp1[i]=min(T,key=lambda x: (x[0],-x[1]))\n        dp2[i]=min(T,key=lambda x: (-x[1],x[0]))\n\nprint(min(dp1[k][0],dp2[k][0]))\n\n\"\"\"\n0 2\n100 100000 1000021 100\n\n\"\"\"\n","import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nimport numpy as np\n\nN,K = map(int,readline().split())\nH = np.array([0] + read().split(),np.int64)\n\nINF = 10 ** 17\ndp = np.full((N+1,N+1),INF,np.int64)\ndp[0,0] = 0\n\nfor n,x in enumerate(H[1:],1):\n    add = np.maximum(0, x - H[:n])\n    dp[n,1:] = np.min(dp[:n,:-1] + add[:,None], axis=0)\n\nanswer = dp[:,N-K:].min()\nprint(answer)","N,K=map(int,input().split())\nH=list(map(int,input().split()))\ndef f(H):\n    x,y=0,0\n    for h in H:\n        if h>y:\n            x+=h-y\n        y=h\n    return x\ndp=[(f(H),H)]+[(0,[])]*K\nfor i in range(1,K+1):\n    x,y=dp[i-1]\n    for j in range(len(dp[i-1][1])):\n        z=f(dp[i-1][1][:j]+dp[i-1][1][j+1:])\n        if z<x:\n            x,y=z,dp[i-1][1][:j]+dp[i-1][1][j+1:]\n    dp[i]=x,y\nprint(dp[-1][0])","n, k = map(int, input().split())\nh = [0] + list(map(int, input().split())) + [0]\n\nfor i in range(k):\n    dif = []\n    for j in range(len(h) - 2):\n        temp = [h[j + 1] - h[j], h[j + 1] - h[j + 2]]\n        if temp[0] * temp[1] <= 0:\n            dif.append(0)\n        else:\n            dif.append(min([abs(temp[0]), abs(temp[1])]))\n    del h[dif.index(max(dif)) + 1]\ncount = 0\nfor i in range(len(h) - 1):\n    if h[i] < h[i + 1]:\n        count += (h[i + 1] - h[i])\nprint(count)","import sys\n\nstdin = sys.stdin\n\nni = lambda: int(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nns = lambda: stdin.readline().rstrip()  # ignore trailing spaces\n\nn, k = na()\nh = na()\n\nys = h[:] + [0]\nys.sort()\n\nys2 = []\nfor v in ys:\n    if len(ys2) > 0 and ys2[-1] == v:\n        continue\n    ys2.append(v)\nys = ys2\nm = len(ys)\n\ndp = [[999999999999999999] * m for _ in range(k+1)]\ndp[0][0] = 0\n\nfor v in h:\n    ndp = [[999999999999999999] * m for _ in range(k + 1)]\n    for i in range(k+1):\n        plus = 99999999999999999\n        for j in range(m):\n            plus = min(plus + (ys[j] - ys[j-1] if j > 0 else 0), dp[i][j])\n            if ys[j] == v:\n                ndp[i][j] = min(ndp[i][j], plus)\n            elif i+1 <= k:\n                ndp[i+1][j] = min(ndp[i+1][j], plus)\n        plus = 99999999999999999\n        for j in range(m-1, -1, -1):\n            plus = min(plus, dp[i][j])\n            if ys[j] == v:\n                ndp[i][j] = min(ndp[i][j], plus)\n            elif i+1 <= k:\n                ndp[i+1][j] = min(ndp[i+1][j], plus)\n    dp = ndp\n\nans = min(min(row) for row in dp)\nprint(ans)\n","#!\/usr\/bin\/env python3\nimport sys\ninput = sys.stdin.readline\nMOD = 10**9 + 7\nINF = 10**13\n\nn, K = [int(item) for item in input().split()]\nh = [0] + [int(item) for item in input().split()]\n\n# dp[i][j][k] i:till ith, j:skipped j, k: previous index\ndp = [[[INF] * (n + 1) for _ in range(n + 1)] for _ in range(n + 1)]\nfor i, item in enumerate(h):\n    if i == 0:\n        dp[0][0][0] = 0\n        continue\n    for j in range(n-1, -1, -1):\n        for k in range(n-1, -1, -1):\n            if dp[i-1][j][k] == INF:\n                continue\n            # skip\n            dp[i][j+1][k] = min(dp[i][j+1][k], dp[i-1][j][k])\n            # use\n            dp[i][j][i] = min(dp[i][j][i], dp[i-1][j][k] + max(0, h[i] - h[k]))\n            \nans = INF\nfor j in range(n+1):\n    ans = min(ans, dp[n][K][j])\n\nprint(ans)","n, k = map(int, input().split())\nh = [0] + list(map(int, input().split())) + [0]\ninf = 10 ** 13\ndp = [[0] * (k + 1)]\nfor i in range(1, n + 2):\n    dp.append([inf] * (k + 1))\n    for j in range(i):\n        for u in range(i - j - 1, k + 1):\n            dp[-1][u] = min(dp[-1][u], dp[j][u - i + j + 1] + max(h[i] - h[j], 0))\nprint(min(dp[-1]))\n","N, K = map(int, input().split())\nH = [0] + list(map(int, input().split())) + [0]\n\n# dp[i][j] = minimum operations upto col i (fixed), with j moves remaining\ndp = [[float('inf') for i in range(K+1)] for j in range(N+2)]\ndp[0] = [0 for i in range(K+1)]\n\ndef cost(i, j):\n    return max(0, H[j] - H[i])\n\nfor i in range(1, N+2):\n    for j in range(K+1):\n        for d in range(j+1):\n            if i-d-1 < 0: break\n            dp[i][j] = min(dp[i][j], cost(i-d-1, i) + dp[i-d-1][j-d])\n                \nprint(dp[-1][K])\n","def main():\n    N, K = map(int, input().split())\n    H = [0] + list(map(int, input().split()))\n    dp = [[float(\"inf\")] * (N+1) for _ in range(N+1)]\n    dp[0][0] = 0\n    for i in range(1, N+1):\n        for j in range(i):\n            diff = max(H[i] - H[j], 0)\n            for k in range(min(N-K, j+1)):\n                dp[i][k+1] = min(dp[i][k+1], dp[j][k] + diff)\n    ans = float(\"inf\")\n    for i in range(N+1):\n        ans = min(ans, dp[i][N-K])\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n","\nimport sys\ndef input():\n\treturn sys.stdin.readline().strip()\n\n\nclass Union_Find():\n\tdef __init__(self, n):\n\t\tself.union = [i for i in range(n)]\n\t\tself.level = [0 for i in range(n)]\n\n\tdef root(self, i, mode=0):\n\t\tkeiro = [i]\n\t\tans = i\n\t\twhile ans != self.union[ans]:\n\t\t\tans = self.union[ans]\n\t\t\tkeiro.append(ans)\n\t\tif mode == 0:\n\t\t\treturn ans\n\t\telse:\n\t\t\treturn ans, keiro\n\n\tdef unite(self, i, j):\n\t\troot_i, list_i = self.root(i, 1)\n\t\troot_j, list_j = self.root(j, 1)\n\t\tif root_i != root_j:\n\t\t\tif self.level[root_i] < self.level[root_j]:\n\t\t\t\tself.level[root_j] = max(self.level[root_i] + 1, self.level[root_j])\n\t\t\t\tfor node in list_i:\n\t\t\t\t\tself.union[node] = root_j\n\t\t\telse:\n\t\t\t\tself.level[root_i] = max(self.level[root_j] + 1, self.level[root_i])\n\t\t\t\tfor node in list_j:\n\t\t\t\t\tself.union[node] = root_i\n\n\nN, T = list(map(int, input().split()))\n\nH = [0]\n\nH.extend(list(map(int, input().split())))\n\nH.append(0)\n\nUF = Union_Find(N + 2)\nfor i in range(1, N):\n\tif H[i] == H[i + 1]:\n\t\tUF.unite(i, i + 1)\n\n\nfor t in range(T):\n\tmax_diff = 0\n\tmax_next = -1\n\tmax_next_next = -1\n\tfor i in range(1, N + 1):\n\t\tif UF.root(i) != i:\n\t\t\tcontinue\n\t\tbase = i + 1\n\t\twhile True:\n\t\t\tif UF.root(base) != i or base == N + 1:\n\t\t\t\tright = base\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tbase += 1\n\t\tbase = i - 1\n\t\twhile True:\n\t\t\tif UF.root(base) != i or base == 0:\n\t\t\t\tleft = base\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tbase -= 1\n\t\tdiff = min(abs(H[i] - H[right]), abs(H[i] - H[left]))\n\t\tif (H[i] - H[right])*(H[i] - H[left]) < 0:\n\t\t\tcontinue\n\t\tif diff >= max_diff:\n\t\t\tmax_diff = diff\n\t\t\tmax_next = i\n\t\t\tif abs(H[i] - H[right]) < abs(H[i] - H[left]):\n\t\t\t\tmax_next_next = right\n\t\t\telse:\n\t\t\t\tmax_next_next = left\n\tUF.unite(max_next, max_next_next)\n\t_, keiro = UF.root(max_next, mode=1)\n\tfor num in keiro:\n\t\tH[num] = H[max_next_next]\n\nfor i in range(1, N + 1):\n\tH[i] = H[UF.root(i)]\n\nlength_list = set()\nfor i in range(1, N + 1):\n\tif i == UF.root(i):\n\t\tlength_list.add(H[i])\nlength_list = list(length_list)\nlength_list.sort()\n\nsum = 0\nbefore_length = 0\nfor length in length_list:\n\tsum_part = 0\n\tnum_disjoin = 0\n\tfor i in range(1, N + 1):\n\t\tif H[i] >= length and H[i - 1] < length:\n\t\t\tsum_part += 1\n\n\tsum += sum_part*(length - before_length)\n\tbefore_length = length\n\nprint(sum)","import math\nimport sys\n\nN, K = map(int, input().split())\nH = [0] + list(map(int, input().split()))\nif K == 0:\n    ans = 0\n    pre = 0\n    for h in H:\n        ans += max(0, h - pre)\n        pre = h\n    print(ans)\n    sys.exit()\ndp = [[math.inf]*(K+1) for _ in range(N+1)]  # (\u76f4\u524d\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9, \u4f7f\u3063\u305fk) =>\u3000\u6700\u5c0f\ndp[0][0] = 0\nfor i in range(1, N + 1):\n    for j in range(i):\n        for k in range(K+1):\n            dp[i][k] = min(dp[j][k] + max(0, H[i] - H[j]), dp[i][k])\n    for j in range(i):\n        for k in range(K-1, -1, -1):\n            dp[j][k + 1] = dp[j][k]\n        dp[j][0] = math.inf\nans = math.inf\nfor i in range(N + 1):\n    ans = min(ans, min(dp[i]))\nprint(ans)\n","LI = lambda: list(map(int, input().split()))\n\nN, K = LI()\nH = LI()\n\nINF = 10 ** 15\n\n\ndef main():\n    h = [0] + H\n    dp = [[INF] * (N + 1) for _ in range(N + 1)]\n    dp[0][0] = 0\n    for i in range(1, N + 1):\n        for j in range(1, i + 1):\n            v = INF\n            for k in range(i):\n                x = max(0, h[i] - h[k])\n                v = min(v, dp[k][j - 1] + x)\n            dp[i][j] = v\n\n    ans = min([dp[i][N - K] for i in range(N - K, N + 1)])\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n","import sys\nreadline = sys.stdin.readline\nN, K = map(int, readline().split())\nH = list(map(int, readline().split()))\nH = [0] + H\nN += 1\ninf = 10**18\ndp = [[[inf]*(K+1) for j in range(N)] for i in range(N)]\ndp[0][0][0] = 0\nfor i in range(1, N):\n    hi = H[i]\n    for j in range(i):\n        hj = H[j]\n        for k in range(1, 1 + min(K, i)):\n            dp[i][j][k] = dp[i-1][j][k-1]\n    for k in range(min(K+1, i)):\n        dp[i][i][k] = min(dp[i-1][j][k] + max(0, hi - H[j]) for j in range(i))\n\nprint(min(min(dp[N-1][j]) for j in range(N)))","N, K = map(int, input().split())\nH = [0] + [int(a) for a in input().split()]\nX = [[1<<100] * (N-K+1) for _ in range(N+1)]\nX[0][0] = 0\nfor i in range(1, N+1):\n    for j in range(1, min(i+1, N-K+1)):\n        X[i][j] = min([X[ii][j-1] + max(H[i] - H[ii], 0) for ii in range(i)])\n\nprint(min([x[-1] for x in X]))","N, K = map(int, input().split())\nH = list(map(int, input().split()))\nH = [0] + H\n\n\ndp = [[float('inf')] * (N + 1) for i in range(N + 1)]\ndp[0][0] = 0\n\nfor i in range(1, N + 1):\n    for j in range(1, N + 1):\n        for x in range(i):\n            dp[i][j] = min(dp[i][j], dp[x][j - 1] + max(0, H[i] - H[x]))\n\n\nans = float('inf')\nfor i in range(N + 1):\n    ans = min(ans, dp[i][max(0,  N - K)])\n\nprint(ans)\n","import sys\n\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\n\ndef main():\n    inf = 10 ** 16\n    n, k = map(int, input().split())\n    hh = [0] + list(map(int, input().split()))\n    dp = [[0] * (k + 1) for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        h = hh[i]\n        for j in range(k + 1):\n            v = inf\n            for nd in range(k + 1):\n                if i - 1 - nd < 0 or j - nd < 0: break\n                v = min(v, dp[i - 1 - nd][j - nd] + max(0, h - hh[i - 1 - nd]))\n            dp[i][j] = v\n    print(min(dp[n]))\n\nmain()\n","import sys\n\nreadline = sys.stdin.readline\nMOD = 10 ** 9 + 7\nINF = float('INF')\nsys.setrecursionlimit(10 ** 5)\n\n\ndef main():\n    N, K = map(int, readline().split())\n    H = [0] + list(map(int, readline().split())) + [0]\n\n    dp = [[INF] * (N + 1) for _ in range(N + 1)]\n\n    for i in range(N + 1):\n        dp[i][0] = 0\n\n    for i in range(1, N + 1):\n        dp[i][1] = H[i]\n        for j in range(2, i + 1):\n            for k in range(1, i):\n                dp[i][j] = min(dp[i][j], dp[k][j - 1] + max(0, H[i] - H[k]))\n\n    print(dp[N][N - K])\n\n\nif __name__ == '__main__':\n    main()\n","import sys\ninput = sys.stdin.readline\n\nINF = 10**18\n\nN, K = map(int, input().split())\nA = [0] + list(map(int, input().split())) + [0]\n\ndp = [[INF]*(K+1) for _ in range(N+2)]\ndp[0][0] = 0\nfor i in range(1, N+2):\n    for k in range(K+1):\n        tmp = INF\n        for j in range(max(0, i-k-1), i):\n            tmp = min(tmp, dp[j][k-(i-j-1)] + max(0, A[i]-A[j]))\n        dp[i][k] = tmp\n\nprint(min(dp[-1]))","# -*- coding: utf-8 -*-\n\nimport sys\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x \/\/ y))\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nsys.setrecursionlimit(10 ** 9)\nINF = 10 ** 18\nMOD = 10 ** 9 + 7\n\nN, K = MAP()\nM = N - K\nA = [0] + LIST()\n\n# dp[i][j] := \u5217\u3092i\u500b\u4f7f\u3063\u3066\u3001\u6700\u5f8c\u306b\u4f7f\u3063\u305f\u306e\u304cj\u5217\u76ee\u306e\u6642\u306e\u6700\u5c0f\u30b3\u30b9\u30c8\ndp = list2d(M+1, N+1, INF)\ndp[0][0] = 0\nfor i in range(M):\n    for j, h1 in enumerate(A[i:], i):\n        if dp[i][j] == INF:\n            break\n        for k in range(j+1, N+1):\n            h2 = A[k]\n            dp[i+1][k] = min(dp[i+1][k], dp[i][j] + max(h2 - h1, 0))\nprint(min(dp[M]))\n","#!usr\/bin\/env python3\nfrom collections import defaultdict,deque\nfrom heapq import heappush, heappop\nimport sys\nimport math\nimport bisect\nimport random\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef I(): return int(sys.stdin.readline())\ndef LS():return [list(x) for x in sys.stdin.readline().split()]\ndef S():\n    res = list(sys.stdin.readline())\n    if res[-1] == \"\\n\":\n        return res[:-1]\n    return res\ndef IR(n):\n    return [I() for i in range(n)]\ndef LIR(n):\n    return [LI() for i in range(n)]\ndef SR(n):\n    return [S() for i in range(n)]\ndef LSR(n):\n    return [LS() for i in range(n)]\n\nsys.setrecursionlimit(1000000)\nmod = 1000000007\n\ndef solve():\n    n,k = LI()\n    h = LI()\n    h.insert(0,0)\n    dp = [[float(\"inf\")]*(n+1) for i in range(n+1)]\n    dp[0][0] = 0\n    for i in range(n):\n        ni = i+1\n        hi = h[ni]\n        for s in range(n):\n            ns = s+1\n            for j in range(ni):\n                hj = h[j]\n                nd = dp[j][s]+max(0,hi-hj)\n                if nd < dp[ni][ns]:\n                    dp[ni][ns] = nd\n    ans = min([dp[i][n-k] for i in range(n+1)])\n    print(ans)\n    return\n\n#Solve\nif __name__ == \"__main__\":\n    solve()\n"],"formatted_programs":["N,K=map(int,input().split())\nH=list(map(int,input().split()))+[0]\nh=[0]*(N+1)\nh[0]=H[0]\nfor i in range(1,N):\n    h[i]=max(H[i]-H[i-1],h[i])\nfor i in range(1,N+1):\n    h[i]+=h[i-1]\ndata=[[0]*N for i in range(N)]\nfor L in range(N):\n    for R in range(L,N):\n        if L==0:\n            data[L][R]=h[-1]-h[R+1]+H[R+1]\n        else:\n            data[L][R]=h[L-1]+h[-1]-h[R+1]+max(0,H[R+1]-H[L-1])\nfor L in range(N):\n    for R in range(L,N):\n        data[L][R]=h[-1]-data[L][R]\ndp=[[0]*(K+1) for i in range(N+1)]\nfor i in range(1,N+1):\n    for j in range(min(i+1,K+1)):\n        dp[i][j]=dp[i-1][j]\n        for k in range(j-1,-1,-1):\n            if dp[i][j]<dp[i-1-j+k][k]+data[i-j+k][i-1]:\n                dp[i][j]=dp[i-1-j+k][k]+data[i-j+k][i-1]\nprint(h[-1]-max(dp[N]))","def f_laminate(INF=float('inf')):\n    # \u53c2\u8003: https:\/\/atcoder.jp\/contests\/abc145\/submissions\/8491285\n    N, K = map(int, input().split())\n    H = [0] + list(map(int, input().split()))\n\n    # editorial \u3068\u540c\u3058 DP \u30c6\u30fc\u30d6\u30eb\n    dp = [[INF] * (N - K + 1) for _ in range(N + 1)]\n    dp[0][0] = 0\n    for x in range(1, N + 1):\n        for y in range(1, N - K + 1):\n            for i in range(x):\n                dp[x][y] = min(dp[x][y], dp[i][y - 1] + max(0, H[x] - H[i]))\n\n    ans = INF\n    for i in range(N + 1):\n        ans = min(ans, dp[i][N - K])\n    return ans\n\nprint(f_laminate())","import sys\ninput = sys.stdin.readline\n\nN, K = map(int, input().split())\nH = [0]+list(map(int, input().split()))\ndp = [[[10**18]*(N+1) for _ in range(K+1)] for _ in range(N+1)]\ndp[0][0][0] = 0\n\nfor i in range(N):\n    for j in range(K+1):\n        for k in range(N+1):\n            if j+1<=K:\n                dp[i+1][j+1][k] = min(dp[i+1][j+1][k], dp[i][j][k])\n            \n            dp[i+1][j][i+1] = min(dp[i+1][j][i+1], dp[i][j][k]+max(0, H[i+1]-H[k]))\n\nans = 10**18\n\nfor i in range(K+1):\n    for j in range(N+1):\n        ans = min(ans, dp[N][i][j])\n    \nprint(ans)","N, K = map(int, input().split())\nH = [0] + [int(i) for i in input().split()]\n\ndp = [[float('inf')] * (N - K + 1) for _ in range(N + 1)]\ndp[0][0] = 0\n\n# \u53f3\u7aef\u304ci\u3001\u30b5\u30a4\u30ba\u304cj\nfor i in range(1, N + 1) :\n  for j in range(N - K + 1) :\n    dp[i][j] = min(dp[k][j-1] + max(0, H[i] - H[k]) for k in range(i))\n    \nprint(dp[i][N-K])","def solve():\n    from sys import stdin\n    f_i = stdin\n    \n    N, K = map(int, f_i.readline().split())\n    H = tuple(map(int, f_i.readline().split()))\n    \n    if N == K:\n        return 0\n    \n    dp1 = list(H)\n    for i in range(1, N - K):\n        dp2 = dp1[:i]\n        for x, H_x in enumerate(H[i:], start=i):\n            v = min(dp_j + max(0, H_x - H_j) for dp_j, H_j in zip(dp1[i-1:x], H[i-1:x]))\n            dp2.append(v)\n        dp1 = dp2\n    return min(dp1[N-K-1:])\n\nprint(solve())","N, K = map(int, input().split())\nH = [0] + list(map(int, input().split()))\ndp = [[10 ** 100] * (N-K+1) for _ in range(N+1)]\ndp[0][0] = 0\nfor x in range(1, N+1):\n    for y in range(1, min(x+1, N-K+1)):\n        dp[x][y] = min(dp[i][y-1] + max(0, H[x] - H[i]) for i in range(x))\nprint(min(dp[i][N-K] for i in range(1, N+1)))","#\u8a2d\u5b9a\nimport sys\ninput = sys.stdin.buffer.readline\n\n#\u30e9\u30a4\u30d6\u30e9\u30ea\u30a4\u30f3\u30dd\u30fc\u30c8\nfrom collections import defaultdict\nimport copy\n\n#\u5165\u529b\u53d7\u3051\u53d6\u308a\ndef getlist():\n\treturn list(map(int, input().split()))\n\n\n#\u51e6\u7406\u5185\u5bb9\ndef main():\n\tN, K = getlist()\n\tH = getlist()\n\tm = min(H)\n\tHH = copy.deepcopy(H)\n\tfor i in range(K):\n\t\tind = HH.index(max(HH))\n\t\tHH[ind] = m\n\tans = m\n\t#\u5834\u5408\u5206\u3051\n\tif K == N:\n\t\tprint(0)\n\telif N == 1:\n\t\tprint(H[0])\n\telse:\n\t\tif HH[0] > HH[1]:\n\t\t\tans += HH[0] - HH[1]\n\t\telse:\n\t\t\tans += HH[0] - m\n\t\tfor i in range(1, N - 1):\n\t\t\tif HH[i] > HH[i - 1] and HH[i] > HH[i + 1]:\n\t\t\t\tans += HH[i] - max(HH[i - 1], HH[i + 1])\n\t\t\telif HH[i] > HH[i - 1]:\n\t\t\t\tans += HH[i] - HH[i - 1]\n\t\t\telif HH[i] > HH[i + 1]:\n\t\t\t\tans += HH[i] - HH[i + 1]\n\t\t\telse:\n\t\t\t\tans += HH[i] - m\n\t\tif HH[-1] > HH[-2]:\n\t\t\tans += HH[-1] - HH[-2]\n\t\telse:\n\t\t\tans += HH[-1] - m\n\t\tprint(ans)\n\n\nif __name__ == '__main__':\n\tmain()","import sys\ninput = sys.stdin.readline\nN, K = map(int, input().split())\na = [0] + list(map(int, input().split()))\ninf = 10 ** 12\ndp = [[[inf] * (N + 1) for _ in range(K + 1)] for _ in range(N + 1)]\ndp[0][0][0] = 0\nfor i in range(N):\n  for j in range(K + 1):\n    for k in range(N + 1):\n      if dp[i][j][k] == inf: continue\n      x = max(0, a[i + 1] - a[k])\n      dp[i + 1][j][i + 1] = min(dp[i + 1][j][i + 1], dp[i][j][k] + x)\n      if j < K: dp[i + 1][j + 1][k] = min(dp[i + 1][j][k], dp[i][j][k])\n#print(dp)\nres = inf\nfor j in range(K + 1): res = min(res, min(dp[-1][j]))\nprint(res)","n,K = map(int, input().split())\nh = list(map(int, input().split()))\nh = [0] + h\nINF = 1001001001001\ndp = [[INF] *(n+1) for _ in range(n+1)]  \ndp[0][0] = 0\nfor j in range(n):\n    for i in range(1,n+1):\n        for k in range(i):\n            dp[i][j+1] = min(dp[i][j+1],dp[k][j]+max(0,h[i]-h[k]))\n\nans = INF\nfor i in range(n+1):\n    ans = min(ans,dp[i][n-K])\n\nprint(ans)\n\n\n\n","# F - Laminate\nINF = 1001002003004005006\nimport numpy as np\n\nN, K = map(int, input().split())\nM = N - K\nH = np.array(list(map(int, input().split())))\nH = np.insert(H, 0, 0)\n\nDP = np.full_like(np.zeros([N + 1, M + 1]), INF)\nDP[0][0] = 0\nfor i in range(1, N + 1):\n    for j in range(M):\n        now = INF\n        for k in range(i):\n            now = min(now, DP[k][j] + max(0, H[i] - H[k]))\n        DP[i][j + 1] = now\n        \nans = INF\nfor i in range(N + 1):\n    ans = min(ans, DP[i][M])\n    \nprint(int(ans))","N,K = map(int,input().split())\nH = list(map(int,input().split()))\nH = [0]+H\ndp = [[10**12]*(N+1) for _ in range(N+1)]\ndp[0][0] = 0\nfor x in range(N+1):\n    for y in range(1,N+1):\n        for z in range(x):\n            dp[x][y] = min(dp[x][y],dp[z][y-1]+max(H[x]-H[z],0))\n\nans = 10**12\nfor x in range(N+1):\n    ans = min(dp[x][N-K],ans)\n\nprint(ans)","N, K = map(int, input().split())\nH = [0] + list(map(int, input().split()))\n\nINF = 10**12\ndp = [[INF] * (N+1) for i in range(N+1)]\ndp[0][0] = 0\n\nfor x in range(1, N+1):\n  dp[x][0] = 0\n  dp[x][1] = H[x]\n  for y in range(2, x+1):\n    for i in range(x):\n      dp[x][y] = min(dp[x][y], dp[i][y-1]+max(0, H[x]-H[i]))\n\nans = INF\nfor i in range(N+1):\n  ans = min(ans, dp[i][N-K])\n\nprint(ans)","import sys\ninput = lambda : sys.stdin.readline().rstrip()\nsys.setrecursionlimit(max(1000, 10**9))\nwrite = lambda x: sys.stdout.write(x+\"\\n\")\n\n\nn,k = list(map(int, input().split()))\nh = list(map(int, input().split()))\n\ndp = [[0]*(n+1) for _ in range(n+1)]\n# for i in range(1,n+1):\n#     dp[i][0] = float(\"inf\")\nfor i in range(1, n+1):\n    hh = h[i-1]\n    for j in range(1, n+1):\n        if j==1:\n            dp[i][j] = hh\n        elif j<=i:\n            if i>=2:\n                dp[i][j] = min((dp[ii][j-1] + max(0, hh-(h[ii-1] if ii>=1 else 0))) for ii in range(1,i))\n            else:\n                dp[i][j] = hh\n        else:\n            dp[i][j] = float(\"inf\")\nans = min(min(dp[nn][kk] for kk in range(n-k, n+1)) for nn in range(1,n+1))\nprint(ans)","import sys\ninput = sys.stdin.buffer.readline\n\ndef main():\n    N,K = map(int,input().split())\n    H = list(map(int,input().split()))\n    H = [0]+H\n    INF = 10**15\n    \n    dp = [INF]*(N+1)\n    dp[0] = 0\n    for i in range(N-K):\n        use = [INF]*(N+1)\n        for j in range(i,N+1):\n            for k in range(j+1,N+1):\n                use[k] = min(use[k],dp[j]+max(0,H[k]-H[j]))\n        dp = use\n    \n    print(min(dp))\n\nif __name__ == \"__main__\":\n    main()\n","import numpy as np\nINF = 10**15\ndef solve(n, k, h):\n    dp = np.full((n+1, n+1), INF, dtype=int)\n    dp[0, 0] = 0\n    h = np.array([0] + h, dtype=int)\n    for i, h_i in enumerate(h[1:], 1):\n        t = np.maximum(h_i - h[:i], 0)\n        dp[i,1:] = np.min(dp[:i,:-1]+t[:,None], axis=0)\n    return np.min(dp[:, n-k])\n\nn, k = map(int, input().split())\nh = list(map(int, input().split()))\nprint(solve(n, k, h))","import sys\ninput = sys.stdin.readline\n\ndef max2(x,y):\n    return x if x > y else y\n\ndef min2(x,y):\n    return x if x < y else y\n\nN, K = map(int, input().split())\nH = [0] + list(map(int, input().split()))\n\ndp = [[10**9*N for _ in range(N-K+1)] for _ in range(N+1)]\n\ndp[0][0] = 0\nfor i, h in enumerate(H[1:], start=1):\n    for k in range(1, min2(i+1, N-K+1)):\n        dp[i][k] = min(dp[j][k-1] + max2(0, h-H[j]) for j in range(i))\nprint(min(d[-1] for d in dp))","n,k=map(int,input().split())\nh=list(map(int,input().split()))\nh.insert(0,0)\ndp=[[float(\"inf\")]*(n-k+1) for _ in range(n+1)]\ndp[0][0]=0\nfor i in range(1,n+1):\n    for j in range(1,n-k+1):\n        now=float(\"inf\")\n        for l in range(i):\n            now=min(dp[l][j-1]+max(0,h[i]-h[l]),now)\n        dp[i][j]=now\n\nans=float(\"inf\")\nfor i in range(1,n+1):\n    ans=min(ans,dp[i][n-k])\n\nprint(ans)\n\n","N,K = map(int, input().split())\nH = [int(h) for h in input().split()]\n\ndp = [[10**13]*N for _ in range(N)]\ndp[0][0] = H[0]\n    \nfor i in range(1, N):\n    for j in range(i+1):\n        if j == 0:\n            dp[i][j] = min(dp[i-1][j], H[i])\n            continue\n        dp[i][j] = dp[i-1][j]\n        for k in range(i):\n            dp[i][j] = min(dp[i][j], dp[k][j-1]+max(0, H[i]-H[k]))\n            \nif N == K:\n    ans = 0\nelse:\n    ans = 10**13\n    for i in range(N):\n        ans = min(ans, dp[i][N-K-1])\n        \nprint(ans)","from collections import defaultdict\n\nn, k = map(int, input().split())\nhhh = list(map(int, input().split()))\nINF = 10 ** 18\ndp = defaultdict(lambda: INF)\ndp[0, 0] = 0\nfor h in hhh:\n    ndp = defaultdict(lambda: INF)\n    for (changed, prev_h), operate in dp.items():\n        if h == prev_h:\n            ndp[changed, h] = min(ndp[changed, h], operate)\n        elif h > prev_h:\n            ndp[changed, h] = min(ndp[changed, h], operate + h - prev_h)\n            if changed < k:\n                ndp[changed + 1, prev_h] = min(ndp[changed + 1, prev_h], operate)\n        else:\n            ndp[changed, h] = min(ndp[changed, h], operate)\n            if changed < k:\n                ndp[changed + 1, prev_h] = min(ndp[changed + 1, prev_h], operate)\n    dp = ndp\nprint(min(dp.values()))\n","import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,copy,functools\nimport time,random\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 \/ 10**10\nmod = 10**9+7\ndd = [(-1,0),(0,1),(1,0),(0,-1)]\nddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(): return [list(map(int, l.split())) for l in sys.stdin.readlines()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\ndef pe(s): return print(str(s), file=sys.stderr)\ndef JA(a, sep): return sep.join(map(str, a))\ndef JAA(a, s, t): return s.join(t.join(map(str, b)) for b in a)\n\n\ndef main():\n    n,k = LI()\n    a = LI()\n    c = collections.defaultdict(lambda: inf)\n    c[(0,0)] = 0\n    for t in a:\n        nc = collections.defaultdict(lambda: inf)\n        for ck,cv in c.items():\n            k1,k2 = ck\n            if k1 >= t:\n                if nc[(t,k2)] > cv:\n                    nc[(t,k2)] = cv\n            else:\n                if nc[(t,k2)] > cv + t-k1:\n                    nc[(t,k2)] = cv + t-k1\n            if k2 < k:\n                if nc[(k1,k2+1)] > cv:\n                    nc[(k1,k2+1)] = cv\n        c = nc\n\n    return min(c.values())\n\n\nprint(main())\n\n\n","def main():\n    INF = 10**12\n    N, K = list(map(int, input().split()))\n    H = list(map(int, input().split()))\n    H = [0] + H\n    # dp[n][k][l]: n\u5217\u76ee\u307e\u3067\u3067\u5408\u8a08k\u5217H\u306e\u5024\u3092\u5909\u3048\u3066\u3044\u308b\uff06\u76f4\u8fd1l\u5217\u3092\u5909\u3048\u3066\u3044\u308b\u5834\u5408\u306e\u5857\u308a\u306e\u56de\u6570\u306e\u6700\u5c0f\u5024\n    # \u7b54\u3048\u306f min_{k,l}(dp[N][k][l])\n    dp = [[[INF for _ in range(K + 1)] for _ in range(K + 1)] for _ in range(N + 1)]\n    dp[0][0][0] = 0\n    for n in range(1, N + 1):\n        for k in range(min(n, K) + 1):\n            v = INF\n            for l in range(k + 1):\n                if l > 0:\n                    dp[n][k][l] = dp[n - 1][k - 1][l - 1]\n                v = min(v, dp[n - 1][k][l] + max(0, H[n] - H[n - l - 1]))\n            dp[n][k][0] = v\n    ans = INF\n    for k in range(K + 1):\n        for l in range(k + 1):\n            ans = min(ans, dp[N][k][l])\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()","def solve():\n    INF = 10**12\n\n    def max2(x, y): return x if x >= y else y\n    def min2(x, y): return x if x <= y else y\n\n    N, K = map(int, input().split())\n    Hs = [0] + list(map(int, input().split()))\n\n    dp = [[INF]*(N+1) for _ in range(N+1)]\n    dp[0][0] = 0\n    for i in range(1, N+1):\n        H = Hs[i]\n        diffs = []\n        for iPrev in range(i):\n            diff = max2(0, H-Hs[iPrev])\n            diffs.append(diff)\n        dp[i][0] = 0\n        dp[i][1] = H\n        for j in range(2, min(i, N-K)+1):\n            for iPrev in range(i):\n                dp[i][j] = min2(dp[i][j], dp[iPrev][j-1]+diffs[iPrev])\n\n    ans = min(dpi[N-K] for dpi in dp)\n    print(ans)\n\n\nsolve()\n","INF = 10 ** 15\n\nN, K = map(int, input().split())\nHs = [0] + list(map(int, input().split())) + [0]\n\n\ndp = [[INF] * (K+1) for _ in range(N+2)]\ndp[0][0] = 0\n\nfor n in range(1, N+2):\n    for k in range(K+1):\n        for l in range(1, min(n, k+1)+1):\n            dp[n][k] = min(dp[n][k], dp[n-l][k-l+1] + max(0, Hs[n] - Hs[n-l]))\n\nprint(dp[N+1][K])","import os\nimport sys\nfrom collections import defaultdict\n\nif os.getenv(\"LOCAL\"):\n    sys.stdin = open(\"_in.txt\", \"r\")\n\nsys.setrecursionlimit(10 ** 9)\nINF = float(\"inf\")\nIINF = 10 ** 18\nMOD = 10 ** 9 + 7\n# MOD = 998244353\n\nN, K = list(map(int, sys.stdin.readline().split()))\nH = list(map(int, sys.stdin.readline().split()))\n\nif K == N:\n    print(0)\n    exit()\n\n# H = np.array(H, dtype=float)\n\n# # @debug\n# def count(heights, changes):\n#     H = heights.copy()\n#     H = H[~changes]\n#     ret = 0\n#     cnt = 1\n#     height = H.min()\n#     # \u666e\u901a\u306b\u6570\u3048\u3066\u307f\u308b\n#     while height != np.inf:\n#         H -= height\n#         ret += cnt * height\n#         H[H == 0.0] = np.inf\n#         cnt = np.count_nonzero(np.diff((H != np.inf).astype(int)) == 1)\n#         cnt += H[0] != np.inf\n#         height = H.min()\n#     return int(ret)\n#\n#\n# # \u4e0a\u304b\u3089\u4f55\u500b\u5909\u3048\u308b\u304b\u3001\u4e0b\u304b\u3089\u4f55\u500b\u5909\u3048\u308b\u304b\u3092\u5168\u63a2\u7d22\n# ans = INF\n# orders = H.argsort()\n# for _ in range(K + 1):\n#     # \u5909\u3048\u308b\u3084\u3064\n#     changes = np.zeros(N, dtype=bool)\n#     changes[orders[:K]] = True\n#     ans = min(ans, count(H, changes))\n#     orders = np.roll(orders, shift=1)\n# print(ans)\n\n\n# dp[i][k][h]: i \u307e\u3067\u898b\u305f\u3001k \u500b\u7121\u8996\u3057\u305f\u3001\u4eca\u306e\u9ad8\u3055\u304c h \u3067\u3042\u308b\u3068\u304d\u306e\u5857\u308b\u6570\ndp = [[defaultdict(lambda: INF) for _ in range(K + 2)] for _ in range(N + 1)]\ndp[0][0][0] = 0\nfor i in range(N):\n    for k in range(K + 1):\n        for h, cnt in dp[i][k].items():\n            dp[i + 1][k][H[i]] = min(dp[i + 1][k][H[i]], cnt + max(0, H[i] - h))\n            dp[i + 1][k + 1][h] = min(dp[i + 1][k + 1][h], dp[i][k][h])\nans = min(dp[-1][K].values())\nprint(int(ans))\n","#!\/usr\/bin\/env python3\nfrom collections import defaultdict,deque\nfrom heapq import heappush, heappop\nfrom bisect import bisect_left, bisect_right\nimport sys, random, itertools, math\nsys.setrecursionlimit(10**5)\ninput = sys.stdin.readline\nsqrt = math.sqrt\ndef LI(): return list(map(int, input().split()))\ndef LF(): return list(map(float, input().split()))\ndef LI_(): return list(map(lambda x: int(x)-1, input().split()))\ndef II(): return int(input())\ndef IF(): return float(input())\ndef LS(): return list(map(list, input().split()))\ndef S(): return list(input().rstrip())\ndef IR(n): return [II() for _ in range(n)]\ndef LIR(n): return [LI() for _ in range(n)]\ndef FR(n): return [IF() for _ in range(n)]\ndef LFR(n): return [LI() for _ in range(n)]\ndef LIR_(n): return [LI_() for _ in range(n)]\ndef SR(n): return [S() for _ in range(n)]\ndef LSR(n): return [LS() for _ in range(n)]\nmod = 1000000007\ninf = float('INF')\nfrom copy import deepcopy\n\n#solve\ndef solve():\n    n, k = LI()\n    h = [0] + LI()\n    d = defaultdict(int)\n    d[(0, 0)] = 0\n    for i in range(1, n + 1):\n        nd = defaultdict(lambda: inf)\n        for key, value in d.items():\n            a, b = key\n            if nd[(i, b)] > value + (h[i] - h[a] if h[i] > h[a] else 0):\n                nd[(i, b)] = value + (h[i] - h[a] if h[i] > h[a] else 0)\n            if b + 1 > k:\n                continue\n            if nd[(a, b + 1)] > value:\n                nd[(a, b + 1)] = value\n        d = nd\n    ans = inf\n    for i in range(n + 1):\n        for j in range(k + 1):\n            ans = min(ans, d[(i, j)])\n    print(ans)\n    return\n\n\n#main\nif __name__ == '__main__':\n    solve()\n","\"\"\"\nimport sys\ninput = sys.stdin.readline\n#\"\"\"\n\nN,K = map(int,input().split())\n*H, = map(int,input().split())\n\ndef f(v):\n    L = len(v)\n    if L==0:return 0\n    ret = min(v)\n    v2 = [e-ret for e in v]\n    i = 0\n    for j in range(L):\n        if v2[j]==0:\n            ret += f(v2[i:j])\n            i = j+1\n    else:\n        ret += f(v2[i:])\n    return ret\n\ndef g(v):\n    u = []\n    w = v[::-1]\n    for i,h in enumerate(H):\n        if w and i == w[-1]:\n            w.pop()\n            continue\n        u.append(h)\n    return f(u)\n\nans = g([])\n\ndp = [[[ans,[]] for _ in [0]*(K+1)] for _ in [0]*(N+1)]\nfor i in range(1,N+1):\n    for k in range(1,K+1):\n        tmp = dp[i-1][k-1][1] + [i-1]\n        c = g(tmp)\n        if c<dp[i-1][k][0]:\n            dp[i][k][0] = c\n            dp[i][k][1] = tmp\n        else:\n            dp[i][k][0] = dp[i-1][k][0]\n            dp[i][k][1] = dp[i-1][k][1][:]\n\nprint(dp[-1][-1][0])","N, K = map(int, input().split())\nH = list(map(int, input().split())) + [0]\ndp = [[10**12]*(K+2) for _ in range(N+1)]\ndp[0][0] = 0\nfor i in range(N):\n  for j in range(min(i+1, K) + 1):\n    for k in range(j + 1):\n      dp[i+1][j] = min(dp[i+1][j], dp[i-k][j-k] + max(H[i] - H[i-k-1], 0))\nans = min(dp[-1])\nfor i in range(K):\n  ans = min(ans, dp[N-i][K-i])\nprint(ans)","# -*- coding: utf-8 -*-\n\n\nN,K=map(int, input().split())\nH=list(map(int, input().split()))\nG=[0]\nG.extend(H[:])\n\ndp=[[0]*(N+1) for i in range(N-K+1)]\n\n\ntempa=0\nif K<N-1:\n    for jtemp in range(N):\n        j=jtemp+1\n        dp[1][j]=G[j]#min(dp[1][j-1],G[j])\n    for itemp in range(N-K-1):\n        i=itemp+2\n        for jtemp in range(N-(i-1)):\n            j=jtemp+i\n            temp=int(N*1e9)\n            \n            for ktemp in range(j-(i-1)):\n                k=ktemp+i-1\n                val=G[j]-G[k]\n                if val<0:\n                    val=0\n                if temp>dp[i-1][k]+val:\n                    temp=dp[i-1][k]+val\n            dp[i][j]=temp\n    tempa=dp[N-K][-1]\n    for jtemp in range(N):\n        j=jtemp+1\n        if tempa>dp[N-K][j] and dp[N-K][j]!=0:\n            tempa=dp[N-K][j]\nelif N-K==1:\n    tempa=min(H[:])\nelse:\n    tempa=0\nprint(tempa)","n,K=map(int,input().split())\nl=list(map(int,input().split()))\nINF=float('inf')\ndp=[[[] for j in range(K+1)] for i in range(n+1)]\ndp[0][0]=[[0,0]]\nfor i,j in enumerate(l,1):\n    a1,b1=dp[i-1][0][0]\n    a1+=max(0,j-b1)\n    dp[i][0]=[[a1,j]]\nfor i,j in enumerate(l,1):\n    for k in range(1,min(K+1,i+1)):\n        tl=[]\n        for a1,b1 in dp[i-1][k]:\n            a1+=max(0,j-b1)\n            tl.append([a1,j])\n        dp[i][k]=tl+dp[i-1][k-1]\nprint(sorted(dp[-1][-1])[0][0])","def main():\n    n, K = map(int, input().split())\n    H = list(map(int, input().split()))\n    s = sorted(set(H+[0]))\n    d = {i: j for j, i in enumerate(s)}\n    l = len(s)\n    m = max(s)\n    a = [m-i for i in s]\n    dp = [[10**13]*l for _ in range(K+1)]\n    dp[0][0] = 0\n    for h in H:\n        dh = d[h]\n        dp2 = [[10**13]*l for _ in range(K+1)]\n        t = [[0]*l for _ in range(K+1)]\n        s_plus_a = [[i+j for i, j in zip(a, kk)] for kk in dp]\n        min_s = [[dp[i][j] for j in range(l)] for i in range(K+1)]\n        for i in range(K+1):\n            for j in range(l-2, -1, -1):\n                min_s[i][j] = min(min_s[i][j+1], min_s[i][j])\n            for j in range(1, l):\n                s_plus_a[i][j] = min(s_plus_a[i][j-1], s_plus_a[i][j])\n            for j in range(l):\n                t[i][j] = s_plus_a[i][j]-a[j]\n        for i in range(K):\n            for j in range(l):\n                dp2[i+1][j] = min(min_s[i][j], t[i][j])\n        for i in range(K+1):\n            for j in range(l):\n                dp2[i][dh] = min(dp2[i][dh], dp[i][j]+max(h-s[j], 0))\n        dp = dp2\n    print(min([min(i) for i in dp]))\n\n\nmain()\n","import sys\ninput = sys.stdin.readline\n\nN,K = map(int,input().split())\nH = [0]+list(map(int,input().split()))\n\nDP=[[1<<60]*(K+1) for i in range(N+1)]\n\nfor k in range(K+1):\n    DP[0][k]=0\n\nfor i in range(1,N+1):\n    \n    for k in range(K+1):\n        for j in range(k+1):\n            DP[i][k]=min(DP[i][k],DP[i-j-1][k-j]+max(0,H[i]-H[i-j-1]))\n        \nprint(min(DP[-1]))","n,k = map(int, input().split( ))\nif n==k:\n    print(0)\n    exit()\nh = list(map(int, input().split( )))\n#h = [0]+h#h[0]=0\u8ffd\u52a0\ninf = 10**15\n\ndp = [[inf]*n for _ in range(n+1)] #dp[i][j]\u53f3\u7aef\u304ci\u3001j+1\u672c\u6b8b\u3059\nmn = h[0]\nfor i in range(n):\n    #mn = min(mn,h[i])\n    dp[i][0] = h[i]#min(mn,h[i])\n\nfor i in range(1,n):##\u53f3\u7aef\n    for j in range(i+1):#\u672c\u6570\n        for t in range(j-1,i):#\u53f3\u304b\u30892\u756a\u76ee,\n            dp[i][j] = min(dp[i][j], dp[t][j-1] + max(h[i]-h[t], 0))\n\nans = inf \n\nfor i in range(n):\n    ans = min(ans, min(dp[i][n-k-1:]))###\nprint(ans)\n","import sys,bisect\ninput = sys.stdin.readline\n\nn,k = map(int,input().split())\nh = list(map(int,input().split()))\nhs = [0]+sorted(h)\n\nif k==0:\n    res = h[0]\n    for i in range(1,n):\n        res += max(0,h[i]-h[i-1])\n    print(res)\n    exit()\n\n#dp[i][j][l]: Hi\u307e\u3067\u3067j\u56de\u4f7f\u3044\u6700\u5f8c\u304cl\u756a\u76ee\u306e\u5c0f\u3055\u3055\u306e\u6642\u306e\u6700\u5c0f\u5024\ndp = [[[10**12]*(n+1) for i in range(k+1)] for j in range(n)]\n\nkk = bisect.bisect_left(hs,h[0])\ndp[0][0][kk] = h[0]\ndp[0][1][0] = 0\n\nfor i in range(1,n):\n    kk = bisect.bisect_left(hs,h[i])\n    #Hi used in this turn\n    for j in range(k+1):\n        tmp = 10**12\n        for l in range(n):\n            tmp = min(tmp,dp[i-1][j][l]+max(0,hs[kk]-hs[l]))\n        dp[i][j][kk] = tmp\n\n    #not used\n    for j in range(1,k+1):\n        for l in range(n):\n            dp[i][j][l] = min(dp[i][j][l],dp[i-1][j-1][l])\n\nres = 10**12\nfor j in range(k+1):\n    for l in range(n):\n        res = min(res,dp[-1][j][l])\nprint(res)\n        \n","# -*- coding: utf-8 -*-\nimport sys\nsys.setrecursionlimit(10**9)\nINF=10**18\nMOD=10**9+7\ninput=lambda: sys.stdin.readline().rstrip()\nYesNo=lambda b: bool([print('Yes')] if b else print('No'))\nYESNO=lambda b: bool([print('YES')] if b else print('NO'))\nint1=lambda x:int(x)-1\n\ndef main():\n    N,K=map(int,input().split())\n    N+=2\n    H=[0]+list(map(int,input().split()))+[0]\n    edge=[[] for _ in range(N*(K+1))]\n    for i in range(N):\n        for j in range(K+1):\n            for k in range(K+1-j):\n                if i+k+1<N and N-1-i>=K-(k+j):\n                    edge[i*(K+1)+j].append((max(H[i+k+1]-H[i],0),(i+k+1)*(K+1)+j+k))\n    from heapq import heappop,heappush\n    def dijkstra(start,n,edges):\n        d=[INF]*n\n        used=[False]*n\n        d[start]=0\n        used[start]=True\n        edgelist=[]\n        for edge in edges[start]:\n            heappush(edgelist,edge)\n        while edgelist:\n            minedge=heappop(edgelist)\n            if used[minedge[1]]:\n                continue\n            v=minedge[1]\n            d[v]=minedge[0]\n            used[v]=True\n            for edge in edges[v]:\n                if not used[edge[1]]:\n                    heappush(edgelist,(edge[0]+d[v],edge[1]))\n        return d\n    d=dijkstra(0,N*(K+1),edge)\n    print(min(d[(N-1)*(K+1):]))\n\nif __name__ == '__main__':\n    main()\n","def main():\n    N, K = (int(i) for i in input().split())\n    H = [0] + [int(i) for i in input().split()]\n    # 1-indexed\n    if N == K:\n        return print(0)\n    elif K == 0:\n        ans = 0\n        for i in range(N):\n            ans += max(H[i+1] - H[i], 0)\n        return print(ans)\n    dp = [[10**12]*(N-K+1) for _ in range(N+1)]\n\n    for x in range(N+1):\n        dp[x][1] = H[x]\n\n    for y in range(2, N-K+1):\n        for x in range(N+1):\n            for i in range(1, x):\n                dp[x][y] = min(dp[x][y], dp[i][y-1] + max(0, H[x] - H[i]))\n\n    ans = dp[0][N-K]\n    for i in range(1, N+1):\n        ans = min(ans, dp[i][N-K])\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n","\nimport sys\nsys.setrecursionlimit(10**6)\nreadline = sys.stdin.readline \n\n\n\n\nn,k = [int(i) for i in readline().split()]\na = [0]+[int(i) for i in readline().split()] + [0]\n\nn += 2\n\nINF  = 10**18\n\ndiff = [0]\nfor i in range(n-1):\n    diff.append(max(a[i+1]-a[i],0))\n\nfrom itertools import accumulate\nacc = list(accumulate(diff))\n\nans = {}\n\ndef calc(p,q,k):\n    if (p,q,k) in ans: return ans[(p,q,k)]\n    if k == 0:\n        res = acc[q] - acc[p]\n    elif k == q-p-1:\n        res = max(0,a[q] - a[p])\n    else:\n        res = INF\n        for i in range(p+1,q):\n            for l in range(min(k+1,i-p)):\n                if k-l > q-p-1: break\n                #if p ==1 and q == 4 and k == 1: print(i,l)\n                res = min(res, calc(p,i,l)+calc(i,q,k-l))\n    #print(p,q,k,res)    \n    ans[(p,q,k)] = res    \n    return res\n\n#print(acc)\n#print(a,n)\nprint(calc(0,n-1,k))\n#print(calc(0,n-1,k))\n\n\n\n        \n\n\n\n","n, k = map(int, input().split())\nh = list(map(int, input().split()))\nd = [[i, 0] for i in range(n)]\n\ndef cal_dif(h, idx):\n  if idx == 0:\n    return [i, max(h[idx]-h[idx+1], 0)]\n  elif idx == len(h)-1:\n    return [i, max(h[idx]-h[idx-1], 0)]\n  else:\n    dif = max(h[idx]-h[idx-1], 0) \\\n        + max(h[idx+1]-h[idx], 0) \\\n        - max(h[idx+1]-h[idx-1], 0)\n    return [i, dif]\n# cal max possible difference\nfor i in range(n):\n  d[i] = cal_dif(h, i)\nd2 = sorted(d, key = lambda x:x[1])\n#cal optimal\nfor i in range(k):\n  idx = d2[n-1][0]\n  d[idx][1] = 0\n  if idx == 0:\n    h[idx] = h[idx+1]\n    d[idx+1] = cal_dif(h, idx+1)\n  elif idx == n-1:\n    h[idx] = h[idx-1]\n    d[idx-1] = cal_dif(h, idx-1)\n  else:\n    h[idx] = int((h[idx-1]+h[idx+1])\/2)\n    d[idx-1] = cal_dif(h, idx-1)\n    d[idx+1] = cal_dif(h, idx+1)\n  d2 = sorted(d, key = lambda x:x[1])\n# cal optimal num\ns = h[0]\nfor i in range(1, n):\n  s += max(h[i]-h[i-1], 0)\nprint(s)\n  \n    ","n, k=map(int, input().split())\nhlist = list(map(int, input().split()))\ncost=[]\ndead=[0]*n\nif n!=1:\n    for i in range(n):\n        if i==0:\n            if hlist[i]>=hlist[i+1]:\n                cost.append(hlist[i]-hlist[i+1])\n            else:\n                cost.append(0)\n        elif i==n-1:\n            if hlist[i]>=hlist[i-1]:\n                cost.append(hlist[i]-hlist[i-1])\n            else:\n                cost.append(0)\n        else:\n            if hlist[i]>=hlist[i-1] and hlist[i]>=hlist[i+1]:\n                cost.append(hlist[i]-max(hlist[i-1], hlist[i+1]))\n            elif hlist[i]<=hlist[i-1] and hlist[i]<=hlist[i+1]:\n                cost.append(min(hlist[i-1], hlist[i+1]) - hlist[i])\n            else:\n                cost.append(0)\n    \n    #print(cost)\n    rest=k\n    while rest>0:\n        bango=cost.index(max(cost))\n        hlist=hlist[:bango]+hlist[bango+1:]\n        cost=cost[:bango]+cost[bango+1:]\n        if len(hlist)>=2:\n            for i in [bango-1, bango]:\n                if i==0:\n                    if hlist[i]>=hlist[i+1]:\n                        cost[i]=hlist[i]-hlist[i+1]\n                    else:\n                        cost[i]=0\n                elif i==len(hlist)-1:\n                    if hlist[i]>=hlist[i-1]:\n                        cost[i]=hlist[i]-hlist[i-1]\n                    else:\n                        cost[i]=0\n                else:\n                    if hlist[i]>=hlist[i-1] and hlist[i]>=hlist[i+1]:\n                        cost[i]=hlist[i]-max(hlist[i-1], hlist[i+1])\n                    elif hlist[i]<=hlist[i-1] and hlist[i]<=hlist[i+1]:\n                        cost[i]=min(hlist[i-1], hlist[i+1]) - hlist[i]\n                    else:\n                        cost[i]=0\n            rest-=1\n        else:\n            if rest>1:\n                hlist=[0]\n                break\n            else:\n                break\n        \n        #print(cost, hlist)\n    \n    nul=0\n    mae=0\n    for i in range(len(hlist)):\n        if hlist[i]>=mae:\n            nul+=hlist[i]-mae\n        mae=hlist[i]\n    print(nul)\nelse:\n    if k>=1:\n        print(0)\n    else:\n        print(hlist[0])","import sys\ninput = sys.stdin.readline\n\ndef main():\n    n, k = map(int, input().split())\n    h = [0] + list(map(int, input().split()))\n    \n    dp = [[[0]*2 for _ in range(k+1)] for _ in range(n+1)]\n    \n    for i in range(n):\n        dp[i+1][0][0] += dp[i][0][0]\n        if h[i] < h[i+1]:\n            dp[i+1][0][0] += h[i+1] - h[i]\n        dp[i+1][0][1] = i+1\n    \n    for i in range(1, k+1):\n        for j in range(i, n):\n            sub, bef = dp[j][i]\n            if h[bef] < h[j+1]:\n                sub += h[j+1] - h[bef]\n            \n            if sub < dp[j][i-1][0]:\n                dp[j+1][i][0] = sub\n                dp[j+1][i][1] = j+1\n            elif sub > dp[j][i-1][0]:\n                dp[j+1][i][0] = dp[j][i-1][0]\n                dp[j+1][i][1] = dp[j][i-1][1]\n            else:\n                dp[j+1][i][0] = sub\n                if h[j+1] < h[dp[j][i-1][1]]:\n                    dp[j+1][i][1] = dp[j][i-1][1]\n                else:\n                    dp[j+1][i][1] = j+1\n\n    print(dp[n][k][0])\n    \n    \n    \n    \nif __name__ == \"__main__\":\n    main()\n","# dp[i][j] := i \u5217\u76ee\u307e\u3067\u898b\u3066\u3001i \u5217\u76ee\u3092\u4f7f\u3046\u3068\u3057\u3066\u3001\n#             j \u5217\u7121\u8996\u3057\u305f\u5834\u5408\u306e min\n\nN, K = map(int, input().split())\nH = [0] + list(map(int, input().split()))\ninf = 10**18\ndp = [[inf]*(K+1) for _ in range(N+1)]\ndp[0][0] = 0\nfor i, h in enumerate(H[1:], 1):\n    for j in range(K+1):\n        for k in range(K+1):  # k \u5217\u7121\u8996\u3059\u308b\n            if i-k-1 < 0 or j-k < 0:\n                continue\n            h_p = H[i-k-1]\n            #print(h_p)\n            dp[i][j] = min(dp[i][j], dp[i-k-1][j-k] + max(0, h - h_p))\n        #exit()\n\n#for d in dp:\n#    print(d)\nprint(min(dp[-1]))\n","from array import array\n\ndef main():\n    n,K = map(int, input().split())\n    h = list(map(int, input().split()))\n    inf = 1<<60\n    DP = [array(\"q\", [inf]*(K+1)) for i in range(K+1)]\n    DP[0][0] = 0\n    for i in range(n):\n        hi = h[i]\n        nxt = [array(\"q\", [inf]*(K+1)) for i in range(K+1)]\n        for j in range(min(i+1, K+1)):\n            for k in range(j+1):\n                l = i-k-1\n                if l<0:\n                    left = 0\n                else:\n                    left = h[l]\n                a = hi-left if left<hi else 0\n                nxt[j][0] = min(nxt[j][0], DP[j][k]+a)\n                if j == K:\n                    continue\n                nxt[j+1][k+1] = min(nxt[j+1][k+1], DP[j][k])\n        DP = nxt\n\n    ans = float(\"inf\")\n    for i in DP:\n        ans = min(ans, min(i))\n    print(ans)\n\nmain()","import sys\nsys.setrecursionlimit(2147483647)\nINF=float(\"inf\")\nMOD=10**9+7\ninput=lambda :sys.stdin.readline().rstrip()\ndef resolve():\n    n,k=map(int,input().split())\n    H=[0]+list(map(int,input().split()))\n\n    dp=[[INF]*(n-k+1) for _ in range(n+1)]\n    dp[0][0]=0\n\n    for x in range(1,n+1):\n        for y in range(1,n-k+1):\n            dp[x][y]=min(dp[x0][y-1]+max(0,H[x]-H[x0]) for x0 in range(x))\n\n    print(min(*(dp[x][n-k] for x in range(n+1))))\nresolve()","n, k = map(int, input().split())\nH = [0] + list(map(int, input().split()))\n\nm = n - k\nDP = [[float(\"inf\")] * (m + 1) for _ in range(n + 1)]\n\nDP[0][0] = 0\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if i < j:\n            continue\n        DP[i][j] = min(DP[k][j - 1] + max(0, H[i] - H[k]) for k in range(i))\n\nprint(min(DP[i][m] for i in range(n + 1)))\n","# pylint: disable=invalid-name\n# pylint: disable=missing-docstring\n\n\ndef main():\n    N, K = map(int, input().split())\n    H = [0] + [int(x) for x in input().split()]\n    DP = [[-1 for _ in range(K + 1)] for _ in range(N + 1)]\n    DP[0] = [0 for _ in range(K + 1)]\n    for i in range(1, N + 1):\n        for j in range(K + 1):\n            for k in range(max(i - j - 1, 0), i):\n                previous = DP[k][j - (i - k - 1)]\n                if previous == -1:\n                    continue\n\n                if DP[i][j] == -1 or previous + max(H[i] - H[k], 0) < DP[i][j]:\n                    DP[i][j] = previous + max(H[i] - H[k], 0)\n\n                if j > 0 and DP[i][j - 1] != -1 and DP[i][j - 1] < DP[i][j]:\n                    DP[i][j] = DP[i][j - 1]\n                # print('i {} j {} k {} j - (i - k - 1) {} DP_targ {} DP {}'.\n                #       format(i, j, k, j - (i - k - 1),\n                #              previous + max(H[i] - H[k], 0), DP[i][j]))\n    ans = -1\n    for i in range(N + 1):\n        if K < (N - i):\n            continue\n        if ans == -1 or DP[i][min(K - (N - i), K)] < ans:\n            ans = DP[i][min(K - (N - i), K)]\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n","n, k = map(int,input().split())\nh = list(map(int, input().split()))\n\nfor _ in range(k):\n    h.remove(max(h))\ncnt = 0\nwhile sum(h) > 0:\n    startVal = -1\n    for idx in range(len(h)):\n        if h[idx]>0:\n            if startVal < 0:\n                startVal = idx\n        else:\n            if startVal >= 0:\n                drawrank = min(h[startVal:idx])\n                for didx in range(startVal, idx):\n                    h[didx] -= drawrank\n                cnt += drawrank\n                startVal = -1\n    \n    if startVal >= 0:\n        drawrank = min(h[startVal:idx+1])\n        for didx in range(startVal, idx+1):\n            h[didx] -= drawrank\n        cnt += drawrank\nprint(cnt)\n","n,k = map(int,input().split())\nh = list(map(int,input().split()))\n\nif(n==k):\n    print(0)\n    exit()\n\ninf = 10**9 * (n+1)\ndp = [[inf] * (n-k+1) for _ in range(n+1)]\ndp[0][0] = 0\n\nfor i in range(1,n+1):\n    for j in range(1, n-k+1):\n        if(j==1):\n            dp[i][j] = h[i-1]\n        else:\n            tmp = inf\n            for l in range(1,i):\n                tmp = min(tmp, dp[l][j-1] + max(0, h[i-1]- h[l-1])  )\n            dp[i][j] = tmp\n\nprint(dp[-1][-1])","\nmax2 = lambda x,y: x if x > y else y\nmin2 = lambda x,y: x if x < y else y\n\n\ndef solve(K,H):\n    # dp[i][k] = H[i]\u306f\u6d88\u3055\u305aH[:i]\u307e\u3067\u3067k\u5217\u6d88\u3057\u305f\u3068\u4eee\u5b9a\u3057\u305f\u6642\u306e(H[:i+1]\u306e)\u30b3\u30b9\u30c8\n    H = [0]+H+[0]\n    N = len(H)\n    dp = [[float('inf')]*(i+1) for i in range(N)]\n    dp[0] = [0]\n\n\n    for r,hr in enumerate(H):\n        for l,hl in enumerate(H[:r]):\n            for k in range(l+1):\n                dp[r][k+(r-l-1)] = min2(dp[r][k+(r-l-1)], dp[l][k]+max2(0,hr-hl))\n    return dp[-1][K]\n\nif __name__ == '__main__':\n    N,K = map(int,input().split())\n    H = list(map(int,input().split()))\n\n    print(solve(K,H))","N,T=map(int,input().split())\nx=[]\nfor i in range(N):\n    Ai,Bi=map(int,input().split())\n    x.append((Ai,Bi))\n\nx.sort(key=lambda x:(x[1],x[0]))\n\ndp=[[0 for j in range(T)] for i in range(N)] # i\u756a\u76ee\u307e\u3067\u306e\u6599\u7406\uff08\u6700\u5f8c\u306e\u6599\u7406\u3092\u542b\u307e\u306a\u3044\uff09\u3067j\u5206\u5f8c\uff08<=T-1\u5206\u5f8c\uff09\u307e\u3067\u306b\u5f97\u3089\u308c\u308b\u6e80\u8db3\u5ea6\u306e\u6700\u5927\u5024\uff08\u5358\u7d14dp\uff09\n\n# \u5358\u7d14dp\nfor i in range(N-1):\n    for j in range(T):\n        if x[i][0]>j:\n            dp[i+1][j]=dp[i][j]\n        else:\n            dp[i+1][j]=max(dp[i][j],dp[i][j-x[i][0]]+x[i][1])\n\nprint(dp[N-1][T-1]+x[-1][1])","from functools import lru_cache\n\nn, k = map(int, input().split())\nh = [0] + list(map(int, input().split())) + [0]\nINF = 10 ** 18\n\n\n@lru_cache(maxsize=None)\ndef solve(i, nokori):\n    if i == 0:\n       return 0\n    res = INF\n    for j in range(nokori + 1):\n        if i - 1 - j < 0:\n            break\n        diff = max(h[i] - h[i - 1 - j], 0)\n        res = min(solve(i - 1 - j, nokori - j) + diff, res)\n    return res\n\n\nprint(solve(n + 1, k))","from random import random\n\nprint(rand())","#\n# \u3000\u3000  \u22c0_\u22c0\u3000 \n#\u3000\u3000  (\uff65\u03c9\uff65)  \n# .\uff0f \uff35 \u223d \uff35\uff3c\n#  \u2502\uff0a\u3000\u5408\u3000\uff0a\u2502\n#  \u2502\uff0a\u3000\u683c\u3000\uff0a\u2502 \n#  \u2502\uff0a\u3000\u7948\u3000\uff0a\u2502 \n#  \u2502\uff0a\u3000\u9858\u3000\uff0a\u2502 \n#  \u2502\uff0a\u3000\u3000\u3000\uff0a\u2502 \n#      \uffe3\n#\nimport sys\nsys.setrecursionlimit(10**6)\ninput=sys.stdin.readline\nfrom math import floor,ceil,sqrt,factorial,log #log2\u306a\u3044\uff59\uff50\nfrom heapq import heappop, heappush, heappushpop\nfrom collections import Counter,defaultdict,deque\nfrom itertools import accumulate,permutations,combinations,product,combinations_with_replacement\nfrom bisect import bisect_left,bisect_right\nfrom copy import deepcopy\ninf=float('inf')\nmod = 10**9+7\ndef pprint(*A): \n    for a in A:     print(*a,sep='\\n')\ndef INT_(n): return int(n)-1\ndef MI(): return map(int,input().split())\ndef MF(): return map(float, input().split())\ndef MI_(): return map(INT_,input().split())\ndef LI(): return list(MI())\ndef LI_(): return [int(x) - 1 for x in input().split()]\ndef LF(): return list(MF())\ndef LIN(n:int): return [I() for _ in range(n)]\ndef LLIN(n: int): return [LI() for _ in range(n)]\ndef LLIN_(n: int): return [LI_() for _ in range(n)]\ndef LLI(): return [list(map(int, l.split() )) for l in input()]\ndef I(): return int(input())\ndef F(): return float(input())\ndef ST(): return input().replace('\\n', '')\ndef main():\n    N,K = MI()\n    H=LI()\n    \n    dp = [[0]+[inf]*(N) for _ in range(N)] #dp[right][size]: \u6700\u3082\u53f3\u306e\u9805right, \u3044\u3058\u3063\u3066\u306a\u3044\u3084\u3064\u306e\u6570size\n    for i in range(N):\n        dp[i][1] = H[i]\n    dp[0][1]=H[0]\n    for right in range(N):\n        for size in range(2,N+1):\n\n            for i in range(right):\n                dp[right][size] = min(dp[right][size], dp[i][size-1]+max(0, H[right]-H[i]))\n    ans = dp[N-1][N-K]\n    # print(N-K)\n    # print(*dp,sep=\"\\n\")\n    print(ans)\nif __name__ == '__main__':\n    main()","N,K = map(int,input().split())\n\nH = list(map(int,input().split()))\n\nHSorted = sorted(H)\n\nHIndexToHeight = []\nHHeightToIndex = {}\n\nfor i in range(N):\n    if i != 0 and HSorted[i] == HSorted[i-1]:\n        continue\n    HIndexToHeight.append(HSorted[i])\n    HHeightToIndex[HSorted[i]] = len(HIndexToHeight) - 1\n\nINF = 10 ** 12\n\nheightCount = len(HIndexToHeight)\n\nDP = []\nfor i in range(N):\n    DP.append([])\n    for j in range(K + 1):\n        DP[i].append([])\n        for k in range(heightCount):\n            DP[i][j].append(INF)\n\nfor k in range(heightCount):\n    if k == HHeightToIndex[H[0]]:\n        DP[0][0][k] = H[0]\n    else:\n        DP[0][1][k] = HIndexToHeight[k]\n\nfor i in range(1,N):\n    currentHeight = HHeightToIndex[H[i]]\n    for j in range(K + 1):\n        for k in range(heightCount):\n            if currentHeight > k:\n                if j > 0:\n                    DP[i][j][k] = min(DP[i-1][j-1][k], DP[i][j][k])\n                DP[i][j][currentHeight] = min(DP[i-1][j][k] + HIndexToHeight[currentHeight] - HIndexToHeight[k], DP[i][j][currentHeight])\n            elif currentHeight == k:\n                DP[i][j][currentHeight] = min(DP[i-1][j][k], DP[i][j][currentHeight])\n            else:\n                if j > 0:\n                    DP[i][j][k] = min(DP[i-1][j-1][k], DP[i][j][k])\n                DP[i][j][currentHeight] = min(DP[i-1][j][k], DP[i][j][currentHeight])\nans = INF\n\nfor j in range(K + 1):\n    for k in range(heightCount):\n        if ans > DP[N-1][j][k]:\n            ans = DP[N-1][j][k]\n\nprint(ans)\n\n\n","import sys\ninput=sys.stdin.readline\n\ndef main():\n    n,k=map(int,input().split())\n    H=[0]+list(map(int,input().split()))\n    DP=[[10**12]*(n-k+1) for _ in range(n+1)]\n    DP[0][0]=0\n    for x in range(1,n+1):\n        for y in range(1,n-k+1):\n            for i in range(x):\n                DP[x][y]=min(DP[x][y],DP[i][y-1]+max(0,H[x]-H[i]))\n    print(min(DP[i][-1] for i in range(n+1)))\n\nif __name__=='__main__':\n    main()","ii = lambda : int(input())\nmi = lambda : map(int,input().split())\nli = lambda : list(map(int,input().split()))\n\nn,K = mi()\nhlis = li()\n\ninf = 10 **13 + 7\ndp = [[inf]*n for _ in range(n)]\nfor i in range(n):\n    dp[0][i] = hlis[i]\n\nfor i in range(1,n):\n    for k in range(i,n):\n        #dp[i][k] = min(dp[i][k],dp[i-1][l] + abs)\n        for l in range(k):\n            dp[i][k] = min(dp[i][k],dp[i-1][l] + max(0,hlis[k] - hlis[l]))\n\ntukau = n - K\nans = inf\nif K == n:\n    print(0)\n    exit()\nfor i in range(K,n):\n    ans = min(ans,dp[tukau-1][i])\nprint(ans)\n\n","def examA():\n    N = DI()\/dec(7)\n    ans = N\n    print(N)\n    return\n\ndef examB():\n    ans = 0\n    print(ans)\n    return\n\ndef examC():\n    ans = 0\n    print(ans)\n    return\n\ndef examD():\n    ans = 0\n    print(ans)\n    return\n\ndef examE():\n    ans = 0\n    print(ans)\n    return\n\ndef examF():\n    N, K = LI()\n    H = LI()\n    H.insert(0,0)\n    dp = [[[inf]*(K+1)for _ in range(N+1)] for _ in range(N+1)]\n    dp[0][0][0] = 0\n    for i in range(N):\n        for j in range(i+1):\n            for k in range(K+1):\n                dp[i+1][i+1][k] = min(dp[i+1][i+1][k],dp[i][j][k]+max(0,H[i+1]-H[j]))\n                if k<K:\n                    dp[i+1][j][k+1] = min(dp[i+1][j][k+1],dp[i][j][k])\n\n    ans = inf\n    for j in range(N+1):\n        ans = min(ans,dp[-1][j][-1])\n    #for v in dp:\n    #    print(v)\n    print(ans)\n    return\n\nfrom decimal import getcontext,Decimal as dec\nimport sys,bisect,itertools,heapq,math,random\nfrom copy import deepcopy\nfrom heapq import heappop,heappush,heapify\nfrom collections import Counter,defaultdict,deque\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\ndef I(): return int(input())\ndef LI(): return list(map(int,sys.stdin.readline().split()))\ndef DI(): return dec(input())\ndef LDI(): return list(map(dec,sys.stdin.readline().split()))\ndef LSI(): return list(map(str,sys.stdin.readline().split()))\ndef LS(): return sys.stdin.readline().split()\ndef SI(): return sys.stdin.readline().strip()\nglobal mod,mod2,inf,alphabet,_ep\nmod = 10**9 + 7\nmod2 = 998244353\ninf = 10**18\n_ep = dec(\"0.000000000001\")\nalphabet = [chr(ord('a') + i) for i in range(26)]\nalphabet_convert = {chr(ord('a') + i): i for i in range(26)}\n\ngetcontext().prec = 28\n\nsys.setrecursionlimit(10**7)\n\nif __name__ == '__main__':\n    examF()\n\n\"\"\"\n8 7\n7 3 9 1 5 2 8 3\n\"\"\"","def solve(n, k, h_list):\n    # dp table\n    large = sum(h_list) + 1\n    dp = [[large] * n for _ in range(n + 1)]\n    dp[1][0] = h_list[0]\n    # update\n    for i in range(1, n):\n        for s in range(2, n + 1):\n            dp[s][i] = min([dp[s - 1][j] + max(0, h_list[i] - h_list[j]) for j in range(i)])\n        dp[1][i] = h_list[i]\n    #print(dp)\n    return min(dp[n - k])\n\n\ndef main():\n    n, k = map(int, input().split())\n    h_list = list(map(int, input().split()))\n    res = solve(n, k, h_list)\n    print(res)\n\n\ndef test():\n    assert solve(4, 1, [2, 3, 4, 1]) == 3\n    assert solve(6, 2, [8, 6, 9, 1, 2, 1]) == 7\n    assert solve(10, 0, [1, 1000000000, 1, 1000000000, 1, 1000000000, 1, 1000000000, 1, 1000000000]) == 4999999996\n\n\nif __name__ == \"__main__\":\n    # test()\n    main()\n","n, k = map(int, input().split())\nl_h = list(map(int, input().split()))\n\ndel_num = []\nfor i in range(n):\n  if i == 0:\n    del_num.append(max(0, l_h[i]-l_h[i+1]))\n  elif i == n-1:\n    del_num.append(max(0, l_h[i]-l_h[i-1]))\n  else:\n    del_num.append(max(0, l_h[i]-l_h[i-1], l_h[i]-l_h[i+1]))\nfor i in range(k):\n  idx = del_num.index(max(del_num))\n  l_h[idx] = l_h[idx] - del_num[idx]\n  del_num[idx] = 0\n\nd = []\na = []\nx = 0\ny = 0\nwhile y < len(l_h)-1:\n  if l_h[y] == l_h[y+1]:\n    l_h.pop(y)\n    y -= 1\n  y += 1\nfor i in range(1,len(l_h) - 1):\n  if l_h[i-1] > l_h[i] < l_h[i+1]:\n    a.append(l_h[i])\n    x = 1\nfor i in range(1,len(l_h) - 1):\n  if l_h[i-1] < l_h[i] > l_h[i+1]:\n    d.append(l_h[i])\n    x = 1\nif len(l_h) >= 2:\n  if l_h[0] >= l_h[1]:\n    d.append(l_h[0])\n  if l_h[-1] >= l_h[-2]:\n    d.append(l_h[-1])\n  print(sum(d) - sum(a))\nelse:\n  print(l_h[0])","n, k = map(int, input().split())\nh = list(map(int, input().split()))\n\n#dp[a][b][c]: a\u307e\u3067\u898b\u3066b\u500b\u6d88\u3057\u3066\u3044\u3066\u6d88\u3057\u3066\u306a\u3044\u53f3\u7aef\u304cc\u306e\u3068\u304d\u306e\u6700\u5c0f\u5024(\u305c\u3093\u30761-indexed)\ndp = [[[10**12 for _ in range(n+1)] for _ in range(k+1)] for _ in range(n+1)]\ndp[0][0][0] = 0\n\nfor a in range(n):\n\tfor b in range(k+1):\n\n\t\tfor c in range(a+1):\n\t\t\t#h[a]\u3092\u6d88\u3059\u5834\u5408\n\t\t\tif b < k:\n\t\t\t\tdp[a+1][b+1][c] = min(dp[a+1][b+1][c], dp[a][b][c])\n\n\t\t\t#h[a]\u3092\u6d88\u3055\u306a\u3044\u5834\u5408\n\t\t\tdp[a+1][b][a+1] = min(dp[a+1][b][a+1], dp[a][b][c] + max(0, h[a] - h[c-1]))\n\nprint(min(dp[n][k])+1)","import sys\nsys.setrecursionlimit(10**7)\nINTMAX = 9223372036854775807\nINTMIN = -9223372036854775808\nDVSR = 1000000007\ndef POW(x, y): return pow(x, y, DVSR)\ndef INV(x, m=DVSR): return pow(x, m - 2, m)\ndef DIV(x, y, m=DVSR): return (x * INV(y, m)) % m\ndef LI(): return [int(x) for x in input().split()]\ndef LF(): return [float(x) for x in input().split()]\ndef LS(): return input().split()\ndef II(): return int(input())\ndef FLIST(n):\n    res = [1]\n    for i in range(1, n+1): res.append(res[i-1]*i%DVSR)\n    return res\n\n\nN,K=LI()\nMP=[0] + LI()\nLG = 10**15\nDP=[[LG]*(N+1) for i in range(N-K+1)]\nDP[0][0] = 0\n\nfor i in range(1, N+1):\n    DP[1][i] = MP[i]\n\nfor i in range(1, N-K):\n    for j in range(1, N+1):\n        for k in range(1, j):\n            DP[i+1][j] = min(DP[i+1][j], DP[i][k] + max(0, MP[j] - MP[k]))\n\nres = 10**15\nfor i in range(1, N+1):\n    res = min(res, DP[N-K][i])\nprint(res)\n","def main():\n    n, k = map(int, input().split())\n    tmp = list(map(int, input().split()))\n    h = [0]\n    for v in tmp:\n        h.append(v)\n    dp = [[float(\"inf\")]*(n-k+1) for i in range(n+1)]\n    dp[0][0] = 0\n    for i in range(1, n+1):\n        for j in range(1, n-k+1):\n            tmp = float(\"inf\")\n            for l in range(i):\n                p = max(0, h[i] - h[l])\n                if tmp > dp[l][j-1] + p:\n                    tmp = dp[l][j-1] + p\n            dp[i][j] = tmp\n    ans = float(\"inf\")\n    for i in range(n+1):\n        if ans > dp[i][n-k]:\n            ans = dp[i][n-k]\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()","N, K = [int(s) for s in input().split(' ')]\nH = [int(s) for s in input().split(' ')]\n\n# state: up to nth column, how many skipped, current height(dict)\n# value: how many times it takes to cover\ndp = [[] for _ in range(N)]\n\nfor n, h in enumerate(H):\n  if n == 0:\n    before = [{0: 0}] + [{} for _ in range(K)]\n  else:\n    before = dp[n-1]\n  # skip (k -> k+1)\n  dp[n] = [{}] + before[:-1]\n  current = dp[n]\n  # not skip (update h and count)\n  for k in range(K+1):\n    # before[k] = current[k+1]\n    for h_before, count in before[k].items():\n      candidate = current[k].get(h, float(\"inf\"))\n      if h_before >= h:\n        current[k][h] = min(candidate, count)\n      else:\n        current[k][h] = min(candidate, count + h - h_before)\n      #print(n, k, h, h_before, count, candidate, current[k][h])\n  #print(current)\n\nprint(min([v for d in dp[-1] for v in d.values()]))\n\n\n        \n  \n  ","N,K = map(int,input().split())\nH = [0] + list(map(int,input().split()))\n\nINF = float('inf')\ndp = [[INF]*(N-K+1) for _ in range(N+1)]\ndp[0][0] = 0\n\nfor i,h in enumerate(H):\n    if i==0: continue\n    for j in range(N-K,0,-1):\n        for k in range(i):\n            c = max(0, h - H[k])\n            dp[i][j] = min(dp[i][j], dp[k][j-1] + c)\nprint(min(row[-1] for row in dp))","n,k = map(int,input().split())\nlis = list(map(int,input().split()))\nlis.insert(0,0)\nlis.append(0)\nn += 2\nnum = 0\nfor nu in lis:\n    if nu != 0:\n        num += 1\nif num <= k:\n    print(0)\n    exit()\ncnt = [0 for i in range(n)]\nfor _ in range(k):\n    li = [0 for i in range(n)]\n    for i in range(n):\n        if i != n-1:\n            li[i] = max(li[i],lis[i]-lis[i+1])\n        if i != 0:\n            li[i] = max(li[i],lis[i]-lis[i-1])\n    numm = li.index(max(li))\n    cnt[numm] = 1\n    if numm == 0:\n        lis[0] = lis[1]\n    elif numm == n-1:\n        lis[n-1] = lis[n-2]\n    else:\n        lis[numm] = min(lis[numm-1],lis[numm+1])\nnn = 10 ** 10\nfor i in range(n):\n    if cnt[i] == 1:\n        nn = min(nn,cnt[i])\nfor i in range(n):\n    if cnt[i] == 1:\n        lis[i] = nn    \nans = 0\nnum = 0\nfor i in range(n):\n    if lis[i] >= num:\n        num = lis[i]\n    else:\n        ans += num-lis[i]\n        num = lis[i]\nans += num\nprint(ans)","n, k = map(int, input().split())\nh = list(map(int, input().split()))\n\nif k == n:\n    print(0)\n    exit()\n\ndp = [[0 for _ in range(n)] for _ in range(n-k)]\n\ndp[0] = [] + h\n\nfor x in range(1, n-k):\n    for y in range(n):\n        temp = float('inf')\n        for i in range(y):\n            temp = min(temp, dp[x-1][i] + max(0, h[y] - h[i]))\n        dp[x][y] = temp\n\n#for x in dp: print(x)\n\nprint(min(dp[n-k-1]))","def main():\n    import sys\n    input = sys.stdin.readline\n\n    N, K = map(int, input().split())\n    H = list(map(int, input().split()))\n    H.append(0)\n    H.insert(0, 0)\n    N += 2\n\n    inf = 10**12\n    dp = [[inf] * (K+1) for _ in range(N)]\n    dp[0][0] = 0\n    for i in range(N):\n        for k in range(K+1):\n            for j in range(K-k+1):\n                if i + j + 1 < N:\n                    dp[i+j+1][k+j] = min(dp[i+j+1][k+j], dp[i][k] + max(0, H[i+j+1] - H[i]))\n    print(min(dp[-1]))\n\n\nif __name__ == '__main__':\n    main()\n","N, K = list(map(int, input().split()))\nH = list(map(int, input().split()))\n\nN += 1\nH = [0] + H\n\nDP = [[0] * N for _ in range(N)]\n\nfor i in range(1, N):\n  DP[i][i - 1] = max(0, H[i] - H[0])\n  for j in range(i - 1):\n    DP[i][j] = DP[i - 1][j] + max(0, H[i] - H[i - 1])\n    for k in range(j + 1):\n      DP[i][j] = min(DP[i][j], DP[i - k - 1][j - k] + max(0, H[i] - H[i - k - 1]))\n\nans = DP[-1][K]\nfor i in range(K - 1, -1, -1):\n  ans = min(ans, DP[N - K + i][K])\n\nprint(ans)","n,k=map(int,input().split())\ndp=[]\nfor i in range(n+2):\n  dp.append([])\n  for j in range(n+2):\n    dp[-1].append([])\n    for l in range(k+1):\n      dp[-1][-1].append(10**12)\nfor l in range(k+1):\n    dp[0][0][l]=0\nh=list(map(int,input().split()))\nh.append(0)\nh.reverse()\nh.append(0)\nh.reverse()\nfor i in range(1,n+2):\n  for j in range(n+2):\n    for l in range(k+1):\n      dp[i][i][l]=min(dp[i][i][l],dp[i-1][j][l]+max(0,h[i]-h[j]))\n      if l>0:\n        dp[i][j][l]=min(dp[i][j][l],dp[i-1][j][l-1])\n        dp[i][0][l]=min(dp[i][0][l],dp[i-1][j][l-1]+h[j])\nans=dp[n+1][0][0]\nfor j in range(n+2):\n  for l in range(k+1):\n    ans=min(ans,dp[n+1][j][l])\nprint(ans)","import sys\nN, K = map(int, input().split())\nH = list(map(int, input().split()))\nif N<=K:\n    print(0)\n    sys.exit()\ndp = [[[float('inf')]*(K+2) for i in range(N+2)] for j in range(N+1)]\ndp[0][0][0] = H[0]\ndp[0][-1][1] = 0\nfor i in range(N-1):\n    for j in range(i+1):\n        for k in range(K+1):\n            if H[j]>H[i+1]:\n                dp[i+1][i+1][k] = min(dp[i][j][k], dp[i+1][i+1][k])\n            else:\n                dp[i+1][i+1][k] = min(dp[i+1][i+1][k], dp[i][j][k]+H[i+1]-H[j])\n                dp[i+1][j][k+1] = min(dp[i][j][k], dp[i+1][j][k+1])\n    for k in range(K):\n        dp[i+1][-1][k+1] = min(dp[i][-1][k], dp[i+1][-1][k+1])\n        dp[i+1][i+1][k] = min(dp[i+1][i+1][k], dp[i][-1][k]+H[i+1])\n\nans = float('inf')\nfor i in range(K+1):\n    res = min(dp[N-1][j][i] for j in range(N))\n    ans = min(ans, res)\nprint(ans)\n\n\n            \n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n\n        \n\n\n\n\n","N,K= map(int,input().split())\nH= list(map(int,input().split()))\n\ndef dpinit(ps, val=0):\n    res = [val for i in [0]*ps[-1]]\n    for i in ps[:-1][::-1]:\n        res = [res[:] for k in [0]*i]\n    return res\n\nH = [0] + H + [0]\ndp = dpinit((N+2,K+2))\n\nfor i in range(1,N+2):\n    for j in range(K+1):\n        l = min(j+1,i)\n        cand = [dp[i-k][j-k+1] + max(0, H[i]-H[i-k]) for k in range(1,l+1)]\n        dp[i][j] = min(cand)\n\nprint(dp[N+1][K])\n\n","import sys\n\n\nN,K = map(int,input().split())\n\nif N == K:\n    print (0)\n    sys.exit()\n\nH = list(map(int,input().split()))\n\n\ndp = [[None] * (N-K+1) for i in range(N) ]\n\nfor i in range(N):\n\n    nh = H[i]\n\n    dp[i][1] = nh\n\n    for j in range(i):\n        for k in range(N-K):\n\n            if dp[j][k] != None:\n\n                if dp[i][k+1] == None:\n                    \n                    dp[i][k+1] = dp[j][k] + max(0, H[i]-H[j])\n\n                else:\n\n                    dp[i][k+1] = min(dp[i][k+1] , dp[j][k] + max(0, H[i]-H[j]))\n\nans = float(\"inf\")\nfor i in range(N):\n\n    if dp[i][-1] != None:\n        ans = min(ans,dp[i][-1])\n\nprint (ans)\n\n","N,K=map(int,input().split())\nh=list(map(int,input().split()))\n\ndp=[[float(\"inf\") for j in range(N+1)] for k in range(N)]\n\nfor j in range(N):\n    dp[j][1]=h[j]\n    dp[j][0]=0\n\nfor i in range(1,N):\n    for j in range(2,N+1):\n        dp[i][j]=min(dp[k][j-1]+(h[i]-h[k])*(h[i]>=h[k]) for k in range(i))\n\ntest1=min(dp[i][N-K] for i in range(N))\nprint(test1)\n","inpl = lambda: list(map(int,input().split()))\nN, K = inpl()\nH = [0] + inpl() + [0]\ndp = [[0]*(K+1) for _ in range(N+2)]\nfor n in range(1,N+2):\n    for k in range(K+1):\n        if k >= n-1:\n            dp[n][k] = H[n]\n        else:\n            dp[n][k] = min(dp[n-1-l][k-l] + max(0,H[n]-H[n-1-l]) for l in range(k+1))\nprint(dp[-1][-1])","\nfrom collections import defaultdict,deque\nimport sys,heapq,bisect,math,itertools,string,queue,copy,time\nimport numpy as np\nsys.setrecursionlimit(10**8)\nINF = float('inf')\nmod = 10**9+7\neps = 10**-7\ndef inp(): return int(sys.stdin.readline())\ndef inpl(): return list(map(int, sys.stdin.readline().split()))\ndef inpl_str(): return list(sys.stdin.readline().split())\n\nN,K = inpl()\ndp = np.zeros((N,K+1),np.uint64)\nHH = inpl()\n\n\nbHs = np.zeros((K+1),int)\nfor n,H in enumerate(HH):\n    for k in reversed(range(1,K+1)):\n        used = dp[n-1][k-1]\n        unused = dp[n-1][k] + max(0,H-bHs[k])\n        # print(bHs,used,unused)\n        if used < unused:\n            dp[n][k] = used\n            bHs[k] = bHs[k-1]\n        else:\n            dp[n][k] = unused\n            bHs[k] = H\n\n    dp[n][0] = dp[n-1][0] + max(0,H-bHs[0])\n    bHs[0] = H\n\n    # print(dp[n], bHs)\n\nprint(min(dp[-1]))\n","n,k = map(int,input().split())\na = [0]+list(map(int,input().split()))\ndp = [[(10**18,0) for i in range(k+1)] for j in range(n+1)]\ndp[0][0] = (0,0)\nmx = 0\nfor i in range(1,n+1):\n  x = a[i]\n  dp[i][0] = (dp[i-1][0][0]+max(0,a[i]-a[i-1]),x)\n  for j in range(1,k+1):\n    pr = dp[i-1][j][1]\n    y = max(0,x-pr)\n    if dp[i-1][j][0]+y > dp[i-1][j-1][0]:\n      dp[i][j] = (dp[i-1][j-1][0],dp[i-1][j-1][1])\n    else:\n      dp[i][j] = (dp[i-1][j][0]+y,x)\nprint(dp[n][k][0])","import sys\ninput = sys.stdin.readline\n\ndef I(): return int(input())\ndef MI(): return map(int, input().split())\ndef LI(): return list(map(int, input().split()))\n\ndef main():\n    \"\"\"\n    \u30e1\u30e2\n    K=0\u306a\u3089\uff0c\u5de6\u304b\u3089\u898b\u3066\u767b\u3063\u305f\u6570\u3092\u6570\u3048\u308b\uff0cgrandGarden\n    K>=1\u306e\u6642\uff0c\u5857\u308b\u5217\u306f\u5de6\u53f3\u3069\u3061\u3089\u304b\u3068\u540c\u3058\u9ad8\u3055\u306b\u3059\u308b\uff0e\u540c\u3058\u9ad8\u3055\u3067\u4f55\u500b\u304b\u9023\u306a\u3063\u3066\u3044\u308b\u3068\u9762\u5012\u304b\u3082\uff1f\n    \u5de6\u53f3\u3069\u3061\u3089\u304b\u3068\u540c\u3058\u9ad8\u3055\u306b\u3059\u308b\u3068\u3044\u3046\u306e\u306f\u9010\u6b21\u7684\u306a\u8a71\uff0c1,1,1,5,4,5,1\u3067K=3\u306a\u3089\u7b54\u3048\u306f1\n    K\u500b\u3092\u7121\u8996\u3067\u304d\u308b\u3068\u8003\u3048\u308b\uff0e\n    dp[x][y][k]\u3067\uff0cx\u301cy\u307e\u3067\uff0ck\u500b\u7121\u8996\u3068\u8003\u3048\u308c\u3070\u9077\u79fb\u3082\u542b\u3081\u30665\u4e57\u304f\u3089\u3044\u3067\u884c\u3051\u305d\u3046\n    =>0\u304b\u3089\u30b9\u30bf\u30fc\u30c8\u3060\u3051\u3067\u826f\u3044\uff0cdp[x][k]\u3067\u884c\u3051\u305d\u3046\uff1f\uff0ex\u306e\u3068\u3053\u308d\u306f\u4f7f\u3063\u3066\u3044\u308b\u3082\u306e\u3068\u3059\u308b\uff0e\n    =>\u300cK\u56de\u4f7f\u3048\u308b\u300d\u3088\u308a\u3082\u300c\u4f7f\u3063\u305f\u6570\u304c\u3044\u304f\u3064\u304b\u300d\u3092\u8a18\u61b6\u3057\u3066\u304a\u304f\u307b\u3046\u304c\u697d\u305d\u3046\n    \"\"\"\n    N,K=MI()\n    H=[0]+LI()\n    N+=1\n    inf=10**12\n    dp=[[inf]*(N) for _ in range(N)]\n    # dp[i][j]\u306fi\u756a\u76ee\u307e\u3067\u898b\u3066\uff0cj\u500b\u306e\u8981\u7d20\u304b\u3089\u306a\u308b\n    dp[0][0]=0\n    \n    for i in range(1,N):\n        for j in range(N):\n            temp=inf\n            for k in range(i):#\u3069\u3053\u304b\u3089\u304f\u308b\u304b\n                temp=min(temp,dp[k][j-1]+max(0,H[i]-H[k]))\n            dp[i][j]=temp\n    \n    ans=inf\n    \n    for i in range(N):\n        ans=min(ans,dp[i][N-K-1])\n    print(ans)\n\nmain()\n","N, K = map(int, input().split())\nH = list(map(int, [0] + input().split() + [0]))\nd = [[10**18]*(K+1) for _ in range(N+2)]\nfor i in range(K+1):\n    d[0][i] = 0\nfor hi in range(N+1):\n    hi+=1\n    h = H[hi]\n    for i in range(min(K+1, hi)):\n        for k in range(i+1):\n            d[hi][i] = min(d[hi][i], d[hi-k-1][i-k] + max(H[hi-k-1]-h, 0))\nprint(min(d[-1]))\n","import numpy as np\n\nn, k = map(int, input().split())\nh = np.array(input().split(), dtype=np.int)\n\nif k < n:\n  dp = np.zeros((n - k, n), dtype=np.int)\n  dp[0] = h\n  for i in range(n - k - 1):\n    for j in range(i + 1, n):\n      dp[i+1, j] = np.min(dp[i][i:j] + np.maximum(h[j] - h[i:j], 0))\n  print(dp[n-k-1, n-k-1:])\nelse:\n  print(0)","INF = float(\"inf\")\n\nN, K, *H = map(int, open(0).read().split())\nH = [0] + H\n\nif N == K:\n    print(0)\n    quit()\n\ndp = [0] + [INF] * N\nfor i in range(1, N - K + 1):\n    dp = [INF] * i + [min(dp[k] + max(0, h - H[k]) for k in range(i - 1, j)) for j, h in enumerate(H[i:], i)]\n\nprint(min(dp))","n, k = list(map(int, input().split()))\nhs = [0] + list(map(int, input().split())) \n\n\nmax_val = sum([max(hs[i + 1] - hs[i], 0) for i in range(n)])\ndp = [[max_val for _ in range(n + 1)] for _ in range(n + 1)]\n\ndp[0][0] = 0\nfor i in range(1, n + 1):\n\tfor j in range(1, n + 1):\t\n\t\tdp[i][j] = min([dp[i - 1][l] + max(hs[j] - hs[l], 0) for l in range(j)])\n\nprint(min([dp[n - k][l] for l in range(n + 1)]))","import sys\nimport math\nfrom collections import defaultdict\n\nsys.setrecursionlimit(10**7)\ndef input():\n    return sys.stdin.readline()[:-1]\n\nmod = 10**9 + 7\n\ndef I(): return int(input())\ndef II(): return map(int, input().split())\ndef III(): return list(map(int, input().split()))\ndef Line(N,num):\n    if N<=0:\n        return [[]]*num\n    elif num==1:\n        return [I() for _ in range(N)]\n    else:\n        read_all = [tuple(II()) for _ in range(N)]\n        return map(list, zip(*read_all))\n\n#################\n\nN,K = II()\nH = III()\n\nif N==1:\n    if K>=1:\n        print(0)\n        exit()\n    else:\n        print(H[0])\n        exit()\n\nans = 0\nfor i in range(N):\n    if i==0:\n        ans += H[i]\n    else:\n        if H[i]>H[i-1]:\n            ans += H[i]-H[i-1]\n\ndef calc(H):\n    N = len(H)\n    x = [0]*N\n    muki = [0]*N\n    for i in range(N):\n        if i!=0 and i!=N-1:\n            if H[i]>H[i-1] and H[i]>H[i+1]:\n                x[i] = min(H[i]-H[i-1], H[i]-H[i+1])\n                muki[i] = 1\n            if H[i]<H[i-1] and H[i]<H[i+1]:\n                x[i] = min(-H[i]+H[i-1], -H[i]+H[i+1])\n                muki[i] = -1\n        if i==0:\n            if H[i]>H[i+1]:\n                x[i] = H[i]-H[i+1]\n        if i==N-1:\n            if H[i]>H[i-1]:\n                x[i] = H[i]-H[i-1]\n    return x,muki\n\nfor k in range(K):\n    x,muki = calc(H)\n    maxi = -1\n    maxval = -1\n    for i in range(N):\n        if x[i]>maxval:\n            maxval = x[i]\n            maxi = i\n    if maxval<=0:\n        break\n    else:\n        if maxi==0:\n            H[0] = H[1]\n            ans -= x[0]\n        elif maxi==N-1:\n            H[N-1] = H[N-2]\n            ans -= x[N-1]\n        else:\n            if muki[i]==1:\n                H[maxi] = min(H[maxi-1], H[maxi+1])\n            if muki[i]==-1:\n                H[maxi] = max(H[maxi-1], H[maxi+1])\n            ans -= x[maxi]\n\nprint(ans)","n,k=map(int,input().split())\nA=list(map(int,input().split()))\n\ndp1=[(10**18,0)for i in range(k+2)]\ndp2=[(10**18,0)for i in range(k+2)]\ndp1[0]=(0,0)\ndp2[0]=(0,0)\n\nfor t,h in enumerate(A):\n    for i in range(min(t+1,k),-1,-1):\n        ca1,la1=dp1[i]\n        cb1,lb1=dp2[i]\n        ca2,la2=dp1[i-1]\n        cb2,lb2=dp2[i-1]\n        #\u4f7f\u308f\u306a\u3044\n        t1=(ca1+h-la1,h) if la1<h else (ca1,h)\n        t2=(cb1+h-lb1,h) if lb1<h else (cb1,h)\n        #\u4f7f\u3046\n        t3=(ca2,min(h,la2))\n        t4=(cb2,min(h,lb2))\n        T=[t1,t2,t3,t4]\n        dp1[i]=min(T,key=lambda x: (x[0],-x[1]))\n        dp2[i]=min(T,key=lambda x: (-x[1],x[0]))\n\nprint(min(dp1[k][0],dp2[k][0]))\n\n\"\"\"\n0 2\n100 100000 1000021 100\n\n\"\"\"\n","import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nimport numpy as np\n\nN,K = map(int,readline().split())\nH = np.array([0] + read().split(),np.int64)\n\nINF = 10 ** 17\ndp = np.full((N+1,N+1),INF,np.int64)\ndp[0,0] = 0\n\nfor n,x in enumerate(H[1:],1):\n    add = np.maximum(0, x - H[:n])\n    dp[n,1:] = np.min(dp[:n,:-1] + add[:,None], axis=0)\n\nanswer = dp[:,N-K:].min()\nprint(answer)","N,K=map(int,input().split())\nH=list(map(int,input().split()))\ndef f(H):\n    x,y=0,0\n    for h in H:\n        if h>y:\n            x+=h-y\n        y=h\n    return x\ndp=[(f(H),H)]+[(0,[])]*K\nfor i in range(1,K+1):\n    x,y=dp[i-1]\n    for j in range(len(dp[i-1][1])):\n        z=f(dp[i-1][1][:j]+dp[i-1][1][j+1:])\n        if z<x:\n            x,y=z,dp[i-1][1][:j]+dp[i-1][1][j+1:]\n    dp[i]=x,y\nprint(dp[-1][0])","n, k = map(int, input().split())\nh = [0] + list(map(int, input().split())) + [0]\n\nfor i in range(k):\n    dif = []\n    for j in range(len(h) - 2):\n        temp = [h[j + 1] - h[j], h[j + 1] - h[j + 2]]\n        if temp[0] * temp[1] <= 0:\n            dif.append(0)\n        else:\n            dif.append(min([abs(temp[0]), abs(temp[1])]))\n    del h[dif.index(max(dif)) + 1]\ncount = 0\nfor i in range(len(h) - 1):\n    if h[i] < h[i + 1]:\n        count += (h[i + 1] - h[i])\nprint(count)","import sys\n\nstdin = sys.stdin\n\nni = lambda: int(ns())\nna = lambda: list(map(int, stdin.readline().split()))\nns = lambda: stdin.readline().rstrip()  # ignore trailing spaces\n\nn, k = na()\nh = na()\n\nys = h[:] + [0]\nys.sort()\n\nys2 = []\nfor v in ys:\n    if len(ys2) > 0 and ys2[-1] == v:\n        continue\n    ys2.append(v)\nys = ys2\nm = len(ys)\n\ndp = [[999999999999999999] * m for _ in range(k+1)]\ndp[0][0] = 0\n\nfor v in h:\n    ndp = [[999999999999999999] * m for _ in range(k + 1)]\n    for i in range(k+1):\n        plus = 99999999999999999\n        for j in range(m):\n            plus = min(plus + (ys[j] - ys[j-1] if j > 0 else 0), dp[i][j])\n            if ys[j] == v:\n                ndp[i][j] = min(ndp[i][j], plus)\n            elif i+1 <= k:\n                ndp[i+1][j] = min(ndp[i+1][j], plus)\n        plus = 99999999999999999\n        for j in range(m-1, -1, -1):\n            plus = min(plus, dp[i][j])\n            if ys[j] == v:\n                ndp[i][j] = min(ndp[i][j], plus)\n            elif i+1 <= k:\n                ndp[i+1][j] = min(ndp[i+1][j], plus)\n    dp = ndp\n\nans = min(min(row) for row in dp)\nprint(ans)\n","#!\/usr\/bin\/env python3\nimport sys\ninput = sys.stdin.readline\nMOD = 10**9 + 7\nINF = 10**13\n\nn, K = [int(item) for item in input().split()]\nh = [0] + [int(item) for item in input().split()]\n\n# dp[i][j][k] i:till ith, j:skipped j, k: previous index\ndp = [[[INF] * (n + 1) for _ in range(n + 1)] for _ in range(n + 1)]\nfor i, item in enumerate(h):\n    if i == 0:\n        dp[0][0][0] = 0\n        continue\n    for j in range(n-1, -1, -1):\n        for k in range(n-1, -1, -1):\n            if dp[i-1][j][k] == INF:\n                continue\n            # skip\n            dp[i][j+1][k] = min(dp[i][j+1][k], dp[i-1][j][k])\n            # use\n            dp[i][j][i] = min(dp[i][j][i], dp[i-1][j][k] + max(0, h[i] - h[k]))\n            \nans = INF\nfor j in range(n+1):\n    ans = min(ans, dp[n][K][j])\n\nprint(ans)","n, k = map(int, input().split())\nh = [0] + list(map(int, input().split())) + [0]\ninf = 10 ** 13\ndp = [[0] * (k + 1)]\nfor i in range(1, n + 2):\n    dp.append([inf] * (k + 1))\n    for j in range(i):\n        for u in range(i - j - 1, k + 1):\n            dp[-1][u] = min(dp[-1][u], dp[j][u - i + j + 1] + max(h[i] - h[j], 0))\nprint(min(dp[-1]))\n","N, K = map(int, input().split())\nH = [0] + list(map(int, input().split())) + [0]\n\n# dp[i][j] = minimum operations upto col i (fixed), with j moves remaining\ndp = [[float('inf') for i in range(K+1)] for j in range(N+2)]\ndp[0] = [0 for i in range(K+1)]\n\ndef cost(i, j):\n    return max(0, H[j] - H[i])\n\nfor i in range(1, N+2):\n    for j in range(K+1):\n        for d in range(j+1):\n            if i-d-1 < 0: break\n            dp[i][j] = min(dp[i][j], cost(i-d-1, i) + dp[i-d-1][j-d])\n                \nprint(dp[-1][K])\n","def main():\n    N, K = map(int, input().split())\n    H = [0] + list(map(int, input().split()))\n    dp = [[float(\"inf\")] * (N+1) for _ in range(N+1)]\n    dp[0][0] = 0\n    for i in range(1, N+1):\n        for j in range(i):\n            diff = max(H[i] - H[j], 0)\n            for k in range(min(N-K, j+1)):\n                dp[i][k+1] = min(dp[i][k+1], dp[j][k] + diff)\n    ans = float(\"inf\")\n    for i in range(N+1):\n        ans = min(ans, dp[i][N-K])\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n","\nimport sys\ndef input():\n\treturn sys.stdin.readline().strip()\n\n\nclass Union_Find():\n\tdef __init__(self, n):\n\t\tself.union = [i for i in range(n)]\n\t\tself.level = [0 for i in range(n)]\n\n\tdef root(self, i, mode=0):\n\t\tkeiro = [i]\n\t\tans = i\n\t\twhile ans != self.union[ans]:\n\t\t\tans = self.union[ans]\n\t\t\tkeiro.append(ans)\n\t\tif mode == 0:\n\t\t\treturn ans\n\t\telse:\n\t\t\treturn ans, keiro\n\n\tdef unite(self, i, j):\n\t\troot_i, list_i = self.root(i, 1)\n\t\troot_j, list_j = self.root(j, 1)\n\t\tif root_i != root_j:\n\t\t\tif self.level[root_i] < self.level[root_j]:\n\t\t\t\tself.level[root_j] = max(self.level[root_i] + 1, self.level[root_j])\n\t\t\t\tfor node in list_i:\n\t\t\t\t\tself.union[node] = root_j\n\t\t\telse:\n\t\t\t\tself.level[root_i] = max(self.level[root_j] + 1, self.level[root_i])\n\t\t\t\tfor node in list_j:\n\t\t\t\t\tself.union[node] = root_i\n\n\nN, T = list(map(int, input().split()))\n\nH = [0]\n\nH.extend(list(map(int, input().split())))\n\nH.append(0)\n\nUF = Union_Find(N + 2)\nfor i in range(1, N):\n\tif H[i] == H[i + 1]:\n\t\tUF.unite(i, i + 1)\n\n\nfor t in range(T):\n\tmax_diff = 0\n\tmax_next = -1\n\tmax_next_next = -1\n\tfor i in range(1, N + 1):\n\t\tif UF.root(i) != i:\n\t\t\tcontinue\n\t\tbase = i + 1\n\t\twhile True:\n\t\t\tif UF.root(base) != i or base == N + 1:\n\t\t\t\tright = base\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tbase += 1\n\t\tbase = i - 1\n\t\twhile True:\n\t\t\tif UF.root(base) != i or base == 0:\n\t\t\t\tleft = base\n\t\t\t\tbreak\n\t\t\telse:\n\t\t\t\tbase -= 1\n\t\tdiff = min(abs(H[i] - H[right]), abs(H[i] - H[left]))\n\t\tif (H[i] - H[right])*(H[i] - H[left]) < 0:\n\t\t\tcontinue\n\t\tif diff >= max_diff:\n\t\t\tmax_diff = diff\n\t\t\tmax_next = i\n\t\t\tif abs(H[i] - H[right]) < abs(H[i] - H[left]):\n\t\t\t\tmax_next_next = right\n\t\t\telse:\n\t\t\t\tmax_next_next = left\n\tUF.unite(max_next, max_next_next)\n\t_, keiro = UF.root(max_next, mode=1)\n\tfor num in keiro:\n\t\tH[num] = H[max_next_next]\n\nfor i in range(1, N + 1):\n\tH[i] = H[UF.root(i)]\n\nlength_list = set()\nfor i in range(1, N + 1):\n\tif i == UF.root(i):\n\t\tlength_list.add(H[i])\nlength_list = list(length_list)\nlength_list.sort()\n\nsum = 0\nbefore_length = 0\nfor length in length_list:\n\tsum_part = 0\n\tnum_disjoin = 0\n\tfor i in range(1, N + 1):\n\t\tif H[i] >= length and H[i - 1] < length:\n\t\t\tsum_part += 1\n\n\tsum += sum_part*(length - before_length)\n\tbefore_length = length\n\nprint(sum)","import math\nimport sys\n\nN, K = map(int, input().split())\nH = [0] + list(map(int, input().split()))\nif K == 0:\n    ans = 0\n    pre = 0\n    for h in H:\n        ans += max(0, h - pre)\n        pre = h\n    print(ans)\n    sys.exit()\ndp = [[math.inf]*(K+1) for _ in range(N+1)]  # (\u76f4\u524d\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9, \u4f7f\u3063\u305fk) =>\u3000\u6700\u5c0f\ndp[0][0] = 0\nfor i in range(1, N + 1):\n    for j in range(i):\n        for k in range(K+1):\n            dp[i][k] = min(dp[j][k] + max(0, H[i] - H[j]), dp[i][k])\n    for j in range(i):\n        for k in range(K-1, -1, -1):\n            dp[j][k + 1] = dp[j][k]\n        dp[j][0] = math.inf\nans = math.inf\nfor i in range(N + 1):\n    ans = min(ans, min(dp[i]))\nprint(ans)\n","LI = lambda: list(map(int, input().split()))\n\nN, K = LI()\nH = LI()\n\nINF = 10 ** 15\n\n\ndef main():\n    h = [0] + H\n    dp = [[INF] * (N + 1) for _ in range(N + 1)]\n    dp[0][0] = 0\n    for i in range(1, N + 1):\n        for j in range(1, i + 1):\n            v = INF\n            for k in range(i):\n                x = max(0, h[i] - h[k])\n                v = min(v, dp[k][j - 1] + x)\n            dp[i][j] = v\n\n    ans = min([dp[i][N - K] for i in range(N - K, N + 1)])\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n","import sys\nreadline = sys.stdin.readline\nN, K = map(int, readline().split())\nH = list(map(int, readline().split()))\nH = [0] + H\nN += 1\ninf = 10**18\ndp = [[[inf]*(K+1) for j in range(N)] for i in range(N)]\ndp[0][0][0] = 0\nfor i in range(1, N):\n    hi = H[i]\n    for j in range(i):\n        hj = H[j]\n        for k in range(1, 1 + min(K, i)):\n            dp[i][j][k] = dp[i-1][j][k-1]\n    for k in range(min(K+1, i)):\n        dp[i][i][k] = min(dp[i-1][j][k] + max(0, hi - H[j]) for j in range(i))\n\nprint(min(min(dp[N-1][j]) for j in range(N)))","N, K = map(int, input().split())\nH = [0] + [int(a) for a in input().split()]\nX = [[1<<100] * (N-K+1) for _ in range(N+1)]\nX[0][0] = 0\nfor i in range(1, N+1):\n    for j in range(1, min(i+1, N-K+1)):\n        X[i][j] = min([X[ii][j-1] + max(H[i] - H[ii], 0) for ii in range(i)])\n\nprint(min([x[-1] for x in X]))","N, K = map(int, input().split())\nH = list(map(int, input().split()))\nH = [0] + H\n\n\ndp = [[float('inf')] * (N + 1) for i in range(N + 1)]\ndp[0][0] = 0\n\nfor i in range(1, N + 1):\n    for j in range(1, N + 1):\n        for x in range(i):\n            dp[i][j] = min(dp[i][j], dp[x][j - 1] + max(0, H[i] - H[x]))\n\n\nans = float('inf')\nfor i in range(N + 1):\n    ans = min(ans, dp[i][max(0,  N - K)])\n\nprint(ans)\n","import sys\n\nsys.setrecursionlimit(10 ** 6)\nint1 = lambda x: int(x) - 1\np2D = lambda x: print(*x, sep=\"\\n\")\n\ndef main():\n    inf = 10 ** 16\n    n, k = map(int, input().split())\n    hh = [0] + list(map(int, input().split()))\n    dp = [[0] * (k + 1) for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        h = hh[i]\n        for j in range(k + 1):\n            v = inf\n            for nd in range(k + 1):\n                if i - 1 - nd < 0 or j - nd < 0: break\n                v = min(v, dp[i - 1 - nd][j - nd] + max(0, h - hh[i - 1 - nd]))\n            dp[i][j] = v\n    print(min(dp[n]))\n\nmain()\n","import sys\n\nreadline = sys.stdin.readline\nMOD = 10 ** 9 + 7\nINF = float('INF')\nsys.setrecursionlimit(10 ** 5)\n\n\ndef main():\n    N, K = map(int, readline().split())\n    H = [0] + list(map(int, readline().split())) + [0]\n\n    dp = [[INF] * (N + 1) for _ in range(N + 1)]\n\n    for i in range(N + 1):\n        dp[i][0] = 0\n\n    for i in range(1, N + 1):\n        dp[i][1] = H[i]\n        for j in range(2, i + 1):\n            for k in range(1, i):\n                dp[i][j] = min(dp[i][j], dp[k][j - 1] + max(0, H[i] - H[k]))\n\n    print(dp[N][N - K])\n\n\nif __name__ == '__main__':\n    main()\n","import sys\ninput = sys.stdin.readline\n\nINF = 10**18\n\nN, K = map(int, input().split())\nA = [0] + list(map(int, input().split())) + [0]\n\ndp = [[INF]*(K+1) for _ in range(N+2)]\ndp[0][0] = 0\nfor i in range(1, N+2):\n    for k in range(K+1):\n        tmp = INF\n        for j in range(max(0, i-k-1), i):\n            tmp = min(tmp, dp[j][k-(i-j-1)] + max(0, A[i]-A[j]))\n        dp[i][k] = tmp\n\nprint(min(dp[-1]))","# -*- coding: utf-8 -*-\n\nimport sys\n\ndef input(): return sys.stdin.readline().strip()\ndef list2d(a, b, c): return [[c] * b for i in range(a)]\ndef list3d(a, b, c, d): return [[[d] * c for j in range(b)] for i in range(a)]\ndef list4d(a, b, c, d, e): return [[[[e] * d for j in range(c)] for j in range(b)] for i in range(a)]\ndef ceil(x, y=1): return int(-(-x \/\/ y))\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(N=None): return list(MAP()) if N is None else [INT() for i in range(N)]\ndef Yes(): print('Yes')\ndef No(): print('No')\ndef YES(): print('YES')\ndef NO(): print('NO')\nsys.setrecursionlimit(10 ** 9)\nINF = 10 ** 18\nMOD = 10 ** 9 + 7\n\nN, K = MAP()\nM = N - K\nA = [0] + LIST()\n\n# dp[i][j] := \u5217\u3092i\u500b\u4f7f\u3063\u3066\u3001\u6700\u5f8c\u306b\u4f7f\u3063\u305f\u306e\u304cj\u5217\u76ee\u306e\u6642\u306e\u6700\u5c0f\u30b3\u30b9\u30c8\ndp = list2d(M+1, N+1, INF)\ndp[0][0] = 0\nfor i in range(M):\n    for j, h1 in enumerate(A[i:], i):\n        if dp[i][j] == INF:\n            break\n        for k in range(j+1, N+1):\n            h2 = A[k]\n            dp[i+1][k] = min(dp[i+1][k], dp[i][j] + max(h2 - h1, 0))\nprint(min(dp[M]))\n","#!usr\/bin\/env python3\nfrom collections import defaultdict,deque\nfrom heapq import heappush, heappop\nimport sys\nimport math\nimport bisect\nimport random\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef I(): return int(sys.stdin.readline())\ndef LS():return [list(x) for x in sys.stdin.readline().split()]\ndef S():\n    res = list(sys.stdin.readline())\n    if res[-1] == \"\\n\":\n        return res[:-1]\n    return res\ndef IR(n):\n    return [I() for i in range(n)]\ndef LIR(n):\n    return [LI() for i in range(n)]\ndef SR(n):\n    return [S() for i in range(n)]\ndef LSR(n):\n    return [LS() for i in range(n)]\n\nsys.setrecursionlimit(1000000)\nmod = 1000000007\n\ndef solve():\n    n,k = LI()\n    h = LI()\n    h.insert(0,0)\n    dp = [[float(\"inf\")]*(n+1) for i in range(n+1)]\n    dp[0][0] = 0\n    for i in range(n):\n        ni = i+1\n        hi = h[ni]\n        for s in range(n):\n            ns = s+1\n            for j in range(ni):\n                hj = h[j]\n                nd = dp[j][s]+max(0,hi-hj)\n                if nd < dp[ni][ns]:\n                    dp[ni][ns] = nd\n    ans = min([dp[i][n-k] for i in range(n+1)])\n    print(ans)\n    return\n\n#Solve\nif __name__ == \"__main__\":\n    solve()\n"]}
{"description_html":"<span class=\"lang-en\">\n<p>Score : <var>300<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>You drew lottery <var>N<\/var> times. In the <var>i<\/var>-th draw, you got an item of the kind represented by a string <var>S_i<\/var>.<\/p>\n<p>How many kinds of items did you get?<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li><var>1 \\leq N \\leq 2\\times 10^5<\/var><\/li>\n<li><var>S_i<\/var> consists of lowercase English letters and has a length between <var>1<\/var> and <var>10<\/var> (inclusive).<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>N<\/var>\n<var>S_1<\/var>\n<var>:<\/var>\n<var>S_N<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>Print the number of kinds of items you got.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>3\napple\norange\napple\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>2\n<\/pre>\n<p>You got two kinds of items: <code>apple<\/code> and <code>orange<\/code>.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>5\ngrape\ngrape\ngrape\ngrape\ngrape\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>1\n<\/pre>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>4\naaaa\na\naaa\naa\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>4\n<\/pre><\/section>\n<\/div>\n<\/span>","description_string":"\nScore : 300 points\n\n\nProblem StatementYou drew lottery N times. In the i-th draw, you got an item of the kind represented by a string S_i.\nHow many kinds of items did you get?\n\n\n\n\nConstraints\n1 \\leq N \\leq 2\\times 10^5\nS_i consists of lowercase English letters and has a length between 1 and 10 (inclusive).\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nS_1\n:\nS_N\n\n\n\n\n\nOutputPrint the number of kinds of items you got.\n\n\n\n\n\n\nSample Input 13\napple\norange\napple\n\n\n\n\n\nSample Output 12\n\nYou got two kinds of items: apple and orange.\n\n\n\n\n\nSample Input 25\ngrape\ngrape\ngrape\ngrape\ngrape\n\n\n\n\n\nSample Output 21\n\n\n\n\n\n\nSample Input 34\naaaa\na\naaa\naa\n\n\n\n\n\nSample Output 34\n\n\n","orig_lang_html":"<span class=\"lang-en\">\n<p>Score : <var>300<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>You drew lottery <var>N<\/var> times. In the <var>i<\/var>-th draw, you got an item of the kind represented by a string <var>S_i<\/var>.<\/p>\n<p>How many kinds of items did you get?<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li><var>1 \\leq N \\leq 2\\times 10^5<\/var><\/li>\n<li><var>S_i<\/var> consists of lowercase English letters and has a length between <var>1<\/var> and <var>10<\/var> (inclusive).<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>N<\/var>\n<var>S_1<\/var>\n<var>:<\/var>\n<var>S_N<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>Print the number of kinds of items you got.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>3\napple\norange\napple\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>2\n<\/pre>\n<p>You got two kinds of items: <code>apple<\/code> and <code>orange<\/code>.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>5\ngrape\ngrape\ngrape\ngrape\ngrape\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>1\n<\/pre>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>4\naaaa\na\naaa\naa\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>4\n<\/pre><\/section>\n<\/div>\n<\/span>","orig_lang_string":"\nScore : 300 points\n\n\nProblem StatementYou drew lottery N times. In the i-th draw, you got an item of the kind represented by a string S_i.\nHow many kinds of items did you get?\n\n\n\n\nConstraints\n1 \\leq N \\leq 2\\times 10^5\nS_i consists of lowercase English letters and has a length between 1 and 10 (inclusive).\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN\nS_1\n:\nS_N\n\n\n\n\n\nOutputPrint the number of kinds of items you got.\n\n\n\n\n\n\nSample Input 13\napple\norange\napple\n\n\n\n\n\nSample Output 12\n\nYou got two kinds of items: apple and orange.\n\n\n\n\n\nSample Input 25\ngrape\ngrape\ngrape\ngrape\ngrape\n\n\n\n\n\nSample Output 21\n\n\n\n\n\n\nSample Input 34\naaaa\na\naaa\naa\n\n\n\n\n\nSample Output 34\n\n\n","solve_rate":0.6656888889,"codenet_problem_id":"p02701","input_testcases":{"31":"3\napplf\nnrangf\nappld","55":"3\nflopa\nfganrm\naqlpd","6":"5\ngrape\ngrape\ngraoe\ngrape\neparg","25":"3\napplf\negnaro\nappld","5":"3\nbpple\negnaro\napple","57":"4\n`bca\na\na_b\nbb","47":"5\nrpgae\ngrape\ngaqoe\nep`rg\nqgaqe","37":"3\napplf\nfgmarn\nappld","97":"3\nflooa\nmgbrmf\npalcp","24":"4\n`caa\na\nbaa\nba","28":"3\napplf\norangf\nappld","64":"3\napolf\nfgarnm\naplpd","17":"3\napplf\nfgnaro\nappld","41":"5\nrpgae\ngrape\ngaqoe\nep`rg\ngqape","83":"5\nrpeae\neqago\ne`qog\ngr`pe\nrgaqf","50":"5\nrpgae\ngrape\ngaqoe\nep`rg\nrgaqe","29":"5\neagpr\ngrape\ngraoe\nep`rg\nepaqg","82":"3\nflooa\nfgaqmm\npplda","85":"3\nflooa\nfgbqmm\npplda","96":"4\n`cba\na\nbc_\n`a","44":"5\nrpgae\ngrape\ngaqoe\nep`rg\nqgape","68":"5\nrpeae\neraog\ngaqoe\nep`rg\nrgaqf","89":"5\neaepr\neqago\ne`qog\ngr`pe\nrgarf","23":"5\negapr\ngrape\ngraoe\nep`rg\nepaqf","98":"5\neaepr\neqago\ngoq`e\ngr`pe\nfrbgr","74":"5\nrpeae\neraog\ne`qog\nep`rg\nrgaqf","92":"5\neaepr\neqago\ne`qog\ngr`pe\nrgbrf","46":"3\nflppa\nfgamrn\naqpld","56":"5\nrpfae\ngraoe\ngaqoe\nep`rg\nrgaqe","63":"4\nacb`\na\nab_\nbb","14":"3\napple\nfgnaro\nappld","43":"3\nflppa\nfgamrn\nappld","8":"3\nbpple\negnaro\nappld","15":"5\negapr\ngrape\ngraoe\ngrape\nepaqg","22":"3\nflppa\negnaro\nappld","32":"5\neagpr\ngrape\ngqaoe\nep`rg\nepaqg","53":"5\nrpfae\ngrape\ngaqoe\nep`rg\nrgaqe","73":"3\nflooa\nfgaqnm\naplpd","59":"5\nrpfae\ngraoe\ngaqoe\nep`rg\nrgaqf","54":"4\n`bca\na\na`b\nbb","67":"3\naoolf\nfgarnm\naplpd","91":"3\nflooa\nmgbqmf\npplca","80":"5\nrpeae\nerago\ne`qog\ngr`pe\nrgaqf","19":"3\nflppa\nfgnaro\nappld","52":"3\nflopa\nfganrm\naqpld","58":"3\napolf\nfganrm\naqlpd","88":"3\nflooa\nfgbqmm\npplca","3":"5\negapr\ngrape\ngraoe\ngr`pe\nepaqg","9":"5\ngrape\ngrape\ngraoe\ngrape\nepaqg","71":"5\nrpeae\neraog\ng`qoe\nep`rg\nrgaqf","1":"3\nbpple\norange\napple","76":"3\nflooa\nfgaqnm\ndplpa","38":"5\neagpr\ngrape\ngaqoe\nep`rg\ngqape","93":"4\n`cba\na\ncb_\n`a","86":"5\neaepr\neqago\ne`qog\ngr`pe\nrgaqf","30":"4\n`caa\nb\nbaa\nab","60":"4\n`bca\na\nab_\nbb","99":"4\nabc`\na\nbc_\n`a","94":"3\nflooa\nmgbrmf\npplca","35":"5\neagpr\ngrape\ngqaoe\nep`rg\ngqape","26":"5\neagpr\ngrape\ngraoe\nep`rg\nepaqf","40":"3\nflppa\nfgmarn\nappld","77":"5\nrpeae\nerago\ne`qog\nep`rg\nrgaqf","90":"4\n`cba\na\nbb_\n`a","95":"5\neaepr\neqago\ne`qog\ngr`pe\nfrbgr","12":"5\ngeapr\ngrape\ngraoe\ngrape\nepaqg","20":"5\negapr\ngrape\ngraoe\ngr`pe\nepaqf","21":"4\n`caa\n`\naab\naa","34":"3\napplf\nnramgf\nappld","11":"3\napple\negnaro\nappld","49":"3\nflopa\nfgamrn\naqpld","79":"3\nflooa\nfgaqmm\ndplpa","61":"3\napolf\nfgarnm\naqlpd","70":"3\nflooa\nfgarnm\naplpd","62":"5\nrpeae\ngraoe\ngaqoe\nep`rg\nrgaqf","65":"5\nrpeae\neoarg\ngaqoe\nep`rg\nrgaqf"},"output_testcases":{"31":"3\n","55":"3\n","6":"3\n","25":"3\n","5":"3\n","57":"4\n","47":"5\n","37":"3\n","97":"3\n","24":"4\n","28":"3\n","64":"3\n","17":"3\n","41":"5\n","83":"5\n","50":"5\n","29":"5\n","82":"3\n","85":"3\n","96":"4\n","44":"5\n","68":"5\n","89":"5\n","23":"5\n","98":"5\n","74":"5\n","92":"5\n","46":"3\n","56":"5\n","63":"4\n","14":"3\n","43":"3\n","8":"3\n","15":"4\n","22":"3\n","32":"5\n","53":"5\n","73":"3\n","59":"5\n","54":"4\n","67":"3\n","91":"3\n","80":"5\n","19":"3\n","52":"3\n","58":"3\n","88":"3\n","3":"5\n","9":"3\n","71":"5\n","1":"3\n","76":"3\n","38":"5\n","93":"4\n","86":"5\n","30":"4\n","60":"4\n","99":"4\n","94":"3\n","35":"5\n","26":"5\n","40":"3\n","77":"5\n","90":"4\n","95":"5\n","12":"4\n","20":"5\n","21":"4\n","34":"3\n","11":"3\n","49":"3\n","79":"3\n","61":"3\n","70":"3\n","62":"5\n","65":"5\n"},"n_missing":28,"programs":["N = int(input())\n\nS = []\nfor x in range(N):\n    S.append(input())\n\nprint(len(set(S)))\n\n","n = int(input())\nS = set()\nfor _ in range(n):\n    S.add(input())\nprint(len(list(S)))\n","n=int(input())\ns=list(set(input().split()))\nprint(len(s))","n=int(input())\ns = [input() for _ in range(n)] \nmyset=set([])\n\nfor i in s:\n    myset.add(i)\n\nprint(len(myset))","import sys\n\ndef main():\n\n\tN = int(input())\n\t\n\td = {}\n\tfor i in range(N):\n\t\tA = int(input())\n\t\td[A] = 0\n\tprint(len(d))\n\t\nif __name__ == \"__main__\":\n    main()","N = int(input())\nS = set()\nfor i in range(N):\n\tS.add(input())\nprint(len(S))\n\t","from collections import Counter\nN = int(input())\n\ndata = [0] * N\nfor i in range(N):\n    data[i] = input()\n\nd0 = Counter(data)\nd1 = d0.most_common()\nd2 = len(d1)\nprint(d2)","N = int(input().rstrip())\nitems = []\nfor n in range(N):\n  items.append(input().rstrip())\nprint(len(set(items)))","N = int(input())\nS = []\nfor i in range(N):\n  S.append(input())\nprint(len(set(S)))","n=int(input())\ns={input() for i in range(n)}\nprint(len(s))","N = int(input())\ngot = set()\nfor i in range(N):\n    got.add(input())\nprint(len(got))\n","n=int(input())\nls=[input() for i in range(n)]\nprint(len(list(set(ls))))","N = int(input())\nmyset = set([])\nfor i in range(N):\n  S = input()\n  myset.add(S)\nprint(len(myset))\n","N = int(input())\nS = []\nfor i in range(N):\n    a = input()\n    S.append(a)\nprint(len(set(S)))","n = int(input())\n\nl = list()\nc = 0\n\nfor i in range(n):\n    x = input()\n    if x in l:\n        c += 0\n    else:\n        c += 1\n        l.append(x)\n\nprint(c)\n        \n","list = []\n\nnum=int(input())\n\nfor h in range(num):\n    list.append(input())\n\n\n\n\n\nkeihin=[list[0]]\n\n\n\nfor i in range(1,num):\n    for j in range(len(keihin)):\n        if(list[i]==keihin[j]):\n            break\n        if(j==(len(keihin)-1)):\n            keihin.append(list[i])\n\nprint(len(keihin))","N = int(input())\nS = []\nfor c in range(N):\n    S.append(input())\n\nS = set(S)\nprint(len(S))","def main():\n    t = int(input())\n    s = set()\n    for _ in range(t):\n        inp = input()\n        s.add(inp)\n    print(len(s))\n\nif __name__ == \"__main__\":\n    main()","N = int(input())\nS = []\nfor i in range(N):\n    S.append(input())\nprint(len(set(S)))","N=int(input())\nS = [input() for _ in range(N)]\nitem=[]\nfor s in S:\n    if s not in item:\n        item.append(s)\nprint(len(item))","N = int(input())\nS = []\nfor i in range(N):\n    S.append(input())\na = 1\nS.sort()\ns = S[0]\nfor i in range(1,N):\n    if s != S[i]:\n        a += 1\n    s = S[i]\nprint(a)","n = int(input())\nli_s = list()\nfor _ in range(n):\n    li_s.append(input())\nprint(len(set(li_s)))\n","l = []\nfor i in range(int(input())): l.append(input())\nprint(len(set(l)))","n = int(input())\nitem = {}\nfor i in range(n):\n  it = input()\n  item[it] = 'y'\nprint(len(item))\n","#!\/usr\/bin\/env python3\n\nitem = set()\nfor _ in range(int(input())):\n    item.add(input())\n\nprint(len(item))","n=int(input())\ns = set()\nfor _ in range(n):\n\tx = input()\n\ts.add(x)\nprint(len(s))\n","N = int(input())\nl = []\nfor i in range(N):\n    l.append(input())\nprint(len(set(l)))","import sys\nfrom collections import Counter\n\nN = int(input())\nS = []\nfor i in range(0, N):\n    S.append(str(input()))\n\nm = Counter(S)\nprint(len(m))\n","N = input()\nS = []\nfor a in range(int(N)):\n    S.append(input())\n\nAnswer = set(S)\nprint(len(list(Answer)))","def main():\n    N = int(input())\n    items = set()\n    for _ in range(N):\n        S = input()\n        items.add(S)\n    print(len(items))\n\n\nif __name__ == \"__main__\":\n    main()\n","from collections import defaultdict,deque\nimport sys,heapq,bisect,math,itertools,string,queue,copy,time\nsys.setrecursionlimit(10**8)\ninput = sys.stdin.readline\nINF = float('inf')\nmod = 10**9+7\neps = 10**-7\ndef inp():\n    '''\n    \u4e00\u3064\u306e\u6574\u6570\n    '''\n    return int(input())\ndef inpl():\n    '''\n    \u4e00\u884c\u306b\u8907\u6570\u306e\u6574\u6570\n    '''\n    return list(map(int, input().split()))\ndef inpl_str():\n    '''\n    \u4e00\u884c\u306b\u8907\u6570\u306e\u6587\u5b57\n    '''\n    return list(input().split())\n\nn = inp()\ns=set()\nfor i in range(n):\n    st=input()\n    s.add(st)\nprint(len(s))","def main():\n    n = int(input())\n    hoge = []\n    res = 0\n    for _ in range(n):\n        s = input()\n        if s not in hoge:\n            res += 1\n            hoge.append(s)\n    print(res)\n\nif __name__ == '__main__':\n    main()\n\n","def solve():\n    n=int(input())\n    A=[input() for i in range(n)]\n    A=list(set(A))\n    print(len(A))\n\n\nsolve()","import collections\nn=int(input())\na=[]\nfor _ in range(n):\n    a.append(input())\nc = collections.Counter(a)\nprint(len(c))\n","# import numpy as np\n# import math\n# import copy\n# from collections import deque\nimport sys\ninput = sys.stdin.readline\n# sys.setrecursionlimit(10000)\n\n\ndef main():\n    N = int(input())\n    S = [input().rstrip() for i in range(N)]\n\n    Sset = set(S)\n\n    res = len(Sset)\n\n    print(res)\n\n\n\nmain()\n","import collections\nN = int(input())\nl = []\nfor x in range(N):\n  s = input()\n  l.append(s)\nc = collections.Counter(l)\nprint(len(c))","n = int(input())\ns = []\nfor i in range(n):\n    prize = str(input())\n    if not(prize in s):\n        s.append(prize)\nprint(len(s))","import collections\n\nN = int(input())\nS = []\nfor _ in range(N):\n    S.append(input())\n\nc = collections.Counter(S)\n\nans = 0\nfor key in c:\n    ans += 1\n\nprint(ans)\n","def input_one_number():\n    return int(input())\n\ndef input_multiple_number():\n    return map(int, input().split())\n\ndef input_multiple_number_as_list():\n    return list(map(int, input().split()))\n\n\nN = input_one_number()\n\nlistS = []\nimport hashlib\nfor i in range(N):\n\tlistS.append(input())\n\nprint(len(set(listS)))\n\n","n = int(input())\nl = []\nfor i in range(n):\n    s = input()\n    if not s in l:\n        l.append(s)\nprint(len(l))","N = int(input())\n\nSL = [[],[],[],[],[],[],[],[],[],[],[]]\n\nfor ss in range(N):\n    S = input()\n\n    if not S in SL[len(S)] :\n        SL[len(S)].append(S)\n\nSUM = 0\n\nfor B in SL:\n    SUM += len(B)\n\nprint(SUM)","n = int(input())\ns = [input() for _ in range(n)]\nprint(len(set(s)))\n","def func():\n    return\n\nn = int(input())\n\nd = dict()\nfor i in range(n):\n    s = input()\n    d[s] = True\n# a, b = map(int, input().split())\n# a = list(map(int, input().split()))\n# a = input().split()\n\nans = len(d)\n\nprint(ans)","n = int(input())\nS = [input() for _ in range(n)]\nprint(len(set(S)))","N = int(input())\nls = []\nfor x in range(N):\n    ls.append(input())\nprint(len(set(ls)))","N=int(input())\nA=list(map(int,input().split()))\na=set(A)\nprint(len(a))","N = int(input())\nprint(len(set([input() for _ in range(N)])))","N=int(input())\nlist=[]\nfor i in range(N):\n    list.append(input())\n    \n    \nimport collections\nprint(len(collections.Counter(list)))","N = int(input())\nS = []\nfor i in range(N):\n    S.append(input())\n\nans = []\nfor i in range(N):\n    if S[i] in ans:\n        continue\n    else:\n        ans.append(S[i])\n\nprint(len(ans))\n","import collections\n\nN = int(input())\nK = []\nfor i in range(N):\n    S = input()\n    K.append(S)\n    i = i + 1\n    \nA = collections.Counter(K)\n\nprint(len(A))","A = int(input())\nS = []\nfor i in range(0,A):\n  S.append(str(input()))\nprint(len(set(S)))","(N,) = map(int, input().split())\ns = set()\nfor _ in range(N):\n    s.add(input())\nprint(len(s))\n","n = int(input())\ns = [input() for i in range(n)]\n\nset_ = set(s)\nprint(len(set_))","import sys\n\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\n\nn = int(input())\n\nse = set()\nfor i in range(n):\n    s = input().rstrip()\n    se.add(s)\n\nprint(len(se))\n","n = int(input())\na = set([input() for i in range(n)])\nprint(len(a))","N = int(input())\nS = [input() for _ in range(N)]\npattern = set(S)\nprint(len(pattern))","#https:\/\/atcoder.jp\/contests\/abc164\/tasks\/abc164_c\n\nn=int(input())\ns=set()\nfor _ in range(n):\n    s.add(input())\nprint(len(s))","N = int(input())\ns = [input() for _ in range(N)]\n\nse = set(s)\nans = len(se)\nprint(ans)","N=int(input())\nS = []\nS_append = S.append\nfor i in range(N):\n  data=input()\n  if data not in S:\n    S_append(data)\nprint(len(S))","n=int(input())\na=set()\nwhile(n):\n    s=input()\n    a.add(s)\n    n-=1\nprint(len(a))","N = int(input())\nS = []\nfor i in range(N):\n  S.append(input())\n  \nprint(len(set(S)))","n = int(input())\nbox = []\nfor i in range(n):\n  s = input()\n  box.append(s)\nprint(len(set(box)))","import collections\n\nn = int(input())\ns = [input() for i in range(n)]\n\nc = collections.Counter(s)\nprint(len(c.keys()))","n = int(input())\nitems = set()\nfor _ in range(n):\n    items.add(input())\n\nprint(len(items))","b=int(input())\na=[input() for i in range(b)]\na=set(a)\nc=len(a)\nprint(c)","def main():\n    import math\n    n=int(input())\n    S=set()\n    ans=0\n    for _ in range(n):\n        s=input()\n        if s not in S:\n            ans+=1\n            S.add(s)\n    print(ans)\nif __name__ == '__main__':\n    main()","# coding: utf-8\n\n\ndef solve(*args: str) -> str:\n    n = int(args[0])\n    S = set(args[1:])\n\n    return str(len(S))\n\n\nif __name__ == \"__main__\":\n    print(solve(*(open(0).read().splitlines())))\n","# @oj: atcoder\n# @id: hitwanyang\n# @email: 296866643@qq.com\n# @date: 2020-04-27 11:02\n# @url:https:\/\/atcoder.jp\/contests\/abc164\/tasks\/abc164_c\nimport sys,os\nfrom io import BytesIO, IOBase\nimport collections,itertools,bisect,heapq,math,string\n# region fastio\n\nBUFSIZE = 8192\n\nBUFSIZE = 8192\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n# ------------------------------\ndef main():\n    t=int(input())\n    strlist=[str(input()) for x in range(t)]\n    # print ([str(x) for x in strlist])\n    ans=set()\n    for s in strlist:\n        ans.add(s)\n    print (len(ans))\nif __name__ == \"__main__\":\n    main()","N=int(input())\n\ngoods=[]\n\nfor i in range(N):\n    S=input()\n    goods.append(S)\n\nprint(len(set(goods)))","import collections\n\nn = int(input())\n\ndata = []\nfor _ in range(n):\n  data.append( input() )\n\nc = collections.Counter(data)\n# print(c)\n# Counter({'a': 4, 'c': 2, 'b': 1})\n\nprint(len(list(c)))\n\n","n = int(input())\nlist = []\nfor i in range(n):\n    a = input()\n    list.append(a)\n\nimport collections\n\nx = collections.Counter(list)\ny = x.keys()\nprint(len(y))","import collections\n\nN = int(input())\ns = [input() for i in range(N)]\nh = collections.Counter(s)\nprint(len(h))","N = int(input())\ns = set()\nfor i in range(N):\n    s.add(input())\n\nprint(len(s))\n","import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nLi = []\nfor i in range(n):\n    s = input()\n    if s in Li:\n        pass\n    else:\n        Li.append(s)\n\nprint(len(Li))\n","N=int(input())\nS = []\nfor _ in range(N):\n    S.append(input())\nname=list(set(S))\nprint(len(name))","n = int(input())\n\ns = [input() for i in range(n)]\n\ndi = {}\ncnt = 0\n\nfor nl in s:\n    if str(nl) not in di:\n        di[str(nl)] = 1\n        cnt += 1\nprint(cnt)        ","N=int(input())\nlist_s=[]\nfor i in range(N):\n  s=input()\n  list_s.append(s)\n  \nt=set(list_s)\nprint(len(t))\n  \n  ","myset = set()\nN = int(input())\nfor i in range(N):\n    s = input()\n    myset.add(s)\nprint(len(myset))\n","lotteryCount = int(input())\nstringArray = list()\nfor index in range(0, lotteryCount):\n  stringArray.append(input())\n\nvariatyCount = len(set(stringArray))\nprint(variatyCount)","n = int(input())\n\na = []\nfor i in range(n):\n    s = input()\n    a.append(s)\nans = set(a)\nprint(len(ans))","n= int(input())\ns=set()\nfor i in range(n):\n    s.add(input())\nprint(len(s))","n=int(input())\ns=[input() for i in [0]*n]\nprint(len(set(s)))","n = int(input())\nitems = []\nfor i in range(n):\n    items.append(input())\ns = set(items)\nprint(len(s))","n = int(input())\ns = [input() for i in range(n)]\nprint(len(set(s)))","n = int(input())\ns = [input() for i in range(n)]\ns.sort()\nans = 1\nfor i in range(1,n):\n  if not s[i]==s[i-1]:\n    ans += 1\nprint(ans)","n = int(input())\ns = [input() for i in range(n)]\n\nprint(len(set(s)))","n = int(input())\n\npresents_list = {}\n\nfor i in range(n):\n    present = input()\n    if present in presents_list:\n        presents_list[present] += 1\n    else:\n        presents_list[present] = 1\n\nprint(len(presents_list))","N = int(input())\nS = [input() for i in range(N)]\nS_union = set(S)\nresult = len(S_union)\nprint(result)\n","n = int(input())\nl = []\nfor i in range(n):\n    x = input()\n    l.append(x)\ns = set(l)\nprint(len(s))","n = int(input())\nl=[]\nfor _ in range(n):\n    l.append(input())\nl = set(l)\nprint(len(l))","import sys\nDebug = lambda *args: None\nif len(sys.argv) > 1:\n\tsys.stdin = open(\"io\/test.in\", \"r\")\n\tDebug = lambda *args: print('\\033[0;31m', *args, '\\033[0m', file=sys.stderr)\n\n\n# Author: Narut Sereewattanawoot\n###\ndef Rd(f=int):\n\treturn [f(x) for x in input().split()]\n\n\ndef JoinF(arr):\n\treturn ' '.join('{:.10f}'.format(x) for x in arr)\n\n\n###\n\n\ndef main():\n\tn = int(input())\n\tS = set(input() for _ in range(n))\n\tprint(len(S))\n\n\nmain()\n","n = int(input())\nsSet = set([input() for _ in range(n)])\n\nprint(len(sSet))\n","n=int(input())\ncnt=0\ns=set()\nfor i in range(n):\n    s1=input()\n    if s1 not in s:\n        cnt+=1\n        s.add(s1)\nprint(cnt)\n","# ABC 164\nN= int(input())\nS =[]\nfor _ in range(N):\n    S.append((input()))\nprint(len(set(S)))","def inlist(lista,item):\n    for i in lista:\n        if item==i:\n            return True\n    return False\n\n\nitemsList=[]\nnum=int(input())\nfor i in range(num):\n    temp=input()\n    if not inlist(itemsList,temp):\n        itemsList.append(temp)\nprint(len(itemsList))\n","N = int(input())\n\nNList = []\nfor i in range(N):\n    NList.append(input())\n    \nNList.sort()\n\ncount = 0\ntmp = ''\nfor i in range(N):\n    if tmp != NList[i]:\n        count += 1\n    tmp = NList[i]\n       \nprint(count)","n = int(input())\ns = []\nfor i in range(n):\n    s.append(input())\nss = set(s)\nprint(len(ss))\n","n = int(input())\ngachaList = [input() for i in range(n)]\nprint(len(set(gachaList)))","n=int(input())\ns=[]\nfor i in range(n):\n    s.append(input())\nprint(len(set(s)))","N = int(input())\nget = ['1']\nfor i in range(N):\n    S = input()\n    get.append(S)\n\nget.sort()\nans = 0\nfor i in range(N):\n    if get[i] != get[i+1]:\n        ans += 1\nprint(ans)\n"],"raw_generations":["N = int(input())\n\nS = []\nfor x in range(N):\n    S.append(input())\n\nprint(len(set(S)))\n\n","n = int(input())\nS = set()\nfor _ in range(n):\n    S.add(input())\nprint(len(list(S)))\n","n=int(input())\ns=list(set(input().split()))\nprint(len(s))","n=int(input())\ns = [input() for _ in range(n)] \nmyset=set([])\n\nfor i in s:\n    myset.add(i)\n\nprint(len(myset))","import sys\n\ndef main():\n\n\tN = int(input())\n\t\n\td = {}\n\tfor i in range(N):\n\t\tA = int(input())\n\t\td[A] = 0\n\tprint(len(d))\n\t\nif __name__ == \"__main__\":\n    main()","N = int(input())\nS = set()\nfor i in range(N):\n\tS.add(input())\nprint(len(S))\n\t","from collections import Counter\nN = int(input())\n\ndata = [0] * N\nfor i in range(N):\n    data[i] = input()\n\nd0 = Counter(data)\nd1 = d0.most_common()\nd2 = len(d1)\nprint(d2)","N = int(input().rstrip())\nitems = []\nfor n in range(N):\n  items.append(input().rstrip())\nprint(len(set(items)))","N = int(input())\nS = []\nfor i in range(N):\n  S.append(input())\nprint(len(set(S)))","n=int(input())\ns={input() for i in range(n)}\nprint(len(s))","N = int(input())\ngot = set()\nfor i in range(N):\n    got.add(input())\nprint(len(got))\n","n=int(input())\nls=[input() for i in range(n)]\nprint(len(list(set(ls))))","N = int(input())\nmyset = set([])\nfor i in range(N):\n  S = input()\n  myset.add(S)\nprint(len(myset))\n","N = int(input())\nS = []\nfor i in range(N):\n    a = input()\n    S.append(a)\nprint(len(set(S)))","n = int(input())\n\nl = list()\nc = 0\n\nfor i in range(n):\n    x = input()\n    if x in l:\n        c += 0\n    else:\n        c += 1\n        l.append(x)\n\nprint(c)\n        \n","list = []\n\nnum=int(input())\n\nfor h in range(num):\n    list.append(input())\n\n\n\n\n\nkeihin=[list[0]]\n\n\n\nfor i in range(1,num):\n    for j in range(len(keihin)):\n        if(list[i]==keihin[j]):\n            break\n        if(j==(len(keihin)-1)):\n            keihin.append(list[i])\n\nprint(len(keihin))","N = int(input())\nS = []\nfor c in range(N):\n    S.append(input())\n\nS = set(S)\nprint(len(S))","def main():\n    t = int(input())\n    s = set()\n    for _ in range(t):\n        inp = input()\n        s.add(inp)\n    print(len(s))\n\nif __name__ == \"__main__\":\n    main()","N = int(input())\nS = []\nfor i in range(N):\n    S.append(input())\nprint(len(set(S)))","N=int(input())\nS = [input() for _ in range(N)]\nitem=[]\nfor s in S:\n    if s not in item:\n        item.append(s)\nprint(len(item))","N = int(input())\nS = []\nfor i in range(N):\n    S.append(input())\na = 1\nS.sort()\ns = S[0]\nfor i in range(1,N):\n    if s != S[i]:\n        a += 1\n    s = S[i]\nprint(a)","n = int(input())\nli_s = list()\nfor _ in range(n):\n    li_s.append(input())\nprint(len(set(li_s)))\n","l = []\nfor i in range(int(input())): l.append(input())\nprint(len(set(l)))","n = int(input())\nitem = {}\nfor i in range(n):\n  it = input()\n  item[it] = 'y'\nprint(len(item))\n","#!\/usr\/bin\/env python3\n\nitem = set()\nfor _ in range(int(input())):\n    item.add(input())\n\nprint(len(item))","n=int(input())\ns = set()\nfor _ in range(n):\n\tx = input()\n\ts.add(x)\nprint(len(s))\n","N = int(input())\nl = []\nfor i in range(N):\n    l.append(input())\nprint(len(set(l)))","import sys\nfrom collections import Counter\n\nN = int(input())\nS = []\nfor i in range(0, N):\n    S.append(str(input()))\n\nm = Counter(S)\nprint(len(m))\n","N = input()\nS = []\nfor a in range(int(N)):\n    S.append(input())\n\nAnswer = set(S)\nprint(len(list(Answer)))","def main():\n    N = int(input())\n    items = set()\n    for _ in range(N):\n        S = input()\n        items.add(S)\n    print(len(items))\n\n\nif __name__ == \"__main__\":\n    main()\n","from collections import defaultdict,deque\nimport sys,heapq,bisect,math,itertools,string,queue,copy,time\nsys.setrecursionlimit(10**8)\ninput = sys.stdin.readline\nINF = float('inf')\nmod = 10**9+7\neps = 10**-7\ndef inp():\n    '''\n    \u4e00\u3064\u306e\u6574\u6570\n    '''\n    return int(input())\ndef inpl():\n    '''\n    \u4e00\u884c\u306b\u8907\u6570\u306e\u6574\u6570\n    '''\n    return list(map(int, input().split()))\ndef inpl_str():\n    '''\n    \u4e00\u884c\u306b\u8907\u6570\u306e\u6587\u5b57\n    '''\n    return list(input().split())\n\nn = inp()\ns=set()\nfor i in range(n):\n    st=input()\n    s.add(st)\nprint(len(s))","def main():\n    n = int(input())\n    hoge = []\n    res = 0\n    for _ in range(n):\n        s = input()\n        if s not in hoge:\n            res += 1\n            hoge.append(s)\n    print(res)\n\nif __name__ == '__main__':\n    main()\n\n","def solve():\n    n=int(input())\n    A=[input() for i in range(n)]\n    A=list(set(A))\n    print(len(A))\n\n\nsolve()","import collections\nn=int(input())\na=[]\nfor _ in range(n):\n    a.append(input())\nc = collections.Counter(a)\nprint(len(c))\n","# import numpy as np\n# import math\n# import copy\n# from collections import deque\nimport sys\ninput = sys.stdin.readline\n# sys.setrecursionlimit(10000)\n\n\ndef main():\n    N = int(input())\n    S = [input().rstrip() for i in range(N)]\n\n    Sset = set(S)\n\n    res = len(Sset)\n\n    print(res)\n\n\n\nmain()\n","import collections\nN = int(input())\nl = []\nfor x in range(N):\n  s = input()\n  l.append(s)\nc = collections.Counter(l)\nprint(len(c))","n = int(input())\ns = []\nfor i in range(n):\n    prize = str(input())\n    if not(prize in s):\n        s.append(prize)\nprint(len(s))","import collections\n\nN = int(input())\nS = []\nfor _ in range(N):\n    S.append(input())\n\nc = collections.Counter(S)\n\nans = 0\nfor key in c:\n    ans += 1\n\nprint(ans)\n","def input_one_number():\n    return int(input())\n\ndef input_multiple_number():\n    return map(int, input().split())\n\ndef input_multiple_number_as_list():\n    return list(map(int, input().split()))\n\n\nN = input_one_number()\n\nlistS = []\nimport hashlib\nfor i in range(N):\n\tlistS.append(input())\n\nprint(len(set(listS)))\n\n","n = int(input())\nl = []\nfor i in range(n):\n    s = input()\n    if not s in l:\n        l.append(s)\nprint(len(l))","N = int(input())\n\nSL = [[],[],[],[],[],[],[],[],[],[],[]]\n\nfor ss in range(N):\n    S = input()\n\n    if not S in SL[len(S)] :\n        SL[len(S)].append(S)\n\nSUM = 0\n\nfor B in SL:\n    SUM += len(B)\n\nprint(SUM)","n = int(input())\ns = [input() for _ in range(n)]\nprint(len(set(s)))\n","def func():\n    return\n\nn = int(input())\n\nd = dict()\nfor i in range(n):\n    s = input()\n    d[s] = True\n# a, b = map(int, input().split())\n# a = list(map(int, input().split()))\n# a = input().split()\n\nans = len(d)\n\nprint(ans)","n = int(input())\nS = [input() for _ in range(n)]\nprint(len(set(S)))","N = int(input())\nls = []\nfor x in range(N):\n    ls.append(input())\nprint(len(set(ls)))","N=int(input())\nA=list(map(int,input().split()))\na=set(A)\nprint(len(a))","N = int(input())\nprint(len(set([input() for _ in range(N)])))","N=int(input())\nlist=[]\nfor i in range(N):\n    list.append(input())\n    \n    \nimport collections\nprint(len(collections.Counter(list)))","N = int(input())\nS = []\nfor i in range(N):\n    S.append(input())\n\nans = []\nfor i in range(N):\n    if S[i] in ans:\n        continue\n    else:\n        ans.append(S[i])\n\nprint(len(ans))\n","import collections\n\nN = int(input())\nK = []\nfor i in range(N):\n    S = input()\n    K.append(S)\n    i = i + 1\n    \nA = collections.Counter(K)\n\nprint(len(A))","A = int(input())\nS = []\nfor i in range(0,A):\n  S.append(str(input()))\nprint(len(set(S)))","(N,) = map(int, input().split())\ns = set()\nfor _ in range(N):\n    s.add(input())\nprint(len(s))\n","n = int(input())\ns = [input() for i in range(n)]\n\nset_ = set(s)\nprint(len(set_))","import sys\n\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\n\nn = int(input())\n\nse = set()\nfor i in range(n):\n    s = input().rstrip()\n    se.add(s)\n\nprint(len(se))\n","n = int(input())\na = set([input() for i in range(n)])\nprint(len(a))","N = int(input())\nS = [input() for _ in range(N)]\npattern = set(S)\nprint(len(pattern))","#https:\/\/atcoder.jp\/contests\/abc164\/tasks\/abc164_c\n\nn=int(input())\ns=set()\nfor _ in range(n):\n    s.add(input())\nprint(len(s))","N = int(input())\ns = [input() for _ in range(N)]\n\nse = set(s)\nans = len(se)\nprint(ans)","N=int(input())\nS = []\nS_append = S.append\nfor i in range(N):\n  data=input()\n  if data not in S:\n    S_append(data)\nprint(len(S))","n=int(input())\na=set()\nwhile(n):\n    s=input()\n    a.add(s)\n    n-=1\nprint(len(a))","N = int(input())\nS = []\nfor i in range(N):\n  S.append(input())\n  \nprint(len(set(S)))","n = int(input())\nbox = []\nfor i in range(n):\n  s = input()\n  box.append(s)\nprint(len(set(box)))","import collections\n\nn = int(input())\ns = [input() for i in range(n)]\n\nc = collections.Counter(s)\nprint(len(c.keys()))","n = int(input())\nitems = set()\nfor _ in range(n):\n    items.add(input())\n\nprint(len(items))","b=int(input())\na=[input() for i in range(b)]\na=set(a)\nc=len(a)\nprint(c)","def main():\n    import math\n    n=int(input())\n    S=set()\n    ans=0\n    for _ in range(n):\n        s=input()\n        if s not in S:\n            ans+=1\n            S.add(s)\n    print(ans)\nif __name__ == '__main__':\n    main()","# coding: utf-8\n\n\ndef solve(*args: str) -> str:\n    n = int(args[0])\n    S = set(args[1:])\n\n    return str(len(S))\n\n\nif __name__ == \"__main__\":\n    print(solve(*(open(0).read().splitlines())))\n","# @oj: atcoder\n# @id: hitwanyang\n# @email: 296866643@qq.com\n# @date: 2020-04-27 11:02\n# @url:https:\/\/atcoder.jp\/contests\/abc164\/tasks\/abc164_c\nimport sys,os\nfrom io import BytesIO, IOBase\nimport collections,itertools,bisect,heapq,math,string\n# region fastio\n\nBUFSIZE = 8192\n\nBUFSIZE = 8192\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n# ------------------------------\ndef main():\n    t=int(input())\n    strlist=[str(input()) for x in range(t)]\n    # print ([str(x) for x in strlist])\n    ans=set()\n    for s in strlist:\n        ans.add(s)\n    print (len(ans))\nif __name__ == \"__main__\":\n    main()","N=int(input())\n\ngoods=[]\n\nfor i in range(N):\n    S=input()\n    goods.append(S)\n\nprint(len(set(goods)))","import collections\n\nn = int(input())\n\ndata = []\nfor _ in range(n):\n  data.append( input() )\n\nc = collections.Counter(data)\n# print(c)\n# Counter({'a': 4, 'c': 2, 'b': 1})\n\nprint(len(list(c)))\n\n","n = int(input())\nlist = []\nfor i in range(n):\n    a = input()\n    list.append(a)\n\nimport collections\n\nx = collections.Counter(list)\ny = x.keys()\nprint(len(y))","import collections\n\nN = int(input())\ns = [input() for i in range(N)]\nh = collections.Counter(s)\nprint(len(h))","N = int(input())\ns = set()\nfor i in range(N):\n    s.add(input())\n\nprint(len(s))\n","import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nLi = []\nfor i in range(n):\n    s = input()\n    if s in Li:\n        pass\n    else:\n        Li.append(s)\n\nprint(len(Li))\n","N=int(input())\nS = []\nfor _ in range(N):\n    S.append(input())\nname=list(set(S))\nprint(len(name))","n = int(input())\n\ns = [input() for i in range(n)]\n\ndi = {}\ncnt = 0\n\nfor nl in s:\n    if str(nl) not in di:\n        di[str(nl)] = 1\n        cnt += 1\nprint(cnt)        ","N=int(input())\nlist_s=[]\nfor i in range(N):\n  s=input()\n  list_s.append(s)\n  \nt=set(list_s)\nprint(len(t))\n  \n  ","myset = set()\nN = int(input())\nfor i in range(N):\n    s = input()\n    myset.add(s)\nprint(len(myset))\n","lotteryCount = int(input())\nstringArray = list()\nfor index in range(0, lotteryCount):\n  stringArray.append(input())\n\nvariatyCount = len(set(stringArray))\nprint(variatyCount)","n = int(input())\n\na = []\nfor i in range(n):\n    s = input()\n    a.append(s)\nans = set(a)\nprint(len(ans))","n= int(input())\ns=set()\nfor i in range(n):\n    s.add(input())\nprint(len(s))","n=int(input())\ns=[input() for i in [0]*n]\nprint(len(set(s)))","n = int(input())\nitems = []\nfor i in range(n):\n    items.append(input())\ns = set(items)\nprint(len(s))","n = int(input())\ns = [input() for i in range(n)]\nprint(len(set(s)))","n = int(input())\ns = [input() for i in range(n)]\ns.sort()\nans = 1\nfor i in range(1,n):\n  if not s[i]==s[i-1]:\n    ans += 1\nprint(ans)","n = int(input())\ns = [input() for i in range(n)]\n\nprint(len(set(s)))","n = int(input())\n\npresents_list = {}\n\nfor i in range(n):\n    present = input()\n    if present in presents_list:\n        presents_list[present] += 1\n    else:\n        presents_list[present] = 1\n\nprint(len(presents_list))","N = int(input())\nS = [input() for i in range(N)]\nS_union = set(S)\nresult = len(S_union)\nprint(result)\n","n = int(input())\nl = []\nfor i in range(n):\n    x = input()\n    l.append(x)\ns = set(l)\nprint(len(s))","n = int(input())\nl=[]\nfor _ in range(n):\n    l.append(input())\nl = set(l)\nprint(len(l))","import sys\nDebug = lambda *args: None\nif len(sys.argv) > 1:\n\tsys.stdin = open(\"io\/test.in\", \"r\")\n\tDebug = lambda *args: print('\\033[0;31m', *args, '\\033[0m', file=sys.stderr)\n\n\n# Author: Narut Sereewattanawoot\n###\ndef Rd(f=int):\n\treturn [f(x) for x in input().split()]\n\n\ndef JoinF(arr):\n\treturn ' '.join('{:.10f}'.format(x) for x in arr)\n\n\n###\n\n\ndef main():\n\tn = int(input())\n\tS = set(input() for _ in range(n))\n\tprint(len(S))\n\n\nmain()\n","n = int(input())\nsSet = set([input() for _ in range(n)])\n\nprint(len(sSet))\n","n=int(input())\ncnt=0\ns=set()\nfor i in range(n):\n    s1=input()\n    if s1 not in s:\n        cnt+=1\n        s.add(s1)\nprint(cnt)\n","# ABC 164\nN= int(input())\nS =[]\nfor _ in range(N):\n    S.append((input()))\nprint(len(set(S)))","def inlist(lista,item):\n    for i in lista:\n        if item==i:\n            return True\n    return False\n\n\nitemsList=[]\nnum=int(input())\nfor i in range(num):\n    temp=input()\n    if not inlist(itemsList,temp):\n        itemsList.append(temp)\nprint(len(itemsList))\n","N = int(input())\n\nNList = []\nfor i in range(N):\n    NList.append(input())\n    \nNList.sort()\n\ncount = 0\ntmp = ''\nfor i in range(N):\n    if tmp != NList[i]:\n        count += 1\n    tmp = NList[i]\n       \nprint(count)","n = int(input())\ns = []\nfor i in range(n):\n    s.append(input())\nss = set(s)\nprint(len(ss))\n","n = int(input())\ngachaList = [input() for i in range(n)]\nprint(len(set(gachaList)))","n=int(input())\ns=[]\nfor i in range(n):\n    s.append(input())\nprint(len(set(s)))","N = int(input())\nget = ['1']\nfor i in range(N):\n    S = input()\n    get.append(S)\n\nget.sort()\nans = 0\nfor i in range(N):\n    if get[i] != get[i+1]:\n        ans += 1\nprint(ans)\n"],"formatted_programs":["N = int(input())\n\nS = []\nfor x in range(N):\n    S.append(input())\n\nprint(len(set(S)))\n\n","n = int(input())\nS = set()\nfor _ in range(n):\n    S.add(input())\nprint(len(list(S)))\n","n=int(input())\ns=list(set(input().split()))\nprint(len(s))","n=int(input())\ns = [input() for _ in range(n)] \nmyset=set([])\n\nfor i in s:\n    myset.add(i)\n\nprint(len(myset))","import sys\n\ndef main():\n\n\tN = int(input())\n\t\n\td = {}\n\tfor i in range(N):\n\t\tA = int(input())\n\t\td[A] = 0\n\tprint(len(d))\n\t\nif __name__ == \"__main__\":\n    main()","N = int(input())\nS = set()\nfor i in range(N):\n\tS.add(input())\nprint(len(S))\n\t","from collections import Counter\nN = int(input())\n\ndata = [0] * N\nfor i in range(N):\n    data[i] = input()\n\nd0 = Counter(data)\nd1 = d0.most_common()\nd2 = len(d1)\nprint(d2)","N = int(input().rstrip())\nitems = []\nfor n in range(N):\n  items.append(input().rstrip())\nprint(len(set(items)))","N = int(input())\nS = []\nfor i in range(N):\n  S.append(input())\nprint(len(set(S)))","n=int(input())\ns={input() for i in range(n)}\nprint(len(s))","N = int(input())\ngot = set()\nfor i in range(N):\n    got.add(input())\nprint(len(got))\n","n=int(input())\nls=[input() for i in range(n)]\nprint(len(list(set(ls))))","N = int(input())\nmyset = set([])\nfor i in range(N):\n  S = input()\n  myset.add(S)\nprint(len(myset))\n","N = int(input())\nS = []\nfor i in range(N):\n    a = input()\n    S.append(a)\nprint(len(set(S)))","n = int(input())\n\nl = list()\nc = 0\n\nfor i in range(n):\n    x = input()\n    if x in l:\n        c += 0\n    else:\n        c += 1\n        l.append(x)\n\nprint(c)\n        \n","list = []\n\nnum=int(input())\n\nfor h in range(num):\n    list.append(input())\n\n\n\n\n\nkeihin=[list[0]]\n\n\n\nfor i in range(1,num):\n    for j in range(len(keihin)):\n        if(list[i]==keihin[j]):\n            break\n        if(j==(len(keihin)-1)):\n            keihin.append(list[i])\n\nprint(len(keihin))","N = int(input())\nS = []\nfor c in range(N):\n    S.append(input())\n\nS = set(S)\nprint(len(S))","def main():\n    t = int(input())\n    s = set()\n    for _ in range(t):\n        inp = input()\n        s.add(inp)\n    print(len(s))\n\nif __name__ == \"__main__\":\n    main()","N = int(input())\nS = []\nfor i in range(N):\n    S.append(input())\nprint(len(set(S)))","N=int(input())\nS = [input() for _ in range(N)]\nitem=[]\nfor s in S:\n    if s not in item:\n        item.append(s)\nprint(len(item))","N = int(input())\nS = []\nfor i in range(N):\n    S.append(input())\na = 1\nS.sort()\ns = S[0]\nfor i in range(1,N):\n    if s != S[i]:\n        a += 1\n    s = S[i]\nprint(a)","n = int(input())\nli_s = list()\nfor _ in range(n):\n    li_s.append(input())\nprint(len(set(li_s)))\n","l = []\nfor i in range(int(input())): l.append(input())\nprint(len(set(l)))","n = int(input())\nitem = {}\nfor i in range(n):\n  it = input()\n  item[it] = 'y'\nprint(len(item))\n","#!\/usr\/bin\/env python3\n\nitem = set()\nfor _ in range(int(input())):\n    item.add(input())\n\nprint(len(item))","n=int(input())\ns = set()\nfor _ in range(n):\n\tx = input()\n\ts.add(x)\nprint(len(s))\n","N = int(input())\nl = []\nfor i in range(N):\n    l.append(input())\nprint(len(set(l)))","import sys\nfrom collections import Counter\n\nN = int(input())\nS = []\nfor i in range(0, N):\n    S.append(str(input()))\n\nm = Counter(S)\nprint(len(m))\n","N = input()\nS = []\nfor a in range(int(N)):\n    S.append(input())\n\nAnswer = set(S)\nprint(len(list(Answer)))","def main():\n    N = int(input())\n    items = set()\n    for _ in range(N):\n        S = input()\n        items.add(S)\n    print(len(items))\n\n\nif __name__ == \"__main__\":\n    main()\n","from collections import defaultdict,deque\nimport sys,heapq,bisect,math,itertools,string,queue,copy,time\nsys.setrecursionlimit(10**8)\ninput = sys.stdin.readline\nINF = float('inf')\nmod = 10**9+7\neps = 10**-7\ndef inp():\n    '''\n    \u4e00\u3064\u306e\u6574\u6570\n    '''\n    return int(input())\ndef inpl():\n    '''\n    \u4e00\u884c\u306b\u8907\u6570\u306e\u6574\u6570\n    '''\n    return list(map(int, input().split()))\ndef inpl_str():\n    '''\n    \u4e00\u884c\u306b\u8907\u6570\u306e\u6587\u5b57\n    '''\n    return list(input().split())\n\nn = inp()\ns=set()\nfor i in range(n):\n    st=input()\n    s.add(st)\nprint(len(s))","def main():\n    n = int(input())\n    hoge = []\n    res = 0\n    for _ in range(n):\n        s = input()\n        if s not in hoge:\n            res += 1\n            hoge.append(s)\n    print(res)\n\nif __name__ == '__main__':\n    main()\n\n","def solve():\n    n=int(input())\n    A=[input() for i in range(n)]\n    A=list(set(A))\n    print(len(A))\n\n\nsolve()","import collections\nn=int(input())\na=[]\nfor _ in range(n):\n    a.append(input())\nc = collections.Counter(a)\nprint(len(c))\n","# import numpy as np\n# import math\n# import copy\n# from collections import deque\nimport sys\ninput = sys.stdin.readline\n# sys.setrecursionlimit(10000)\n\n\ndef main():\n    N = int(input())\n    S = [input().rstrip() for i in range(N)]\n\n    Sset = set(S)\n\n    res = len(Sset)\n\n    print(res)\n\n\n\nmain()\n","import collections\nN = int(input())\nl = []\nfor x in range(N):\n  s = input()\n  l.append(s)\nc = collections.Counter(l)\nprint(len(c))","n = int(input())\ns = []\nfor i in range(n):\n    prize = str(input())\n    if not(prize in s):\n        s.append(prize)\nprint(len(s))","import collections\n\nN = int(input())\nS = []\nfor _ in range(N):\n    S.append(input())\n\nc = collections.Counter(S)\n\nans = 0\nfor key in c:\n    ans += 1\n\nprint(ans)\n","def input_one_number():\n    return int(input())\n\ndef input_multiple_number():\n    return map(int, input().split())\n\ndef input_multiple_number_as_list():\n    return list(map(int, input().split()))\n\n\nN = input_one_number()\n\nlistS = []\nimport hashlib\nfor i in range(N):\n\tlistS.append(input())\n\nprint(len(set(listS)))\n\n","n = int(input())\nl = []\nfor i in range(n):\n    s = input()\n    if not s in l:\n        l.append(s)\nprint(len(l))","N = int(input())\n\nSL = [[],[],[],[],[],[],[],[],[],[],[]]\n\nfor ss in range(N):\n    S = input()\n\n    if not S in SL[len(S)] :\n        SL[len(S)].append(S)\n\nSUM = 0\n\nfor B in SL:\n    SUM += len(B)\n\nprint(SUM)","n = int(input())\ns = [input() for _ in range(n)]\nprint(len(set(s)))\n","def func():\n    return\n\nn = int(input())\n\nd = dict()\nfor i in range(n):\n    s = input()\n    d[s] = True\n# a, b = map(int, input().split())\n# a = list(map(int, input().split()))\n# a = input().split()\n\nans = len(d)\n\nprint(ans)","n = int(input())\nS = [input() for _ in range(n)]\nprint(len(set(S)))","N = int(input())\nls = []\nfor x in range(N):\n    ls.append(input())\nprint(len(set(ls)))","N=int(input())\nA=list(map(int,input().split()))\na=set(A)\nprint(len(a))","N = int(input())\nprint(len(set([input() for _ in range(N)])))","N=int(input())\nlist=[]\nfor i in range(N):\n    list.append(input())\n    \n    \nimport collections\nprint(len(collections.Counter(list)))","N = int(input())\nS = []\nfor i in range(N):\n    S.append(input())\n\nans = []\nfor i in range(N):\n    if S[i] in ans:\n        continue\n    else:\n        ans.append(S[i])\n\nprint(len(ans))\n","import collections\n\nN = int(input())\nK = []\nfor i in range(N):\n    S = input()\n    K.append(S)\n    i = i + 1\n    \nA = collections.Counter(K)\n\nprint(len(A))","A = int(input())\nS = []\nfor i in range(0,A):\n  S.append(str(input()))\nprint(len(set(S)))","(N,) = map(int, input().split())\ns = set()\nfor _ in range(N):\n    s.add(input())\nprint(len(s))\n","n = int(input())\ns = [input() for i in range(n)]\n\nset_ = set(s)\nprint(len(set_))","import sys\n\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\n\nn = int(input())\n\nse = set()\nfor i in range(n):\n    s = input().rstrip()\n    se.add(s)\n\nprint(len(se))\n","n = int(input())\na = set([input() for i in range(n)])\nprint(len(a))","N = int(input())\nS = [input() for _ in range(N)]\npattern = set(S)\nprint(len(pattern))","#https:\/\/atcoder.jp\/contests\/abc164\/tasks\/abc164_c\n\nn=int(input())\ns=set()\nfor _ in range(n):\n    s.add(input())\nprint(len(s))","N = int(input())\ns = [input() for _ in range(N)]\n\nse = set(s)\nans = len(se)\nprint(ans)","N=int(input())\nS = []\nS_append = S.append\nfor i in range(N):\n  data=input()\n  if data not in S:\n    S_append(data)\nprint(len(S))","n=int(input())\na=set()\nwhile(n):\n    s=input()\n    a.add(s)\n    n-=1\nprint(len(a))","N = int(input())\nS = []\nfor i in range(N):\n  S.append(input())\n  \nprint(len(set(S)))","n = int(input())\nbox = []\nfor i in range(n):\n  s = input()\n  box.append(s)\nprint(len(set(box)))","import collections\n\nn = int(input())\ns = [input() for i in range(n)]\n\nc = collections.Counter(s)\nprint(len(c.keys()))","n = int(input())\nitems = set()\nfor _ in range(n):\n    items.add(input())\n\nprint(len(items))","b=int(input())\na=[input() for i in range(b)]\na=set(a)\nc=len(a)\nprint(c)","def main():\n    import math\n    n=int(input())\n    S=set()\n    ans=0\n    for _ in range(n):\n        s=input()\n        if s not in S:\n            ans+=1\n            S.add(s)\n    print(ans)\nif __name__ == '__main__':\n    main()","# coding: utf-8\n\n\ndef solve(*args: str) -> str:\n    n = int(args[0])\n    S = set(args[1:])\n\n    return str(len(S))\n\n\nif __name__ == \"__main__\":\n    print(solve(*(open(0).read().splitlines())))\n","# @oj: atcoder\n# @id: hitwanyang\n# @email: 296866643@qq.com\n# @date: 2020-04-27 11:02\n# @url:https:\/\/atcoder.jp\/contests\/abc164\/tasks\/abc164_c\nimport sys,os\nfrom io import BytesIO, IOBase\nimport collections,itertools,bisect,heapq,math,string\n# region fastio\n\nBUFSIZE = 8192\n\nBUFSIZE = 8192\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\n# ------------------------------\ndef main():\n    t=int(input())\n    strlist=[str(input()) for x in range(t)]\n    # print ([str(x) for x in strlist])\n    ans=set()\n    for s in strlist:\n        ans.add(s)\n    print (len(ans))\nif __name__ == \"__main__\":\n    main()","N=int(input())\n\ngoods=[]\n\nfor i in range(N):\n    S=input()\n    goods.append(S)\n\nprint(len(set(goods)))","import collections\n\nn = int(input())\n\ndata = []\nfor _ in range(n):\n  data.append( input() )\n\nc = collections.Counter(data)\n# print(c)\n# Counter({'a': 4, 'c': 2, 'b': 1})\n\nprint(len(list(c)))\n\n","n = int(input())\nlist = []\nfor i in range(n):\n    a = input()\n    list.append(a)\n\nimport collections\n\nx = collections.Counter(list)\ny = x.keys()\nprint(len(y))","import collections\n\nN = int(input())\ns = [input() for i in range(N)]\nh = collections.Counter(s)\nprint(len(h))","N = int(input())\ns = set()\nfor i in range(N):\n    s.add(input())\n\nprint(len(s))\n","import sys\ninput = sys.stdin.readline\n\nn = int(input())\n\nLi = []\nfor i in range(n):\n    s = input()\n    if s in Li:\n        pass\n    else:\n        Li.append(s)\n\nprint(len(Li))\n","N=int(input())\nS = []\nfor _ in range(N):\n    S.append(input())\nname=list(set(S))\nprint(len(name))","n = int(input())\n\ns = [input() for i in range(n)]\n\ndi = {}\ncnt = 0\n\nfor nl in s:\n    if str(nl) not in di:\n        di[str(nl)] = 1\n        cnt += 1\nprint(cnt)        ","N=int(input())\nlist_s=[]\nfor i in range(N):\n  s=input()\n  list_s.append(s)\n  \nt=set(list_s)\nprint(len(t))\n  \n  ","myset = set()\nN = int(input())\nfor i in range(N):\n    s = input()\n    myset.add(s)\nprint(len(myset))\n","lotteryCount = int(input())\nstringArray = list()\nfor index in range(0, lotteryCount):\n  stringArray.append(input())\n\nvariatyCount = len(set(stringArray))\nprint(variatyCount)","n = int(input())\n\na = []\nfor i in range(n):\n    s = input()\n    a.append(s)\nans = set(a)\nprint(len(ans))","n= int(input())\ns=set()\nfor i in range(n):\n    s.add(input())\nprint(len(s))","n=int(input())\ns=[input() for i in [0]*n]\nprint(len(set(s)))","n = int(input())\nitems = []\nfor i in range(n):\n    items.append(input())\ns = set(items)\nprint(len(s))","n = int(input())\ns = [input() for i in range(n)]\nprint(len(set(s)))","n = int(input())\ns = [input() for i in range(n)]\ns.sort()\nans = 1\nfor i in range(1,n):\n  if not s[i]==s[i-1]:\n    ans += 1\nprint(ans)","n = int(input())\ns = [input() for i in range(n)]\n\nprint(len(set(s)))","n = int(input())\n\npresents_list = {}\n\nfor i in range(n):\n    present = input()\n    if present in presents_list:\n        presents_list[present] += 1\n    else:\n        presents_list[present] = 1\n\nprint(len(presents_list))","N = int(input())\nS = [input() for i in range(N)]\nS_union = set(S)\nresult = len(S_union)\nprint(result)\n","n = int(input())\nl = []\nfor i in range(n):\n    x = input()\n    l.append(x)\ns = set(l)\nprint(len(s))","n = int(input())\nl=[]\nfor _ in range(n):\n    l.append(input())\nl = set(l)\nprint(len(l))","import sys\nDebug = lambda *args: None\nif len(sys.argv) > 1:\n\tsys.stdin = open(\"io\/test.in\", \"r\")\n\tDebug = lambda *args: print('\\033[0;31m', *args, '\\033[0m', file=sys.stderr)\n\n\n# Author: Narut Sereewattanawoot\n###\ndef Rd(f=int):\n\treturn [f(x) for x in input().split()]\n\n\ndef JoinF(arr):\n\treturn ' '.join('{:.10f}'.format(x) for x in arr)\n\n\n###\n\n\ndef main():\n\tn = int(input())\n\tS = set(input() for _ in range(n))\n\tprint(len(S))\n\n\nmain()\n","n = int(input())\nsSet = set([input() for _ in range(n)])\n\nprint(len(sSet))\n","n=int(input())\ncnt=0\ns=set()\nfor i in range(n):\n    s1=input()\n    if s1 not in s:\n        cnt+=1\n        s.add(s1)\nprint(cnt)\n","# ABC 164\nN= int(input())\nS =[]\nfor _ in range(N):\n    S.append((input()))\nprint(len(set(S)))","def inlist(lista,item):\n    for i in lista:\n        if item==i:\n            return True\n    return False\n\n\nitemsList=[]\nnum=int(input())\nfor i in range(num):\n    temp=input()\n    if not inlist(itemsList,temp):\n        itemsList.append(temp)\nprint(len(itemsList))\n","N = int(input())\n\nNList = []\nfor i in range(N):\n    NList.append(input())\n    \nNList.sort()\n\ncount = 0\ntmp = ''\nfor i in range(N):\n    if tmp != NList[i]:\n        count += 1\n    tmp = NList[i]\n       \nprint(count)","n = int(input())\ns = []\nfor i in range(n):\n    s.append(input())\nss = set(s)\nprint(len(ss))\n","n = int(input())\ngachaList = [input() for i in range(n)]\nprint(len(set(gachaList)))","n=int(input())\ns=[]\nfor i in range(n):\n    s.append(input())\nprint(len(set(s)))","N = int(input())\nget = ['1']\nfor i in range(N):\n    S = input()\n    get.append(S)\n\nget.sort()\nans = 0\nfor i in range(N):\n    if get[i] != get[i+1]:\n        ans += 1\nprint(ans)\n"]}
{"description_html":"<span class=\"lang-en\">\n<p>Score : <var>200<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>We have <var>A<\/var> cards, each of which has an integer <var>1<\/var> written on it. Similarly, we also have <var>B<\/var> cards with <var>0<\/var>s and <var>C<\/var> cards with <var>-1<\/var>s.<\/p>\n<p>We will pick up <var>K<\/var> among these cards. What is the maximum possible sum of the numbers written on the cards chosen?<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li>All values in input are integers.<\/li>\n<li><var>0 \\leq A, B, C<\/var><\/li>\n<li><var>1 \\leq K \\leq A + B + C \\leq 2 \\times 10^9<\/var><\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>A<\/var> <var>B<\/var> <var>C<\/var> <var>K<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>Print the maximum possible sum of the numbers written on the cards chosen.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>2 1 1 3\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>2\n<\/pre>\n<p>Consider picking up two cards with <var>1<\/var>s and one card with a <var>0<\/var>.\nIn this case, the sum of the numbers written on the cards is <var>2<\/var>, which is the maximum possible value.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>1 2 3 4\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>0\n<\/pre>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>2000000000 0 0 2000000000\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>2000000000\n<\/pre><\/section>\n<\/div>\n<\/span>","description_string":"\nScore : 200 points\n\n\nProblem StatementWe have A cards, each of which has an integer 1 written on it. Similarly, we also have B cards with 0s and C cards with -1s.\nWe will pick up K among these cards. What is the maximum possible sum of the numbers written on the cards chosen?\n\n\n\n\nConstraints\nAll values in input are integers.\n0 \\leq A, B, C\n1 \\leq K \\leq A + B + C \\leq 2 \\times 10^9\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nA B C K\n\n\n\n\n\nOutputPrint the maximum possible sum of the numbers written on the cards chosen.\n\n\n\n\n\n\nSample Input 12 1 1 3\n\n\n\n\n\nSample Output 12\n\nConsider picking up two cards with 1s and one card with a 0.\nIn this case, the sum of the numbers written on the cards is 2, which is the maximum possible value.\n\n\n\n\n\nSample Input 21 2 3 4\n\n\n\n\n\nSample Output 20\n\n\n\n\n\n\nSample Input 32000000000 0 0 2000000000\n\n\n\n\n\nSample Output 32000000000\n\n\n","orig_lang_html":"<span class=\"lang-en\">\n<p>Score : <var>200<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>We have <var>A<\/var> cards, each of which has an integer <var>1<\/var> written on it. Similarly, we also have <var>B<\/var> cards with <var>0<\/var>s and <var>C<\/var> cards with <var>-1<\/var>s.<\/p>\n<p>We will pick up <var>K<\/var> among these cards. What is the maximum possible sum of the numbers written on the cards chosen?<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li>All values in input are integers.<\/li>\n<li><var>0 \\leq A, B, C<\/var><\/li>\n<li><var>1 \\leq K \\leq A + B + C \\leq 2 \\times 10^9<\/var><\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>A<\/var> <var>B<\/var> <var>C<\/var> <var>K<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>Print the maximum possible sum of the numbers written on the cards chosen.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>2 1 1 3\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>2\n<\/pre>\n<p>Consider picking up two cards with <var>1<\/var>s and one card with a <var>0<\/var>.\nIn this case, the sum of the numbers written on the cards is <var>2<\/var>, which is the maximum possible value.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>1 2 3 4\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>0\n<\/pre>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>2000000000 0 0 2000000000\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>2000000000\n<\/pre><\/section>\n<\/div>\n<\/span>","orig_lang_string":"\nScore : 200 points\n\n\nProblem StatementWe have A cards, each of which has an integer 1 written on it. Similarly, we also have B cards with 0s and C cards with -1s.\nWe will pick up K among these cards. What is the maximum possible sum of the numbers written on the cards chosen?\n\n\n\n\nConstraints\nAll values in input are integers.\n0 \\leq A, B, C\n1 \\leq K \\leq A + B + C \\leq 2 \\times 10^9\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nA B C K\n\n\n\n\n\nOutputPrint the maximum possible sum of the numbers written on the cards chosen.\n\n\n\n\n\n\nSample Input 12 1 1 3\n\n\n\n\n\nSample Output 12\n\nConsider picking up two cards with 1s and one card with a 0.\nIn this case, the sum of the numbers written on the cards is 2, which is the maximum possible value.\n\n\n\n\n\nSample Input 21 2 3 4\n\n\n\n\n\nSample Output 20\n\n\n\n\n\n\nSample Input 32000000000 0 0 2000000000\n\n\n\n\n\nSample Output 32000000000\n\n\n","solve_rate":0.5634602076,"codenet_problem_id":"p02682","input_testcases":{"19":"1 2 5 3","83":"1 3 10 9","57":"0 3 8 0","9":"4 2 0 4","51":"0 2 6 4","62":"1 6 1 1","32":"2 1 0 3","98":"1 14 2 1","12":"6 1 1 7","100":"2000000000 0 0 2000000000","66":"1 2 6 4","35":"1 2 10 3","25":"0 3 5 5","3":"0 3 8 5","75":"2 7 3 2","87":"1 14 1 1","72":"0 6 8 8","76":"1 9 1 1","33":"0 2 5 4","70":"0 3 10 9","102":"2 1 1 3","92":"2 2 18 4","40":"0 3 8 8","13":"0 3 10 12","10":"4 3 4 3","7":"2 2 3 4","101":"2 1 1 3","63":"0 0 3 1","20":"1 2 6 3","44":"0 6 3 6","99":"4 2 1 2","2":"0 3 8 6","103":"1 2 3 4","14":"1 0 8 9","0":"1 2 5 4","91":"2 3 14 2","65":"2 2 0 4","53":"1 2 10 4","18":"3 0 17 18","56":"0 3 10 8","21":"1 2 4 3","22":"1 2 8 3","94":"2 3 10 9","43":"0 6 5 6","34":"1 2 9 3","50":"2 2 4 4","17":"10 2 4 8","37":"0 2 8 3","79":"1 1 3 4","90":"1 1 6 4","24":"0 3 8 3","80":"2 3 9 2","58":"0 6 8 6","89":"4 2 0 2","81":"1 2 15 4","68":"1 2 18 4","71":"0 1 8 0","1":"2 0 1 3"},"output_testcases":{"19":"1\n","83":"-4\n","57":"0\n","9":"4\n","51":"-2\n","62":"1\n","32":"2\n","98":"1\n","12":"6\n","100":"2000000000\n","66":"0\n","35":"1\n","25":"-2\n","3":"-2\n","75":"2\n","87":"1\n","72":"-2\n","76":"1\n","33":"-2\n","70":"-6\n","102":"2\n","92":"2\n","40":"-5\n","13":"-9\n","10":"3\n","7":"2\n","101":"2\n","63":"-1\n","20":"1\n","44":"0\n","99":"2\n","2":"-3\n","103":"0\n","14":"-7\n","0":"0\n","91":"2\n","65":"2\n","53":"0\n","18":"-12\n","56":"-5\n","21":"1\n","22":"1\n","94":"-2\n","43":"0\n","34":"1\n","50":"2\n","17":"8\n","37":"-1\n","79":"-1\n","90":"-1\n","24":"0\n","80":"2\n","58":"0\n","89":"2\n","81":"0\n","68":"0\n","71":"0\n","1":"1\n"},"n_missing":46,"programs":["a, b, c, k = (int(x) for x in input().split())\n\nans = 0\n\nif a <= k:\n    ans += a\n    k -= a\nelse:\n    ans += k\n    k = 0\n\nk -= b\n\nif k > 0:\n    ans -= (b - k)\n\nprint(ans)","a, b, c, k = map(int, input().split(\" \"))\n\n\n\"\"\"\nprint(a)\nprint(b)\nprint(c)\nprint(k)\n\"\"\"\nif a >= k:\n    print(a)\n\nelif (a + b) >= k:\n    print(a + 0)\n\nelse:\n    print(a - (k - a - b))\n","a,b,c,k=map(int,input().split())\nif a>=k:\n  print(k)\n  exit()\nif a+b>=k:\n  print(a)\n  exit()\nprint(a-(k-a-b))","A, B, C, K = map(int, input().split())\n\nans = []\nnumA = min([A, K])\nnumB = min([B, K - numA])\nnumC = K - numA - numB \n\nprint(numA - numC)","a,b,c,k = map(int,input().split())\nif k <= a:\n    print(k)\n\nelif k <= a+b:\n    print(a)\n\nelse:\n    print(a-(k-a-b))\n","A,B,C,K = map(int,input().split())\nif K<=A:\n    print(K)\nelif A<K<=A+B:\n    print(A)\nelif A+B<K<=A+B+C:\n    print(A-(K-A-B))","a,b,c,k = map(int,input().split())\n\n\n\ni = k - a\nif i <= 0:\n    print(a)\n    exit()\nelse:\n    j= i - b\n    if j <= 0:\n        print(a)\n        exit()\n    else:\n        print(a - j)\n","a,b,c,k=map(int,input().split())\nvalue=[]\nfor i in range(a):\n  value.append(1)\nfor i in range(b):\n  value.append(0)\nfor i in range(c):\n  value.append(-1)\nsum=0\nfor i in range(k):\n  sum+=value[i]\nprint(sum)","a, b, c, k = [int(i) for i in input().split()]\nif a >= k:\n    print(k)\nelif a + b >= k:\n    print(a)\nelse:\n    print(a - (k - a - b))\n    ","a, b, c, k = map(int, input().split())\nans = 0\nif a >= k:\n    print(a)\n    exit()\nans += a\nk -= a\nif b >= k:\n    print(ans)\n    exit()\nk -= b\nans -= k\nprint(ans)\n","S = list(map(int,input().split()))\n\nif S[0] >= S[3]:\n  print(S[3])\nelif S[0]+S[1] >= S[3]:\n  print(S[0])\nelse:\n  print(S[0]-(S[3]-S[0]-S[1]))","a, b, c, k = map(int, input().split())\n\ns = 0\n\nif k <= a :\n    s = 1 * k\nelse :\n    if k <= (a+b):\n        s = 1 * a\n    else :\n        s = 1 * a + (-1) * (k-a-b)\n\nprint(s)\n","A, B, C, K = map(int, input().split())\nif A >= K:\n    ans = K\nelif A + B >= K:\n    ans = A\nelse:\n    ans = A - (K - A -B)\nprint(ans)\n","import numpy as np\nimport math\n\nA,B,C,K = map(int,input().split())\n\nans=0\nans+=min(A,K)\nK-=A\nif(K>0):\n\tK-=B\nif(K>0):\n\tans-=K\nprint(ans)","import sys,queue,math,copy,itertools,bisect,collections,heapq\n\ndef main():\n    sys.setrecursionlimit(10**7)\n    INF = 10**18\n    MOD = 10**9 + 7\n    LI = lambda : [int(x) for x in sys.stdin.readline().split()]\n    NI = lambda : int(sys.stdin.readline())\n\n    A,B,C,K = LI()\n\n    ans = 0\n    if A < K:\n        ans = A\n        if A+B < K:\n            ans -= K - (A+B)\n    else:\n        ans = K\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()","a, b, c, k = map(int, input().split())\nif a>=k:\n    print(k)\nelse :\n    kk = k-a%k\n    A = a%k\n    if b>=kk:\n        print(a%k)\n    else :\n        kkk = kk-b%kk\n        B = b%kk\n        if c >= kkk:\n            print(a%k-1*(k-A-B))","a,b,c,k = map(int,input().split())\nif k <= a:\n    print(k)\nelif a < k <=a+b:\n    print(a)\nelse:\n    print(2*a+b-k)","a, b, c, k = map(int, input().split())\nans = 0\n\n\nif a > k:\n    print(k)\nelif a + b > k:\n    print(k)\nelse:\n    cnt = k - a - b\n    print(a - cnt)\n","A,B,C,k=map(int,input().split())\nif A>=k:\n    print(k)\nelif A<k and B>=(k-A):\n    print(A)\nelif A<k and B<(k-A):\n    print(A-(k-A-B))\n","a, b, c, k = map(int, input().split())\nl = {1: a, 0: b, -1: c}\nans = 0\nfor i, j in l.items():\n    if k >= j:\n        ans += j * i\n        k -= j\n    else:\n        ans += k * i\n        break\nprint(ans)\n","a,b,c,k = map(int, input().split())\n\nif (k < a):\n    print(k)\nelif (a <= k < (a+b)):\n    print(a)\nelse:\n    print(a - (k - (a + b)))","A, B, C, K = map(int, input().split())\n\n\nif K <= A:\n    print(K)\nelif K <= A + B:\n    print(A)\nelse:\n    print(A - (K - A - B))","a, b, c, k = map(int, input().split())\n\nleft = 0\nif k > a:\n   ans = a\n   left = k - a\nelse:\n   print(k)\n   exit()\n\nif left > 0:\n   if left > b:\n      left = left - b\n   else:\n      print(ans)\n      exit()\n\nif left > 0:\n   if left < c:\n      print(ans - left)\n   else:\n      print(ans - c)\n","a, b, c, k = map(int,input().split())\n\nif k <= a:\n    ans = k\nelif k <= a+b:\n    ans = a\nelse:\n    ans = a - (k - a - b)\nprint(ans)","a, b, c , k = [int(x) for x in input().split()]\n\nans = min(a, k)\nk -= a\nk -= b\nans -= k\n\nprint(ans)","a, b, c, k = map(int, input().split())\nans = 0\nif k <= a:\n  ans += k\nelif k <= (a + b):\n  ans += a\nelse:\n  ans += a - (k - (a + b))\nprint(ans)","def resolve():\n    a, b, c, k = map(int, input().split())\n    print(a - (k - (a + b)))\n\n\n\nresolve()","a,b,c,k = map(int,input().split())\nans = 0\nif a<k:\n  ans += a\n  k-=a\n  if b <k:\n    k-=b\n    ans -= k\nelse:\n  ans += k\nprint(ans)","A,B,C,K = map(int,input().split())\nresult = 0\nif K > 0 :\n    result = result + A\n    K = K - A\nfor i in range (K):\n    if B > 0 :\n        B = B-1\n    else:\n        result = result-1\nprint(result)","# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun May 10 20:50:47 2020\n\"\"\"\n\nimport sys\n#import numpy as np\n\nsys.setrecursionlimit(10 ** 9)\n#def input():\n#    return sys.stdin.readline()[:-1]\nmod = 10**9+7\n\nA,B,C,K = map(int,input().split())\n\nif K <= A:\n    ans = K\nelif K <= A + B:\n    ans = A\nelse:\n    ans = A - (K-A-B)\nprint(ans)\n","a, b, c, k = map(int, input().split())\n\nans = 0\n\nif a >= k:\n    ans = k*1\nelse:\n    ans = a*1\n    remain = k - a\n    if b >= remain:\n        ans += 0\n    else:\n        remain -= b\n        ans += (-1)*remain\n\nprint(ans)\n","A,B,C,K=map(int,input().split())\n\nflag_A=False\nflag_B=False\nflag_C=False\n\nif K<=A:\n  flag_A=True\nelif A<K and K<=A+B:\n  flag_B=True\nelif A+B<K and K<=A+B+C:\n  flag_C=True\n  \nif flag_A==True:\n  print(K)\nelif flag_B==True:\n  print(A)\nelif flag_C==True:\n  print(A-(K-A-B))","a,b,c,k=map(int,input().split())\nif a>=k:\n    print(k)\nelif a+b>=k:\n    print(a)\nelse:\n    print(a-(k-a-b))","def main():\n    a,b,c,k=map(int,input().split())\n    if a>=k:\n        print(a)\n    elif a+b>=k:\n        print(a)\n    else:\n        print(a-c*(k-a-b))\nmain()","a, b, c, k = map(int, input().split())\n\nif a > k:\n    print(k)\nelif a + b > k:\n    print(a)\nelse:\n    print(a + -1 * (k - a - b))","A, B, C, K = map(int, input().split())\n\nif (A+B) == K:\n  print(A)\nelif (A+B) > K:\n  if a > K:\n    print(K)\n  else:\n    print(A)\nelif (A+B) < K:\n  print(A - (K - (A+B)))\n","import sys\ninput = lambda: sys.stdin.readline().rstrip()\nfrom math import floor,ceil,sqrt,factorial,log\nfrom heapq import heapify, heappop, heappush, heappushpop\nfrom collections import Counter,defaultdict,deque\nfrom itertools import accumulate,permutations,combinations,product,combinations_with_replacement\nfrom bisect import bisect_left,bisect_right\nfrom decimal import Decimal\ninf = float('inf')\nmod = 1000000007\n\na, b, c, k = map(int, input().split())\n\nans = 0\nif k <= a:\n    ans += k\nelse:\n    ans += a\n    if k - a <= b:\n        pass\n    else:\n        ans += -1 *(k - a - b)\n\nprint(ans)","A,B,C,K=map(int,input().split())\nif A+B>=K:\n    ans=A\nelse:\n    K=K-(A+B)\n    ans=A+(-1)*K\nprint(ans)\n","A,B,C,K = map(int,input().split())\n\nkoa = A\nkob = 0\n\nif K-A<B:\n  kob = K-A\nelse :\n  kob = B\n  \nsum = A+0*B\nfor i in reversed(range(K-koa+kob)):\n  if koa+kob+i != K:\n    continue\n  if i<K-koa-kob:\n    break\n  #print (koa)\n  #print (kob)\n  #print (i)\n  #print (\"------\")\n  sum = sum+i*(-1)\nprint (sum)","a, b, c, k = map(int, input().split())\n     \nif a+b >= k:\n  print(a)\nelse:\n  k -= a+b\n  print(a-1*k)","a,b,c,k = map(int,input().split())\n\nif a >= k:\n    print(a)\nelif a < k and (a+b) >= k:\n    print(a)\nelse:\n    com1 = a + b\n    soma = a\n    k -= com1\n    soma -= k\n    print(soma)\n","a,b,c,k = map(int,input().split())\nif((a+b)>=k):\n    if(a>=k):\n        print(k)\n    else:\n        print(a)\nelse:\n    s = k - a - b\n    print(a+s*-1)","a,b,c,k=map(int, input().split())\nif a>=k:\n    print(k)\nelif a+b>=k:\n    print(a)\nelse:\n    print(a-(k-a-b))","import sys\n\na,b,c,k = input().split()\nA = int(a)\nB = int(b)\nC = int(c)\nK = int(k)\n\nans = 0\n\nif (K - A >= 0):\n  ans += A\nelse:\n  ans += K\n\nK = K - A - B\n\nif (K > 0):\n  ans = ans - K\n\nprint (ans)\n\n    ","a, b, c, k = map(int, input().split())\nif k <= a:\n    print(k)\nelif a< k <= a+b:\n    print(a)\nelse:\n    print(2*a + b - k)\n","S = input()\nT = input()\n\nif(S==T[0:len(S)]):\n  print(Yes)\n else:\n    print(No)\n\t\n\n","A,B,C,K = list(map(int,input().split()))\n\nif K <= A:\n  print(K)\nelif K <= A + B:\n  print(A)\nelse:\n  print(A-(K-A-B))\n","a,b,c,k=map(int, input().split())\nmax=0\nif a>=k:\n  max+=1*k\n  print(max)\nelif a<k:\n  max+=a*1\n  if b<k-a:\n    max-=(k-a-b)\n    print(max)\n  else:\n    print(max)\n","A, B, C, K = map(int, input().split())\nif A + B >= K:\n  print(A)\nelif A >= K:\n  print(K)\nelse:\n  d = K - A - B\n  print(A-d)","a,b,c,k = map(int,input().split())\nif a+b>=k:\n  print(a)\nelse:\n  print(2*a-k+b)","a, b, c, k = map(int, input().split())\n\nif k <= a:\n    print(k)\nelif k <= a + b:\n    print(a)\nelse:\n    print(a - (k - a - b))","#!\/usr\/bin\/env python\na, b, c, k  = map(int, input().split())\nif k <= a:\n    print(k)\nelif k > a and k <= a+b :\n    print(a)\nelif k > a+b and k <= a+b+c:\n    print(a - (k - (a+b)))\n\n","A, B, C, K = map(int, input().split())\nans = min(A, K) - min(C, K - A - B)\nprint(ans)","A,B,C,K = map(int, input().split())\nif A + B >= K:\n    print(A)\nelse:\n    r = K - A - B\n    print(A-r)","ABCK = input()\nkey = ['A', 'B', 'C', 'K']\nABCK = [int(i) for i in list(ABCK.split())]\nABCK = {k: v for k, v in zip(key, ABCK)}\nsum = 0\nprint(ABCK)\n\nif ABCK['A'] > ABCK['K']:\n  sum = ABCK['K']\nelse:\n  if ABCK['A'] + ABCK['B'] >= ABCK['K']:\n    sum = ABCK['A']\n  else:\n    K = ABCK['K'] - (ABCK['A'] + ABCK['B'])\n    if ABCK['A'] - K < 0:\n      sum = 0\n    else:\n      sum = ABCK['A'] - K\nprint(sum)","a,b,c,k=map(int,input().split())\nif k<=a:\n    print(k)\nelif k<=(a+b):\n    print(a)\nelse:\n    print(a-(k-(a+b)))","a, b, c, k = map(int,input().split())\n\n\nif a >= k:\n    print(a)\nelif a + b >= k:\n    print(a)\nelse:\n    print(a-c)","a,b,c,k = map(int, input().split())\n\nif a >= k:\n    print(k)\nelif a+b >= k:\n    print(a)\nelse:\n    print(a - (k-a-b))\n\n\n","a,b,c,k = map(int,input().split())\n\nt= 0\n\nif k < a:\n    t += k\n    k = 0\nelse:\n    t += a\n    k = k -a\n\nif k < b:\n    k = 0\nelse:\n    k = k -b\n\nif k < c:\n    t += k*-1\n    k = 0\nelse:\n    t += c*-1\n\nprint(t)","a = float(input())\nb = float(input())\nc = float(input())\nk = float(input())\n\nif(k<=(a+b) and k>=1):\n    print(a)\nelse if(k<=a+b+c):\n    print(a-(k-(a+b)))","A,B,C,K = map(int,input().split())\n\nans = 0\n\nwhile K > 0 and A > 0:\n    ans += 1\n    A -= 1\n    K -= 1\n    \nwhile K > 0 and B > 0:\n    ans += 0\n    B -= 1\n    K -= 1\n\nwhile K > 0 and C > 0:\n    ans += -1\n    C -= 1\n    K -= 1\n    \nprint(ans)\n    \n    \n  \n  ","a, b, c, k = [int(x) for x in input().split()]\na_x = min(a, k)\nk -= a_x\nb_x = min(b, k)\nk -= b_x\nc_x = min(c, k)\nans = a_x - c_x\nprint(ans)","A,B,C,K = list(map(int, input().split()))\nif K <= A:\n    print(K)\nelse:\n    K = K - A\n    if K<= B:\n        print(A)\n    else:\n        K = K - B\n        print(A-K)\n    ","def main():\n    a, b, c, k = map(int, input().split())\n    if k <= a:\n        print(k)\n    elif k <= a+b:\n        print(a)\n    else:\n        x = k - (a+b)\n        print(a - x)\n\nif __name__ == \"__main__\":\n    main()","a, b, c, k = map(int, input().split())\nans = 0\nif a >= k:\n    print(k)\nelif a + b >= k:\n    print(a)\nelse:\n    print(1 * a - 1 * (k - a - b))\n","A, B ,C, K = map(int, input().split())\n\nif K <= A:\n  print(K)\nelif A < K <= A+B:\n  print(A)\nelse:\n  print(2*A + B - K)","a,b,c,k=map(int,input().split())\nans=0\nif k<a:\n    ans+=k\nelif a<=k and k<a+b:\n    ans+=a\nelif a+b<=k and k<a+b+c:\n    ans=ans+a-(k-a-b)\nprint(ans)\n","A,B,C,K=map(int,input().split())\nif A>=K:\n  print(K)\nelif A<K<=A+B:\n  print(A)\nelse:\n  print(A-K+A+B)","A,B,C,K = map(int, input().split())\n\nif K <= A + B:\n    print(A)\nelse:\n    L = K - A - B\n    print(A - L)","[A,B,C,K]=map(int,input().split())\nif A>=K:\n    print(K)\nelif A+B>=K:\n    print(A)\nelse:\n    print(2*A+B-K)","a,b,c,k = map(int,input().split())\nans = a\nif a+b<k:\n    ans -= k-(a+b)\nelif a+b>k:\n    ans -= a-k\nprint(ans)","A,B,C,K = map(int, input().split())\nif K<=A:\n  print(K)\nelif K<=A+B:\n  print(A)\nelse:\n  m = K-A-B\n  print(A-m)","a,b,c,k = map(int,input().split())\nif k <= a:\n  print(k)\nelif a < k <= a + b:\n  print(a)\nelse:\n  k -= a + b\n  print(a-k)","a, b, c, k = map(int, input().split())\nif a >= k:\n    print(k)\nelif a + b >= k:\n    print(a)\nelse:\n    print(a - (k - a - b))\n","A , B, C, K = map(int, input().split())\n\nif K >= A:\n    result = A\n    K -= A\nelse:\n    result = K\n\nif K >= B:\n    K -= B\n\nif K > 0:\n    result -=K\nprint(result)\n","a,b,c,k = map(int,input().split())\nif a+b>=k:\n    print(a)\nelse:\n    x = (a+b)-k\n    print(a-abs(x))","A, B, C, K = list(map(int,input().split()))\nif K <= A:\n  print(K)\nelif K <= (A + B):\n  print(A)\nelif K <= (A + B + C):\n  print(K - B)\nelse:\n  print(A + B - C)","A, B, C, K = map(int, input().split())\n\nif K < A:\n    print(K)\nelif K < A + B:\n    print(A)\nelse:\n    print(A - (K-A-B))\n","from sys import stdin\nfrom sys import setrecursionlimit\nsetrecursionlimit(10 ** 7)\n\na,b,c,d = map(int,stdin.readline().rstrip().split())\n\nif d > a+b:\n    print(a-(d-a-b))\nelif d < a:\n    print(d)\nelse:\n    print(a)","A,B,C,K = map(int, input().split())\nif k<= a:\n  print(k)\nelif k > a and k <= a+b:\n  print(a)\nelif k > a+b:\n  print(a-(k-a-b)\n  ","A, B, C, K = map(int, input().split())\n\nif A >= K:\n    ans = K\nelif (A + B) >= K:\n    ans = A\nelse:\n    ans = A - (K - A - B)\n\nprint(ans)","a,b,c,k = map(int,input().split())\n\nif k<=a+b:\n    print(a)\nelse:\n    print(2*a-k+b)","A, B, C, K = map(int, input().split())\nprint(min(A, K) - max(K - A - B, 0))","A, B, C, K = map(int,input().split())\n\nif K <= A:\n    print(K)\nelif A < K <= A + B :\n    print(A)\nelif A + B < K <= A + B + C:\n    print(A - (K - A - B))\n","a, b, c, k = map(int, input().split())\n\nif k<=a:\n\tprint(k)\nelif k<=a+b:\n\tprint(a)\nelse:\n\tprint(a+a+b-k)","A,B,C,K=list(map(int,input().split()))\n\ncount=K\npoint=0\n\nif A>count:\n    point+=count\n    count=0\nelse:\n    point+=A\n    count-=A\n\nif B>count:\n    point+=count*0\n    count=0\nelse:\n    point+=B*0\n    count-=B\n\nif C>count:\n    point+=count*(-1)\n    count=0\nelse:\n    point+=C*(-1)\n    count-=C\n\nprint(point)","a, b, c, k = map(int, input().split())\nif k <= a:\n  print(k)\nif a < k <= a+b:\n  print(a)\nif a+b < k <= a+b+c:\n  print(a+(-1)*(k-a-b))\n","A, B, C, K = list(map(int,input().split()))\n\nif K <= A:\n    print(K)\nelse:\n    if K <= A+B:\n        print(A)\n    else:\n        print(A-(K-A-B))","num = input().split()\nA = int(num[0]) #1\nB = int(num[1])  #0\nC = int(num[2]) #-1\nK = int(num[3]) #\u9078\u3076\u500b\u6570\n\ncount = 0\nkai = 0\nif K < A:\n    print(A)\nif K >= A:\n    kai = A\n    count = A\n\n    \n    if count < K:\n        if K >= A+B:\n            kai = A\n            count = A+B\n            \n            if count < K:\n               kai = A + (K - count)*(-1)\n               \nprint(kai)","A, B, C, K = map(int, input().split())\ntotal = 0\nif A >= K:\n    total = K\nelse:\n    if A+B >= K:\n        total = A\n    else:\n        total = A - (K-A-B)\nprint(total)","a,b,c,k = map(int,input().split())\nans = 0\nfor i in range(a):\n  if k == 0:\n    print(ans)\n    exit()\n  ans += 1\n  k -= 1\nfor i in range(b):\n  if k == 0:\n    print(ans)\n    exit()\n  k -= 1\nfor i in range(c):\n  if k == 0:\n    print(ans)\n    exit()\n  ans -= 1\n  k -= 1","A, B, C, K = map(int, input().split())\n\nif K <= A + B:\n  print(min(K, A))\nelse:\n  print(2*A+B-K)\n ","a,b,c,k = map(int,input().split())\n\nif k<=a:\n  print(k)\nelif a< k <= a+b:\n  print(a)\nelif a+b < k <= a+b+c:\n  print(a-(k-b-a))","A, B, C, K = map(int, input().split())\nprint(2*A+B-K)","import sys\nA, B, C, K = map(int, input().split())\n\nmycnt = 0\nmyans = 0\n\nif A >= K:\n    print(K)\n    sys.exit()\nelif A+B >=K:\n    print(A)\nelse:\n    print(A+(K-A-B)*-1)","a,b,c,k = map(int,input().split())\nif a >= k:\n    print(k)\nelif a + b >= k:\n    print(a)\nelse:\n    print(2*a+b-k)","ipt = \"3 1 1 3\"\na = list(map(int,input().split()))\n\none = a[0]\nzero = a[1]\nmone = a[2]\nnum = a[3]\n\nans = 0\nif one >= num:\n    print(num)\nelse:\n    ans += one\n    num -= one\n    if zero >= num:\n        print(ans)\n    else:\n        num -= zero\n        print(one - mone*num)","a,b,c,k = map(int,input().split())\nM = 0\nif a+b >= k:\n    M = a\nelse:\n    M = 2*a - k +b\nprint(M)","A, B, C, K = map(int, input().split())\n\nif K <= A:\n  print(K)\n  exit()\n \nif (K - A) <= B:\n  print(A)\n  exit()\n\nif (K- A -B) <= C:\n  print(A - (K - A -B))\n  exit()\n","A, B, C, K = map(int, input().split())\n \nif K <= A:\n    print(K)\nelif A < K <= A+B:\n    print(A)\nelse:\n    K -= (A+B)\n    print(A-K)"],"raw_generations":["a, b, c, k = (int(x) for x in input().split())\n\nans = 0\n\nif a <= k:\n    ans += a\n    k -= a\nelse:\n    ans += k\n    k = 0\n\nk -= b\n\nif k > 0:\n    ans -= (b - k)\n\nprint(ans)","a, b, c, k = map(int, input().split(\" \"))\n\n\n\"\"\"\nprint(a)\nprint(b)\nprint(c)\nprint(k)\n\"\"\"\nif a >= k:\n    print(a)\n\nelif (a + b) >= k:\n    print(a + 0)\n\nelse:\n    print(a - (k - a - b))\n","a,b,c,k=map(int,input().split())\nif a>=k:\n  print(k)\n  exit()\nif a+b>=k:\n  print(a)\n  exit()\nprint(a-(k-a-b))","A, B, C, K = map(int, input().split())\n\nans = []\nnumA = min([A, K])\nnumB = min([B, K - numA])\nnumC = K - numA - numB \n\nprint(numA - numC)","a,b,c,k = map(int,input().split())\nif k <= a:\n    print(k)\n\nelif k <= a+b:\n    print(a)\n\nelse:\n    print(a-(k-a-b))\n","A,B,C,K = map(int,input().split())\nif K<=A:\n    print(K)\nelif A<K<=A+B:\n    print(A)\nelif A+B<K<=A+B+C:\n    print(A-(K-A-B))","a,b,c,k = map(int,input().split())\n\n\n\ni = k - a\nif i <= 0:\n    print(a)\n    exit()\nelse:\n    j= i - b\n    if j <= 0:\n        print(a)\n        exit()\n    else:\n        print(a - j)\n","a,b,c,k=map(int,input().split())\nvalue=[]\nfor i in range(a):\n  value.append(1)\nfor i in range(b):\n  value.append(0)\nfor i in range(c):\n  value.append(-1)\nsum=0\nfor i in range(k):\n  sum+=value[i]\nprint(sum)","a, b, c, k = [int(i) for i in input().split()]\nif a >= k:\n    print(k)\nelif a + b >= k:\n    print(a)\nelse:\n    print(a - (k - a - b))\n    ","a, b, c, k = map(int, input().split())\nans = 0\nif a >= k:\n    print(a)\n    exit()\nans += a\nk -= a\nif b >= k:\n    print(ans)\n    exit()\nk -= b\nans -= k\nprint(ans)\n","S = list(map(int,input().split()))\n\nif S[0] >= S[3]:\n  print(S[3])\nelif S[0]+S[1] >= S[3]:\n  print(S[0])\nelse:\n  print(S[0]-(S[3]-S[0]-S[1]))","a, b, c, k = map(int, input().split())\n\ns = 0\n\nif k <= a :\n    s = 1 * k\nelse :\n    if k <= (a+b):\n        s = 1 * a\n    else :\n        s = 1 * a + (-1) * (k-a-b)\n\nprint(s)\n","A, B, C, K = map(int, input().split())\nif A >= K:\n    ans = K\nelif A + B >= K:\n    ans = A\nelse:\n    ans = A - (K - A -B)\nprint(ans)\n","import numpy as np\nimport math\n\nA,B,C,K = map(int,input().split())\n\nans=0\nans+=min(A,K)\nK-=A\nif(K>0):\n\tK-=B\nif(K>0):\n\tans-=K\nprint(ans)","import sys,queue,math,copy,itertools,bisect,collections,heapq\n\ndef main():\n    sys.setrecursionlimit(10**7)\n    INF = 10**18\n    MOD = 10**9 + 7\n    LI = lambda : [int(x) for x in sys.stdin.readline().split()]\n    NI = lambda : int(sys.stdin.readline())\n\n    A,B,C,K = LI()\n\n    ans = 0\n    if A < K:\n        ans = A\n        if A+B < K:\n            ans -= K - (A+B)\n    else:\n        ans = K\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()","a, b, c, k = map(int, input().split())\nif a>=k:\n    print(k)\nelse :\n    kk = k-a%k\n    A = a%k\n    if b>=kk:\n        print(a%k)\n    else :\n        kkk = kk-b%kk\n        B = b%kk\n        if c >= kkk:\n            print(a%k-1*(k-A-B))","a,b,c,k = map(int,input().split())\nif k <= a:\n    print(k)\nelif a < k <=a+b:\n    print(a)\nelse:\n    print(2*a+b-k)","a, b, c, k = map(int, input().split())\nans = 0\n\n\nif a > k:\n    print(k)\nelif a + b > k:\n    print(k)\nelse:\n    cnt = k - a - b\n    print(a - cnt)\n","A,B,C,k=map(int,input().split())\nif A>=k:\n    print(k)\nelif A<k and B>=(k-A):\n    print(A)\nelif A<k and B<(k-A):\n    print(A-(k-A-B))\n","a, b, c, k = map(int, input().split())\nl = {1: a, 0: b, -1: c}\nans = 0\nfor i, j in l.items():\n    if k >= j:\n        ans += j * i\n        k -= j\n    else:\n        ans += k * i\n        break\nprint(ans)\n","a,b,c,k = map(int, input().split())\n\nif (k < a):\n    print(k)\nelif (a <= k < (a+b)):\n    print(a)\nelse:\n    print(a - (k - (a + b)))","A, B, C, K = map(int, input().split())\n\n\nif K <= A:\n    print(K)\nelif K <= A + B:\n    print(A)\nelse:\n    print(A - (K - A - B))","a, b, c, k = map(int, input().split())\n\nleft = 0\nif k > a:\n   ans = a\n   left = k - a\nelse:\n   print(k)\n   exit()\n\nif left > 0:\n   if left > b:\n      left = left - b\n   else:\n      print(ans)\n      exit()\n\nif left > 0:\n   if left < c:\n      print(ans - left)\n   else:\n      print(ans - c)\n","a, b, c, k = map(int,input().split())\n\nif k <= a:\n    ans = k\nelif k <= a+b:\n    ans = a\nelse:\n    ans = a - (k - a - b)\nprint(ans)","a, b, c , k = [int(x) for x in input().split()]\n\nans = min(a, k)\nk -= a\nk -= b\nans -= k\n\nprint(ans)","a, b, c, k = map(int, input().split())\nans = 0\nif k <= a:\n  ans += k\nelif k <= (a + b):\n  ans += a\nelse:\n  ans += a - (k - (a + b))\nprint(ans)","def resolve():\n    a, b, c, k = map(int, input().split())\n    print(a - (k - (a + b)))\n\n\n\nresolve()","a,b,c,k = map(int,input().split())\nans = 0\nif a<k:\n  ans += a\n  k-=a\n  if b <k:\n    k-=b\n    ans -= k\nelse:\n  ans += k\nprint(ans)","A,B,C,K = map(int,input().split())\nresult = 0\nif K > 0 :\n    result = result + A\n    K = K - A\nfor i in range (K):\n    if B > 0 :\n        B = B-1\n    else:\n        result = result-1\nprint(result)","# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun May 10 20:50:47 2020\n\"\"\"\n\nimport sys\n#import numpy as np\n\nsys.setrecursionlimit(10 ** 9)\n#def input():\n#    return sys.stdin.readline()[:-1]\nmod = 10**9+7\n\nA,B,C,K = map(int,input().split())\n\nif K <= A:\n    ans = K\nelif K <= A + B:\n    ans = A\nelse:\n    ans = A - (K-A-B)\nprint(ans)\n","a, b, c, k = map(int, input().split())\n\nans = 0\n\nif a >= k:\n    ans = k*1\nelse:\n    ans = a*1\n    remain = k - a\n    if b >= remain:\n        ans += 0\n    else:\n        remain -= b\n        ans += (-1)*remain\n\nprint(ans)\n","A,B,C,K=map(int,input().split())\n\nflag_A=False\nflag_B=False\nflag_C=False\n\nif K<=A:\n  flag_A=True\nelif A<K and K<=A+B:\n  flag_B=True\nelif A+B<K and K<=A+B+C:\n  flag_C=True\n  \nif flag_A==True:\n  print(K)\nelif flag_B==True:\n  print(A)\nelif flag_C==True:\n  print(A-(K-A-B))","a,b,c,k=map(int,input().split())\nif a>=k:\n    print(k)\nelif a+b>=k:\n    print(a)\nelse:\n    print(a-(k-a-b))","def main():\n    a,b,c,k=map(int,input().split())\n    if a>=k:\n        print(a)\n    elif a+b>=k:\n        print(a)\n    else:\n        print(a-c*(k-a-b))\nmain()","a, b, c, k = map(int, input().split())\n\nif a > k:\n    print(k)\nelif a + b > k:\n    print(a)\nelse:\n    print(a + -1 * (k - a - b))","A, B, C, K = map(int, input().split())\n\nif (A+B) == K:\n  print(A)\nelif (A+B) > K:\n  if a > K:\n    print(K)\n  else:\n    print(A)\nelif (A+B) < K:\n  print(A - (K - (A+B)))\n","import sys\ninput = lambda: sys.stdin.readline().rstrip()\nfrom math import floor,ceil,sqrt,factorial,log\nfrom heapq import heapify, heappop, heappush, heappushpop\nfrom collections import Counter,defaultdict,deque\nfrom itertools import accumulate,permutations,combinations,product,combinations_with_replacement\nfrom bisect import bisect_left,bisect_right\nfrom decimal import Decimal\ninf = float('inf')\nmod = 1000000007\n\na, b, c, k = map(int, input().split())\n\nans = 0\nif k <= a:\n    ans += k\nelse:\n    ans += a\n    if k - a <= b:\n        pass\n    else:\n        ans += -1 *(k - a - b)\n\nprint(ans)","A,B,C,K=map(int,input().split())\nif A+B>=K:\n    ans=A\nelse:\n    K=K-(A+B)\n    ans=A+(-1)*K\nprint(ans)\n","A,B,C,K = map(int,input().split())\n\nkoa = A\nkob = 0\n\nif K-A<B:\n  kob = K-A\nelse :\n  kob = B\n  \nsum = A+0*B\nfor i in reversed(range(K-koa+kob)):\n  if koa+kob+i != K:\n    continue\n  if i<K-koa-kob:\n    break\n  #print (koa)\n  #print (kob)\n  #print (i)\n  #print (\"------\")\n  sum = sum+i*(-1)\nprint (sum)","a, b, c, k = map(int, input().split())\n     \nif a+b >= k:\n  print(a)\nelse:\n  k -= a+b\n  print(a-1*k)","a,b,c,k = map(int,input().split())\n\nif a >= k:\n    print(a)\nelif a < k and (a+b) >= k:\n    print(a)\nelse:\n    com1 = a + b\n    soma = a\n    k -= com1\n    soma -= k\n    print(soma)\n","a,b,c,k = map(int,input().split())\nif((a+b)>=k):\n    if(a>=k):\n        print(k)\n    else:\n        print(a)\nelse:\n    s = k - a - b\n    print(a+s*-1)","a,b,c,k=map(int, input().split())\nif a>=k:\n    print(k)\nelif a+b>=k:\n    print(a)\nelse:\n    print(a-(k-a-b))","import sys\n\na,b,c,k = input().split()\nA = int(a)\nB = int(b)\nC = int(c)\nK = int(k)\n\nans = 0\n\nif (K - A >= 0):\n  ans += A\nelse:\n  ans += K\n\nK = K - A - B\n\nif (K > 0):\n  ans = ans - K\n\nprint (ans)\n\n    ","a, b, c, k = map(int, input().split())\nif k <= a:\n    print(k)\nelif a< k <= a+b:\n    print(a)\nelse:\n    print(2*a + b - k)\n","S = input()\nT = input()\n\nif(S==T[0:len(S)]):\n  print(Yes)\n else:\n    print(No)\n\t\n\n","A,B,C,K = list(map(int,input().split()))\n\nif K <= A:\n  print(K)\nelif K <= A + B:\n  print(A)\nelse:\n  print(A-(K-A-B))\n","a,b,c,k=map(int, input().split())\nmax=0\nif a>=k:\n  max+=1*k\n  print(max)\nelif a<k:\n  max+=a*1\n  if b<k-a:\n    max-=(k-a-b)\n    print(max)\n  else:\n    print(max)\n","A, B, C, K = map(int, input().split())\nif A + B >= K:\n  print(A)\nelif A >= K:\n  print(K)\nelse:\n  d = K - A - B\n  print(A-d)","a,b,c,k = map(int,input().split())\nif a+b>=k:\n  print(a)\nelse:\n  print(2*a-k+b)","a, b, c, k = map(int, input().split())\n\nif k <= a:\n    print(k)\nelif k <= a + b:\n    print(a)\nelse:\n    print(a - (k - a - b))","#!\/usr\/bin\/env python\na, b, c, k  = map(int, input().split())\nif k <= a:\n    print(k)\nelif k > a and k <= a+b :\n    print(a)\nelif k > a+b and k <= a+b+c:\n    print(a - (k - (a+b)))\n\n","A, B, C, K = map(int, input().split())\nans = min(A, K) - min(C, K - A - B)\nprint(ans)","A,B,C,K = map(int, input().split())\nif A + B >= K:\n    print(A)\nelse:\n    r = K - A - B\n    print(A-r)","ABCK = input()\nkey = ['A', 'B', 'C', 'K']\nABCK = [int(i) for i in list(ABCK.split())]\nABCK = {k: v for k, v in zip(key, ABCK)}\nsum = 0\nprint(ABCK)\n\nif ABCK['A'] > ABCK['K']:\n  sum = ABCK['K']\nelse:\n  if ABCK['A'] + ABCK['B'] >= ABCK['K']:\n    sum = ABCK['A']\n  else:\n    K = ABCK['K'] - (ABCK['A'] + ABCK['B'])\n    if ABCK['A'] - K < 0:\n      sum = 0\n    else:\n      sum = ABCK['A'] - K\nprint(sum)","a,b,c,k=map(int,input().split())\nif k<=a:\n    print(k)\nelif k<=(a+b):\n    print(a)\nelse:\n    print(a-(k-(a+b)))","a, b, c, k = map(int,input().split())\n\n\nif a >= k:\n    print(a)\nelif a + b >= k:\n    print(a)\nelse:\n    print(a-c)","a,b,c,k = map(int, input().split())\n\nif a >= k:\n    print(k)\nelif a+b >= k:\n    print(a)\nelse:\n    print(a - (k-a-b))\n\n\n","a,b,c,k = map(int,input().split())\n\nt= 0\n\nif k < a:\n    t += k\n    k = 0\nelse:\n    t += a\n    k = k -a\n\nif k < b:\n    k = 0\nelse:\n    k = k -b\n\nif k < c:\n    t += k*-1\n    k = 0\nelse:\n    t += c*-1\n\nprint(t)","a = float(input())\nb = float(input())\nc = float(input())\nk = float(input())\n\nif(k<=(a+b) and k>=1):\n    print(a)\nelse if(k<=a+b+c):\n    print(a-(k-(a+b)))","A,B,C,K = map(int,input().split())\n\nans = 0\n\nwhile K > 0 and A > 0:\n    ans += 1\n    A -= 1\n    K -= 1\n    \nwhile K > 0 and B > 0:\n    ans += 0\n    B -= 1\n    K -= 1\n\nwhile K > 0 and C > 0:\n    ans += -1\n    C -= 1\n    K -= 1\n    \nprint(ans)\n    \n    \n  \n  ","a, b, c, k = [int(x) for x in input().split()]\na_x = min(a, k)\nk -= a_x\nb_x = min(b, k)\nk -= b_x\nc_x = min(c, k)\nans = a_x - c_x\nprint(ans)","A,B,C,K = list(map(int, input().split()))\nif K <= A:\n    print(K)\nelse:\n    K = K - A\n    if K<= B:\n        print(A)\n    else:\n        K = K - B\n        print(A-K)\n    ","def main():\n    a, b, c, k = map(int, input().split())\n    if k <= a:\n        print(k)\n    elif k <= a+b:\n        print(a)\n    else:\n        x = k - (a+b)\n        print(a - x)\n\nif __name__ == \"__main__\":\n    main()","a, b, c, k = map(int, input().split())\nans = 0\nif a >= k:\n    print(k)\nelif a + b >= k:\n    print(a)\nelse:\n    print(1 * a - 1 * (k - a - b))\n","A, B ,C, K = map(int, input().split())\n\nif K <= A:\n  print(K)\nelif A < K <= A+B:\n  print(A)\nelse:\n  print(2*A + B - K)","a,b,c,k=map(int,input().split())\nans=0\nif k<a:\n    ans+=k\nelif a<=k and k<a+b:\n    ans+=a\nelif a+b<=k and k<a+b+c:\n    ans=ans+a-(k-a-b)\nprint(ans)\n","A,B,C,K=map(int,input().split())\nif A>=K:\n  print(K)\nelif A<K<=A+B:\n  print(A)\nelse:\n  print(A-K+A+B)","A,B,C,K = map(int, input().split())\n\nif K <= A + B:\n    print(A)\nelse:\n    L = K - A - B\n    print(A - L)","[A,B,C,K]=map(int,input().split())\nif A>=K:\n    print(K)\nelif A+B>=K:\n    print(A)\nelse:\n    print(2*A+B-K)","a,b,c,k = map(int,input().split())\nans = a\nif a+b<k:\n    ans -= k-(a+b)\nelif a+b>k:\n    ans -= a-k\nprint(ans)","A,B,C,K = map(int, input().split())\nif K<=A:\n  print(K)\nelif K<=A+B:\n  print(A)\nelse:\n  m = K-A-B\n  print(A-m)","a,b,c,k = map(int,input().split())\nif k <= a:\n  print(k)\nelif a < k <= a + b:\n  print(a)\nelse:\n  k -= a + b\n  print(a-k)","a, b, c, k = map(int, input().split())\nif a >= k:\n    print(k)\nelif a + b >= k:\n    print(a)\nelse:\n    print(a - (k - a - b))\n","A , B, C, K = map(int, input().split())\n\nif K >= A:\n    result = A\n    K -= A\nelse:\n    result = K\n\nif K >= B:\n    K -= B\n\nif K > 0:\n    result -=K\nprint(result)\n","a,b,c,k = map(int,input().split())\nif a+b>=k:\n    print(a)\nelse:\n    x = (a+b)-k\n    print(a-abs(x))","A, B, C, K = list(map(int,input().split()))\nif K <= A:\n  print(K)\nelif K <= (A + B):\n  print(A)\nelif K <= (A + B + C):\n  print(K - B)\nelse:\n  print(A + B - C)","A, B, C, K = map(int, input().split())\n\nif K < A:\n    print(K)\nelif K < A + B:\n    print(A)\nelse:\n    print(A - (K-A-B))\n","from sys import stdin\nfrom sys import setrecursionlimit\nsetrecursionlimit(10 ** 7)\n\na,b,c,d = map(int,stdin.readline().rstrip().split())\n\nif d > a+b:\n    print(a-(d-a-b))\nelif d < a:\n    print(d)\nelse:\n    print(a)","A,B,C,K = map(int, input().split())\nif k<= a:\n  print(k)\nelif k > a and k <= a+b:\n  print(a)\nelif k > a+b:\n  print(a-(k-a-b)\n  ","A, B, C, K = map(int, input().split())\n\nif A >= K:\n    ans = K\nelif (A + B) >= K:\n    ans = A\nelse:\n    ans = A - (K - A - B)\n\nprint(ans)","a,b,c,k = map(int,input().split())\n\nif k<=a+b:\n    print(a)\nelse:\n    print(2*a-k+b)","A, B, C, K = map(int, input().split())\nprint(min(A, K) - max(K - A - B, 0))","A, B, C, K = map(int,input().split())\n\nif K <= A:\n    print(K)\nelif A < K <= A + B :\n    print(A)\nelif A + B < K <= A + B + C:\n    print(A - (K - A - B))\n","a, b, c, k = map(int, input().split())\n\nif k<=a:\n\tprint(k)\nelif k<=a+b:\n\tprint(a)\nelse:\n\tprint(a+a+b-k)","A,B,C,K=list(map(int,input().split()))\n\ncount=K\npoint=0\n\nif A>count:\n    point+=count\n    count=0\nelse:\n    point+=A\n    count-=A\n\nif B>count:\n    point+=count*0\n    count=0\nelse:\n    point+=B*0\n    count-=B\n\nif C>count:\n    point+=count*(-1)\n    count=0\nelse:\n    point+=C*(-1)\n    count-=C\n\nprint(point)","a, b, c, k = map(int, input().split())\nif k <= a:\n  print(k)\nif a < k <= a+b:\n  print(a)\nif a+b < k <= a+b+c:\n  print(a+(-1)*(k-a-b))\n","A, B, C, K = list(map(int,input().split()))\n\nif K <= A:\n    print(K)\nelse:\n    if K <= A+B:\n        print(A)\n    else:\n        print(A-(K-A-B))","num = input().split()\nA = int(num[0]) #1\nB = int(num[1])  #0\nC = int(num[2]) #-1\nK = int(num[3]) #\u9078\u3076\u500b\u6570\n\ncount = 0\nkai = 0\nif K < A:\n    print(A)\nif K >= A:\n    kai = A\n    count = A\n\n    \n    if count < K:\n        if K >= A+B:\n            kai = A\n            count = A+B\n            \n            if count < K:\n               kai = A + (K - count)*(-1)\n               \nprint(kai)","A, B, C, K = map(int, input().split())\ntotal = 0\nif A >= K:\n    total = K\nelse:\n    if A+B >= K:\n        total = A\n    else:\n        total = A - (K-A-B)\nprint(total)","a,b,c,k = map(int,input().split())\nans = 0\nfor i in range(a):\n  if k == 0:\n    print(ans)\n    exit()\n  ans += 1\n  k -= 1\nfor i in range(b):\n  if k == 0:\n    print(ans)\n    exit()\n  k -= 1\nfor i in range(c):\n  if k == 0:\n    print(ans)\n    exit()\n  ans -= 1\n  k -= 1","A, B, C, K = map(int, input().split())\n\nif K <= A + B:\n  print(min(K, A))\nelse:\n  print(2*A+B-K)\n ","a,b,c,k = map(int,input().split())\n\nif k<=a:\n  print(k)\nelif a< k <= a+b:\n  print(a)\nelif a+b < k <= a+b+c:\n  print(a-(k-b-a))","A, B, C, K = map(int, input().split())\nprint(2*A+B-K)","import sys\nA, B, C, K = map(int, input().split())\n\nmycnt = 0\nmyans = 0\n\nif A >= K:\n    print(K)\n    sys.exit()\nelif A+B >=K:\n    print(A)\nelse:\n    print(A+(K-A-B)*-1)","a,b,c,k = map(int,input().split())\nif a >= k:\n    print(k)\nelif a + b >= k:\n    print(a)\nelse:\n    print(2*a+b-k)","ipt = \"3 1 1 3\"\na = list(map(int,input().split()))\n\none = a[0]\nzero = a[1]\nmone = a[2]\nnum = a[3]\n\nans = 0\nif one >= num:\n    print(num)\nelse:\n    ans += one\n    num -= one\n    if zero >= num:\n        print(ans)\n    else:\n        num -= zero\n        print(one - mone*num)","a,b,c,k = map(int,input().split())\nM = 0\nif a+b >= k:\n    M = a\nelse:\n    M = 2*a - k +b\nprint(M)","A, B, C, K = map(int, input().split())\n\nif K <= A:\n  print(K)\n  exit()\n \nif (K - A) <= B:\n  print(A)\n  exit()\n\nif (K- A -B) <= C:\n  print(A - (K - A -B))\n  exit()\n","A, B, C, K = map(int, input().split())\n \nif K <= A:\n    print(K)\nelif A < K <= A+B:\n    print(A)\nelse:\n    K -= (A+B)\n    print(A-K)"],"formatted_programs":["a, b, c, k = (int(x) for x in input().split())\n\nans = 0\n\nif a <= k:\n    ans += a\n    k -= a\nelse:\n    ans += k\n    k = 0\n\nk -= b\n\nif k > 0:\n    ans -= (b - k)\n\nprint(ans)","a, b, c, k = map(int, input().split(\" \"))\n\n\n\"\"\"\nprint(a)\nprint(b)\nprint(c)\nprint(k)\n\"\"\"\nif a >= k:\n    print(a)\n\nelif (a + b) >= k:\n    print(a + 0)\n\nelse:\n    print(a - (k - a - b))\n","a,b,c,k=map(int,input().split())\nif a>=k:\n  print(k)\n  exit()\nif a+b>=k:\n  print(a)\n  exit()\nprint(a-(k-a-b))","A, B, C, K = map(int, input().split())\n\nans = []\nnumA = min([A, K])\nnumB = min([B, K - numA])\nnumC = K - numA - numB \n\nprint(numA - numC)","a,b,c,k = map(int,input().split())\nif k <= a:\n    print(k)\n\nelif k <= a+b:\n    print(a)\n\nelse:\n    print(a-(k-a-b))\n","A,B,C,K = map(int,input().split())\nif K<=A:\n    print(K)\nelif A<K<=A+B:\n    print(A)\nelif A+B<K<=A+B+C:\n    print(A-(K-A-B))","a,b,c,k = map(int,input().split())\n\n\n\ni = k - a\nif i <= 0:\n    print(a)\n    exit()\nelse:\n    j= i - b\n    if j <= 0:\n        print(a)\n        exit()\n    else:\n        print(a - j)\n","a,b,c,k=map(int,input().split())\nvalue=[]\nfor i in range(a):\n  value.append(1)\nfor i in range(b):\n  value.append(0)\nfor i in range(c):\n  value.append(-1)\nsum=0\nfor i in range(k):\n  sum+=value[i]\nprint(sum)","a, b, c, k = [int(i) for i in input().split()]\nif a >= k:\n    print(k)\nelif a + b >= k:\n    print(a)\nelse:\n    print(a - (k - a - b))\n    ","a, b, c, k = map(int, input().split())\nans = 0\nif a >= k:\n    print(a)\n    exit()\nans += a\nk -= a\nif b >= k:\n    print(ans)\n    exit()\nk -= b\nans -= k\nprint(ans)\n","S = list(map(int,input().split()))\n\nif S[0] >= S[3]:\n  print(S[3])\nelif S[0]+S[1] >= S[3]:\n  print(S[0])\nelse:\n  print(S[0]-(S[3]-S[0]-S[1]))","a, b, c, k = map(int, input().split())\n\ns = 0\n\nif k <= a :\n    s = 1 * k\nelse :\n    if k <= (a+b):\n        s = 1 * a\n    else :\n        s = 1 * a + (-1) * (k-a-b)\n\nprint(s)\n","A, B, C, K = map(int, input().split())\nif A >= K:\n    ans = K\nelif A + B >= K:\n    ans = A\nelse:\n    ans = A - (K - A -B)\nprint(ans)\n","import numpy as np\nimport math\n\nA,B,C,K = map(int,input().split())\n\nans=0\nans+=min(A,K)\nK-=A\nif(K>0):\n\tK-=B\nif(K>0):\n\tans-=K\nprint(ans)","import sys,queue,math,copy,itertools,bisect,collections,heapq\n\ndef main():\n    sys.setrecursionlimit(10**7)\n    INF = 10**18\n    MOD = 10**9 + 7\n    LI = lambda : [int(x) for x in sys.stdin.readline().split()]\n    NI = lambda : int(sys.stdin.readline())\n\n    A,B,C,K = LI()\n\n    ans = 0\n    if A < K:\n        ans = A\n        if A+B < K:\n            ans -= K - (A+B)\n    else:\n        ans = K\n\n    print(ans)\n\nif __name__ == '__main__':\n    main()","a, b, c, k = map(int, input().split())\nif a>=k:\n    print(k)\nelse :\n    kk = k-a%k\n    A = a%k\n    if b>=kk:\n        print(a%k)\n    else :\n        kkk = kk-b%kk\n        B = b%kk\n        if c >= kkk:\n            print(a%k-1*(k-A-B))","a,b,c,k = map(int,input().split())\nif k <= a:\n    print(k)\nelif a < k <=a+b:\n    print(a)\nelse:\n    print(2*a+b-k)","a, b, c, k = map(int, input().split())\nans = 0\n\n\nif a > k:\n    print(k)\nelif a + b > k:\n    print(k)\nelse:\n    cnt = k - a - b\n    print(a - cnt)\n","A,B,C,k=map(int,input().split())\nif A>=k:\n    print(k)\nelif A<k and B>=(k-A):\n    print(A)\nelif A<k and B<(k-A):\n    print(A-(k-A-B))\n","a, b, c, k = map(int, input().split())\nl = {1: a, 0: b, -1: c}\nans = 0\nfor i, j in l.items():\n    if k >= j:\n        ans += j * i\n        k -= j\n    else:\n        ans += k * i\n        break\nprint(ans)\n","a,b,c,k = map(int, input().split())\n\nif (k < a):\n    print(k)\nelif (a <= k < (a+b)):\n    print(a)\nelse:\n    print(a - (k - (a + b)))","A, B, C, K = map(int, input().split())\n\n\nif K <= A:\n    print(K)\nelif K <= A + B:\n    print(A)\nelse:\n    print(A - (K - A - B))","a, b, c, k = map(int, input().split())\n\nleft = 0\nif k > a:\n   ans = a\n   left = k - a\nelse:\n   print(k)\n   exit()\n\nif left > 0:\n   if left > b:\n      left = left - b\n   else:\n      print(ans)\n      exit()\n\nif left > 0:\n   if left < c:\n      print(ans - left)\n   else:\n      print(ans - c)\n","a, b, c, k = map(int,input().split())\n\nif k <= a:\n    ans = k\nelif k <= a+b:\n    ans = a\nelse:\n    ans = a - (k - a - b)\nprint(ans)","a, b, c , k = [int(x) for x in input().split()]\n\nans = min(a, k)\nk -= a\nk -= b\nans -= k\n\nprint(ans)","a, b, c, k = map(int, input().split())\nans = 0\nif k <= a:\n  ans += k\nelif k <= (a + b):\n  ans += a\nelse:\n  ans += a - (k - (a + b))\nprint(ans)","def resolve():\n    a, b, c, k = map(int, input().split())\n    print(a - (k - (a + b)))\n\n\n\nresolve()","a,b,c,k = map(int,input().split())\nans = 0\nif a<k:\n  ans += a\n  k-=a\n  if b <k:\n    k-=b\n    ans -= k\nelse:\n  ans += k\nprint(ans)","A,B,C,K = map(int,input().split())\nresult = 0\nif K > 0 :\n    result = result + A\n    K = K - A\nfor i in range (K):\n    if B > 0 :\n        B = B-1\n    else:\n        result = result-1\nprint(result)","# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sun May 10 20:50:47 2020\n\"\"\"\n\nimport sys\n#import numpy as np\n\nsys.setrecursionlimit(10 ** 9)\n#def input():\n#    return sys.stdin.readline()[:-1]\nmod = 10**9+7\n\nA,B,C,K = map(int,input().split())\n\nif K <= A:\n    ans = K\nelif K <= A + B:\n    ans = A\nelse:\n    ans = A - (K-A-B)\nprint(ans)\n","a, b, c, k = map(int, input().split())\n\nans = 0\n\nif a >= k:\n    ans = k*1\nelse:\n    ans = a*1\n    remain = k - a\n    if b >= remain:\n        ans += 0\n    else:\n        remain -= b\n        ans += (-1)*remain\n\nprint(ans)\n","A,B,C,K=map(int,input().split())\n\nflag_A=False\nflag_B=False\nflag_C=False\n\nif K<=A:\n  flag_A=True\nelif A<K and K<=A+B:\n  flag_B=True\nelif A+B<K and K<=A+B+C:\n  flag_C=True\n  \nif flag_A==True:\n  print(K)\nelif flag_B==True:\n  print(A)\nelif flag_C==True:\n  print(A-(K-A-B))","a,b,c,k=map(int,input().split())\nif a>=k:\n    print(k)\nelif a+b>=k:\n    print(a)\nelse:\n    print(a-(k-a-b))","def main():\n    a,b,c,k=map(int,input().split())\n    if a>=k:\n        print(a)\n    elif a+b>=k:\n        print(a)\n    else:\n        print(a-c*(k-a-b))\nmain()","a, b, c, k = map(int, input().split())\n\nif a > k:\n    print(k)\nelif a + b > k:\n    print(a)\nelse:\n    print(a + -1 * (k - a - b))","A, B, C, K = map(int, input().split())\n\nif (A+B) == K:\n  print(A)\nelif (A+B) > K:\n  if a > K:\n    print(K)\n  else:\n    print(A)\nelif (A+B) < K:\n  print(A - (K - (A+B)))\n","import sys\ninput = lambda: sys.stdin.readline().rstrip()\nfrom math import floor,ceil,sqrt,factorial,log\nfrom heapq import heapify, heappop, heappush, heappushpop\nfrom collections import Counter,defaultdict,deque\nfrom itertools import accumulate,permutations,combinations,product,combinations_with_replacement\nfrom bisect import bisect_left,bisect_right\nfrom decimal import Decimal\ninf = float('inf')\nmod = 1000000007\n\na, b, c, k = map(int, input().split())\n\nans = 0\nif k <= a:\n    ans += k\nelse:\n    ans += a\n    if k - a <= b:\n        pass\n    else:\n        ans += -1 *(k - a - b)\n\nprint(ans)","A,B,C,K=map(int,input().split())\nif A+B>=K:\n    ans=A\nelse:\n    K=K-(A+B)\n    ans=A+(-1)*K\nprint(ans)\n","A,B,C,K = map(int,input().split())\n\nkoa = A\nkob = 0\n\nif K-A<B:\n  kob = K-A\nelse :\n  kob = B\n  \nsum = A+0*B\nfor i in reversed(range(K-koa+kob)):\n  if koa+kob+i != K:\n    continue\n  if i<K-koa-kob:\n    break\n  #print (koa)\n  #print (kob)\n  #print (i)\n  #print (\"------\")\n  sum = sum+i*(-1)\nprint (sum)","a, b, c, k = map(int, input().split())\n     \nif a+b >= k:\n  print(a)\nelse:\n  k -= a+b\n  print(a-1*k)","a,b,c,k = map(int,input().split())\n\nif a >= k:\n    print(a)\nelif a < k and (a+b) >= k:\n    print(a)\nelse:\n    com1 = a + b\n    soma = a\n    k -= com1\n    soma -= k\n    print(soma)\n","a,b,c,k = map(int,input().split())\nif((a+b)>=k):\n    if(a>=k):\n        print(k)\n    else:\n        print(a)\nelse:\n    s = k - a - b\n    print(a+s*-1)","a,b,c,k=map(int, input().split())\nif a>=k:\n    print(k)\nelif a+b>=k:\n    print(a)\nelse:\n    print(a-(k-a-b))","import sys\n\na,b,c,k = input().split()\nA = int(a)\nB = int(b)\nC = int(c)\nK = int(k)\n\nans = 0\n\nif (K - A >= 0):\n  ans += A\nelse:\n  ans += K\n\nK = K - A - B\n\nif (K > 0):\n  ans = ans - K\n\nprint (ans)\n\n    ","a, b, c, k = map(int, input().split())\nif k <= a:\n    print(k)\nelif a< k <= a+b:\n    print(a)\nelse:\n    print(2*a + b - k)\n","S = input()\nT = input()\n\nif(S==T[0:len(S)]):\n  print(Yes)\n else:\n    print(No)\n\t\n\n","A,B,C,K = list(map(int,input().split()))\n\nif K <= A:\n  print(K)\nelif K <= A + B:\n  print(A)\nelse:\n  print(A-(K-A-B))\n","a,b,c,k=map(int, input().split())\nmax=0\nif a>=k:\n  max+=1*k\n  print(max)\nelif a<k:\n  max+=a*1\n  if b<k-a:\n    max-=(k-a-b)\n    print(max)\n  else:\n    print(max)\n","A, B, C, K = map(int, input().split())\nif A + B >= K:\n  print(A)\nelif A >= K:\n  print(K)\nelse:\n  d = K - A - B\n  print(A-d)","a,b,c,k = map(int,input().split())\nif a+b>=k:\n  print(a)\nelse:\n  print(2*a-k+b)","a, b, c, k = map(int, input().split())\n\nif k <= a:\n    print(k)\nelif k <= a + b:\n    print(a)\nelse:\n    print(a - (k - a - b))","#!\/usr\/bin\/env python\na, b, c, k  = map(int, input().split())\nif k <= a:\n    print(k)\nelif k > a and k <= a+b :\n    print(a)\nelif k > a+b and k <= a+b+c:\n    print(a - (k - (a+b)))\n\n","A, B, C, K = map(int, input().split())\nans = min(A, K) - min(C, K - A - B)\nprint(ans)","A,B,C,K = map(int, input().split())\nif A + B >= K:\n    print(A)\nelse:\n    r = K - A - B\n    print(A-r)","ABCK = input()\nkey = ['A', 'B', 'C', 'K']\nABCK = [int(i) for i in list(ABCK.split())]\nABCK = {k: v for k, v in zip(key, ABCK)}\nsum = 0\nprint(ABCK)\n\nif ABCK['A'] > ABCK['K']:\n  sum = ABCK['K']\nelse:\n  if ABCK['A'] + ABCK['B'] >= ABCK['K']:\n    sum = ABCK['A']\n  else:\n    K = ABCK['K'] - (ABCK['A'] + ABCK['B'])\n    if ABCK['A'] - K < 0:\n      sum = 0\n    else:\n      sum = ABCK['A'] - K\nprint(sum)","a,b,c,k=map(int,input().split())\nif k<=a:\n    print(k)\nelif k<=(a+b):\n    print(a)\nelse:\n    print(a-(k-(a+b)))","a, b, c, k = map(int,input().split())\n\n\nif a >= k:\n    print(a)\nelif a + b >= k:\n    print(a)\nelse:\n    print(a-c)","a,b,c,k = map(int, input().split())\n\nif a >= k:\n    print(k)\nelif a+b >= k:\n    print(a)\nelse:\n    print(a - (k-a-b))\n\n\n","a,b,c,k = map(int,input().split())\n\nt= 0\n\nif k < a:\n    t += k\n    k = 0\nelse:\n    t += a\n    k = k -a\n\nif k < b:\n    k = 0\nelse:\n    k = k -b\n\nif k < c:\n    t += k*-1\n    k = 0\nelse:\n    t += c*-1\n\nprint(t)","a = float(input())\nb = float(input())\nc = float(input())\nk = float(input())\n\nif(k<=(a+b) and k>=1):\n    print(a)\nelse if(k<=a+b+c):\n    print(a-(k-(a+b)))","A,B,C,K = map(int,input().split())\n\nans = 0\n\nwhile K > 0 and A > 0:\n    ans += 1\n    A -= 1\n    K -= 1\n    \nwhile K > 0 and B > 0:\n    ans += 0\n    B -= 1\n    K -= 1\n\nwhile K > 0 and C > 0:\n    ans += -1\n    C -= 1\n    K -= 1\n    \nprint(ans)\n    \n    \n  \n  ","a, b, c, k = [int(x) for x in input().split()]\na_x = min(a, k)\nk -= a_x\nb_x = min(b, k)\nk -= b_x\nc_x = min(c, k)\nans = a_x - c_x\nprint(ans)","A,B,C,K = list(map(int, input().split()))\nif K <= A:\n    print(K)\nelse:\n    K = K - A\n    if K<= B:\n        print(A)\n    else:\n        K = K - B\n        print(A-K)\n    ","def main():\n    a, b, c, k = map(int, input().split())\n    if k <= a:\n        print(k)\n    elif k <= a+b:\n        print(a)\n    else:\n        x = k - (a+b)\n        print(a - x)\n\nif __name__ == \"__main__\":\n    main()","a, b, c, k = map(int, input().split())\nans = 0\nif a >= k:\n    print(k)\nelif a + b >= k:\n    print(a)\nelse:\n    print(1 * a - 1 * (k - a - b))\n","A, B ,C, K = map(int, input().split())\n\nif K <= A:\n  print(K)\nelif A < K <= A+B:\n  print(A)\nelse:\n  print(2*A + B - K)","a,b,c,k=map(int,input().split())\nans=0\nif k<a:\n    ans+=k\nelif a<=k and k<a+b:\n    ans+=a\nelif a+b<=k and k<a+b+c:\n    ans=ans+a-(k-a-b)\nprint(ans)\n","A,B,C,K=map(int,input().split())\nif A>=K:\n  print(K)\nelif A<K<=A+B:\n  print(A)\nelse:\n  print(A-K+A+B)","A,B,C,K = map(int, input().split())\n\nif K <= A + B:\n    print(A)\nelse:\n    L = K - A - B\n    print(A - L)","[A,B,C,K]=map(int,input().split())\nif A>=K:\n    print(K)\nelif A+B>=K:\n    print(A)\nelse:\n    print(2*A+B-K)","a,b,c,k = map(int,input().split())\nans = a\nif a+b<k:\n    ans -= k-(a+b)\nelif a+b>k:\n    ans -= a-k\nprint(ans)","A,B,C,K = map(int, input().split())\nif K<=A:\n  print(K)\nelif K<=A+B:\n  print(A)\nelse:\n  m = K-A-B\n  print(A-m)","a,b,c,k = map(int,input().split())\nif k <= a:\n  print(k)\nelif a < k <= a + b:\n  print(a)\nelse:\n  k -= a + b\n  print(a-k)","a, b, c, k = map(int, input().split())\nif a >= k:\n    print(k)\nelif a + b >= k:\n    print(a)\nelse:\n    print(a - (k - a - b))\n","A , B, C, K = map(int, input().split())\n\nif K >= A:\n    result = A\n    K -= A\nelse:\n    result = K\n\nif K >= B:\n    K -= B\n\nif K > 0:\n    result -=K\nprint(result)\n","a,b,c,k = map(int,input().split())\nif a+b>=k:\n    print(a)\nelse:\n    x = (a+b)-k\n    print(a-abs(x))","A, B, C, K = list(map(int,input().split()))\nif K <= A:\n  print(K)\nelif K <= (A + B):\n  print(A)\nelif K <= (A + B + C):\n  print(K - B)\nelse:\n  print(A + B - C)","A, B, C, K = map(int, input().split())\n\nif K < A:\n    print(K)\nelif K < A + B:\n    print(A)\nelse:\n    print(A - (K-A-B))\n","from sys import stdin\nfrom sys import setrecursionlimit\nsetrecursionlimit(10 ** 7)\n\na,b,c,d = map(int,stdin.readline().rstrip().split())\n\nif d > a+b:\n    print(a-(d-a-b))\nelif d < a:\n    print(d)\nelse:\n    print(a)","A,B,C,K = map(int, input().split())\nif k<= a:\n  print(k)\nelif k > a and k <= a+b:\n  print(a)\nelif k > a+b:\n  print(a-(k-a-b)\n  ","A, B, C, K = map(int, input().split())\n\nif A >= K:\n    ans = K\nelif (A + B) >= K:\n    ans = A\nelse:\n    ans = A - (K - A - B)\n\nprint(ans)","a,b,c,k = map(int,input().split())\n\nif k<=a+b:\n    print(a)\nelse:\n    print(2*a-k+b)","A, B, C, K = map(int, input().split())\nprint(min(A, K) - max(K - A - B, 0))","A, B, C, K = map(int,input().split())\n\nif K <= A:\n    print(K)\nelif A < K <= A + B :\n    print(A)\nelif A + B < K <= A + B + C:\n    print(A - (K - A - B))\n","a, b, c, k = map(int, input().split())\n\nif k<=a:\n\tprint(k)\nelif k<=a+b:\n\tprint(a)\nelse:\n\tprint(a+a+b-k)","A,B,C,K=list(map(int,input().split()))\n\ncount=K\npoint=0\n\nif A>count:\n    point+=count\n    count=0\nelse:\n    point+=A\n    count-=A\n\nif B>count:\n    point+=count*0\n    count=0\nelse:\n    point+=B*0\n    count-=B\n\nif C>count:\n    point+=count*(-1)\n    count=0\nelse:\n    point+=C*(-1)\n    count-=C\n\nprint(point)","a, b, c, k = map(int, input().split())\nif k <= a:\n  print(k)\nif a < k <= a+b:\n  print(a)\nif a+b < k <= a+b+c:\n  print(a+(-1)*(k-a-b))\n","A, B, C, K = list(map(int,input().split()))\n\nif K <= A:\n    print(K)\nelse:\n    if K <= A+B:\n        print(A)\n    else:\n        print(A-(K-A-B))","num = input().split()\nA = int(num[0]) #1\nB = int(num[1])  #0\nC = int(num[2]) #-1\nK = int(num[3]) #\u9078\u3076\u500b\u6570\n\ncount = 0\nkai = 0\nif K < A:\n    print(A)\nif K >= A:\n    kai = A\n    count = A\n\n    \n    if count < K:\n        if K >= A+B:\n            kai = A\n            count = A+B\n            \n            if count < K:\n               kai = A + (K - count)*(-1)\n               \nprint(kai)","A, B, C, K = map(int, input().split())\ntotal = 0\nif A >= K:\n    total = K\nelse:\n    if A+B >= K:\n        total = A\n    else:\n        total = A - (K-A-B)\nprint(total)","a,b,c,k = map(int,input().split())\nans = 0\nfor i in range(a):\n  if k == 0:\n    print(ans)\n    exit()\n  ans += 1\n  k -= 1\nfor i in range(b):\n  if k == 0:\n    print(ans)\n    exit()\n  k -= 1\nfor i in range(c):\n  if k == 0:\n    print(ans)\n    exit()\n  ans -= 1\n  k -= 1","A, B, C, K = map(int, input().split())\n\nif K <= A + B:\n  print(min(K, A))\nelse:\n  print(2*A+B-K)\n ","a,b,c,k = map(int,input().split())\n\nif k<=a:\n  print(k)\nelif a< k <= a+b:\n  print(a)\nelif a+b < k <= a+b+c:\n  print(a-(k-b-a))","A, B, C, K = map(int, input().split())\nprint(2*A+B-K)","import sys\nA, B, C, K = map(int, input().split())\n\nmycnt = 0\nmyans = 0\n\nif A >= K:\n    print(K)\n    sys.exit()\nelif A+B >=K:\n    print(A)\nelse:\n    print(A+(K-A-B)*-1)","a,b,c,k = map(int,input().split())\nif a >= k:\n    print(k)\nelif a + b >= k:\n    print(a)\nelse:\n    print(2*a+b-k)","ipt = \"3 1 1 3\"\na = list(map(int,input().split()))\n\none = a[0]\nzero = a[1]\nmone = a[2]\nnum = a[3]\n\nans = 0\nif one >= num:\n    print(num)\nelse:\n    ans += one\n    num -= one\n    if zero >= num:\n        print(ans)\n    else:\n        num -= zero\n        print(one - mone*num)","a,b,c,k = map(int,input().split())\nM = 0\nif a+b >= k:\n    M = a\nelse:\n    M = 2*a - k +b\nprint(M)","A, B, C, K = map(int, input().split())\n\nif K <= A:\n  print(K)\n  exit()\n \nif (K - A) <= B:\n  print(A)\n  exit()\n\nif (K- A -B) <= C:\n  print(A - (K - A -B))\n  exit()\n","A, B, C, K = map(int, input().split())\n \nif K <= A:\n    print(K)\nelif A < K <= A+B:\n    print(A)\nelse:\n    K -= (A+B)\n    print(A-K)"]}
{"description_html":"<span class=\"lang-en\">\n<p>Score : <var>100<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>Compute <var>A \\times B<\/var>.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li><var>1 \\leq A \\leq 100<\/var><\/li>\n<li><var>1 \\leq B \\leq 100<\/var><\/li>\n<li>All values in input are integers.<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>A<\/var> <var>B<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>Print the value <var>A \\times B<\/var> as an integer.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>2 5\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>10\n<\/pre>\n<p>We have <var>2 \\times 5 = 10<\/var>.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>100 100\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>10000\n<\/pre><\/section>\n<\/div>\n<\/span>","description_string":"\nScore : 100 points\n\n\nProblem StatementCompute A \\times B.\n\n\n\n\nConstraints\n1 \\leq A \\leq 100\n1 \\leq B \\leq 100\nAll values in input are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nA B\n\n\n\n\n\nOutputPrint the value A \\times B as an integer.\n\n\n\n\n\n\nSample Input 12 5\n\n\n\n\n\nSample Output 110\n\nWe have 2 \\times 5 = 10.\n\n\n\n\n\nSample Input 2100 100\n\n\n\n\n\nSample Output 210000\n\n\n","orig_lang_html":"<span class=\"lang-en\">\n<p>Score : <var>100<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>Compute <var>A \\times B<\/var>.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li><var>1 \\leq A \\leq 100<\/var><\/li>\n<li><var>1 \\leq B \\leq 100<\/var><\/li>\n<li>All values in input are integers.<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>A<\/var> <var>B<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>Print the value <var>A \\times B<\/var> as an integer.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>2 5\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>10\n<\/pre>\n<p>We have <var>2 \\times 5 = 10<\/var>.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>100 100\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>10000\n<\/pre><\/section>\n<\/div>\n<\/span>","orig_lang_string":"\nScore : 100 points\n\n\nProblem StatementCompute A \\times B.\n\n\n\n\nConstraints\n1 \\leq A \\leq 100\n1 \\leq B \\leq 100\nAll values in input are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nA B\n\n\n\n\n\nOutputPrint the value A \\times B as an integer.\n\n\n\n\n\n\nSample Input 12 5\n\n\n\n\n\nSample Output 110\n\nWe have 2 \\times 5 = 10.\n\n\n\n\n\nSample Input 2100 100\n\n\n\n\n\nSample Output 210000\n\n\n","solve_rate":0.8057808456,"codenet_problem_id":"p02657","input_testcases":{"100":"2 5","24":"011 100","94":"28 2","20":"001 010","3":"001 100","95":"28 3","29":"001 011","102":"100 100","97":"28 1","13":"1 3","92":"4 2","93":"6 2","101":"2 5","98":"26 1","96":"28 6","9":"1 1","17":"011 011","47":"010 100","12":"1 2","99":"39 1","0":"4 5"},"output_testcases":{"100":"10\n","24":"1100\n","94":"56\n","20":"10\n","3":"100\n","95":"84\n","29":"11\n","102":"10000\n","97":"28\n","13":"3\n","92":"8\n","93":"12\n","101":"10\n","98":"26\n","96":"168\n","9":"1\n","17":"121\n","47":"1000\n","12":"2\n","99":"39\n","0":"20\n"},"n_missing":82,"programs":["a,b=map(int,input().split())\n\nprint(a*b)\n\n","w=input().split()\na,b=float(w[0]),float(w[1])\nprint(int(a*b))","A,B=[int(i) for i in input().split(\" \")]\nprint(A*B)","l=list(map(int, input().split(' ')))\nprint(l[0]*l[1])\n","a,b=map(int,input().split())\nprint(a*b)","a, b = map(int, input().split())\nprint(a*b)","a, b = map(int, input().split())\nprint(a*b)","a, b=map(int, input().split())\n\nprint(a*b)","a,b = map(int, input().split())\nprint(a*b)","import sys\nimport math\nimport heapq\nsys.setrecursionlimit(10**7)\nINTMAX = 9223372036854775807\nINTMIN = -9223372036854775808\nDVSR = 1000000007\ndef POW(x, y): return pow(x, y, DVSR)\ndef INV(x, m=DVSR): return pow(x, m - 2, m)\ndef DIV(x, y, m=DVSR): return (x * INV(y, m)) % m\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef II(): return int(sys.stdin.readline())\ndef FLIST(n):\n    res = [1]\n    for i in range(1, n+1): res.append(res[i-1]*i%DVSR)\n    return res\nA,B=LI()\nprint(A*B)\n","a, b = map(int, input().split())\nprint(a * b)","a,b = map(int,input().split())\n\nprint(a*b)","# 169a\n# \u5024 A \u00d7 B\u3092\u6574\u6570\u3068\u3057\u3066\u51fa\u529b\u305b\u3088\u3002\n\n# 1.\u5165\u529b\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u53d7\u3051\u53d6\u308b\na, b = map(int, input().split())\n# print(a,b)\n\n# 2.\u53d7\u3051\u53d6\u3063\u305f\u5165\u529b\u5024\u3092\u4f7f\u3063\u3066\u3001\u9069\u5207\u306b\u51e6\u7406\uff08\u8a08\u7b97\uff09\u3059\u308b\nanswer = a * b\n\n# 3.\u8a08\u7b97\u3057\u305f\u7d50\u679c\u3092\u51fa\u529b\u3059\u308b\nprint(answer)","import sys\nimport heapq\nimport re\nfrom itertools import permutations\nfrom bisect import bisect_left, bisect_right\nfrom collections import Counter, deque\nfrom math import factorial, sqrt, ceil, gcd\nfrom functools import lru_cache, reduce\nINF = 1 << 60\nMOD = 1000000007\nsys.setrecursionlimit(10 ** 7)\n\n# UnionFind\nclass UnionFind():\n    def __init__(self, n):\n        self.n = n\n        self.parents = [-1] * n\n\n    def find(self, x):\n        if self.parents[x] < 0:\n            return x\n        else:\n            self.parents[x] = self.find(self.parents[x])\n            return self.parents[x]\n\n    def union(self, x, y):\n        x = self.find(x)\n        y = self.find(y)\n\n        if x == y:\n            return\n\n        if self.parents[x] > self.parents[y]:\n            x, y = y, x\n\n        self.parents[x] += self.parents[y]\n        self.parents[y] = x\n\n    def size(self, x):\n        return -self.parents[self.find(x)]\n\n    def same(self, x, y):\n        return self.find(x) == self.find(y)\n\n    def members(self, x):\n        root = self.find(x)\n        return [i for i in range(self.n) if self.find(i) == root]\n\n    def roots(self):\n        return [i for i, x in enumerate(self.parents) if x < 0]\n\n    def group_count(self):\n        return len(self.roots())\n\n    def all_group_members(self):\n        return {r: self.members(r) for r in self.roots()}\n\n    def __str__(self):\n        return '\\n'.join('{}: {}'.format(r, self.members(r)) for r in self.roots())\n\n# \u30c0\u30a4\u30af\u30b9\u30c8\u30e9\ndef dijkstra_heap(s, edge, n):\n    #\u59cb\u70b9s\u304b\u3089\u5404\u9802\u70b9\u3078\u306e\u6700\u77ed\u8ddd\u96e2\n    d = [10**20] * n\n    used = [True] * n #True:\u672a\u78ba\u5b9a\n    d[s] = 0\n    used[s] = False\n    edgelist = []\n    for a,b in edge[s]:\n        heapq.heappush(edgelist,a*(10**6)+b)\n    while len(edgelist):\n        minedge = heapq.heappop(edgelist)\n        #\u307e\u3060\u4f7f\u308f\u308c\u3066\u306a\u3044\u9802\u70b9\u306e\u4e2d\u304b\u3089\u6700\u5c0f\u306e\u8ddd\u96e2\u306e\u3082\u306e\u3092\u63a2\u3059\n        if not used[minedge%(10**6)]:\n            continue\n        v = minedge%(10**6)\n        d[v] = minedge\/\/(10**6)\n        used[v] = False\n        for e in edge[v]:\n            if used[e[1]]:\n                heapq.heappush(edgelist,(e[0]+d[v])*(10**6)+e[1])\n    return d\n\n# \u7d20\u56e0\u6570\u5206\u89e3\ndef factorization(n):\n    arr = []\n    temp = n\n    for i in range(2, int(-(-n**0.5\/\/1))+1):\n        if temp%i==0:\n            cnt=0\n            while temp%i==0:\n                cnt+=1\n                temp \/\/= i\n            arr.append([i, cnt])\n\n    if temp!=1:\n        arr.append([temp, 1])\n\n    if arr==[]:\n        arr.append([n, 1])\n\n    return arr\n\n# 2\u6570\u306e\u6700\u5c0f\u516c\u500d\u6570\ndef lcm(x, y):\n    return (x * y) \/\/ gcd(x, y)\n\n# \u30ea\u30b9\u30c8\u306e\u8981\u7d20\u306e\u6700\u5c0f\u516c\u500d\u6570\ndef lcm_list(numbers):\n    return reduce(lcm, numbers, 1)\n\n# \u30ea\u30b9\u30c8\u306e\u8981\u7d20\u306e\u6700\u5927\u516c\u7d04\u6570\ndef gcd_list(numbers):\n    return reduce(gcd, numbers)\n\n# \u7d20\u6570\u5224\u5b9a\ndef is_prime(n):\n    if n <= 1:\n        return False\n    p = 2\n    while True:\n        if p ** 2 > n:\n            break\n        if n % p == 0:\n            return False\n        p += 1\n    return True\n\n\n# limit\u4ee5\u4e0b\u306e\u7d20\u6570\u3092\u5217\u6319\ndef eratosthenes(limit):\n    A = [i for i in range(2, limit+1)]\n    P = []\n\n    while True:\n        prime = min(A)\n        \n        if prime > sqrt(limit):\n            break\n            \n        P.append(prime)\n            \n        i = 0\n        while i < len(A):\n            if A[i] % prime == 0:\n                A.pop(i)\n                continue\n            i += 1\n            \n    for a in A:\n        P.append(a)\n            \n    return P\n\n# \u540c\u3058\u3082\u306e\u3092\u542b\u3080\u9806\u5217\ndef permutation_with_duplicates(L):\n\n    if L == []:\n        return [[]]\n\n    else:\n        ret = []\n\n        # set\uff08\u96c6\u5408\uff09\u578b\u3067\u91cd\u8907\u3092\u524a\u9664\u3001\u30bd\u30fc\u30c8\n        S = sorted(set(L))\n\n        for i in S:\n\n            data = L[:]\n            data.remove(i)\n\n            for j in permutation_with_duplicates(data):\n                ret.append([i] + j)\n\n        return ret\n\n\n# \u3053\u3053\u304b\u3089\u66f8\u304d\u59cb\u3081\u308b\na, b = map(int, input().split())\nprint(a * b)","A,B = map(int,input().split())\nt = A*B\nprint(t)","a,b=map(int,input().split())\nprint(a*b)","#!\/usr\/bin\/env python3\nimport sys\n\n\ndef solve(A: int, B: int):\n    print(A*B)\n    return\n\n\n# Generated by 1.1.7.1 https:\/\/github.com\/kyuridenamida\/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    A = int(next(tokens))  # type: int\n    B = int(next(tokens))  # type: int\n    solve(A, B)\n\nif __name__ == '__main__':\n    main()\n","a,b=map(int,input().split())\nprint(a*b)","a, b = map(int, input().split())\nprint(a*b)","A, B = map(int, input().split())\n\nprint(A * B)\n","a,b=map(int,input().split())\nprint(a*b)","A,B = map(int, input().split())\nans = A*B\nprint(ans)","a,b = map(int,input().split())\nprint(a*b)","a, b = input().split()\nA = int(a)\nB = int(b)\nprint(A * B)","a, b = map(int, input().split())\nprint(a * b)","a,b=(int(x) for x in input().split())\nprint(a*b)","a = int(input())\nb = int(input())\nprint(a*b)","l = input().split(\" \")\na = int(l[0])\nb = int(l[1])\nprint(str(a*b))","a,b =map(int,input().split())\n#print(a,b)\n\nanswer = a*b\nprint(answer)","\na, b = (int(e) for e in input().split())\nprint(a*b)","a,b=map(int,input().split())\nprint(a*b)","a,b=map(int,input().split())\nprint(a*b)\n","A, B = map(int, input().split())\nprint(A*B)\n","A,B=map(int,input().split())\nC=A*B\nprint(C)","a, b = map(int, input().split())\nprint(a * b)","from sys import stdin,stdout\nfrom collections import deque,defaultdict\nfrom math import ceil,floor,inf,sqrt,factorial,gcd,log2\nfrom copy import deepcopy\nii1=lambda:int(stdin.readline().strip())\nis1=lambda:stdin.readline().strip()\niia=lambda:list(map(int,stdin.readline().strip().split()))\nisa=lambda:stdin.readline().strip().split()\nmod=1000000007\nn = ii1()\nm = int(n**0.5)+1\ncount = 0\nflag=0\nfor i in range(2,m):\n    if n%i == 0:\n        flag=1\n        count+=1\n        n=n\/\/i\nif flag == 1:\n    print(1)\nelse:\n    print(count)","x,y = map(int,input().split())\nprint(x*y)","N = int(input())\nA = list(map(int,(input().split())))\n \nsum=1\n \nif 0 in A:\n    print(0)\nelse:\n    for i in range(N):\n        sum *= A[i]  \n        if sum >= int(1e18):\n            break\n    print(sum if sum<= int(1e18) else -1)\nN = int(input())\nA = list(map(int,(input().split())))\n\nsum=1\n\nif 0 in A:\n    print(0)\nelse:\n    for i in range(N):\n        sum *= A[i]  \n        if sum >= int(1e18):\n            break\n    print(sum if sum<= int(1e18) else -1)\n","a, b = map(int, input().split())\nprint(a*b)\n","a, b = map(int, input().split())\nprint(a*b)\n","a, b = map(int, input().split())\n\nanswer = a * b\n\nprint(answer)\n","a, b = input().split()\nprint(int(a) * int(b))","a,b=map(int,input().split())\nprint(a*b)","n,m=map(int,input().split())\nprint(n*m)","import sys\n\nA, B = map(int, sys.stdin.readline().strip().split())\nprint(A*B)","a,b=map(int,input().split())\nprint(a*b)","input_value = list(map(int, input().split()))\nprint(input_value[0] * input_value[1])","A, B = list(map(int, input().split()))\nprint(A * B)\n","a, b =map(int, input().split())\nprint(a*b)","A, B = map(int, input().split())\nprint(A * B)","A,B = map(int,input().split())\nprint(A*B)","a, b = map(int, input().split())\n\nprint(a*b)","A, B = map(int, input().split())\nprint(A*B)\n","import sys\na, b = map(int, sys.stdin.readline().split())\nprint(a * b)","A, B = map(int, input().split())\nprint(A*B)","N=int(input())\na1=list(map(int,input(). split ()))\nx=1\nif 0 in A:\n    print(0)\n    return\nfor a in A:\n    x=x*a\n    if x>1e18:\n        print(-1)\n        return\nprint(x)\n","A,B = map(int,input().split())\nprint(A*B)","def main():\n    A, B = map(int, input().split())\n    print(A*B)\n\n\nif __name__ == \"__main__\":\n    main()\n","a,b=map(int,input().split())\nprint(int(a*b))","a,b=map(int,input().split())\nprint(a*b)","A,B = map(int,input().split())\nprint(A*B)","A,B = map(int,input().split())\nprint(A*B)\n","import sys\n\n#input = sys.stdin.readline\n\ndef main():\n\n    A,B = map(int,input().split())\n\n    print(A*B)\n\nif __name__ == \"__main__\":\n    main()","a,b = map(int,input().split())\nprint(a*b)\n","a, b = map(int, input().split())\nc = a * b\nprint(c)\n","A, B = map(int, input().split())\n\nprint(A*B)","nums = [int(e) for e in input().split()]\nret = 1\nfor i in nums:\n    ret = ret * i\nprint(ret)","a,b=map(int,input().split())\nprint(a*b)","def main():\n    a, b = map(int, input().split())\n    print(a*b)\n\n\nif __name__ == '__main__':\n    main()\n","a, b = map(int, input().split())\nprint(a*b)","a,b  = map(int, input().split())\n\nprint(a * b)","a, b = map(int, input().split())\nprint(a * b)\n","a, b = map(int, input().split())\nprint(a * b)\n","A,B=map(int,input().split())\nprint(A*B)","A, B = map(int, input().split())\nprint(A * B)\n","a = list(map(int,input().split()))\n\ny = int(a[0]) * int(a[1])\nprint(y)","a,b = map(int,input().split())\n\nprint(a*b)","A, B = [int(i) for i in input().split(' ')]\nprint(A * B)\n","input = list(map(int, input().split())) \nprint(input[0]*input[1])","A,B = map(int,input().split())\nprint(A * B)","A,B = map(int,input().split())\nprint(A*B)","a, b = map(int,input().split())\nprint(a*b)","a,b = list(map(int,input().split()))\nprint(a*b)","a, b = map(int, input().split())\nprint(int(a*b))","lines = input()\nline = [i for i in lines.split(' ')]\nprint(int(line[0]) * int(line[1]))","#!\/usr\/bin\/env python3\nimport sys\n\n\ndef solve(A: int, B: int):\n    print(A * B)\n    return\n\n\n# Generated by 1.1.7.1 https:\/\/github.com\/kyuridenamida\/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    A = int(next(tokens))  # type: int\n    B = int(next(tokens))  # type: int\n    solve(A, B)\n\nif __name__ == '__main__':\n    main()","int A=input()\nint B=input()\n\nprint(A*B)","A, B = map(int, input().split())\nprint(A*B)\n","import sys, re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians\nfrom itertools import accumulate, permutations, combinations, product\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\ndef ZIP(n): return zip(*(MAP() for _ in range(n)))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\nA, B = MAP()\nprint(A * B)","A = input()\nB = input()\nprint A * B","A,B = map(int,input().split())\nprint(A*B)","#!\/usr\/bin\/env python3\nimport sys\n\n\ndef solve(A: int, B: int):\n    return A * B\n\n\n# Generated by 1.1.7.1 https:\/\/github.com\/kyuridenamida\/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    A = int(next(tokens))  # type: int\n    B = int(next(tokens))  # type: int\n    print(solve(A, B))\n\nif __name__ == '__main__':\n    main()\n","a, b = list(map(int, input().split()))\nprint(a*b)","a, b = map(int, input().split())\nprint(a*b)","a, b = map(int, input().split())\nprint(a*b)\n","a,b = map(int, input().split())\nprint(a*b)","a, b = map(int, input().split())\nprint(a * b)","p0, p1 = list(map(lambda x: int(x), input().split(' ')))\nprint(p0 * p1)","A,B = map(int,input().split())\nprint(A*B)","a, b = map(int, input().split())\n\nprint(a * b)"],"raw_generations":["a,b=map(int,input().split())\n\nprint(a*b)\n\n","w=input().split()\na,b=float(w[0]),float(w[1])\nprint(int(a*b))","A,B=[int(i) for i in input().split(\" \")]\nprint(A*B)","l=list(map(int, input().split(' ')))\nprint(l[0]*l[1])\n","a,b=map(int,input().split())\nprint(a*b)","a, b = map(int, input().split())\nprint(a*b)","a, b = map(int, input().split())\nprint(a*b)","a, b=map(int, input().split())\n\nprint(a*b)","a,b = map(int, input().split())\nprint(a*b)","import sys\nimport math\nimport heapq\nsys.setrecursionlimit(10**7)\nINTMAX = 9223372036854775807\nINTMIN = -9223372036854775808\nDVSR = 1000000007\ndef POW(x, y): return pow(x, y, DVSR)\ndef INV(x, m=DVSR): return pow(x, m - 2, m)\ndef DIV(x, y, m=DVSR): return (x * INV(y, m)) % m\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef II(): return int(sys.stdin.readline())\ndef FLIST(n):\n    res = [1]\n    for i in range(1, n+1): res.append(res[i-1]*i%DVSR)\n    return res\nA,B=LI()\nprint(A*B)\n","a, b = map(int, input().split())\nprint(a * b)","a,b = map(int,input().split())\n\nprint(a*b)","# 169a\n# \u5024 A \u00d7 B\u3092\u6574\u6570\u3068\u3057\u3066\u51fa\u529b\u305b\u3088\u3002\n\n# 1.\u5165\u529b\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u53d7\u3051\u53d6\u308b\na, b = map(int, input().split())\n# print(a,b)\n\n# 2.\u53d7\u3051\u53d6\u3063\u305f\u5165\u529b\u5024\u3092\u4f7f\u3063\u3066\u3001\u9069\u5207\u306b\u51e6\u7406\uff08\u8a08\u7b97\uff09\u3059\u308b\nanswer = a * b\n\n# 3.\u8a08\u7b97\u3057\u305f\u7d50\u679c\u3092\u51fa\u529b\u3059\u308b\nprint(answer)","import sys\nimport heapq\nimport re\nfrom itertools import permutations\nfrom bisect import bisect_left, bisect_right\nfrom collections import Counter, deque\nfrom math import factorial, sqrt, ceil, gcd\nfrom functools import lru_cache, reduce\nINF = 1 << 60\nMOD = 1000000007\nsys.setrecursionlimit(10 ** 7)\n\n# UnionFind\nclass UnionFind():\n    def __init__(self, n):\n        self.n = n\n        self.parents = [-1] * n\n\n    def find(self, x):\n        if self.parents[x] < 0:\n            return x\n        else:\n            self.parents[x] = self.find(self.parents[x])\n            return self.parents[x]\n\n    def union(self, x, y):\n        x = self.find(x)\n        y = self.find(y)\n\n        if x == y:\n            return\n\n        if self.parents[x] > self.parents[y]:\n            x, y = y, x\n\n        self.parents[x] += self.parents[y]\n        self.parents[y] = x\n\n    def size(self, x):\n        return -self.parents[self.find(x)]\n\n    def same(self, x, y):\n        return self.find(x) == self.find(y)\n\n    def members(self, x):\n        root = self.find(x)\n        return [i for i in range(self.n) if self.find(i) == root]\n\n    def roots(self):\n        return [i for i, x in enumerate(self.parents) if x < 0]\n\n    def group_count(self):\n        return len(self.roots())\n\n    def all_group_members(self):\n        return {r: self.members(r) for r in self.roots()}\n\n    def __str__(self):\n        return '\\n'.join('{}: {}'.format(r, self.members(r)) for r in self.roots())\n\n# \u30c0\u30a4\u30af\u30b9\u30c8\u30e9\ndef dijkstra_heap(s, edge, n):\n    #\u59cb\u70b9s\u304b\u3089\u5404\u9802\u70b9\u3078\u306e\u6700\u77ed\u8ddd\u96e2\n    d = [10**20] * n\n    used = [True] * n #True:\u672a\u78ba\u5b9a\n    d[s] = 0\n    used[s] = False\n    edgelist = []\n    for a,b in edge[s]:\n        heapq.heappush(edgelist,a*(10**6)+b)\n    while len(edgelist):\n        minedge = heapq.heappop(edgelist)\n        #\u307e\u3060\u4f7f\u308f\u308c\u3066\u306a\u3044\u9802\u70b9\u306e\u4e2d\u304b\u3089\u6700\u5c0f\u306e\u8ddd\u96e2\u306e\u3082\u306e\u3092\u63a2\u3059\n        if not used[minedge%(10**6)]:\n            continue\n        v = minedge%(10**6)\n        d[v] = minedge\/\/(10**6)\n        used[v] = False\n        for e in edge[v]:\n            if used[e[1]]:\n                heapq.heappush(edgelist,(e[0]+d[v])*(10**6)+e[1])\n    return d\n\n# \u7d20\u56e0\u6570\u5206\u89e3\ndef factorization(n):\n    arr = []\n    temp = n\n    for i in range(2, int(-(-n**0.5\/\/1))+1):\n        if temp%i==0:\n            cnt=0\n            while temp%i==0:\n                cnt+=1\n                temp \/\/= i\n            arr.append([i, cnt])\n\n    if temp!=1:\n        arr.append([temp, 1])\n\n    if arr==[]:\n        arr.append([n, 1])\n\n    return arr\n\n# 2\u6570\u306e\u6700\u5c0f\u516c\u500d\u6570\ndef lcm(x, y):\n    return (x * y) \/\/ gcd(x, y)\n\n# \u30ea\u30b9\u30c8\u306e\u8981\u7d20\u306e\u6700\u5c0f\u516c\u500d\u6570\ndef lcm_list(numbers):\n    return reduce(lcm, numbers, 1)\n\n# \u30ea\u30b9\u30c8\u306e\u8981\u7d20\u306e\u6700\u5927\u516c\u7d04\u6570\ndef gcd_list(numbers):\n    return reduce(gcd, numbers)\n\n# \u7d20\u6570\u5224\u5b9a\ndef is_prime(n):\n    if n <= 1:\n        return False\n    p = 2\n    while True:\n        if p ** 2 > n:\n            break\n        if n % p == 0:\n            return False\n        p += 1\n    return True\n\n\n# limit\u4ee5\u4e0b\u306e\u7d20\u6570\u3092\u5217\u6319\ndef eratosthenes(limit):\n    A = [i for i in range(2, limit+1)]\n    P = []\n\n    while True:\n        prime = min(A)\n        \n        if prime > sqrt(limit):\n            break\n            \n        P.append(prime)\n            \n        i = 0\n        while i < len(A):\n            if A[i] % prime == 0:\n                A.pop(i)\n                continue\n            i += 1\n            \n    for a in A:\n        P.append(a)\n            \n    return P\n\n# \u540c\u3058\u3082\u306e\u3092\u542b\u3080\u9806\u5217\ndef permutation_with_duplicates(L):\n\n    if L == []:\n        return [[]]\n\n    else:\n        ret = []\n\n        # set\uff08\u96c6\u5408\uff09\u578b\u3067\u91cd\u8907\u3092\u524a\u9664\u3001\u30bd\u30fc\u30c8\n        S = sorted(set(L))\n\n        for i in S:\n\n            data = L[:]\n            data.remove(i)\n\n            for j in permutation_with_duplicates(data):\n                ret.append([i] + j)\n\n        return ret\n\n\n# \u3053\u3053\u304b\u3089\u66f8\u304d\u59cb\u3081\u308b\na, b = map(int, input().split())\nprint(a * b)","A,B = map(int,input().split())\nt = A*B\nprint(t)","a,b=map(int,input().split())\nprint(a*b)","#!\/usr\/bin\/env python3\nimport sys\n\n\ndef solve(A: int, B: int):\n    print(A*B)\n    return\n\n\n# Generated by 1.1.7.1 https:\/\/github.com\/kyuridenamida\/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    A = int(next(tokens))  # type: int\n    B = int(next(tokens))  # type: int\n    solve(A, B)\n\nif __name__ == '__main__':\n    main()\n","a,b=map(int,input().split())\nprint(a*b)","a, b = map(int, input().split())\nprint(a*b)","A, B = map(int, input().split())\n\nprint(A * B)\n","a,b=map(int,input().split())\nprint(a*b)","A,B = map(int, input().split())\nans = A*B\nprint(ans)","a,b = map(int,input().split())\nprint(a*b)","a, b = input().split()\nA = int(a)\nB = int(b)\nprint(A * B)","a, b = map(int, input().split())\nprint(a * b)","a,b=(int(x) for x in input().split())\nprint(a*b)","a = int(input())\nb = int(input())\nprint(a*b)","l = input().split(\" \")\na = int(l[0])\nb = int(l[1])\nprint(str(a*b))","a,b =map(int,input().split())\n#print(a,b)\n\nanswer = a*b\nprint(answer)","\na, b = (int(e) for e in input().split())\nprint(a*b)","a,b=map(int,input().split())\nprint(a*b)","a,b=map(int,input().split())\nprint(a*b)\n","A, B = map(int, input().split())\nprint(A*B)\n","A,B=map(int,input().split())\nC=A*B\nprint(C)","a, b = map(int, input().split())\nprint(a * b)","from sys import stdin,stdout\nfrom collections import deque,defaultdict\nfrom math import ceil,floor,inf,sqrt,factorial,gcd,log2\nfrom copy import deepcopy\nii1=lambda:int(stdin.readline().strip())\nis1=lambda:stdin.readline().strip()\niia=lambda:list(map(int,stdin.readline().strip().split()))\nisa=lambda:stdin.readline().strip().split()\nmod=1000000007\nn = ii1()\nm = int(n**0.5)+1\ncount = 0\nflag=0\nfor i in range(2,m):\n    if n%i == 0:\n        flag=1\n        count+=1\n        n=n\/\/i\nif flag == 1:\n    print(1)\nelse:\n    print(count)","x,y = map(int,input().split())\nprint(x*y)","N = int(input())\nA = list(map(int,(input().split())))\n \nsum=1\n \nif 0 in A:\n    print(0)\nelse:\n    for i in range(N):\n        sum *= A[i]  \n        if sum >= int(1e18):\n            break\n    print(sum if sum<= int(1e18) else -1)\nN = int(input())\nA = list(map(int,(input().split())))\n\nsum=1\n\nif 0 in A:\n    print(0)\nelse:\n    for i in range(N):\n        sum *= A[i]  \n        if sum >= int(1e18):\n            break\n    print(sum if sum<= int(1e18) else -1)\n","a, b = map(int, input().split())\nprint(a*b)\n","a, b = map(int, input().split())\nprint(a*b)\n","a, b = map(int, input().split())\n\nanswer = a * b\n\nprint(answer)\n","a, b = input().split()\nprint(int(a) * int(b))","a,b=map(int,input().split())\nprint(a*b)","n,m=map(int,input().split())\nprint(n*m)","import sys\n\nA, B = map(int, sys.stdin.readline().strip().split())\nprint(A*B)","a,b=map(int,input().split())\nprint(a*b)","input_value = list(map(int, input().split()))\nprint(input_value[0] * input_value[1])","A, B = list(map(int, input().split()))\nprint(A * B)\n","a, b =map(int, input().split())\nprint(a*b)","A, B = map(int, input().split())\nprint(A * B)","A,B = map(int,input().split())\nprint(A*B)","a, b = map(int, input().split())\n\nprint(a*b)","A, B = map(int, input().split())\nprint(A*B)\n","import sys\na, b = map(int, sys.stdin.readline().split())\nprint(a * b)","A, B = map(int, input().split())\nprint(A*B)","N=int(input())\na1=list(map(int,input(). split ()))\nx=1\nif 0 in A:\n    print(0)\n    return\nfor a in A:\n    x=x*a\n    if x>1e18:\n        print(-1)\n        return\nprint(x)\n","A,B = map(int,input().split())\nprint(A*B)","def main():\n    A, B = map(int, input().split())\n    print(A*B)\n\n\nif __name__ == \"__main__\":\n    main()\n","a,b=map(int,input().split())\nprint(int(a*b))","a,b=map(int,input().split())\nprint(a*b)","A,B = map(int,input().split())\nprint(A*B)","A,B = map(int,input().split())\nprint(A*B)\n","import sys\n\n#input = sys.stdin.readline\n\ndef main():\n\n    A,B = map(int,input().split())\n\n    print(A*B)\n\nif __name__ == \"__main__\":\n    main()","a,b = map(int,input().split())\nprint(a*b)\n","a, b = map(int, input().split())\nc = a * b\nprint(c)\n","A, B = map(int, input().split())\n\nprint(A*B)","nums = [int(e) for e in input().split()]\nret = 1\nfor i in nums:\n    ret = ret * i\nprint(ret)","a,b=map(int,input().split())\nprint(a*b)","def main():\n    a, b = map(int, input().split())\n    print(a*b)\n\n\nif __name__ == '__main__':\n    main()\n","a, b = map(int, input().split())\nprint(a*b)","a,b  = map(int, input().split())\n\nprint(a * b)","a, b = map(int, input().split())\nprint(a * b)\n","a, b = map(int, input().split())\nprint(a * b)\n","A,B=map(int,input().split())\nprint(A*B)","A, B = map(int, input().split())\nprint(A * B)\n","a = list(map(int,input().split()))\n\ny = int(a[0]) * int(a[1])\nprint(y)","a,b = map(int,input().split())\n\nprint(a*b)","A, B = [int(i) for i in input().split(' ')]\nprint(A * B)\n","input = list(map(int, input().split())) \nprint(input[0]*input[1])","A,B = map(int,input().split())\nprint(A * B)","A,B = map(int,input().split())\nprint(A*B)","a, b = map(int,input().split())\nprint(a*b)","a,b = list(map(int,input().split()))\nprint(a*b)","a, b = map(int, input().split())\nprint(int(a*b))","lines = input()\nline = [i for i in lines.split(' ')]\nprint(int(line[0]) * int(line[1]))","#!\/usr\/bin\/env python3\nimport sys\n\n\ndef solve(A: int, B: int):\n    print(A * B)\n    return\n\n\n# Generated by 1.1.7.1 https:\/\/github.com\/kyuridenamida\/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    A = int(next(tokens))  # type: int\n    B = int(next(tokens))  # type: int\n    solve(A, B)\n\nif __name__ == '__main__':\n    main()","int A=input()\nint B=input()\n\nprint(A*B)","A, B = map(int, input().split())\nprint(A*B)\n","import sys, re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians\nfrom itertools import accumulate, permutations, combinations, product\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\ndef ZIP(n): return zip(*(MAP() for _ in range(n)))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\nA, B = MAP()\nprint(A * B)","A = input()\nB = input()\nprint A * B","A,B = map(int,input().split())\nprint(A*B)","#!\/usr\/bin\/env python3\nimport sys\n\n\ndef solve(A: int, B: int):\n    return A * B\n\n\n# Generated by 1.1.7.1 https:\/\/github.com\/kyuridenamida\/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    A = int(next(tokens))  # type: int\n    B = int(next(tokens))  # type: int\n    print(solve(A, B))\n\nif __name__ == '__main__':\n    main()\n","a, b = list(map(int, input().split()))\nprint(a*b)","a, b = map(int, input().split())\nprint(a*b)","a, b = map(int, input().split())\nprint(a*b)\n","a,b = map(int, input().split())\nprint(a*b)","a, b = map(int, input().split())\nprint(a * b)","p0, p1 = list(map(lambda x: int(x), input().split(' ')))\nprint(p0 * p1)","A,B = map(int,input().split())\nprint(A*B)","a, b = map(int, input().split())\n\nprint(a * b)"],"formatted_programs":["a,b=map(int,input().split())\n\nprint(a*b)\n\n","w=input().split()\na,b=float(w[0]),float(w[1])\nprint(int(a*b))","A,B=[int(i) for i in input().split(\" \")]\nprint(A*B)","l=list(map(int, input().split(' ')))\nprint(l[0]*l[1])\n","a,b=map(int,input().split())\nprint(a*b)","a, b = map(int, input().split())\nprint(a*b)","a, b = map(int, input().split())\nprint(a*b)","a, b=map(int, input().split())\n\nprint(a*b)","a,b = map(int, input().split())\nprint(a*b)","import sys\nimport math\nimport heapq\nsys.setrecursionlimit(10**7)\nINTMAX = 9223372036854775807\nINTMIN = -9223372036854775808\nDVSR = 1000000007\ndef POW(x, y): return pow(x, y, DVSR)\ndef INV(x, m=DVSR): return pow(x, m - 2, m)\ndef DIV(x, y, m=DVSR): return (x * INV(y, m)) % m\ndef LI(): return [int(x) for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef II(): return int(sys.stdin.readline())\ndef FLIST(n):\n    res = [1]\n    for i in range(1, n+1): res.append(res[i-1]*i%DVSR)\n    return res\nA,B=LI()\nprint(A*B)\n","a, b = map(int, input().split())\nprint(a * b)","a,b = map(int,input().split())\n\nprint(a*b)","# 169a\n# \u5024 A \u00d7 B\u3092\u6574\u6570\u3068\u3057\u3066\u51fa\u529b\u305b\u3088\u3002\n\n# 1.\u5165\u529b\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u53d7\u3051\u53d6\u308b\na, b = map(int, input().split())\n# print(a,b)\n\n# 2.\u53d7\u3051\u53d6\u3063\u305f\u5165\u529b\u5024\u3092\u4f7f\u3063\u3066\u3001\u9069\u5207\u306b\u51e6\u7406\uff08\u8a08\u7b97\uff09\u3059\u308b\nanswer = a * b\n\n# 3.\u8a08\u7b97\u3057\u305f\u7d50\u679c\u3092\u51fa\u529b\u3059\u308b\nprint(answer)","import sys\nimport heapq\nimport re\nfrom itertools import permutations\nfrom bisect import bisect_left, bisect_right\nfrom collections import Counter, deque\nfrom math import factorial, sqrt, ceil, gcd\nfrom functools import lru_cache, reduce\nINF = 1 << 60\nMOD = 1000000007\nsys.setrecursionlimit(10 ** 7)\n\n# UnionFind\nclass UnionFind():\n    def __init__(self, n):\n        self.n = n\n        self.parents = [-1] * n\n\n    def find(self, x):\n        if self.parents[x] < 0:\n            return x\n        else:\n            self.parents[x] = self.find(self.parents[x])\n            return self.parents[x]\n\n    def union(self, x, y):\n        x = self.find(x)\n        y = self.find(y)\n\n        if x == y:\n            return\n\n        if self.parents[x] > self.parents[y]:\n            x, y = y, x\n\n        self.parents[x] += self.parents[y]\n        self.parents[y] = x\n\n    def size(self, x):\n        return -self.parents[self.find(x)]\n\n    def same(self, x, y):\n        return self.find(x) == self.find(y)\n\n    def members(self, x):\n        root = self.find(x)\n        return [i for i in range(self.n) if self.find(i) == root]\n\n    def roots(self):\n        return [i for i, x in enumerate(self.parents) if x < 0]\n\n    def group_count(self):\n        return len(self.roots())\n\n    def all_group_members(self):\n        return {r: self.members(r) for r in self.roots()}\n\n    def __str__(self):\n        return '\\n'.join('{}: {}'.format(r, self.members(r)) for r in self.roots())\n\n# \u30c0\u30a4\u30af\u30b9\u30c8\u30e9\ndef dijkstra_heap(s, edge, n):\n    #\u59cb\u70b9s\u304b\u3089\u5404\u9802\u70b9\u3078\u306e\u6700\u77ed\u8ddd\u96e2\n    d = [10**20] * n\n    used = [True] * n #True:\u672a\u78ba\u5b9a\n    d[s] = 0\n    used[s] = False\n    edgelist = []\n    for a,b in edge[s]:\n        heapq.heappush(edgelist,a*(10**6)+b)\n    while len(edgelist):\n        minedge = heapq.heappop(edgelist)\n        #\u307e\u3060\u4f7f\u308f\u308c\u3066\u306a\u3044\u9802\u70b9\u306e\u4e2d\u304b\u3089\u6700\u5c0f\u306e\u8ddd\u96e2\u306e\u3082\u306e\u3092\u63a2\u3059\n        if not used[minedge%(10**6)]:\n            continue\n        v = minedge%(10**6)\n        d[v] = minedge\/\/(10**6)\n        used[v] = False\n        for e in edge[v]:\n            if used[e[1]]:\n                heapq.heappush(edgelist,(e[0]+d[v])*(10**6)+e[1])\n    return d\n\n# \u7d20\u56e0\u6570\u5206\u89e3\ndef factorization(n):\n    arr = []\n    temp = n\n    for i in range(2, int(-(-n**0.5\/\/1))+1):\n        if temp%i==0:\n            cnt=0\n            while temp%i==0:\n                cnt+=1\n                temp \/\/= i\n            arr.append([i, cnt])\n\n    if temp!=1:\n        arr.append([temp, 1])\n\n    if arr==[]:\n        arr.append([n, 1])\n\n    return arr\n\n# 2\u6570\u306e\u6700\u5c0f\u516c\u500d\u6570\ndef lcm(x, y):\n    return (x * y) \/\/ gcd(x, y)\n\n# \u30ea\u30b9\u30c8\u306e\u8981\u7d20\u306e\u6700\u5c0f\u516c\u500d\u6570\ndef lcm_list(numbers):\n    return reduce(lcm, numbers, 1)\n\n# \u30ea\u30b9\u30c8\u306e\u8981\u7d20\u306e\u6700\u5927\u516c\u7d04\u6570\ndef gcd_list(numbers):\n    return reduce(gcd, numbers)\n\n# \u7d20\u6570\u5224\u5b9a\ndef is_prime(n):\n    if n <= 1:\n        return False\n    p = 2\n    while True:\n        if p ** 2 > n:\n            break\n        if n % p == 0:\n            return False\n        p += 1\n    return True\n\n\n# limit\u4ee5\u4e0b\u306e\u7d20\u6570\u3092\u5217\u6319\ndef eratosthenes(limit):\n    A = [i for i in range(2, limit+1)]\n    P = []\n\n    while True:\n        prime = min(A)\n        \n        if prime > sqrt(limit):\n            break\n            \n        P.append(prime)\n            \n        i = 0\n        while i < len(A):\n            if A[i] % prime == 0:\n                A.pop(i)\n                continue\n            i += 1\n            \n    for a in A:\n        P.append(a)\n            \n    return P\n\n# \u540c\u3058\u3082\u306e\u3092\u542b\u3080\u9806\u5217\ndef permutation_with_duplicates(L):\n\n    if L == []:\n        return [[]]\n\n    else:\n        ret = []\n\n        # set\uff08\u96c6\u5408\uff09\u578b\u3067\u91cd\u8907\u3092\u524a\u9664\u3001\u30bd\u30fc\u30c8\n        S = sorted(set(L))\n\n        for i in S:\n\n            data = L[:]\n            data.remove(i)\n\n            for j in permutation_with_duplicates(data):\n                ret.append([i] + j)\n\n        return ret\n\n\n# \u3053\u3053\u304b\u3089\u66f8\u304d\u59cb\u3081\u308b\na, b = map(int, input().split())\nprint(a * b)","A,B = map(int,input().split())\nt = A*B\nprint(t)","a,b=map(int,input().split())\nprint(a*b)","#!\/usr\/bin\/env python3\nimport sys\n\n\ndef solve(A: int, B: int):\n    print(A*B)\n    return\n\n\n# Generated by 1.1.7.1 https:\/\/github.com\/kyuridenamida\/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    A = int(next(tokens))  # type: int\n    B = int(next(tokens))  # type: int\n    solve(A, B)\n\nif __name__ == '__main__':\n    main()\n","a,b=map(int,input().split())\nprint(a*b)","a, b = map(int, input().split())\nprint(a*b)","A, B = map(int, input().split())\n\nprint(A * B)\n","a,b=map(int,input().split())\nprint(a*b)","A,B = map(int, input().split())\nans = A*B\nprint(ans)","a,b = map(int,input().split())\nprint(a*b)","a, b = input().split()\nA = int(a)\nB = int(b)\nprint(A * B)","a, b = map(int, input().split())\nprint(a * b)","a,b=(int(x) for x in input().split())\nprint(a*b)","a = int(input())\nb = int(input())\nprint(a*b)","l = input().split(\" \")\na = int(l[0])\nb = int(l[1])\nprint(str(a*b))","a,b =map(int,input().split())\n#print(a,b)\n\nanswer = a*b\nprint(answer)","\na, b = (int(e) for e in input().split())\nprint(a*b)","a,b=map(int,input().split())\nprint(a*b)","a,b=map(int,input().split())\nprint(a*b)\n","A, B = map(int, input().split())\nprint(A*B)\n","A,B=map(int,input().split())\nC=A*B\nprint(C)","a, b = map(int, input().split())\nprint(a * b)","from sys import stdin,stdout\nfrom collections import deque,defaultdict\nfrom math import ceil,floor,inf,sqrt,factorial,gcd,log2\nfrom copy import deepcopy\nii1=lambda:int(stdin.readline().strip())\nis1=lambda:stdin.readline().strip()\niia=lambda:list(map(int,stdin.readline().strip().split()))\nisa=lambda:stdin.readline().strip().split()\nmod=1000000007\nn = ii1()\nm = int(n**0.5)+1\ncount = 0\nflag=0\nfor i in range(2,m):\n    if n%i == 0:\n        flag=1\n        count+=1\n        n=n\/\/i\nif flag == 1:\n    print(1)\nelse:\n    print(count)","x,y = map(int,input().split())\nprint(x*y)","N = int(input())\nA = list(map(int,(input().split())))\n \nsum=1\n \nif 0 in A:\n    print(0)\nelse:\n    for i in range(N):\n        sum *= A[i]  \n        if sum >= int(1e18):\n            break\n    print(sum if sum<= int(1e18) else -1)\nN = int(input())\nA = list(map(int,(input().split())))\n\nsum=1\n\nif 0 in A:\n    print(0)\nelse:\n    for i in range(N):\n        sum *= A[i]  \n        if sum >= int(1e18):\n            break\n    print(sum if sum<= int(1e18) else -1)\n","a, b = map(int, input().split())\nprint(a*b)\n","a, b = map(int, input().split())\nprint(a*b)\n","a, b = map(int, input().split())\n\nanswer = a * b\n\nprint(answer)\n","a, b = input().split()\nprint(int(a) * int(b))","a,b=map(int,input().split())\nprint(a*b)","n,m=map(int,input().split())\nprint(n*m)","import sys\n\nA, B = map(int, sys.stdin.readline().strip().split())\nprint(A*B)","a,b=map(int,input().split())\nprint(a*b)","input_value = list(map(int, input().split()))\nprint(input_value[0] * input_value[1])","A, B = list(map(int, input().split()))\nprint(A * B)\n","a, b =map(int, input().split())\nprint(a*b)","A, B = map(int, input().split())\nprint(A * B)","A,B = map(int,input().split())\nprint(A*B)","a, b = map(int, input().split())\n\nprint(a*b)","A, B = map(int, input().split())\nprint(A*B)\n","import sys\na, b = map(int, sys.stdin.readline().split())\nprint(a * b)","A, B = map(int, input().split())\nprint(A*B)","N=int(input())\na1=list(map(int,input(). split ()))\nx=1\nif 0 in A:\n    print(0)\n    return\nfor a in A:\n    x=x*a\n    if x>1e18:\n        print(-1)\n        return\nprint(x)\n","A,B = map(int,input().split())\nprint(A*B)","def main():\n    A, B = map(int, input().split())\n    print(A*B)\n\n\nif __name__ == \"__main__\":\n    main()\n","a,b=map(int,input().split())\nprint(int(a*b))","a,b=map(int,input().split())\nprint(a*b)","A,B = map(int,input().split())\nprint(A*B)","A,B = map(int,input().split())\nprint(A*B)\n","import sys\n\n#input = sys.stdin.readline\n\ndef main():\n\n    A,B = map(int,input().split())\n\n    print(A*B)\n\nif __name__ == \"__main__\":\n    main()","a,b = map(int,input().split())\nprint(a*b)\n","a, b = map(int, input().split())\nc = a * b\nprint(c)\n","A, B = map(int, input().split())\n\nprint(A*B)","nums = [int(e) for e in input().split()]\nret = 1\nfor i in nums:\n    ret = ret * i\nprint(ret)","a,b=map(int,input().split())\nprint(a*b)","def main():\n    a, b = map(int, input().split())\n    print(a*b)\n\n\nif __name__ == '__main__':\n    main()\n","a, b = map(int, input().split())\nprint(a*b)","a,b  = map(int, input().split())\n\nprint(a * b)","a, b = map(int, input().split())\nprint(a * b)\n","a, b = map(int, input().split())\nprint(a * b)\n","A,B=map(int,input().split())\nprint(A*B)","A, B = map(int, input().split())\nprint(A * B)\n","a = list(map(int,input().split()))\n\ny = int(a[0]) * int(a[1])\nprint(y)","a,b = map(int,input().split())\n\nprint(a*b)","A, B = [int(i) for i in input().split(' ')]\nprint(A * B)\n","input = list(map(int, input().split())) \nprint(input[0]*input[1])","A,B = map(int,input().split())\nprint(A * B)","A,B = map(int,input().split())\nprint(A*B)","a, b = map(int,input().split())\nprint(a*b)","a,b = list(map(int,input().split()))\nprint(a*b)","a, b = map(int, input().split())\nprint(int(a*b))","lines = input()\nline = [i for i in lines.split(' ')]\nprint(int(line[0]) * int(line[1]))","#!\/usr\/bin\/env python3\nimport sys\n\n\ndef solve(A: int, B: int):\n    print(A * B)\n    return\n\n\n# Generated by 1.1.7.1 https:\/\/github.com\/kyuridenamida\/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    A = int(next(tokens))  # type: int\n    B = int(next(tokens))  # type: int\n    solve(A, B)\n\nif __name__ == '__main__':\n    main()","int A=input()\nint B=input()\n\nprint(A*B)","A, B = map(int, input().split())\nprint(A*B)\n","import sys, re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians\nfrom itertools import accumulate, permutations, combinations, product\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\ndef ZIP(n): return zip(*(MAP() for _ in range(n)))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\nA, B = MAP()\nprint(A * B)","A = input()\nB = input()\nprint A * B","A,B = map(int,input().split())\nprint(A*B)","#!\/usr\/bin\/env python3\nimport sys\n\n\ndef solve(A: int, B: int):\n    return A * B\n\n\n# Generated by 1.1.7.1 https:\/\/github.com\/kyuridenamida\/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    A = int(next(tokens))  # type: int\n    B = int(next(tokens))  # type: int\n    print(solve(A, B))\n\nif __name__ == '__main__':\n    main()\n","a, b = list(map(int, input().split()))\nprint(a*b)","a, b = map(int, input().split())\nprint(a*b)","a, b = map(int, input().split())\nprint(a*b)\n","a,b = map(int, input().split())\nprint(a*b)","a, b = map(int, input().split())\nprint(a * b)","p0, p1 = list(map(lambda x: int(x), input().split(' ')))\nprint(p0 * p1)","A,B = map(int,input().split())\nprint(A*B)","a, b = map(int, input().split())\n\nprint(a * b)"]}
{"description_html":"<span class=\"lang-en\">\n<p>Score : <var>100<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>Having learned the multiplication table, Takahashi can multiply two integers between <var>1<\/var> and <var>9<\/var> (inclusive) together. He cannot do any other calculation.<\/p>\n<p>Given are two integers <var>A<\/var> and <var>B<\/var>.<\/p>\n<p>If Takahashi can calculate <var>A \\times B<\/var>, print the result; if he cannot, print <code>-1<\/code> instead.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li><var>1 \\leq A \\leq 20<\/var><\/li>\n<li><var>1 \\leq B \\leq 20<\/var><\/li>\n<li>All values in input are integers.<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>A<\/var> <var>B<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>If Takahashi can calculate <var>A \\times B<\/var>, print the result; if he cannot, print <code>-1<\/code>.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>2 5\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>10\n<\/pre>\n<p><var>2 \\times 5 = 10<\/var>.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>5 10\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>-1\n<\/pre>\n<p><var>5\\times 10 = 50<\/var>, but Takahashi cannot do this calculation, so print <code>-1<\/code> instead.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>9 9\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>81\n<\/pre><\/section>\n<\/div>\n<\/span>","description_string":"\nScore : 100 points\n\n\nProblem StatementHaving learned the multiplication table, Takahashi can multiply two integers between 1 and 9 (inclusive) together. He cannot do any other calculation.\nGiven are two integers A and B.\nIf Takahashi can calculate A \\times B, print the result; if he cannot, print -1 instead.\n\n\n\n\nConstraints\n1 \\leq A \\leq 20\n1 \\leq B \\leq 20\nAll values in input are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nA B\n\n\n\n\n\nOutputIf Takahashi can calculate A \\times B, print the result; if he cannot, print -1.\n\n\n\n\n\n\nSample Input 12 5\n\n\n\n\n\nSample Output 110\n\n2 \\times 5 = 10.\n\n\n\n\n\nSample Input 25 10\n\n\n\n\n\nSample Output 2-1\n\n5\\times 10 = 50, but Takahashi cannot do this calculation, so print -1 instead.\n\n\n\n\n\nSample Input 39 9\n\n\n\n\n\nSample Output 381\n\n\n","orig_lang_html":"<span class=\"lang-en\">\n<p>Score : <var>100<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>Having learned the multiplication table, Takahashi can multiply two integers between <var>1<\/var> and <var>9<\/var> (inclusive) together. He cannot do any other calculation.<\/p>\n<p>Given are two integers <var>A<\/var> and <var>B<\/var>.<\/p>\n<p>If Takahashi can calculate <var>A \\times B<\/var>, print the result; if he cannot, print <code>-1<\/code> instead.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li><var>1 \\leq A \\leq 20<\/var><\/li>\n<li><var>1 \\leq B \\leq 20<\/var><\/li>\n<li>All values in input are integers.<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>A<\/var> <var>B<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>If Takahashi can calculate <var>A \\times B<\/var>, print the result; if he cannot, print <code>-1<\/code>.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>2 5\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>10\n<\/pre>\n<p><var>2 \\times 5 = 10<\/var>.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>5 10\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>-1\n<\/pre>\n<p><var>5\\times 10 = 50<\/var>, but Takahashi cannot do this calculation, so print <code>-1<\/code> instead.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>9 9\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>81\n<\/pre><\/section>\n<\/div>\n<\/span>","orig_lang_string":"\nScore : 100 points\n\n\nProblem StatementHaving learned the multiplication table, Takahashi can multiply two integers between 1 and 9 (inclusive) together. He cannot do any other calculation.\nGiven are two integers A and B.\nIf Takahashi can calculate A \\times B, print the result; if he cannot, print -1 instead.\n\n\n\n\nConstraints\n1 \\leq A \\leq 20\n1 \\leq B \\leq 20\nAll values in input are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nA B\n\n\n\n\n\nOutputIf Takahashi can calculate A \\times B, print the result; if he cannot, print -1.\n\n\n\n\n\n\nSample Input 12 5\n\n\n\n\n\nSample Output 110\n\n2 \\times 5 = 10.\n\n\n\n\n\nSample Input 25 10\n\n\n\n\n\nSample Output 2-1\n\n5\\times 10 = 50, but Takahashi cannot do this calculation, so print -1 instead.\n\n\n\n\n\nSample Input 39 9\n\n\n\n\n\nSample Output 381\n\n\n","solve_rate":0.7470464476,"codenet_problem_id":"p02879","input_testcases":{"53":"34 35","52":"34 55","84":"-1 11","88":"10 29","93":"17 57","41":"19 29","54":"34 94","58":"16 74","43":"37 57","45":"33 57","47":"33 17","49":"33 65","97":"33 106","42":"19 57","48":"33 34","51":"34 50","56":"26 74","55":"34 74","90":"20 29","40":"12 29","86":"11 10","50":"33 50","99":"33 19"},"output_testcases":{"53":"-1\n","52":"-1\n","84":"-1\n","88":"-1\n","93":"-1\n","41":"-1\n","54":"-1\n","58":"-1\n","43":"-1\n","45":"-1\n","47":"-1\n","49":"-1\n","97":"-1\n","42":"-1\n","48":"-1\n","51":"-1\n","56":"-1\n","55":"-1\n","90":"-1\n","40":"-1\n","86":"-1\n","50":"-1\n","99":"-1\n"},"n_missing":81,"programs":["a,b = list(map(int, input().split()))\n\nif a<10 and b<10:\n    print(a*b)\nelse:\n    print(-1)","A, B = map(int, input().split())\nif A <= 9 and B <= 9:\n    print(A * B)\nelse:\n    print(-1)\n","a, b = map(int, input().split())\n\nif a < 10 and b < 10:\n    print(a * b)\nelse:\n    print(-1)","a,b=map(int,input().split())\nif 1=<a<=20 AND 1=<b<=20:\n  print(a*b)\nelse:\n  print(\"-1\")\n","A, B = list(map(int, input().split()))\n\nif (1 <= A <= 9) and (1 <= B <= 9):\n    print(A * B)\nelse:\n    print(-1)\n","A, B = map(int, input().split())\nif A < 10 and B<10:\n    print(A*B)\nelse:\n    print('-1')\n","import sys\ndef input():\n    return sys.stdin.readline()[:-1]\na,b=map(int,input().split())\nif a<10 and b<10:\n    print(a*b)\nelse:\n    print(-1)","A, B = map(int, input().split())\nif A in range(1, 10) and B in range(1, 10):\n  print(A * B)\nelse:\n  print(-1)","# ABC144A\n\na, b = map(int, input().split())\n\nprint(a * b if 1 <= a <= 9 and 1 <= b <= 9 else -1)\n","A,B = map(int,input().split())\nif 1<=A<=9 and 1<=B<=9:\n    print(A*B)\nelse:\n    print(-1)","A, B = map(int, input().split())\n\nif A <= 9 and B <= 9:\n    print(A * B)\nelse:\n    print(-1)\n","A, B = map(int, input().split())\n\nresult = A * B\n\nif A > 9 or A < 1 or B > 9 or B < 1:\n    result = -1\n    \nprint(result)","a,b = input().split()\n\nif len(a) == 1 and len(b) == 1:\n  print(int(a)*int(b))\nelse:\n  print(-1)","a, b = map(int,input().split())\nif max(a,b) > 9:\n    print(-1)\nelse:\n    print(a*b)","def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    #from collections import defaultdict\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    from math import floor, ceil\n    #from operator import itemgetter\n\n    #inf = 10**17\n    #mod = 10**9 + 7\n\n    a, b = map(int, input().split())\n    if a>=10 or b>=10:\n        print(-1)\n    else:\n        print(a*b)\n\nif __name__ == '__main__':\n    main()","A,B=map(int,input().split())\nif A<=9 and B<=9:\n    print(A*B)\nelse:\n    print(-1)","a,b=map(int,input().split())\nif(a>9 or b>9):\n  print(-1)\nelse:\n  print(a*b)","A, B = map(str, input().split())\nif len(A) == 1 and len(B) == 1:\n    print(int(A)*int(B))\nelse:\n    print(-1)","A,B = [int(v) for v in input().split()]\nif A > 0 and A < 10 and B > 0 and B < 10:\n    print(A*B)\nelse:\n    print(-1)\n","# -*- coding: utf-8 -*-\nA, B = map(int,input().split())\n\nif 0<A<10 and 0<B<10:\n    print(A*B)\nelse:\n    print(-1)\n","a, b = map(int, input().split())\nif a <= 9 and b<=9:\n    print(a*b)\nelse:\n    print(-1)","a,b = map(int,input().split())\nif 1 <= a <= 9 and 1 <= b <= 9:\n  print(a * b)\nelse:\n  print(-1)","n = int(input())\n\nfor i in range(1,10):\n  for s in range(1,10):\n    if i*s==n:\n      print(\"Yes\")\n      exit()\nprint(\"No\")\n    \n    ","A , B = map(int,input().split())\n\nif A <= 9 and B <= 9 and A * B <= 81:\n    print(A * B)\n\nelse:\n    print(\"-1\")","a,b=map(int,input().split())\nif a<10 and b<10:\n  print(a*b)\nelse:\n  print('-1')  ","a,b=map(int,input().split())\nif (a<=0 or a>9) or (b<=0 or b>9):\n    print(\"-1\")\nelse:\n    print(a*b)\n","#k = int(input())\n#s = input()\n#a, b = map(int, input().split())\n#s, t = map(str, input().split())\n#l = list(map(int, input().split()))\n\na,b = map(int, input().split())\n\n\nif (b > 9 or a > 9):\n    print(-1)\n\nprint(a*b)\n","a,b = map(int,input().split())\n\nif(a > 9)or(b > 9):\n    print(-1)\nelse:\n    print(a * b)","a,b = map(int,input().split())\n\nif a > 9 or b > 9:\n  print(-1)\nelse:\n  print(a*b)\n  ","a,b = map(int,input().split())\nif a < 10 and b < 10:\n    print(a*b)\nelse:\n    print('-1')","a,b = map(int,input().split())\n\nif a <= 9 and a >= 1 and b <= 9 and b >= 1:\n    print(a * b)\n\nelse:\n    print(\"-1\")","a,b = map(int,input().split())\nif a<=9 and b<=9:\n    print(a*b)\nelse:\n    print(-1)","a,b = input().split()\na=int(a)\nb=int(b)\nif a<10 and b<10:\n    ans=a*b\n    print(ans)\nelse:\n    print('-1')","a,b=map(int,input().split())\nif a < 10 and b < 10:\n  print(a*b)\nelse:\n  print(-1)","a,b=map(int,input().split())\nif a<10 and b<10:\n  print(a*b)\nelse:\n  print('No')\n","import sys\n\n\ndef main():\n    a, b = [int(s) for s in sys.stdin.readline().strip().split()]\n\n    if 1 <= a <= 9 and 1 <= b <= 9:\n        print(a * b)\n    else:\n        print(-1)\n\n\nmain()\n","A, B = map(int, input().split())\nif A < 10 and B < 10:\n    print(A * B)\nelse:\n    print(-1)\n","a=int(input(\"1\u304b\u30899\u306e\u9593\u306e\u6574\u6570:\"))\nb=int(input(\"1\u304b\u30899\u306e\u9593\u306e\u6574\u6570:\"))\nif a>=1 and a<=9 and b>=1 and b<=9:\n    m=a*b\n    print(\"\u8a08\u7b97\u7d50\u679c\u306f{}\u3067\u3059\".format(m))\nelse:\n    print(\"-1\")\nprint()\n    \n    \n","#import math\n#import bisect\n#import numpy as np\n#import itertools\n#import copy\nimport sys\n\ninput = sys.stdin.readline\nMOD = 10 ** 9 + 7\nINF = float('INF')\nsys.setrecursionlimit(10 ** 5)\n\n\ndef main():\n    a, b = list(map(int,input().split()))\n\n    if a < 10 and b < 10:\n        print(a*b)\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    main()","a,b=map(int,input().split())\n\nif min(a, b) > 0 and max(a, b) < 10:\n  print(a*b)\nelse:\n  print(-1)","a,b=map(int,input().split())\nif a<=9 and b<=9:\n    print(a*b)\nelse:\n    print(-1)","a, b = map(int,input().split())\n\nif (a < 10 or b < 10):\n  print(a*b)\nelse:\n  print(-1)","N,K =map(int, input().split(\" \"))\n\n\nif N >9 or K>9:\n      print(-1)\nelse:\n      print(N*K)\n\n\n","#!\/usr\/bin\/env python3\nimport sys\n\n\ndef solve(A: int, B: int):\n    if 1<=A<=9 and 1<=B<=9:\n        print(A*B)\n    else:\n        print(-1)\n    return\n\n\n# Generated by 1.1.5 https:\/\/github.com\/kyuridenamida\/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    A = int(next(tokens))  # type: int\n    B = int(next(tokens))  # type: int\n    solve(A, B)\n\nif __name__ == '__main__':\n    main()\n","A,B = map(int,input().split())\n\nif A*B>81:\n    print(-1)\nelse:\n    print(A*B)","A, B= [int(i) for i in input().split()]\n\nif A>=10orB>=10:\n  print(-1)\nelse:\n  print(A*B)\n ","a=int(input())\nb=int(input())\nif a>9 OR b>9:\n  print(\"-1\")\nelif:\n  c=a*b\n  print(c)","A,B = map(int,input().split())\nif 1 <= A <= 9 and 1 <= B <= 9:\n\tprint(A*B)\nelse:\n\tprint(-1)\n","x = int(input())\ny = int(input())\nprint(x *y);","N,M=map(int,input().split())\n\nif 0<=N<10 and 0<=M<10:\n    print(N*M)\nelse:\n    print(-1)\n","A, B = map(int, input().split())\nprint(A * B if A <= 9 and B <= 9 else -1)\n","A, B = map(int, input().split())\n\nif A < 10 and B < 10:\n    print(A*B)\nelse:\n    print(-1)\n","import sys, math\ninput = sys.stdin.readline\nrs = lambda: input().strip()\nri = lambda: int(input())\nrl = lambda: list(map(int, input().split()))\n#mod = 10**9 + 7\nmod = 998244353\n\nA, B = rl()\n\nif 1 <= A <= 9 and 1 <= B <= 9:\n\tprint(A*B)\nelse:\n\tprint(-1)\n","a,b=map(int,input().split())\nprint(a*b if a<=9 and b<=9 else -1)","a, b = map(int, input().split())\n\nif 10 <= a or 10 <= b:\n    print(-1)\n    exit()\n\nelse:\n    print(a*b)","A, B = map(lambda i: int(i), input().split(' '))\n\ndef main():\n    if A >= 10 or B >= 10:\n        print('-1')\n    else:\n        print(A * B)\n\nmain()\n","a, b = map(int, input().split())\nif 0 < a < 10 and 0 < b < 10:\n  print(a * b)\nelse:\n  print(-1)","a, b = map(int, input().split())\n\nif a>=10 or b>=10:\n  print(-1)\nelse:\n  print(a*b)","#!\/usr\/bin\/python3\n\na, b = map(int, input().split())\n\nif min(a, b) < 1 or max(a, b) > 9:\n    print(-1)\nelse:\n    print(a * b)","a, b = map(int, input().split())\nprint(a*b if a <10 and b < 10 else -1)","N =int(input())\nnum = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nfor i in reversed(range(2, 10)):\n    if N % i == 0 and int(N \/ i) in num:\n        count = 1\n        break\n    else:\n        count = 0\nif count == 1:\n    print(\"Yes\")\nelse:\n    print(\"NO\")","A,B=map(int,input().split())\nif 1<=A<=9 and 1<=B<=9:\n    print(A*B)\nelse:\n    print(-1)","a, b = map(int, input().split())\n\nif a > 9 or b > 9:\n    a = -1\n    b = 1\n\nc = a * b\nprint(c)","x, y = map(int, input().split())\nif 0 < x < 10 and 0 < y < 10:\n    print(x * y)\nelse:\n    print(-1)","a,b=map(int,input().split())\nif(a<10 and b<10):\n    print(a*b)\nelse:\n    print(-1)","from sys import stdin, setrecursionlimit\n\n\ndef main():\n    input = stdin.buffer.readline\n    a, b = map(int, input().split())\n\n    if 1 <= a <= 9 and 1 <= b <= 9:\n        print(a * b)\n    else:\n        print(-1)\n\n\nif __name__ == \"__main__\":\n    setrecursionlimit(10000)\n    main()\n","a, b = map(int, input.split())\nif a < 10 and b < 10:\n  print(a*b)\nelse:\n  print(-1)","A, B = map(int, input().split())\nif A < 10 and B < 10:\n    print(A * B)\nelse:\n    print(-1)","a,b=map(int,input().split())\n\nif a<=9 and b <=9:\n  print(a*b)\nelse:\n  print(-1)","A, B = map(int, input().split())\n\nif(9>=A>=1 and 9>=B>=1):\n  sum = A*B\n  print(sum)\nelse:\n  print(-1)\n  ","a , b = input().split()\n\nif len(a) * len(b) == 1:\n  print(int(a)*int(b))\nelse:\n  print(-1)","A,B = map(int, input().split())\n\nif A > 9 or B > 9:\n  print('-1')\n\nelse:\n  print(A*B)","a,b = map(int, input().split())\nif a < 10 and b < 10:\n  return a * b\nelse:\n  return -1","A,B = map(int,input().split())\nprint(A*B) if max(A,B) < 10 else print(-1)","l=[int(i) for i in input().split(\" \")]\nif l[0]>=1 and l[0]<=9 and l[1]>=1 and l[1]<=9:\n    ans=l[0]*l[1]\nelse:\n    ans=-1\nprint(ans)","A,B = map(int,input().split())\nif 1 <= A and A <= 9 :\n    if 1 <= B and B <= 9 :\n        print(A*B)\n    else :\n        print(-1)\nelse :\n    print(-1)","A, B = map(int, input().split())\nprint(A * B if A <= 9 and B <= 9 else -1)","def main():\n    A, B = map(int, input().split())\n    if A <= 9 and B <= 9:\n        print(A*B)\n    else:\n        print(-1)\n\n\nif __name__ == \"__main__\":\n    main()\n","a,b=map(int,input().split());print(-1 if a>9 or b>9 else a*b)","# coding: utf-8\n# Your code here!\na,b=map(int,input().split())\nif  (1<=a<=9) and (1<=b<=9):\n    print(a*b)\nelse:\n    print(-1)","n,k = map(int,input().split())\na = list(map(int,input().split()))\nf = list(map(int,input().split()))\na.sort()\nf.sort()\nok = max(a)*max(f)\nng = -1\n\nwhile ok-ng > 1:\n    mid = (ok+ng)\/\/2\n    t = 0\n    for i in range(n):\n        t += max(0,a[i]-int(mid\/f[i]))\n    if t > k:\n        ng = mid\n    else:\n        ok = mid\n\nprint(ok)","a, b = map(int, input().split())\n\nif a > 9 or b > 9:\n  print(-1)\nelse:\n  print(a * b)","a,b = map(int,input().split())\nif a<10 and b<10:\n  print(a*b)\nelse:\n  print(-1)","A,B = map(int,input().split())\n\nif max(A,B) > 9:\n  print(-1)\nelse:\n  print(A*B)","A,B=map(int,input().split())\nprint(A*B)","a, b = map(int, input().rstrip().split())\nr = -1 if 10 <= a or 10 <= b else a * b\nprint(r)\n","import sys\nsys.setrecursionlimit(10**6)\na,b = map(int, input().split())\n\nif a < 10 and b < 10:\n    print(a*b)\nelse:\n    print(-1)","a,b=map(int, input().split())\nif a<10 and b<10:\n\tprint(a*b)\nelse:\n\tprint(-1)","A, B = map(int, input().split())\n\nif A < 10 and B < 10:\n    ans = A * B\n    print(ans)\nelse:\n    print(-1)","AB = input().split()\nA = int(AB[0])\nB = int(AB[1])\n\nif A <= 9 and B <= 9:\n  print(A * B)\nelse:\n  print(-1)\n","A,B=input().split()\nif len(A) < 2 and len(B) < 2:\n  print(int(A)*int(B))\nelse:\n  print(-1)","a, b = map(int, input().split())\nif 1 <= a <= 9 and 1<= b <= 9:\n\tc = a * b\nelse:\n\tprint ('-1')","A, B = map(int, input().split())\n\nif A < 10 and B < 10:\n    print(int(A*B))\nelse:\n    print(-1)","a,b=map(int,input().split())\n\nif a < 10 and b < 10:\n    print(a*b)\nelse:\n    print(-1)","A, B = map(int,input().split())\nif A<10 and B<10:\n    print(A*B)\nelse:\n    print(-1)","N = int(input())\nkuku= [1, 2, 3, 4, 5, 6, 7, 8, 9]\nc = 0\n\nfor a in kuku:\n    for b in kuku:\n        if a*b == N:\n            c+=1\nif c>=1:\n    print('Yes')\nelse:\n    print('No')","a,b=map(int, input().split())\nif a>9 or b>9:\n  print(\"-1\")\nelse:\n  print(a*b)","a,b = map(int, input().split())\nif 1<=a<=9 and 1<=b<=9:\n    print(a*b)\nelse:\n    print(-1)","A, B = map(int, input().split())\n\nif A >= 10:\n    print(\"-1\")\nelif B >= 10:\n    print(\"-1\")\nelse:\n    print(A*B)","A,B = map(int,input().split())\nif 1 <= A <= 9 and 1 <= B <= 9:\n  print(A*B)\nelse:\n  print(-1)  "],"raw_generations":["a,b = list(map(int, input().split()))\n\nif a<10 and b<10:\n    print(a*b)\nelse:\n    print(-1)","A, B = map(int, input().split())\nif A <= 9 and B <= 9:\n    print(A * B)\nelse:\n    print(-1)\n","a, b = map(int, input().split())\n\nif a < 10 and b < 10:\n    print(a * b)\nelse:\n    print(-1)","a,b=map(int,input().split())\nif 1=<a<=20 AND 1=<b<=20:\n  print(a*b)\nelse:\n  print(\"-1\")\n","A, B = list(map(int, input().split()))\n\nif (1 <= A <= 9) and (1 <= B <= 9):\n    print(A * B)\nelse:\n    print(-1)\n","A, B = map(int, input().split())\nif A < 10 and B<10:\n    print(A*B)\nelse:\n    print('-1')\n","import sys\ndef input():\n    return sys.stdin.readline()[:-1]\na,b=map(int,input().split())\nif a<10 and b<10:\n    print(a*b)\nelse:\n    print(-1)","A, B = map(int, input().split())\nif A in range(1, 10) and B in range(1, 10):\n  print(A * B)\nelse:\n  print(-1)","# ABC144A\n\na, b = map(int, input().split())\n\nprint(a * b if 1 <= a <= 9 and 1 <= b <= 9 else -1)\n","A,B = map(int,input().split())\nif 1<=A<=9 and 1<=B<=9:\n    print(A*B)\nelse:\n    print(-1)","A, B = map(int, input().split())\n\nif A <= 9 and B <= 9:\n    print(A * B)\nelse:\n    print(-1)\n","A, B = map(int, input().split())\n\nresult = A * B\n\nif A > 9 or A < 1 or B > 9 or B < 1:\n    result = -1\n    \nprint(result)","a,b = input().split()\n\nif len(a) == 1 and len(b) == 1:\n  print(int(a)*int(b))\nelse:\n  print(-1)","a, b = map(int,input().split())\nif max(a,b) > 9:\n    print(-1)\nelse:\n    print(a*b)","def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    #from collections import defaultdict\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    from math import floor, ceil\n    #from operator import itemgetter\n\n    #inf = 10**17\n    #mod = 10**9 + 7\n\n    a, b = map(int, input().split())\n    if a>=10 or b>=10:\n        print(-1)\n    else:\n        print(a*b)\n\nif __name__ == '__main__':\n    main()","A,B=map(int,input().split())\nif A<=9 and B<=9:\n    print(A*B)\nelse:\n    print(-1)","a,b=map(int,input().split())\nif(a>9 or b>9):\n  print(-1)\nelse:\n  print(a*b)","A, B = map(str, input().split())\nif len(A) == 1 and len(B) == 1:\n    print(int(A)*int(B))\nelse:\n    print(-1)","A,B = [int(v) for v in input().split()]\nif A > 0 and A < 10 and B > 0 and B < 10:\n    print(A*B)\nelse:\n    print(-1)\n","# -*- coding: utf-8 -*-\nA, B = map(int,input().split())\n\nif 0<A<10 and 0<B<10:\n    print(A*B)\nelse:\n    print(-1)\n","a, b = map(int, input().split())\nif a <= 9 and b<=9:\n    print(a*b)\nelse:\n    print(-1)","a,b = map(int,input().split())\nif 1 <= a <= 9 and 1 <= b <= 9:\n  print(a * b)\nelse:\n  print(-1)","n = int(input())\n\nfor i in range(1,10):\n  for s in range(1,10):\n    if i*s==n:\n      print(\"Yes\")\n      exit()\nprint(\"No\")\n    \n    ","A , B = map(int,input().split())\n\nif A <= 9 and B <= 9 and A * B <= 81:\n    print(A * B)\n\nelse:\n    print(\"-1\")","a,b=map(int,input().split())\nif a<10 and b<10:\n  print(a*b)\nelse:\n  print('-1')  ","a,b=map(int,input().split())\nif (a<=0 or a>9) or (b<=0 or b>9):\n    print(\"-1\")\nelse:\n    print(a*b)\n","#k = int(input())\n#s = input()\n#a, b = map(int, input().split())\n#s, t = map(str, input().split())\n#l = list(map(int, input().split()))\n\na,b = map(int, input().split())\n\n\nif (b > 9 or a > 9):\n    print(-1)\n\nprint(a*b)\n","a,b = map(int,input().split())\n\nif(a > 9)or(b > 9):\n    print(-1)\nelse:\n    print(a * b)","a,b = map(int,input().split())\n\nif a > 9 or b > 9:\n  print(-1)\nelse:\n  print(a*b)\n  ","a,b = map(int,input().split())\nif a < 10 and b < 10:\n    print(a*b)\nelse:\n    print('-1')","a,b = map(int,input().split())\n\nif a <= 9 and a >= 1 and b <= 9 and b >= 1:\n    print(a * b)\n\nelse:\n    print(\"-1\")","a,b = map(int,input().split())\nif a<=9 and b<=9:\n    print(a*b)\nelse:\n    print(-1)","a,b = input().split()\na=int(a)\nb=int(b)\nif a<10 and b<10:\n    ans=a*b\n    print(ans)\nelse:\n    print('-1')","a,b=map(int,input().split())\nif a < 10 and b < 10:\n  print(a*b)\nelse:\n  print(-1)","a,b=map(int,input().split())\nif a<10 and b<10:\n  print(a*b)\nelse:\n  print('No')\n","import sys\n\n\ndef main():\n    a, b = [int(s) for s in sys.stdin.readline().strip().split()]\n\n    if 1 <= a <= 9 and 1 <= b <= 9:\n        print(a * b)\n    else:\n        print(-1)\n\n\nmain()\n","A, B = map(int, input().split())\nif A < 10 and B < 10:\n    print(A * B)\nelse:\n    print(-1)\n","a=int(input(\"1\u304b\u30899\u306e\u9593\u306e\u6574\u6570:\"))\nb=int(input(\"1\u304b\u30899\u306e\u9593\u306e\u6574\u6570:\"))\nif a>=1 and a<=9 and b>=1 and b<=9:\n    m=a*b\n    print(\"\u8a08\u7b97\u7d50\u679c\u306f{}\u3067\u3059\".format(m))\nelse:\n    print(\"-1\")\nprint()\n    \n    \n","#import math\n#import bisect\n#import numpy as np\n#import itertools\n#import copy\nimport sys\n\ninput = sys.stdin.readline\nMOD = 10 ** 9 + 7\nINF = float('INF')\nsys.setrecursionlimit(10 ** 5)\n\n\ndef main():\n    a, b = list(map(int,input().split()))\n\n    if a < 10 and b < 10:\n        print(a*b)\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    main()","a,b=map(int,input().split())\n\nif min(a, b) > 0 and max(a, b) < 10:\n  print(a*b)\nelse:\n  print(-1)","a,b=map(int,input().split())\nif a<=9 and b<=9:\n    print(a*b)\nelse:\n    print(-1)","a, b = map(int,input().split())\n\nif (a < 10 or b < 10):\n  print(a*b)\nelse:\n  print(-1)","N,K =map(int, input().split(\" \"))\n\n\nif N >9 or K>9:\n      print(-1)\nelse:\n      print(N*K)\n\n\n","#!\/usr\/bin\/env python3\nimport sys\n\n\ndef solve(A: int, B: int):\n    if 1<=A<=9 and 1<=B<=9:\n        print(A*B)\n    else:\n        print(-1)\n    return\n\n\n# Generated by 1.1.5 https:\/\/github.com\/kyuridenamida\/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    A = int(next(tokens))  # type: int\n    B = int(next(tokens))  # type: int\n    solve(A, B)\n\nif __name__ == '__main__':\n    main()\n","A,B = map(int,input().split())\n\nif A*B>81:\n    print(-1)\nelse:\n    print(A*B)","A, B= [int(i) for i in input().split()]\n\nif A>=10orB>=10:\n  print(-1)\nelse:\n  print(A*B)\n ","a=int(input())\nb=int(input())\nif a>9 OR b>9:\n  print(\"-1\")\nelif:\n  c=a*b\n  print(c)","A,B = map(int,input().split())\nif 1 <= A <= 9 and 1 <= B <= 9:\n\tprint(A*B)\nelse:\n\tprint(-1)\n","x = int(input())\ny = int(input())\nprint(x *y);","N,M=map(int,input().split())\n\nif 0<=N<10 and 0<=M<10:\n    print(N*M)\nelse:\n    print(-1)\n","A, B = map(int, input().split())\nprint(A * B if A <= 9 and B <= 9 else -1)\n","A, B = map(int, input().split())\n\nif A < 10 and B < 10:\n    print(A*B)\nelse:\n    print(-1)\n","import sys, math\ninput = sys.stdin.readline\nrs = lambda: input().strip()\nri = lambda: int(input())\nrl = lambda: list(map(int, input().split()))\n#mod = 10**9 + 7\nmod = 998244353\n\nA, B = rl()\n\nif 1 <= A <= 9 and 1 <= B <= 9:\n\tprint(A*B)\nelse:\n\tprint(-1)\n","a,b=map(int,input().split())\nprint(a*b if a<=9 and b<=9 else -1)","a, b = map(int, input().split())\n\nif 10 <= a or 10 <= b:\n    print(-1)\n    exit()\n\nelse:\n    print(a*b)","A, B = map(lambda i: int(i), input().split(' '))\n\ndef main():\n    if A >= 10 or B >= 10:\n        print('-1')\n    else:\n        print(A * B)\n\nmain()\n","a, b = map(int, input().split())\nif 0 < a < 10 and 0 < b < 10:\n  print(a * b)\nelse:\n  print(-1)","a, b = map(int, input().split())\n\nif a>=10 or b>=10:\n  print(-1)\nelse:\n  print(a*b)","#!\/usr\/bin\/python3\n\na, b = map(int, input().split())\n\nif min(a, b) < 1 or max(a, b) > 9:\n    print(-1)\nelse:\n    print(a * b)","a, b = map(int, input().split())\nprint(a*b if a <10 and b < 10 else -1)","N =int(input())\nnum = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nfor i in reversed(range(2, 10)):\n    if N % i == 0 and int(N \/ i) in num:\n        count = 1\n        break\n    else:\n        count = 0\nif count == 1:\n    print(\"Yes\")\nelse:\n    print(\"NO\")","A,B=map(int,input().split())\nif 1<=A<=9 and 1<=B<=9:\n    print(A*B)\nelse:\n    print(-1)","a, b = map(int, input().split())\n\nif a > 9 or b > 9:\n    a = -1\n    b = 1\n\nc = a * b\nprint(c)","x, y = map(int, input().split())\nif 0 < x < 10 and 0 < y < 10:\n    print(x * y)\nelse:\n    print(-1)","a,b=map(int,input().split())\nif(a<10 and b<10):\n    print(a*b)\nelse:\n    print(-1)","from sys import stdin, setrecursionlimit\n\n\ndef main():\n    input = stdin.buffer.readline\n    a, b = map(int, input().split())\n\n    if 1 <= a <= 9 and 1 <= b <= 9:\n        print(a * b)\n    else:\n        print(-1)\n\n\nif __name__ == \"__main__\":\n    setrecursionlimit(10000)\n    main()\n","a, b = map(int, input.split())\nif a < 10 and b < 10:\n  print(a*b)\nelse:\n  print(-1)","A, B = map(int, input().split())\nif A < 10 and B < 10:\n    print(A * B)\nelse:\n    print(-1)","a,b=map(int,input().split())\n\nif a<=9 and b <=9:\n  print(a*b)\nelse:\n  print(-1)","A, B = map(int, input().split())\n\nif(9>=A>=1 and 9>=B>=1):\n  sum = A*B\n  print(sum)\nelse:\n  print(-1)\n  ","a , b = input().split()\n\nif len(a) * len(b) == 1:\n  print(int(a)*int(b))\nelse:\n  print(-1)","A,B = map(int, input().split())\n\nif A > 9 or B > 9:\n  print('-1')\n\nelse:\n  print(A*B)","a,b = map(int, input().split())\nif a < 10 and b < 10:\n  return a * b\nelse:\n  return -1","A,B = map(int,input().split())\nprint(A*B) if max(A,B) < 10 else print(-1)","l=[int(i) for i in input().split(\" \")]\nif l[0]>=1 and l[0]<=9 and l[1]>=1 and l[1]<=9:\n    ans=l[0]*l[1]\nelse:\n    ans=-1\nprint(ans)","A,B = map(int,input().split())\nif 1 <= A and A <= 9 :\n    if 1 <= B and B <= 9 :\n        print(A*B)\n    else :\n        print(-1)\nelse :\n    print(-1)","A, B = map(int, input().split())\nprint(A * B if A <= 9 and B <= 9 else -1)","def main():\n    A, B = map(int, input().split())\n    if A <= 9 and B <= 9:\n        print(A*B)\n    else:\n        print(-1)\n\n\nif __name__ == \"__main__\":\n    main()\n","a,b=map(int,input().split());print(-1 if a>9 or b>9 else a*b)","# coding: utf-8\n# Your code here!\na,b=map(int,input().split())\nif  (1<=a<=9) and (1<=b<=9):\n    print(a*b)\nelse:\n    print(-1)","n,k = map(int,input().split())\na = list(map(int,input().split()))\nf = list(map(int,input().split()))\na.sort()\nf.sort()\nok = max(a)*max(f)\nng = -1\n\nwhile ok-ng > 1:\n    mid = (ok+ng)\/\/2\n    t = 0\n    for i in range(n):\n        t += max(0,a[i]-int(mid\/f[i]))\n    if t > k:\n        ng = mid\n    else:\n        ok = mid\n\nprint(ok)","a, b = map(int, input().split())\n\nif a > 9 or b > 9:\n  print(-1)\nelse:\n  print(a * b)","a,b = map(int,input().split())\nif a<10 and b<10:\n  print(a*b)\nelse:\n  print(-1)","A,B = map(int,input().split())\n\nif max(A,B) > 9:\n  print(-1)\nelse:\n  print(A*B)","A,B=map(int,input().split())\nprint(A*B)","a, b = map(int, input().rstrip().split())\nr = -1 if 10 <= a or 10 <= b else a * b\nprint(r)\n","import sys\nsys.setrecursionlimit(10**6)\na,b = map(int, input().split())\n\nif a < 10 and b < 10:\n    print(a*b)\nelse:\n    print(-1)","a,b=map(int, input().split())\nif a<10 and b<10:\n\tprint(a*b)\nelse:\n\tprint(-1)","A, B = map(int, input().split())\n\nif A < 10 and B < 10:\n    ans = A * B\n    print(ans)\nelse:\n    print(-1)","AB = input().split()\nA = int(AB[0])\nB = int(AB[1])\n\nif A <= 9 and B <= 9:\n  print(A * B)\nelse:\n  print(-1)\n","A,B=input().split()\nif len(A) < 2 and len(B) < 2:\n  print(int(A)*int(B))\nelse:\n  print(-1)","a, b = map(int, input().split())\nif 1 <= a <= 9 and 1<= b <= 9:\n\tc = a * b\nelse:\n\tprint ('-1')","A, B = map(int, input().split())\n\nif A < 10 and B < 10:\n    print(int(A*B))\nelse:\n    print(-1)","a,b=map(int,input().split())\n\nif a < 10 and b < 10:\n    print(a*b)\nelse:\n    print(-1)","A, B = map(int,input().split())\nif A<10 and B<10:\n    print(A*B)\nelse:\n    print(-1)","N = int(input())\nkuku= [1, 2, 3, 4, 5, 6, 7, 8, 9]\nc = 0\n\nfor a in kuku:\n    for b in kuku:\n        if a*b == N:\n            c+=1\nif c>=1:\n    print('Yes')\nelse:\n    print('No')","a,b=map(int, input().split())\nif a>9 or b>9:\n  print(\"-1\")\nelse:\n  print(a*b)","a,b = map(int, input().split())\nif 1<=a<=9 and 1<=b<=9:\n    print(a*b)\nelse:\n    print(-1)","A, B = map(int, input().split())\n\nif A >= 10:\n    print(\"-1\")\nelif B >= 10:\n    print(\"-1\")\nelse:\n    print(A*B)","A,B = map(int,input().split())\nif 1 <= A <= 9 and 1 <= B <= 9:\n  print(A*B)\nelse:\n  print(-1)  "],"formatted_programs":["a,b = list(map(int, input().split()))\n\nif a<10 and b<10:\n    print(a*b)\nelse:\n    print(-1)","A, B = map(int, input().split())\nif A <= 9 and B <= 9:\n    print(A * B)\nelse:\n    print(-1)\n","a, b = map(int, input().split())\n\nif a < 10 and b < 10:\n    print(a * b)\nelse:\n    print(-1)","a,b=map(int,input().split())\nif 1=<a<=20 AND 1=<b<=20:\n  print(a*b)\nelse:\n  print(\"-1\")\n","A, B = list(map(int, input().split()))\n\nif (1 <= A <= 9) and (1 <= B <= 9):\n    print(A * B)\nelse:\n    print(-1)\n","A, B = map(int, input().split())\nif A < 10 and B<10:\n    print(A*B)\nelse:\n    print('-1')\n","import sys\ndef input():\n    return sys.stdin.readline()[:-1]\na,b=map(int,input().split())\nif a<10 and b<10:\n    print(a*b)\nelse:\n    print(-1)","A, B = map(int, input().split())\nif A in range(1, 10) and B in range(1, 10):\n  print(A * B)\nelse:\n  print(-1)","# ABC144A\n\na, b = map(int, input().split())\n\nprint(a * b if 1 <= a <= 9 and 1 <= b <= 9 else -1)\n","A,B = map(int,input().split())\nif 1<=A<=9 and 1<=B<=9:\n    print(A*B)\nelse:\n    print(-1)","A, B = map(int, input().split())\n\nif A <= 9 and B <= 9:\n    print(A * B)\nelse:\n    print(-1)\n","A, B = map(int, input().split())\n\nresult = A * B\n\nif A > 9 or A < 1 or B > 9 or B < 1:\n    result = -1\n    \nprint(result)","a,b = input().split()\n\nif len(a) == 1 and len(b) == 1:\n  print(int(a)*int(b))\nelse:\n  print(-1)","a, b = map(int,input().split())\nif max(a,b) > 9:\n    print(-1)\nelse:\n    print(a*b)","def main():\n    import sys\n    input = sys.stdin.readline\n    sys.setrecursionlimit(10**7)\n    from collections import Counter, deque\n    #from collections import defaultdict\n    from itertools import combinations, permutations, accumulate, groupby, product\n    from bisect import bisect_left,bisect_right\n    from heapq import heapify, heappop, heappush\n    from math import floor, ceil\n    #from operator import itemgetter\n\n    #inf = 10**17\n    #mod = 10**9 + 7\n\n    a, b = map(int, input().split())\n    if a>=10 or b>=10:\n        print(-1)\n    else:\n        print(a*b)\n\nif __name__ == '__main__':\n    main()","A,B=map(int,input().split())\nif A<=9 and B<=9:\n    print(A*B)\nelse:\n    print(-1)","a,b=map(int,input().split())\nif(a>9 or b>9):\n  print(-1)\nelse:\n  print(a*b)","A, B = map(str, input().split())\nif len(A) == 1 and len(B) == 1:\n    print(int(A)*int(B))\nelse:\n    print(-1)","A,B = [int(v) for v in input().split()]\nif A > 0 and A < 10 and B > 0 and B < 10:\n    print(A*B)\nelse:\n    print(-1)\n","# -*- coding: utf-8 -*-\nA, B = map(int,input().split())\n\nif 0<A<10 and 0<B<10:\n    print(A*B)\nelse:\n    print(-1)\n","a, b = map(int, input().split())\nif a <= 9 and b<=9:\n    print(a*b)\nelse:\n    print(-1)","a,b = map(int,input().split())\nif 1 <= a <= 9 and 1 <= b <= 9:\n  print(a * b)\nelse:\n  print(-1)","n = int(input())\n\nfor i in range(1,10):\n  for s in range(1,10):\n    if i*s==n:\n      print(\"Yes\")\n      exit()\nprint(\"No\")\n    \n    ","A , B = map(int,input().split())\n\nif A <= 9 and B <= 9 and A * B <= 81:\n    print(A * B)\n\nelse:\n    print(\"-1\")","a,b=map(int,input().split())\nif a<10 and b<10:\n  print(a*b)\nelse:\n  print('-1')  ","a,b=map(int,input().split())\nif (a<=0 or a>9) or (b<=0 or b>9):\n    print(\"-1\")\nelse:\n    print(a*b)\n","#k = int(input())\n#s = input()\n#a, b = map(int, input().split())\n#s, t = map(str, input().split())\n#l = list(map(int, input().split()))\n\na,b = map(int, input().split())\n\n\nif (b > 9 or a > 9):\n    print(-1)\n\nprint(a*b)\n","a,b = map(int,input().split())\n\nif(a > 9)or(b > 9):\n    print(-1)\nelse:\n    print(a * b)","a,b = map(int,input().split())\n\nif a > 9 or b > 9:\n  print(-1)\nelse:\n  print(a*b)\n  ","a,b = map(int,input().split())\nif a < 10 and b < 10:\n    print(a*b)\nelse:\n    print('-1')","a,b = map(int,input().split())\n\nif a <= 9 and a >= 1 and b <= 9 and b >= 1:\n    print(a * b)\n\nelse:\n    print(\"-1\")","a,b = map(int,input().split())\nif a<=9 and b<=9:\n    print(a*b)\nelse:\n    print(-1)","a,b = input().split()\na=int(a)\nb=int(b)\nif a<10 and b<10:\n    ans=a*b\n    print(ans)\nelse:\n    print('-1')","a,b=map(int,input().split())\nif a < 10 and b < 10:\n  print(a*b)\nelse:\n  print(-1)","a,b=map(int,input().split())\nif a<10 and b<10:\n  print(a*b)\nelse:\n  print('No')\n","import sys\n\n\ndef main():\n    a, b = [int(s) for s in sys.stdin.readline().strip().split()]\n\n    if 1 <= a <= 9 and 1 <= b <= 9:\n        print(a * b)\n    else:\n        print(-1)\n\n\nmain()\n","A, B = map(int, input().split())\nif A < 10 and B < 10:\n    print(A * B)\nelse:\n    print(-1)\n","a=int(input(\"1\u304b\u30899\u306e\u9593\u306e\u6574\u6570:\"))\nb=int(input(\"1\u304b\u30899\u306e\u9593\u306e\u6574\u6570:\"))\nif a>=1 and a<=9 and b>=1 and b<=9:\n    m=a*b\n    print(\"\u8a08\u7b97\u7d50\u679c\u306f{}\u3067\u3059\".format(m))\nelse:\n    print(\"-1\")\nprint()\n    \n    \n","#import math\n#import bisect\n#import numpy as np\n#import itertools\n#import copy\nimport sys\n\ninput = sys.stdin.readline\nMOD = 10 ** 9 + 7\nINF = float('INF')\nsys.setrecursionlimit(10 ** 5)\n\n\ndef main():\n    a, b = list(map(int,input().split()))\n\n    if a < 10 and b < 10:\n        print(a*b)\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    main()","a,b=map(int,input().split())\n\nif min(a, b) > 0 and max(a, b) < 10:\n  print(a*b)\nelse:\n  print(-1)","a,b=map(int,input().split())\nif a<=9 and b<=9:\n    print(a*b)\nelse:\n    print(-1)","a, b = map(int,input().split())\n\nif (a < 10 or b < 10):\n  print(a*b)\nelse:\n  print(-1)","N,K =map(int, input().split(\" \"))\n\n\nif N >9 or K>9:\n      print(-1)\nelse:\n      print(N*K)\n\n\n","#!\/usr\/bin\/env python3\nimport sys\n\n\ndef solve(A: int, B: int):\n    if 1<=A<=9 and 1<=B<=9:\n        print(A*B)\n    else:\n        print(-1)\n    return\n\n\n# Generated by 1.1.5 https:\/\/github.com\/kyuridenamida\/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    A = int(next(tokens))  # type: int\n    B = int(next(tokens))  # type: int\n    solve(A, B)\n\nif __name__ == '__main__':\n    main()\n","A,B = map(int,input().split())\n\nif A*B>81:\n    print(-1)\nelse:\n    print(A*B)","A, B= [int(i) for i in input().split()]\n\nif A>=10orB>=10:\n  print(-1)\nelse:\n  print(A*B)\n ","a=int(input())\nb=int(input())\nif a>9 OR b>9:\n  print(\"-1\")\nelif:\n  c=a*b\n  print(c)","A,B = map(int,input().split())\nif 1 <= A <= 9 and 1 <= B <= 9:\n\tprint(A*B)\nelse:\n\tprint(-1)\n","x = int(input())\ny = int(input())\nprint(x *y);","N,M=map(int,input().split())\n\nif 0<=N<10 and 0<=M<10:\n    print(N*M)\nelse:\n    print(-1)\n","A, B = map(int, input().split())\nprint(A * B if A <= 9 and B <= 9 else -1)\n","A, B = map(int, input().split())\n\nif A < 10 and B < 10:\n    print(A*B)\nelse:\n    print(-1)\n","import sys, math\ninput = sys.stdin.readline\nrs = lambda: input().strip()\nri = lambda: int(input())\nrl = lambda: list(map(int, input().split()))\n#mod = 10**9 + 7\nmod = 998244353\n\nA, B = rl()\n\nif 1 <= A <= 9 and 1 <= B <= 9:\n\tprint(A*B)\nelse:\n\tprint(-1)\n","a,b=map(int,input().split())\nprint(a*b if a<=9 and b<=9 else -1)","a, b = map(int, input().split())\n\nif 10 <= a or 10 <= b:\n    print(-1)\n    exit()\n\nelse:\n    print(a*b)","A, B = map(lambda i: int(i), input().split(' '))\n\ndef main():\n    if A >= 10 or B >= 10:\n        print('-1')\n    else:\n        print(A * B)\n\nmain()\n","a, b = map(int, input().split())\nif 0 < a < 10 and 0 < b < 10:\n  print(a * b)\nelse:\n  print(-1)","a, b = map(int, input().split())\n\nif a>=10 or b>=10:\n  print(-1)\nelse:\n  print(a*b)","#!\/usr\/bin\/python3\n\na, b = map(int, input().split())\n\nif min(a, b) < 1 or max(a, b) > 9:\n    print(-1)\nelse:\n    print(a * b)","a, b = map(int, input().split())\nprint(a*b if a <10 and b < 10 else -1)","N =int(input())\nnum = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nfor i in reversed(range(2, 10)):\n    if N % i == 0 and int(N \/ i) in num:\n        count = 1\n        break\n    else:\n        count = 0\nif count == 1:\n    print(\"Yes\")\nelse:\n    print(\"NO\")","A,B=map(int,input().split())\nif 1<=A<=9 and 1<=B<=9:\n    print(A*B)\nelse:\n    print(-1)","a, b = map(int, input().split())\n\nif a > 9 or b > 9:\n    a = -1\n    b = 1\n\nc = a * b\nprint(c)","x, y = map(int, input().split())\nif 0 < x < 10 and 0 < y < 10:\n    print(x * y)\nelse:\n    print(-1)","a,b=map(int,input().split())\nif(a<10 and b<10):\n    print(a*b)\nelse:\n    print(-1)","from sys import stdin, setrecursionlimit\n\n\ndef main():\n    input = stdin.buffer.readline\n    a, b = map(int, input().split())\n\n    if 1 <= a <= 9 and 1 <= b <= 9:\n        print(a * b)\n    else:\n        print(-1)\n\n\nif __name__ == \"__main__\":\n    setrecursionlimit(10000)\n    main()\n","a, b = map(int, input.split())\nif a < 10 and b < 10:\n  print(a*b)\nelse:\n  print(-1)","A, B = map(int, input().split())\nif A < 10 and B < 10:\n    print(A * B)\nelse:\n    print(-1)","a,b=map(int,input().split())\n\nif a<=9 and b <=9:\n  print(a*b)\nelse:\n  print(-1)","A, B = map(int, input().split())\n\nif(9>=A>=1 and 9>=B>=1):\n  sum = A*B\n  print(sum)\nelse:\n  print(-1)\n  ","a , b = input().split()\n\nif len(a) * len(b) == 1:\n  print(int(a)*int(b))\nelse:\n  print(-1)","A,B = map(int, input().split())\n\nif A > 9 or B > 9:\n  print('-1')\n\nelse:\n  print(A*B)","a,b = map(int, input().split())\nif a < 10 and b < 10:\n  return a * b\nelse:\n  return -1","A,B = map(int,input().split())\nprint(A*B) if max(A,B) < 10 else print(-1)","l=[int(i) for i in input().split(\" \")]\nif l[0]>=1 and l[0]<=9 and l[1]>=1 and l[1]<=9:\n    ans=l[0]*l[1]\nelse:\n    ans=-1\nprint(ans)","A,B = map(int,input().split())\nif 1 <= A and A <= 9 :\n    if 1 <= B and B <= 9 :\n        print(A*B)\n    else :\n        print(-1)\nelse :\n    print(-1)","A, B = map(int, input().split())\nprint(A * B if A <= 9 and B <= 9 else -1)","def main():\n    A, B = map(int, input().split())\n    if A <= 9 and B <= 9:\n        print(A*B)\n    else:\n        print(-1)\n\n\nif __name__ == \"__main__\":\n    main()\n","a,b=map(int,input().split());print(-1 if a>9 or b>9 else a*b)","# coding: utf-8\n# Your code here!\na,b=map(int,input().split())\nif  (1<=a<=9) and (1<=b<=9):\n    print(a*b)\nelse:\n    print(-1)","n,k = map(int,input().split())\na = list(map(int,input().split()))\nf = list(map(int,input().split()))\na.sort()\nf.sort()\nok = max(a)*max(f)\nng = -1\n\nwhile ok-ng > 1:\n    mid = (ok+ng)\/\/2\n    t = 0\n    for i in range(n):\n        t += max(0,a[i]-int(mid\/f[i]))\n    if t > k:\n        ng = mid\n    else:\n        ok = mid\n\nprint(ok)","a, b = map(int, input().split())\n\nif a > 9 or b > 9:\n  print(-1)\nelse:\n  print(a * b)","a,b = map(int,input().split())\nif a<10 and b<10:\n  print(a*b)\nelse:\n  print(-1)","A,B = map(int,input().split())\n\nif max(A,B) > 9:\n  print(-1)\nelse:\n  print(A*B)","A,B=map(int,input().split())\nprint(A*B)","a, b = map(int, input().rstrip().split())\nr = -1 if 10 <= a or 10 <= b else a * b\nprint(r)\n","import sys\nsys.setrecursionlimit(10**6)\na,b = map(int, input().split())\n\nif a < 10 and b < 10:\n    print(a*b)\nelse:\n    print(-1)","a,b=map(int, input().split())\nif a<10 and b<10:\n\tprint(a*b)\nelse:\n\tprint(-1)","A, B = map(int, input().split())\n\nif A < 10 and B < 10:\n    ans = A * B\n    print(ans)\nelse:\n    print(-1)","AB = input().split()\nA = int(AB[0])\nB = int(AB[1])\n\nif A <= 9 and B <= 9:\n  print(A * B)\nelse:\n  print(-1)\n","A,B=input().split()\nif len(A) < 2 and len(B) < 2:\n  print(int(A)*int(B))\nelse:\n  print(-1)","a, b = map(int, input().split())\nif 1 <= a <= 9 and 1<= b <= 9:\n\tc = a * b\nelse:\n\tprint ('-1')","A, B = map(int, input().split())\n\nif A < 10 and B < 10:\n    print(int(A*B))\nelse:\n    print(-1)","a,b=map(int,input().split())\n\nif a < 10 and b < 10:\n    print(a*b)\nelse:\n    print(-1)","A, B = map(int,input().split())\nif A<10 and B<10:\n    print(A*B)\nelse:\n    print(-1)","N = int(input())\nkuku= [1, 2, 3, 4, 5, 6, 7, 8, 9]\nc = 0\n\nfor a in kuku:\n    for b in kuku:\n        if a*b == N:\n            c+=1\nif c>=1:\n    print('Yes')\nelse:\n    print('No')","a,b=map(int, input().split())\nif a>9 or b>9:\n  print(\"-1\")\nelse:\n  print(a*b)","a,b = map(int, input().split())\nif 1<=a<=9 and 1<=b<=9:\n    print(a*b)\nelse:\n    print(-1)","A, B = map(int, input().split())\n\nif A >= 10:\n    print(\"-1\")\nelif B >= 10:\n    print(\"-1\")\nelse:\n    print(A*B)","A,B = map(int,input().split())\nif 1 <= A <= 9 and 1 <= B <= 9:\n  print(A*B)\nelse:\n  print(-1)  "]}
{"description_html":"<span class=\"lang-en\">\n<p>Score : <var>200<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>Takahashi and Aoki will have a battle using their monsters.<\/p>\n<p>The health and strength of Takahashi's monster are <var>A<\/var> and <var>B<\/var>, respectively, and those of Aoki's monster are <var>C<\/var> and <var>D<\/var>, respectively.<\/p>\n<p>The two monsters will take turns attacking, in the order Takahashi's, Aoki's, Takahashi's, Aoki's, ...\nHere, an attack decreases the opponent's health by the value equal to the attacker's strength.\nThe monsters keep attacking until the health of one monster becomes <var>0<\/var> or below. The person with the monster whose health becomes <var>0<\/var> or below loses, and the other person wins.<\/p>\n<p>If Takahashi will win, print <code>Yes<\/code>; if he will lose, print <code>No<\/code>.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li><var>1 \\leq A,B,C,D \\leq 100<\/var><\/li>\n<li>All values in input are integers.<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>A<\/var> <var>B<\/var> <var>C<\/var> <var>D<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>If Takahashi will win, print <code>Yes<\/code>; if he will lose, print <code>No<\/code>.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>10 9 10 10\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>No\n<\/pre>\n<p>First, Takahashi's monster attacks Aoki's monster, whose health is now <var>10-9=1<\/var>.<\/p>\n<p>Next, Aoki's monster attacks Takahashi's monster, whose health is now <var>10-10=0<\/var>.<\/p>\n<p>Takahashi's monster is the first to have <var>0<\/var> or less health, so Takahashi loses.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>46 4 40 5\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>Yes\n<\/pre><\/section>\n<\/div>\n<\/span>","description_string":"\nScore : 200 points\n\n\nProblem StatementTakahashi and Aoki will have a battle using their monsters.\nThe health and strength of Takahashi's monster are A and B, respectively, and those of Aoki's monster are C and D, respectively.\nThe two monsters will take turns attacking, in the order Takahashi's, Aoki's, Takahashi's, Aoki's, ...\nHere, an attack decreases the opponent's health by the value equal to the attacker's strength.\nThe monsters keep attacking until the health of one monster becomes 0 or below. The person with the monster whose health becomes 0 or below loses, and the other person wins.\nIf Takahashi will win, print Yes; if he will lose, print No.\n\n\n\n\nConstraints\n1 \\leq A,B,C,D \\leq 100\nAll values in input are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nA B C D\n\n\n\n\n\nOutputIf Takahashi will win, print Yes; if he will lose, print No.\n\n\n\n\n\n\nSample Input 110 9 10 10\n\n\n\n\n\nSample Output 1No\n\nFirst, Takahashi's monster attacks Aoki's monster, whose health is now 10-9=1.\nNext, Aoki's monster attacks Takahashi's monster, whose health is now 10-10=0.\nTakahashi's monster is the first to have 0 or less health, so Takahashi loses.\n\n\n\n\n\nSample Input 246 4 40 5\n\n\n\n\n\nSample Output 2Yes\n\n\n","orig_lang_html":"<span class=\"lang-en\">\n<p>Score : <var>200<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>Takahashi and Aoki will have a battle using their monsters.<\/p>\n<p>The health and strength of Takahashi's monster are <var>A<\/var> and <var>B<\/var>, respectively, and those of Aoki's monster are <var>C<\/var> and <var>D<\/var>, respectively.<\/p>\n<p>The two monsters will take turns attacking, in the order Takahashi's, Aoki's, Takahashi's, Aoki's, ...\nHere, an attack decreases the opponent's health by the value equal to the attacker's strength.\nThe monsters keep attacking until the health of one monster becomes <var>0<\/var> or below. The person with the monster whose health becomes <var>0<\/var> or below loses, and the other person wins.<\/p>\n<p>If Takahashi will win, print <code>Yes<\/code>; if he will lose, print <code>No<\/code>.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li><var>1 \\leq A,B,C,D \\leq 100<\/var><\/li>\n<li>All values in input are integers.<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>A<\/var> <var>B<\/var> <var>C<\/var> <var>D<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>If Takahashi will win, print <code>Yes<\/code>; if he will lose, print <code>No<\/code>.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>10 9 10 10\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>No\n<\/pre>\n<p>First, Takahashi's monster attacks Aoki's monster, whose health is now <var>10-9=1<\/var>.<\/p>\n<p>Next, Aoki's monster attacks Takahashi's monster, whose health is now <var>10-10=0<\/var>.<\/p>\n<p>Takahashi's monster is the first to have <var>0<\/var> or less health, so Takahashi loses.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>46 4 40 5\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>Yes\n<\/pre><\/section>\n<\/div>\n<\/span>","orig_lang_string":"\nScore : 200 points\n\n\nProblem StatementTakahashi and Aoki will have a battle using their monsters.\nThe health and strength of Takahashi's monster are A and B, respectively, and those of Aoki's monster are C and D, respectively.\nThe two monsters will take turns attacking, in the order Takahashi's, Aoki's, Takahashi's, Aoki's, ...\nHere, an attack decreases the opponent's health by the value equal to the attacker's strength.\nThe monsters keep attacking until the health of one monster becomes 0 or below. The person with the monster whose health becomes 0 or below loses, and the other person wins.\nIf Takahashi will win, print Yes; if he will lose, print No.\n\n\n\n\nConstraints\n1 \\leq A,B,C,D \\leq 100\nAll values in input are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nA B C D\n\n\n\n\n\nOutputIf Takahashi will win, print Yes; if he will lose, print No.\n\n\n\n\n\n\nSample Input 110 9 10 10\n\n\n\n\n\nSample Output 1No\n\nFirst, Takahashi's monster attacks Aoki's monster, whose health is now 10-9=1.\nNext, Aoki's monster attacks Takahashi's monster, whose health is now 10-10=0.\nTakahashi's monster is the first to have 0 or less health, so Takahashi loses.\n\n\n\n\n\nSample Input 246 4 40 5\n\n\n\n\n\nSample Output 2Yes\n\n\n","solve_rate":0.5883350288,"codenet_problem_id":"p02700","input_testcases":{"28":"223 8 4 17","23":"117 8 1 10","81":"145 8 2 17","15":"7 14 1 12","13":"7 14 3 12","27":"139 8 4 17","9":"5 14 3 10","18":"79 6 1 10","83":"223 8 6 17","63":"6 9 3 10","68":"2 14 3 12","22":"91 8 1 10","25":"139 8 1 17","7":"5 13 3 10","24":"117 8 1 17","5":"5 9 3 10","75":"79 11 1 10","20":"79 8 1 10","69":"7 14 3 18","11":"5 14 3 12","73":"79 1 1 10","77":"91 8 2 10","82":"139 11 4 17","72":"7 7 1 22","84":"366 15 4 17","26":"139 8 2 17","78":"117 7 1 10","60":"10 9 3 10","65":"5 13 3 19","58":"10 9 9 10","79":"172 8 1 17","17":"7 7 1 12","80":"227 8 1 17","29":"366 8 4 17"},"output_testcases":{"28":"Yes\n","23":"Yes\n","81":"Yes\n","15":"Yes\n","13":"Yes\n","27":"Yes\n","9":"Yes\n","18":"Yes\n","83":"Yes\n","63":"Yes\n","68":"Yes\n","22":"Yes\n","25":"Yes\n","7":"Yes\n","24":"Yes\n","5":"Yes\n","75":"Yes\n","20":"Yes\n","69":"Yes\n","11":"Yes\n","73":"Yes\n","77":"Yes\n","82":"Yes\n","72":"Yes\n","84":"Yes\n","26":"Yes\n","78":"Yes\n","60":"Yes\n","65":"Yes\n","58":"Yes\n","79":"Yes\n","17":"Yes\n","80":"Yes\n","29":"Yes\n"},"n_missing":69,"programs":["a,b,c,d = map(int,input().split())\n\nwhile(True):\n    #print(c)\n    c -= b\n    #print(\"C\",c)\n    if c<=0:\n        print(\"Yes\")\n        break\n    #print(a)\n    a -= d\n    #print(\"A\",a)\n    if a<=0:\n        print(\"No\")\n        break","a,b,c,d = map(int, input().split())\n# a,b,c,d = [46, 4, 40, 5]\n\ntCount = (c+b-1)\/\/b\naCount = (a+d-1)\/\/d\nprint('Yes' if tCount <= aCount else 'No')\n\n","import sys\nsys.setrecursionlimit(10 ** 9)\ninput = sys.stdin.readline\nfrom itertools import permutations,  combinations, accumulate\nfrom functools import *\nfrom collections import deque, defaultdict, Counter\nfrom heapq import heapify, heappop, heappush, heappushpop\n\nINF = float('inf')\nNIL = - 1\n\n\nt, B, a, D = map(int, input().split())\n\nwhile True:\n    a -= B\n    if a <= 0:\n        print('Yes')\n        exit()\n    t -= D\n    if t <= 0:\n        print('No')\n        exit()\n","import numpy as np\nif __name__ == \"__main__\":\n    # \u5165\u529b\u30d1\u30bf\u30fc\u30f3\uff0e\n    # \u8981\u7d20\u306e\u6570\u304c\u308f\u304b\u3063\u3066\u3044\u308b\u30d1\u30bf\u30fc\u30f3\n    ### a,b\n    a_hp, a_at, b_hp, b_at = map(int, input().split())\n    ans = ''\n    # print(a_hp)\n    # print(a_at)\n    # print(b_hp)\n    # print(b_at)\n    while True:\n        b_hp -= a_at\n        #print(b_hp)\n        if b_hp <= 0:\n            ans = 'Yes'\n            break\n        a_hp -= b_at\n        #print(a_hp)\n        if a_hp <= 0:\n            ans = 'No'\n            break\n    \n    print(ans)\n\n","# -*- coding: utf-8 -*-\n\nimport sys\nimport math\n\n\ndebug = False\n\ndef log(text):\n    if debug:\n        print(text)\n\ndef parse_input(lines_as_string = None):\n\n    global debug\n    lines = []\n    if lines_as_string is None:\n        debug = False\n        # for line in sys.stdin:\n        #     lines.append(line)\n        lines.append(input())\n    else:\n        debug = True\n        lines = [e for e in lines_as_string.split(\"\\n\")][1:-1]\n\n    (a, b, c, d) = [int(e) for e in lines[0].split(' ')]\n\n    return (a, b, c, d)\n\n\ndef solve(a, b, c, d):\n\n    ta = c \/\/ b \n    ao = a \/\/ d\n\n    if ta >= ao:\n        result = 'Yes'\n    else:\n        result = 'No'\n    \n    return result\n    \n\n\ndef main():\n    # \u51fa\u529b\n    result = solve(*parse_input())\n    if isinstance(result, list):\n        for r in result:\n            print(\"%s\" % r, sep='')\n    else:\n        print(\"%s\" % result, sep='')\n\nif __name__ == '__main__':\n\n    main()","#200426B\nA, B, C, D = map(int, input().split())\nx = C\/\/B\ny = A\/\/D\n\nif C%B ==0:\n    x = x-1\nif A%D ==0:\n    y = y-1\n#print(x)\n#print(y)\nif x <= y:\n    \n    print(\"Yes\")\nelse:\n    print(\"No\")","a, b, c, d = map(int, input().split())\nwhile True:\n    c -= b\n    if (c <= 0):\n        ans = 'Yes'\n        break\n    a -= d\n    if (a <= 0):\n        ans = 'No'\n        break\nprint(ans)","a,b,c,d = map(int,input().split())\nwhile True:\n    x = c-b\n    c = x\n    if x<1:\n        print('Yes')\n        break\n    y = a-d\n    a = y\n    if y<1:\n        print('No')\n        break","A, B, C, D = map(int, input().split())\n\nwhile A > 0 and C > 0:\n    C -= B\n    if C <= 0:\n        print(\"Yes\")\n        break\n    A -= D\n    if A <= 0:\n        print(\"No\")\n        break\n","A,B,C,D=map(int,input().split())\nwhile A!=0 and C!=0:\n    C=C-B\n    A=A-D\nif C<=0:\n    print ('Yes')\nelse:\n    print ('No')","A, B, C, D = list(map(int, input().split()))\n\nwhile(1):\n  C = C - B\n  if C<=0:\n    print(\"Yes\")\n    break\n  A = A - D\n  if A<=0:\n    print(\"No\")\n    break","from sys import stdin\ndef main():\n    #\u5165\u529b\n    readline=stdin.readline\n    a,b,c,d=map(int,readline().split())\n    flag=0\n    while a>=1 and c>=1:\n        if flag==0:\n            c-=b\n            flag=1\n        else:\n            a-=d\n            flag=0\n    \n    if a>0:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__==\"__main__\":\n    main()","a, b, c, d = map(int, input().split())\ni = 0\nwhile True:\n    if i%2 == 0:\n        c -= b\n        if c <= 0:\n            print('Yes')\n            break\n    \n    else:\n        a -= d\n        if a <= 0:\n            print('No')\n            break\n    \n    i += 1","a, b, c, d = map(int, input().split())\nwhile a * c:\n\u00a0 \u00a0 c -= b\n\u00a0 \u00a0 a -= d\nprint('Yes' if a else 'No')","a,b,c,d=map(int,input().split())\nflag=0\nwhile flag==0:\n    c=c-b\n    if c<=0:\n        print(\"Yes\")\n        flag=1\n        break\n    else:\n        a=a-d\n        if a<=0:\n            print(\"No\")\n            flag=1\n            break\n        ","a,b,c,d = map(int,input().split())\n\nwhile a > 0 or c > 0:\n    c -= b\n    a -= d\n    if a <= 0:\n        print('No')\n        exit()\n    else:\n        print('Yes')\n        exit()","a, b, c, d = map(int, input().split())\nwhile a > 0 and c > 0:\n  c = c-b\n  a = a-d\n  \nif (a<=0 and c<=0) or c<=0:\n  print('Yes')\nelse:\n  print('No')","a,b,c,d=map(int,input().split())\nif (a\/\/d+1 < c\/\/b):\n    print(\"No\")\nelif a\/\/d ==c\/\/b:\n    if (a%d==0 and c%b!=0) :\n        print(\"No\")\n    else:\n        print(\"Yes\")\nelse:\n    print(\"Yes\")","a,b,c,d=map(int,input().split(' '))\nwhile True:\n    c-=b\n    if c<=0:\n        print('Yes')\n        break\n    a-=d\n    if a<=0:\n        print('No')\n        break","a, b, c, d = list(map(int, input().split()))\n\nif (a-1)\/\/d >= (c-1)\/\/b:\n    print('Yes')\nelse:\n    print('No')","# \u9ad8\u6a4b\u541b\u306e\u30e2\u30f3\u30b9\u30bf\u30fc\u306f\u4f53\u529b\u304c A \u3067\u653b\u6483\u529b\u304c B \n# \u9752\u6728\u541b\u306e\u30e2\u30f3\u30b9\u30bf\u30fc\u306f\u4f53\u529b\u304c C \u3067\u653b\u6483\u529b\u304c D \n# \u30e2\u30f3\u30b9\u30bf\u30fc\u306e\u4f53\u529b\u304c 0 \u4ee5\u4e0b\u306b\u306a\u3063\u305f\u65b9\u306e\u8ca0\u3051\u3001\n# \u9ad8\u6a4b\u541b\u304c\u52dd\u3064\u306a\u3089 Yes\u3001\u8ca0\u3051\u308b\u306a\u3089 No \u3092\u51fa\u529b\n\nA, B, C, D = map(int, input().split())\n\nwhile A > 0 and C > 0:\n    C -= B\n    if C <= 0:\n        print('Yes')\n        break\n    A -= D\n    if A <= 0:\n        print('No')\n        break","A,B,C,D=map(int,input().split())\n\nsFlag=True\nHPC=C\nHPA=A\nwhile(sFlag):\n  HPC=HPC-B\n  if(HPC<=0):\n    print('Yes')\n    sFlag=False\n    break\n  HPA=HPA-D\n  if(HPA<=0):\n    print('No')\n    sFlag=False\n    break","# -*- coding: utf-8 -*-\n\nTT, TA, AT, AA = map(int, input().split())\n\nwhile True:\n    AT = AT - TA # T attack\n    if (AT <= 0):\n        print(\"Yes\")\n        break\n\n    TT = TT - AA #A attack\n    if (TT <= 0):\n        print(\"No\")\n        break","a , b , c, d = map(int,input().strip().split())\ncount = 0\nif (a-b)>0:\n    count = 0\nif (d-c)==0:\n    count = 1\nif count==0:\n    print('Yes')\nelse:\n    print('No')","from math import ceil \nA, B, C, D = map(int,input().split())\n\n#print(ceil(C\/B),ceil(A\/D))\n\ntkhs_cnt = ceil(C\/B)\naok_cnt = ceil(A\/D)\nans = \"Yes\" if aok_cnt >= tkhs_cnt else \"No\"\nprint(ans)","A,B,C,D = map(int,input().split())\n\nwhile True:\n    C -= B\n    if C <= 0 :\n        print('Yes')\n        break;\n    A -= D\n    if A <= 0:\n        print('No')\n        break;\n","def readinput():\n    a,b,c,d=map(int,input().split())\n    return a,b,c,d\n\ndef main(a,b,c,d):\n    while True:\n        c-=b\n        if c<=0:\n            return 'Yes'\n        a-=d\n        if a<=0:\n            return 'No'\n\n\nif __name__=='__main__':\n    a,b,c,d=readinput()\n    ans=main(a,b,c,d)\n    print(ans)\n","a,b,c,d=map(int,input().split())\nans=0\nfor i in range(1,101):\n  if b*i>=c and d*(i-1)<a:\n    ans=1\n    break\n  elif b*i<c and d*i>=a:\n    ans=0\n    break\nif ans==1:\n  print('Yes')\nelif ans==0:\n  print('No')","import math\nA,B,C,D = list(map(int,input().split()))\nx = math.ceil(C\/B)\ny = math.ceil(A\/D)\nif x > y:\n    print('No')\nelse:\n    print('Yes')","K = input().split(\" \")\nk = [int(n) for n in K]\nt =k[0]\/\/k[3]\na = k[2]\/\/k[1]\nt1 = k[0]%k[3]\na1 = k[2]%k[1]\nif t > a:\n    print('Yes')\nelif t == a and a1 == 0:\n    print('Yes')\nelif t+1 == a and t1 != 0:\n    print('Yes')\nelse:\n    print('No')\n","a, b, c, d = map(int, input().split())\n\nwhile a>0 and c>0:\n  c -= b\n  a -= d\n  \n  \n\nif a>0:\n  print(\"Yes\")\n  \nelse:\n  print(\"No\")\n  \n  \n","a,b,c,d = map(int,input().split())\n\nwhile(True):\n    c -= b\n    a -= d\n    if c<= 0:\n        print(\"Yes\")\n        break\n    elif a <= 0:\n        print(\"No\")\n        break","A, B, C, D = map(int, input().split())\nwhile True:\n  C = C - B\n  if C <= 0:\n    print(\"Yes\")\n    break\n  A = A - D\n  if A <= 0:\n    print(\"No\")\n    break","A, B, C, D = map(int, input().split())\n\nfor i in range(1000):\n    if (i % 2 == 0):\n        C = C - B\n        if C <= 0:\n            print('Yes')\n            break\n    else:\n        A = A - D\n        if A <= 0:\n            print('No')\n            break\n","import sys, re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians, gcd\nfrom itertools import accumulate, permutations, combinations, product, groupby\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\ndef ZIP(n): return zip(*(MAP() for _ in range(n)))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\nA, B, C, D = MAP()\n\nif -(-C\/\/B)  > -(-A\/\/D):\n\tprint(\"No\")\nelse:\n\tprint(\"Yes\")","# \u9ad8\u6a4b\u541b\u3068\u9752\u6728\u541b\u304c\u30e2\u30f3\u30b9\u30bf\u30fc\u3092\u95d8\u308f\u305b\u307e\u3059\u3002\n# \u9ad8\u6a4b\u541b\u4f53\u529b  A  \u653b\u6483\u529b  B  \u3067\u3059\u3002\n# \u9752\u6728\u541b\u4f53\u529b  C  \u653b\u6483\u529b  D  \u3067\u3059\u3002\n# \u9ad8\u6a4b\u541b\u2192\u9752\u6728\u541b\u2192\u9ad8\u6a4b\u541b\u2192\u9752\u6728\u541b\u2192... \u306e\u9806\u306b\u653b\u6483\u3092\u884c\u3044\u307e\u3059\u3002\n# \u3053\u306e\u3053\u3068\u3092\u3069\u3061\u3089\u304b\u306e\u30e2\u30f3\u30b9\u30bf\u30fc\u306e\u4f53\u529b\u304c  0  \u4ee5\u4e0b\u306b\u306a\u308b\u307e\u3067\u7d9a\u3051\u305f\u3068\u304d\u3001\n# \u5148\u306b\u81ea\u5206\u306e\u30e2\u30f3\u30b9\u30bf\u30fc\u306e\u4f53\u529b\u304c  0  \u4ee5\u4e0b\u306b\u306a\u3063\u305f\u65b9\u306e\u8ca0\u3051\u3001\u305d\u3046\u3067\u306a\u3044\u65b9\u306e\u52dd\u3061\u3067\u3059\u3002\n# \u9ad8\u6a4b\u541b\u304c\u52dd\u3064\u306a\u3089 Yes\u3001\u8ca0\u3051\u308b\u306a\u3089 No \u3092\u51fa\u529b\u3057\u3066\u304f\u3060\u3055\n\na, b, c, d = list(map(int, input(). split()))#10 9 10 10\n\nwhile True:\n    c -= b\n    if c  <= 0:\n        print(\"Yes\")\n        break\n    a -= d\n    if a <= 0:\n        print(\"No\")\n        break\n\n\n","A,B,C,D=map(int,input().split())\n\nx=-(-C\/\/B)\ny=-(-A\/\/D)\n\nif x>y:\n    print(\"No\")\nelse:\n    print(\"Yes\")","a, b, c, d = map(int, input().split())\nwhile a > 0 or c > 0:\n    c -= b\n    if c <= 0:\n        print(\"Yes\")\n        break\n    a -= d\n    if a <= 0:\n        print(\"No\")\n        break","a,b,c,d=map(int,input().split())\n\nt=0\nwhile 1:\n    if t==0:\n        c-=b\n        t=1\n        if c<=0:\n            print(\"Yes\")\n            exit()\n    else:\n        a-=d\n        t=0\n        if a<=0:\n            print(\"No\")\n            exit()","a, b, c, d = map(int, input().split())\n\nwhile True:\n    c -= b\n    if c <= 0:\n        print('Yes')\n        break\n\n    a -= d\n    if a <= 0:\n        print('No')\n        break","#B\na, b, c, d = map(int, input().split())\nfor i in range(0, 100):\n    c = c - b\n    if c <= 0:\n        print('Yes')\n        break\n\n    a = a - d\n    if a <= 0:\n        print('No')\n        break   ","a, b, c, d = map(int, input().split())\ncount_a = 0\ncount_b = 0\nwhile a>0:\n    a -= d\n    count_a += 1\nwhile c>0:\n    c -= b\n    count_b += 1\n\nif count_a > count_b:\n    print(\"No\")\nelse:\n    print(\"Yes\")","A, B, C, D = map(int, input().split())\nfor i in range(101):\n    if C-B*i <= 0:\n        print(\"Yes\")\n        break\n    elif A-D*i <= 0:\n        print(\"No\")\n        break","A, B, C, D = map(int, input().split())\nwhile A > 0 and C > 0:\n  C -= B\n  if C <= 0:\n    break\n  A -= D\n  if A <= 0:\n    break\nif C <= 0:\n  print('Yes')\nif A <= 0:\n  print('No')","def i1str():\n    return input()\n\n\ndef istrs(n=None):\n    if n is None:\n        return input().split()\n    a = []\n    for _ in range(n):\n        a.append(istrs())\n    return a\n\n\ndef i1num():\n    return int(input())\n\n\ndef inums(n=None):\n    if n is None:\n        return list(map(int, input().split()))\n    a = []\n    for _ in range(n):\n        a.append(inums())\n    return a\n\n\ndef ostrs(l, sp=\" \"):\n    print(sp.join(l))\n\n\ndef onums(l, sp=\" \"):\n    print(sp.join(map(str, l)))\n\n\ndef solve(a, b, c, d):\n    is_a_turn = True\n    while True:\n        if a <= 0:\n            return \"No\"\n        if c <= 0:\n            return \"Yes\"\n        if is_a_turn:\n            c -= b\n        else:\n            a -= d\n        is_a_turn = not is_a_turn\n\n\nif __name__ == \"__main__\":\n    a, b, c, d = inums()\n    print(solve(a, b, c, d))\n","A, B, C, D = map(int, input().split())\n\nflag = 0\nT = 1\n\nwhile flag == 0:\n    if T == 1:\n        C = C - B\n        T = 0\n        if C <= 0:\n            flag = 1\n    else:\n        A = A - D\n        T = 1\n        if A <= 0:\n            flag = 2\n\nif T == 1:\n    print('No')\nelse:\n    print('Yes')\n","a,b,c,d = map(int,input().split())\nans = \"\"\nwhile a>0 and c>0:\n    c-=b\n    if c<1:\n        ans = \"Yes\"\n        break\n    a-=d\n    if a<1:\n        ans = \"No\"\n        break\nprint(ans)","A, B, C, D =  map(int, input().split())\nx = A\ny = C\nT_count = 0 \nA_count = 0\nfor i in range(100):\n    x = x-C\n    if x >= 0:\n        T_count += 1 \n    else:\n        T_count += 0\n        break\n\nfor j in range(100):\n    y = y-A\n    if y >= 0:\n        A_count += 1 \n    else:\n        A_count += 0\n        break\n\nif T_count <= A_count:\n    print('Yes')\nelse:print('No')","A, B, C, D = map(int, input().split())\nwhile True:\n    if C <= B:\n        print(\"Yes\")\n        break\n    if A <= D:\n        print(\"No\")\n        break\n    A -= D\n    C -= B","[a, b, c, d] = [int(i) for i in input().split()]\nwhile a > 0 and c > 0:\n    c -= b\n    a -= d\nif c <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")","a,b,c,d = (int(x) for x in input().split())\n \nwhile(True):\n    c-=b\n    if(c <= 0):\n        print(\"Yes\")\n        break\n    a-=d\n    if(a <= 0):\n        print(\"No\")\n        break","p =list(map(int, input().split()))\na = p[0]\nb = p[1]\nc = p[2]\nd = p[3]\nwhile True:\n    c = c - b\n    if c <= 0:\n        print(\"Yes\")\n        exit()\n    a = a - d\n    if a <=0:\n        print(\"No\")\n        exit()","a, b, c, d = map(int, input().split())\nif c % b == 0:\n    t = c \/\/ b\nelse:\n    t = c \/\/ b + 1\nif a % d == 0:\n    k = a \/\/ d\nelse:\n    k = a \/\/ d + 1\n    \nprint('Yes' if t <= k else 'No')","import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(2 * 10**6)\n\n\ndef inpl():\n    return list(map(int, input().split()))\n\n\ndef main():\n    A, B, C, D = inpl()\n    takahashi = (C + B - 1) \/\/ B\n    aoki = (A + D - 1) \/\/ D\n\n    # print(takahashi, aoki)\n    if takahashi <= aoki:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == '__main__':\n    main()\n","a,b,c,d=map(int,input().split( ))\ng=0\nwhile a>0 and c>0:\n    if g%2==0:\n        c-=b\n    else:\n        a-=d\n    g+=1\nif a>0:\n    print('Yes')\nelse:\n    print('No')\n","A, B, C, D = map(int, input().split())\n\nif -(-C \/\/ B) <= -(-A \/\/ D):\n    print('Yes')\nelse:\n    print('No')\n","A, B, C, D = list(map(int, input().split()))\n\na = A \/\/ D\nb = C \/\/ B\nN = max(a, b) + 1\nfor i in range(N):\n    if C > 0:\n        C -= B\n        if C <= 0:\n            break\n    if A > 0:\n        A -= D\n        if A <= 0:\n            break\n\nans = \"No\"\nif A > C:\n    ans = \"Yes\"\n\nprint(ans)","A, B, C, D = map(int, input().split(' '))\n\nwhile True:\n  C = C - B\n  if C <= 0:\n    print('Yes')\n    break\n  A = A - D\n  if A <= 0:\n    print('No')\n    break","a, b, c, d = list(map(int, input().strip().split()))\n\n\nwhile True:\n    c -= b\n    if c <= 0 :\n        print('Yes')\n        break\n    \n    a -= d\n    if a <= 0:\n        print('No')\n        break","A,B,C,D=map(int,input().split())\nif A%D==0:\n\tx=A\/\/D\nelse:\n\tx=A\/\/D +1\nif C%B==0:\n\ty=C\/\/B\nelse:\n\ty=C\/\/B +1\nif y<=x:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")","A, B, C, D = map(int, input().split())\nwhile True:\n    C -= B\n    if C <= 0:\n        print(\"Yes\")\n        exit()\n    A -= D\n    if A <= 0:\n        print(\"No\")\n        exit()\n","a,b,c,d = map(int, input().split())\n\nwhile a > 0:\n  c -= b\n  if c <= 0:\n    print('Yes')\n    break\n  a -= d\n  if a <= 0:\n    print('No')\n    break\n  ","t_hp, t_att, a_hp, a_att = map(int, input().split())\n\nwhile(t_hp > 0 and a_hp > 0):\n    a_hp -= t_att\n    t_hp -= a_att\n\nif a_hp <= 0:\n    print('Yes')\nelse:\n    print('No')\n","hp_a,at_a, hp_b, at_b = list(map(int, input().split()))\nwhile True:\n  hp_b = hp_b - at_a\n  if hp_b <= 0:\n    print(\"Yes\")\n    exit()\n  hp_a = hp_a - at_b\n  if hp_a <= 0:\n    print(\"No\")\n    exit()\n","\nif __name__ == \"__main__\":\n    A, B, C, D = map(int, input().split())\n    ret = \"No\"\n    while A > 0 and C > 0:\n        A = A - D\n        print(A)\n        C = C - B\n        print(C)\n    if C <= 0:\n        ret = \"Yes\"\n    print(ret)","A, B, C, D=map(int,input().split())\n\nwhile C or A >= 0:\n    C -= B\n    A -= D\n    if C <= 0:\n        print(\"Yes\")\n    if A <= 0:\n        print(\"No\")\n    break","a, b, c, d = map(int, input().split())\nwhile True:\n  c -= b\n  if c <= 0:\n    print('Yes')\n    break\n  a -= d\n  if a <= 0:\n    print('No')\n    break\n  ","A, B, C, D = map(int, input().split())\n\ntakahashi = 0\naoki = 0\n\nwhile C > 0:\n  C -= B\n  takahashi += 1\n  \nwhile A > 0:\n  A -= D\n  aoki += 1\n  \nif takahashi <= aoki:\n  print(\"Yes\")\nelse:\n  print(\"No\")","def main():\n    A,B,C,D = map(int,input().split())\n    temp = 0\n\n    while A>0 and C>0:\n        temp += 1\n        if temp%2 == 1:\n            C = C - B\n        else:\n            A -= D\n        #print(temp,A,C)\n\n    if temp%2 == 1:\n        return 'Yes'\n    else:\n        return 'No'\n\nprint(main())\n","A, B, C, D = map(int, input().split())\n\nwhile True:\n  D -= B\n  if D > 0:\n    A -= C\n    if A <= 0:\n      print(\"No\")\n      exit()\n  else:\n    print(\"Yes\")\n    exit()","def main():\n    A, B, C, D = map(int, input().split())\n    while True:\n        C -= B\n        if C <= 0:\n            print(\"No\")\n            return 0\n        A -= D\n        if A <= 0:\n            print(\"Yes\")\n            return 0\n\n    return 0\n\nif __name__ == '__main__':\n    main()","\na,b,c,d = map(int, input().split())\ncnta = 0\ncntc = 0\nwhile a <= 0:\n    a -= d\n    cnta += 1\n\nwhile c <= 0:\n    c -= b\n    cntc += 1\n    \nif cnta >= cntc:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n    ","A, B, C, D= map(int, input().split())\n\n\nwhile A > 0 and C > 0:\n    C -= B\n    if C <= 0:\n        print(\"Yes\")\n        exit()\n    A -= D\n    if A <= 0:\n        print(\"No\")\n        exit()","a,b,c,d=map(int,input().split())\ne=a\/\/d\nf=c\/\/b\ng=0\nif a%d!=0:\n    e=e+1\nelse:\n    g=0\nif c%b!=0:\n    f=f+1\nelse:\n    g=0\nif f<=e:\n    print('Yes')\nelse:\n    print('No')","import math\n\na, b, c, d = map(int, input().split())\n\nif math.ceil(a \/ d) < math.ceil(c \/ b):\n    print('No')\nelse:\n    print('Yes')","import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = set()\n\nfor i in range(n):\n    a.add(input())\n\nprint(len(a))","a,b,c,d=map(int,input().split())\nt=c\/\/b+1if not c\/b==c\/\/b else c\/\/b\na=a\/\/d+1if not a\/d==a\/\/d else a\/\/d\nprint('Yes'if t<=a else'No')\n","h1, a1, h2, a2 = map(int, input().split())\n\nn1 = h1\/\/a2 + (h1%a2 != 0)\nn2 = h2\/\/a1 + (h2%a1 != 0)\n\nif n2 <= n1:\n    print(\"Yes\")\nelse:\n    print(\"No\")","import math\na,b,c,d = map(int,input().split())\nao = math.ceil(a\/d)\nta = math.ceil(c\/b)\nif ta <= ao:\n  print('Yes')\nelse:\n  print('No')","#!\/usr\/bin\/env python3\nimport sys\n\nYES = \"Yes\"  # type: str\nNO = \"No\"  # type: str\n\n\ndef solve(A: int, B: int, C: int, D: int):\n    while True:\n        C -= B\n        if C <= 0:\n            print(YES)\n            break\n        A -= D\n        if A <= 0:\n            print(NO)\n            break\n    return\n\n\n# Generated by 1.1.6 https:\/\/github.com\/kyuridenamida\/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    A = int(next(tokens))  # type: int\n    B = int(next(tokens))  # type: int\n    C = int(next(tokens))  # type: int\n    D = int(next(tokens))  # type: int\n    solve(A, B, C, D)\n\nif __name__ == '__main__':\n    main()","A,B,C,D= map(int,input().split())\nif A%D == 0:\n  E = A \/\/ D\nelse:\n  E = A\/\/D + 1\nif C%B == 0:\n  F= C \/\/ B\nelse:\n  F= C \/\/ B+1\nif E >= F:\n  print('Yes')\nelse:\n  print('No')\n","import math\nA,B,C,D = list(map(int, input().split()))\n\nturn_t = math.ceil(C \/ B);\nturn_a = math.ceil(A \/ D);\n\nprint(\"No\" if turn_t > turn_a else \"Yes\")","A, B, C, D = map(int, input().split())\n\nx = C \/ B\ny = C % B\np = A \/ D\nq = A % D\n\nif (y <> 0):\n  x += 1\nif (q <> 0):\n  p += 1\n\nif (x <= p):\n  print(\"Yes\")\nelif (x > p):\n  print(\"No\")\n","A,B,C,D = map(int, input().split())\n\nfor i in range(1000):\n    C = C - B\n    if C <=0:\n        print(\"Yes\")\n        break\n    A = A - D\n    if A <= 0:\n        print(\"No\")\n        break","a, b, c, d = map(int, input().split())\nac = int(a \/ d + 1)\nbc = int(c \/ b + 1)\n \nif ac >= bc:\n    print('Yes')\nelse:\n    print('No')","A, B, C, D = map(int, input().split())\n\nwhile True:\n  C -= B\n  if C <= 0:\n    print(\"Yes\")\n    break\n  A -= D\n  if A <= 0:\n    print(\"No\")\n    break","A, B, C, D = map(int, input().split())\nflag = True\n\nwhile True:\n  C -= B\n  if C <= 0:\n    break\n  A -= D\n  if A <= 0:\n    flag = False\n    break\n\nif flag:\n  print(\"Yes\")\nelse:\n  print(\"No\")","A,B,C,D = map(int,input().split())\n\nlifeT = A\nlifeA = C\n\nwhile True:\n    lifeA -= B\n    if lifeA<=0:\n        print('Yes')\n        break\n    lifeT -= D\n    if lifeT<=0:\n        print('No')\n        break","a,b,c,d = map(int,input().split())\n\nif -(-c\/\/b) >= -(-a\/\/d):\n    print(\"No\")\nelse:\n    print(\"Yes\")","import sys, re, os\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians\nfrom itertools import permutations, combinations, product, accumulate\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom heapq import heapify, heappop, heappush\n\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef S_MAP(): return map(str, input().split())\ndef LIST(): return list(map(int, input().split()))\ndef S_LIST(): return list(map(str, input().split()))\n \nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\nA, B, C, D = MAP()\n\nwhile 1:\n    C -= B\n    # print(C)\n    if C <= 0:\n        print(\"Yes\")\n        exit()\n    A -= D\n    # print(A)\n    if A <= 0:\n        print(\"No\")\n        exit()\n","A,B,C,D = map(int,input().rstrip().split(\" \"))\nfor i in range(100):\n    C -= B\n    if (C <= 0):\n        print(\"Yes\")\n        break\n    A -= D\n    if (A <= 0):\n        print(\"No\")\n        break","import math\n\nA, B, C, D = map(int, input().split())\n\ncnt1 = math.ceil(C \/ B)\ncnt2 = math.ceil(A \/ D)\n\nif cnt1 <= cnt2:\n    print('Yes')\nelse:\n    print('No')\n","A,B,C,D=map(int,input().split())\n\nwhile(1):\n    A=A-D\n    print(A)\n    C=C-B\n    print(C)\n    if A <= 0:\n        print(\"No\")\n        break\n    else:\n        print(\"Yes\")\n        break","A,B,C,D = map(int,input().split())\n#print(A,B,C,D)\n\nwhile A > 0:\n    C -= B\n    A -= D\n    if C <= 0:\n        print(\"Yes\")\n        \n    elif A <= 0:\n        print(\"No\")\n    else:\n        pass\n ","def resolve():\n    a, b,c,d = map(int, input().split())\n    while a > 0 and c > 0:\n        c -= b\n        if c <= 0:\n            print(\"Yes\")\n            exit()\n        a -= d\n        if a<= 0:\n            print(\"No\")\n            exit()\nresolve()","t_tairyoku,t_attack,a_tairyoku,a_attack = list(map(int,input().split()))\n\nflag = 0\ni = 0\n\nwhile flag == 0:\n    if i%2 == 0:\n        a_tairyoku -= t_attack\n    else:\n        t_tairyoku -= a_attack\n    if a_tairyoku <= 0:\n        print(\"Yes\")\n        exit()\n    if t_tairyoku <= 0:\n        print(\"No\")\n        exit()\n    i += 1\n","# Battle\nln = list(map(int, input().split(' ')))\nthp = ln[0]\ntatk = ln[1]\nahp = ln[2]\naatk = ln[3]\nturn = 0\nwhile thp>0 and ahp>0:\n    if turn %2 == 0:\n        ahp -= tatk\n        turn += 1\n    else:\n        thp -= aatk\n        turn += 1\n\nif thp>0:\n    print('Yes')\nelse:\n    print('No')\n    ","a,b,c,d = map(int,input().split())\nif -(-a\/\/d) >= -(-c\/\/b):\n  print(\"Yes\")\nelse:\n  print(\"No\")\n  ","a, b, c, d = map(int, input().strip().split())\n\nwhile True:\n    c -= b\n    if c <= 0:\n        print('Yes')\n        break\n    a -= d\n    if a <= 0:\n        print('No')\n        break\n\n","import math\nA,B,C,D = map(int,input().split())\nif (math.ceil(C\/B) < math.ceil(A\/D)):\n    print('Yes')\nelse:\n    print('No')"],"raw_generations":["a,b,c,d = map(int,input().split())\n\nwhile(True):\n    #print(c)\n    c -= b\n    #print(\"C\",c)\n    if c<=0:\n        print(\"Yes\")\n        break\n    #print(a)\n    a -= d\n    #print(\"A\",a)\n    if a<=0:\n        print(\"No\")\n        break","a,b,c,d = map(int, input().split())\n# a,b,c,d = [46, 4, 40, 5]\n\ntCount = (c+b-1)\/\/b\naCount = (a+d-1)\/\/d\nprint('Yes' if tCount <= aCount else 'No')\n\n","import sys\nsys.setrecursionlimit(10 ** 9)\ninput = sys.stdin.readline\nfrom itertools import permutations,  combinations, accumulate\nfrom functools import *\nfrom collections import deque, defaultdict, Counter\nfrom heapq import heapify, heappop, heappush, heappushpop\n\nINF = float('inf')\nNIL = - 1\n\n\nt, B, a, D = map(int, input().split())\n\nwhile True:\n    a -= B\n    if a <= 0:\n        print('Yes')\n        exit()\n    t -= D\n    if t <= 0:\n        print('No')\n        exit()\n","import numpy as np\nif __name__ == \"__main__\":\n    # \u5165\u529b\u30d1\u30bf\u30fc\u30f3\uff0e\n    # \u8981\u7d20\u306e\u6570\u304c\u308f\u304b\u3063\u3066\u3044\u308b\u30d1\u30bf\u30fc\u30f3\n    ### a,b\n    a_hp, a_at, b_hp, b_at = map(int, input().split())\n    ans = ''\n    # print(a_hp)\n    # print(a_at)\n    # print(b_hp)\n    # print(b_at)\n    while True:\n        b_hp -= a_at\n        #print(b_hp)\n        if b_hp <= 0:\n            ans = 'Yes'\n            break\n        a_hp -= b_at\n        #print(a_hp)\n        if a_hp <= 0:\n            ans = 'No'\n            break\n    \n    print(ans)\n\n","# -*- coding: utf-8 -*-\n\nimport sys\nimport math\n\n\ndebug = False\n\ndef log(text):\n    if debug:\n        print(text)\n\ndef parse_input(lines_as_string = None):\n\n    global debug\n    lines = []\n    if lines_as_string is None:\n        debug = False\n        # for line in sys.stdin:\n        #     lines.append(line)\n        lines.append(input())\n    else:\n        debug = True\n        lines = [e for e in lines_as_string.split(\"\\n\")][1:-1]\n\n    (a, b, c, d) = [int(e) for e in lines[0].split(' ')]\n\n    return (a, b, c, d)\n\n\ndef solve(a, b, c, d):\n\n    ta = c \/\/ b \n    ao = a \/\/ d\n\n    if ta >= ao:\n        result = 'Yes'\n    else:\n        result = 'No'\n    \n    return result\n    \n\n\ndef main():\n    # \u51fa\u529b\n    result = solve(*parse_input())\n    if isinstance(result, list):\n        for r in result:\n            print(\"%s\" % r, sep='')\n    else:\n        print(\"%s\" % result, sep='')\n\nif __name__ == '__main__':\n\n    main()","#200426B\nA, B, C, D = map(int, input().split())\nx = C\/\/B\ny = A\/\/D\n\nif C%B ==0:\n    x = x-1\nif A%D ==0:\n    y = y-1\n#print(x)\n#print(y)\nif x <= y:\n    \n    print(\"Yes\")\nelse:\n    print(\"No\")","a, b, c, d = map(int, input().split())\nwhile True:\n    c -= b\n    if (c <= 0):\n        ans = 'Yes'\n        break\n    a -= d\n    if (a <= 0):\n        ans = 'No'\n        break\nprint(ans)","a,b,c,d = map(int,input().split())\nwhile True:\n    x = c-b\n    c = x\n    if x<1:\n        print('Yes')\n        break\n    y = a-d\n    a = y\n    if y<1:\n        print('No')\n        break","A, B, C, D = map(int, input().split())\n\nwhile A > 0 and C > 0:\n    C -= B\n    if C <= 0:\n        print(\"Yes\")\n        break\n    A -= D\n    if A <= 0:\n        print(\"No\")\n        break\n","A,B,C,D=map(int,input().split())\nwhile A!=0 and C!=0:\n    C=C-B\n    A=A-D\nif C<=0:\n    print ('Yes')\nelse:\n    print ('No')","A, B, C, D = list(map(int, input().split()))\n\nwhile(1):\n  C = C - B\n  if C<=0:\n    print(\"Yes\")\n    break\n  A = A - D\n  if A<=0:\n    print(\"No\")\n    break","from sys import stdin\ndef main():\n    #\u5165\u529b\n    readline=stdin.readline\n    a,b,c,d=map(int,readline().split())\n    flag=0\n    while a>=1 and c>=1:\n        if flag==0:\n            c-=b\n            flag=1\n        else:\n            a-=d\n            flag=0\n    \n    if a>0:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__==\"__main__\":\n    main()","a, b, c, d = map(int, input().split())\ni = 0\nwhile True:\n    if i%2 == 0:\n        c -= b\n        if c <= 0:\n            print('Yes')\n            break\n    \n    else:\n        a -= d\n        if a <= 0:\n            print('No')\n            break\n    \n    i += 1","a, b, c, d = map(int, input().split())\nwhile a * c:\n\u00a0 \u00a0 c -= b\n\u00a0 \u00a0 a -= d\nprint('Yes' if a else 'No')","a,b,c,d=map(int,input().split())\nflag=0\nwhile flag==0:\n    c=c-b\n    if c<=0:\n        print(\"Yes\")\n        flag=1\n        break\n    else:\n        a=a-d\n        if a<=0:\n            print(\"No\")\n            flag=1\n            break\n        ","a,b,c,d = map(int,input().split())\n\nwhile a > 0 or c > 0:\n    c -= b\n    a -= d\n    if a <= 0:\n        print('No')\n        exit()\n    else:\n        print('Yes')\n        exit()","a, b, c, d = map(int, input().split())\nwhile a > 0 and c > 0:\n  c = c-b\n  a = a-d\n  \nif (a<=0 and c<=0) or c<=0:\n  print('Yes')\nelse:\n  print('No')","a,b,c,d=map(int,input().split())\nif (a\/\/d+1 < c\/\/b):\n    print(\"No\")\nelif a\/\/d ==c\/\/b:\n    if (a%d==0 and c%b!=0) :\n        print(\"No\")\n    else:\n        print(\"Yes\")\nelse:\n    print(\"Yes\")","a,b,c,d=map(int,input().split(' '))\nwhile True:\n    c-=b\n    if c<=0:\n        print('Yes')\n        break\n    a-=d\n    if a<=0:\n        print('No')\n        break","a, b, c, d = list(map(int, input().split()))\n\nif (a-1)\/\/d >= (c-1)\/\/b:\n    print('Yes')\nelse:\n    print('No')","# \u9ad8\u6a4b\u541b\u306e\u30e2\u30f3\u30b9\u30bf\u30fc\u306f\u4f53\u529b\u304c A \u3067\u653b\u6483\u529b\u304c B \n# \u9752\u6728\u541b\u306e\u30e2\u30f3\u30b9\u30bf\u30fc\u306f\u4f53\u529b\u304c C \u3067\u653b\u6483\u529b\u304c D \n# \u30e2\u30f3\u30b9\u30bf\u30fc\u306e\u4f53\u529b\u304c 0 \u4ee5\u4e0b\u306b\u306a\u3063\u305f\u65b9\u306e\u8ca0\u3051\u3001\n# \u9ad8\u6a4b\u541b\u304c\u52dd\u3064\u306a\u3089 Yes\u3001\u8ca0\u3051\u308b\u306a\u3089 No \u3092\u51fa\u529b\n\nA, B, C, D = map(int, input().split())\n\nwhile A > 0 and C > 0:\n    C -= B\n    if C <= 0:\n        print('Yes')\n        break\n    A -= D\n    if A <= 0:\n        print('No')\n        break","A,B,C,D=map(int,input().split())\n\nsFlag=True\nHPC=C\nHPA=A\nwhile(sFlag):\n  HPC=HPC-B\n  if(HPC<=0):\n    print('Yes')\n    sFlag=False\n    break\n  HPA=HPA-D\n  if(HPA<=0):\n    print('No')\n    sFlag=False\n    break","# -*- coding: utf-8 -*-\n\nTT, TA, AT, AA = map(int, input().split())\n\nwhile True:\n    AT = AT - TA # T attack\n    if (AT <= 0):\n        print(\"Yes\")\n        break\n\n    TT = TT - AA #A attack\n    if (TT <= 0):\n        print(\"No\")\n        break","a , b , c, d = map(int,input().strip().split())\ncount = 0\nif (a-b)>0:\n    count = 0\nif (d-c)==0:\n    count = 1\nif count==0:\n    print('Yes')\nelse:\n    print('No')","from math import ceil \nA, B, C, D = map(int,input().split())\n\n#print(ceil(C\/B),ceil(A\/D))\n\ntkhs_cnt = ceil(C\/B)\naok_cnt = ceil(A\/D)\nans = \"Yes\" if aok_cnt >= tkhs_cnt else \"No\"\nprint(ans)","A,B,C,D = map(int,input().split())\n\nwhile True:\n    C -= B\n    if C <= 0 :\n        print('Yes')\n        break;\n    A -= D\n    if A <= 0:\n        print('No')\n        break;\n","def readinput():\n    a,b,c,d=map(int,input().split())\n    return a,b,c,d\n\ndef main(a,b,c,d):\n    while True:\n        c-=b\n        if c<=0:\n            return 'Yes'\n        a-=d\n        if a<=0:\n            return 'No'\n\n\nif __name__=='__main__':\n    a,b,c,d=readinput()\n    ans=main(a,b,c,d)\n    print(ans)\n","a,b,c,d=map(int,input().split())\nans=0\nfor i in range(1,101):\n  if b*i>=c and d*(i-1)<a:\n    ans=1\n    break\n  elif b*i<c and d*i>=a:\n    ans=0\n    break\nif ans==1:\n  print('Yes')\nelif ans==0:\n  print('No')","import math\nA,B,C,D = list(map(int,input().split()))\nx = math.ceil(C\/B)\ny = math.ceil(A\/D)\nif x > y:\n    print('No')\nelse:\n    print('Yes')","K = input().split(\" \")\nk = [int(n) for n in K]\nt =k[0]\/\/k[3]\na = k[2]\/\/k[1]\nt1 = k[0]%k[3]\na1 = k[2]%k[1]\nif t > a:\n    print('Yes')\nelif t == a and a1 == 0:\n    print('Yes')\nelif t+1 == a and t1 != 0:\n    print('Yes')\nelse:\n    print('No')\n","a, b, c, d = map(int, input().split())\n\nwhile a>0 and c>0:\n  c -= b\n  a -= d\n  \n  \n\nif a>0:\n  print(\"Yes\")\n  \nelse:\n  print(\"No\")\n  \n  \n","a,b,c,d = map(int,input().split())\n\nwhile(True):\n    c -= b\n    a -= d\n    if c<= 0:\n        print(\"Yes\")\n        break\n    elif a <= 0:\n        print(\"No\")\n        break","A, B, C, D = map(int, input().split())\nwhile True:\n  C = C - B\n  if C <= 0:\n    print(\"Yes\")\n    break\n  A = A - D\n  if A <= 0:\n    print(\"No\")\n    break","A, B, C, D = map(int, input().split())\n\nfor i in range(1000):\n    if (i % 2 == 0):\n        C = C - B\n        if C <= 0:\n            print('Yes')\n            break\n    else:\n        A = A - D\n        if A <= 0:\n            print('No')\n            break\n","import sys, re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians, gcd\nfrom itertools import accumulate, permutations, combinations, product, groupby\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\ndef ZIP(n): return zip(*(MAP() for _ in range(n)))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\nA, B, C, D = MAP()\n\nif -(-C\/\/B)  > -(-A\/\/D):\n\tprint(\"No\")\nelse:\n\tprint(\"Yes\")","# \u9ad8\u6a4b\u541b\u3068\u9752\u6728\u541b\u304c\u30e2\u30f3\u30b9\u30bf\u30fc\u3092\u95d8\u308f\u305b\u307e\u3059\u3002\n# \u9ad8\u6a4b\u541b\u4f53\u529b  A  \u653b\u6483\u529b  B  \u3067\u3059\u3002\n# \u9752\u6728\u541b\u4f53\u529b  C  \u653b\u6483\u529b  D  \u3067\u3059\u3002\n# \u9ad8\u6a4b\u541b\u2192\u9752\u6728\u541b\u2192\u9ad8\u6a4b\u541b\u2192\u9752\u6728\u541b\u2192... \u306e\u9806\u306b\u653b\u6483\u3092\u884c\u3044\u307e\u3059\u3002\n# \u3053\u306e\u3053\u3068\u3092\u3069\u3061\u3089\u304b\u306e\u30e2\u30f3\u30b9\u30bf\u30fc\u306e\u4f53\u529b\u304c  0  \u4ee5\u4e0b\u306b\u306a\u308b\u307e\u3067\u7d9a\u3051\u305f\u3068\u304d\u3001\n# \u5148\u306b\u81ea\u5206\u306e\u30e2\u30f3\u30b9\u30bf\u30fc\u306e\u4f53\u529b\u304c  0  \u4ee5\u4e0b\u306b\u306a\u3063\u305f\u65b9\u306e\u8ca0\u3051\u3001\u305d\u3046\u3067\u306a\u3044\u65b9\u306e\u52dd\u3061\u3067\u3059\u3002\n# \u9ad8\u6a4b\u541b\u304c\u52dd\u3064\u306a\u3089 Yes\u3001\u8ca0\u3051\u308b\u306a\u3089 No \u3092\u51fa\u529b\u3057\u3066\u304f\u3060\u3055\n\na, b, c, d = list(map(int, input(). split()))#10 9 10 10\n\nwhile True:\n    c -= b\n    if c  <= 0:\n        print(\"Yes\")\n        break\n    a -= d\n    if a <= 0:\n        print(\"No\")\n        break\n\n\n","A,B,C,D=map(int,input().split())\n\nx=-(-C\/\/B)\ny=-(-A\/\/D)\n\nif x>y:\n    print(\"No\")\nelse:\n    print(\"Yes\")","a, b, c, d = map(int, input().split())\nwhile a > 0 or c > 0:\n    c -= b\n    if c <= 0:\n        print(\"Yes\")\n        break\n    a -= d\n    if a <= 0:\n        print(\"No\")\n        break","a,b,c,d=map(int,input().split())\n\nt=0\nwhile 1:\n    if t==0:\n        c-=b\n        t=1\n        if c<=0:\n            print(\"Yes\")\n            exit()\n    else:\n        a-=d\n        t=0\n        if a<=0:\n            print(\"No\")\n            exit()","a, b, c, d = map(int, input().split())\n\nwhile True:\n    c -= b\n    if c <= 0:\n        print('Yes')\n        break\n\n    a -= d\n    if a <= 0:\n        print('No')\n        break","#B\na, b, c, d = map(int, input().split())\nfor i in range(0, 100):\n    c = c - b\n    if c <= 0:\n        print('Yes')\n        break\n\n    a = a - d\n    if a <= 0:\n        print('No')\n        break   ","a, b, c, d = map(int, input().split())\ncount_a = 0\ncount_b = 0\nwhile a>0:\n    a -= d\n    count_a += 1\nwhile c>0:\n    c -= b\n    count_b += 1\n\nif count_a > count_b:\n    print(\"No\")\nelse:\n    print(\"Yes\")","A, B, C, D = map(int, input().split())\nfor i in range(101):\n    if C-B*i <= 0:\n        print(\"Yes\")\n        break\n    elif A-D*i <= 0:\n        print(\"No\")\n        break","A, B, C, D = map(int, input().split())\nwhile A > 0 and C > 0:\n  C -= B\n  if C <= 0:\n    break\n  A -= D\n  if A <= 0:\n    break\nif C <= 0:\n  print('Yes')\nif A <= 0:\n  print('No')","def i1str():\n    return input()\n\n\ndef istrs(n=None):\n    if n is None:\n        return input().split()\n    a = []\n    for _ in range(n):\n        a.append(istrs())\n    return a\n\n\ndef i1num():\n    return int(input())\n\n\ndef inums(n=None):\n    if n is None:\n        return list(map(int, input().split()))\n    a = []\n    for _ in range(n):\n        a.append(inums())\n    return a\n\n\ndef ostrs(l, sp=\" \"):\n    print(sp.join(l))\n\n\ndef onums(l, sp=\" \"):\n    print(sp.join(map(str, l)))\n\n\ndef solve(a, b, c, d):\n    is_a_turn = True\n    while True:\n        if a <= 0:\n            return \"No\"\n        if c <= 0:\n            return \"Yes\"\n        if is_a_turn:\n            c -= b\n        else:\n            a -= d\n        is_a_turn = not is_a_turn\n\n\nif __name__ == \"__main__\":\n    a, b, c, d = inums()\n    print(solve(a, b, c, d))\n","A, B, C, D = map(int, input().split())\n\nflag = 0\nT = 1\n\nwhile flag == 0:\n    if T == 1:\n        C = C - B\n        T = 0\n        if C <= 0:\n            flag = 1\n    else:\n        A = A - D\n        T = 1\n        if A <= 0:\n            flag = 2\n\nif T == 1:\n    print('No')\nelse:\n    print('Yes')\n","a,b,c,d = map(int,input().split())\nans = \"\"\nwhile a>0 and c>0:\n    c-=b\n    if c<1:\n        ans = \"Yes\"\n        break\n    a-=d\n    if a<1:\n        ans = \"No\"\n        break\nprint(ans)","A, B, C, D =  map(int, input().split())\nx = A\ny = C\nT_count = 0 \nA_count = 0\nfor i in range(100):\n    x = x-C\n    if x >= 0:\n        T_count += 1 \n    else:\n        T_count += 0\n        break\n\nfor j in range(100):\n    y = y-A\n    if y >= 0:\n        A_count += 1 \n    else:\n        A_count += 0\n        break\n\nif T_count <= A_count:\n    print('Yes')\nelse:print('No')","A, B, C, D = map(int, input().split())\nwhile True:\n    if C <= B:\n        print(\"Yes\")\n        break\n    if A <= D:\n        print(\"No\")\n        break\n    A -= D\n    C -= B","[a, b, c, d] = [int(i) for i in input().split()]\nwhile a > 0 and c > 0:\n    c -= b\n    a -= d\nif c <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")","a,b,c,d = (int(x) for x in input().split())\n \nwhile(True):\n    c-=b\n    if(c <= 0):\n        print(\"Yes\")\n        break\n    a-=d\n    if(a <= 0):\n        print(\"No\")\n        break","p =list(map(int, input().split()))\na = p[0]\nb = p[1]\nc = p[2]\nd = p[3]\nwhile True:\n    c = c - b\n    if c <= 0:\n        print(\"Yes\")\n        exit()\n    a = a - d\n    if a <=0:\n        print(\"No\")\n        exit()","a, b, c, d = map(int, input().split())\nif c % b == 0:\n    t = c \/\/ b\nelse:\n    t = c \/\/ b + 1\nif a % d == 0:\n    k = a \/\/ d\nelse:\n    k = a \/\/ d + 1\n    \nprint('Yes' if t <= k else 'No')","import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(2 * 10**6)\n\n\ndef inpl():\n    return list(map(int, input().split()))\n\n\ndef main():\n    A, B, C, D = inpl()\n    takahashi = (C + B - 1) \/\/ B\n    aoki = (A + D - 1) \/\/ D\n\n    # print(takahashi, aoki)\n    if takahashi <= aoki:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == '__main__':\n    main()\n","a,b,c,d=map(int,input().split( ))\ng=0\nwhile a>0 and c>0:\n    if g%2==0:\n        c-=b\n    else:\n        a-=d\n    g+=1\nif a>0:\n    print('Yes')\nelse:\n    print('No')\n","A, B, C, D = map(int, input().split())\n\nif -(-C \/\/ B) <= -(-A \/\/ D):\n    print('Yes')\nelse:\n    print('No')\n","A, B, C, D = list(map(int, input().split()))\n\na = A \/\/ D\nb = C \/\/ B\nN = max(a, b) + 1\nfor i in range(N):\n    if C > 0:\n        C -= B\n        if C <= 0:\n            break\n    if A > 0:\n        A -= D\n        if A <= 0:\n            break\n\nans = \"No\"\nif A > C:\n    ans = \"Yes\"\n\nprint(ans)","A, B, C, D = map(int, input().split(' '))\n\nwhile True:\n  C = C - B\n  if C <= 0:\n    print('Yes')\n    break\n  A = A - D\n  if A <= 0:\n    print('No')\n    break","a, b, c, d = list(map(int, input().strip().split()))\n\n\nwhile True:\n    c -= b\n    if c <= 0 :\n        print('Yes')\n        break\n    \n    a -= d\n    if a <= 0:\n        print('No')\n        break","A,B,C,D=map(int,input().split())\nif A%D==0:\n\tx=A\/\/D\nelse:\n\tx=A\/\/D +1\nif C%B==0:\n\ty=C\/\/B\nelse:\n\ty=C\/\/B +1\nif y<=x:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")","A, B, C, D = map(int, input().split())\nwhile True:\n    C -= B\n    if C <= 0:\n        print(\"Yes\")\n        exit()\n    A -= D\n    if A <= 0:\n        print(\"No\")\n        exit()\n","a,b,c,d = map(int, input().split())\n\nwhile a > 0:\n  c -= b\n  if c <= 0:\n    print('Yes')\n    break\n  a -= d\n  if a <= 0:\n    print('No')\n    break\n  ","t_hp, t_att, a_hp, a_att = map(int, input().split())\n\nwhile(t_hp > 0 and a_hp > 0):\n    a_hp -= t_att\n    t_hp -= a_att\n\nif a_hp <= 0:\n    print('Yes')\nelse:\n    print('No')\n","hp_a,at_a, hp_b, at_b = list(map(int, input().split()))\nwhile True:\n  hp_b = hp_b - at_a\n  if hp_b <= 0:\n    print(\"Yes\")\n    exit()\n  hp_a = hp_a - at_b\n  if hp_a <= 0:\n    print(\"No\")\n    exit()\n","\nif __name__ == \"__main__\":\n    A, B, C, D = map(int, input().split())\n    ret = \"No\"\n    while A > 0 and C > 0:\n        A = A - D\n        print(A)\n        C = C - B\n        print(C)\n    if C <= 0:\n        ret = \"Yes\"\n    print(ret)","A, B, C, D=map(int,input().split())\n\nwhile C or A >= 0:\n    C -= B\n    A -= D\n    if C <= 0:\n        print(\"Yes\")\n    if A <= 0:\n        print(\"No\")\n    break","a, b, c, d = map(int, input().split())\nwhile True:\n  c -= b\n  if c <= 0:\n    print('Yes')\n    break\n  a -= d\n  if a <= 0:\n    print('No')\n    break\n  ","A, B, C, D = map(int, input().split())\n\ntakahashi = 0\naoki = 0\n\nwhile C > 0:\n  C -= B\n  takahashi += 1\n  \nwhile A > 0:\n  A -= D\n  aoki += 1\n  \nif takahashi <= aoki:\n  print(\"Yes\")\nelse:\n  print(\"No\")","def main():\n    A,B,C,D = map(int,input().split())\n    temp = 0\n\n    while A>0 and C>0:\n        temp += 1\n        if temp%2 == 1:\n            C = C - B\n        else:\n            A -= D\n        #print(temp,A,C)\n\n    if temp%2 == 1:\n        return 'Yes'\n    else:\n        return 'No'\n\nprint(main())\n","A, B, C, D = map(int, input().split())\n\nwhile True:\n  D -= B\n  if D > 0:\n    A -= C\n    if A <= 0:\n      print(\"No\")\n      exit()\n  else:\n    print(\"Yes\")\n    exit()","def main():\n    A, B, C, D = map(int, input().split())\n    while True:\n        C -= B\n        if C <= 0:\n            print(\"No\")\n            return 0\n        A -= D\n        if A <= 0:\n            print(\"Yes\")\n            return 0\n\n    return 0\n\nif __name__ == '__main__':\n    main()","\na,b,c,d = map(int, input().split())\ncnta = 0\ncntc = 0\nwhile a <= 0:\n    a -= d\n    cnta += 1\n\nwhile c <= 0:\n    c -= b\n    cntc += 1\n    \nif cnta >= cntc:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n    ","A, B, C, D= map(int, input().split())\n\n\nwhile A > 0 and C > 0:\n    C -= B\n    if C <= 0:\n        print(\"Yes\")\n        exit()\n    A -= D\n    if A <= 0:\n        print(\"No\")\n        exit()","a,b,c,d=map(int,input().split())\ne=a\/\/d\nf=c\/\/b\ng=0\nif a%d!=0:\n    e=e+1\nelse:\n    g=0\nif c%b!=0:\n    f=f+1\nelse:\n    g=0\nif f<=e:\n    print('Yes')\nelse:\n    print('No')","import math\n\na, b, c, d = map(int, input().split())\n\nif math.ceil(a \/ d) < math.ceil(c \/ b):\n    print('No')\nelse:\n    print('Yes')","import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = set()\n\nfor i in range(n):\n    a.add(input())\n\nprint(len(a))","a,b,c,d=map(int,input().split())\nt=c\/\/b+1if not c\/b==c\/\/b else c\/\/b\na=a\/\/d+1if not a\/d==a\/\/d else a\/\/d\nprint('Yes'if t<=a else'No')\n","h1, a1, h2, a2 = map(int, input().split())\n\nn1 = h1\/\/a2 + (h1%a2 != 0)\nn2 = h2\/\/a1 + (h2%a1 != 0)\n\nif n2 <= n1:\n    print(\"Yes\")\nelse:\n    print(\"No\")","import math\na,b,c,d = map(int,input().split())\nao = math.ceil(a\/d)\nta = math.ceil(c\/b)\nif ta <= ao:\n  print('Yes')\nelse:\n  print('No')","#!\/usr\/bin\/env python3\nimport sys\n\nYES = \"Yes\"  # type: str\nNO = \"No\"  # type: str\n\n\ndef solve(A: int, B: int, C: int, D: int):\n    while True:\n        C -= B\n        if C <= 0:\n            print(YES)\n            break\n        A -= D\n        if A <= 0:\n            print(NO)\n            break\n    return\n\n\n# Generated by 1.1.6 https:\/\/github.com\/kyuridenamida\/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    A = int(next(tokens))  # type: int\n    B = int(next(tokens))  # type: int\n    C = int(next(tokens))  # type: int\n    D = int(next(tokens))  # type: int\n    solve(A, B, C, D)\n\nif __name__ == '__main__':\n    main()","A,B,C,D= map(int,input().split())\nif A%D == 0:\n  E = A \/\/ D\nelse:\n  E = A\/\/D + 1\nif C%B == 0:\n  F= C \/\/ B\nelse:\n  F= C \/\/ B+1\nif E >= F:\n  print('Yes')\nelse:\n  print('No')\n","import math\nA,B,C,D = list(map(int, input().split()))\n\nturn_t = math.ceil(C \/ B);\nturn_a = math.ceil(A \/ D);\n\nprint(\"No\" if turn_t > turn_a else \"Yes\")","A, B, C, D = map(int, input().split())\n\nx = C \/ B\ny = C % B\np = A \/ D\nq = A % D\n\nif (y <> 0):\n  x += 1\nif (q <> 0):\n  p += 1\n\nif (x <= p):\n  print(\"Yes\")\nelif (x > p):\n  print(\"No\")\n","A,B,C,D = map(int, input().split())\n\nfor i in range(1000):\n    C = C - B\n    if C <=0:\n        print(\"Yes\")\n        break\n    A = A - D\n    if A <= 0:\n        print(\"No\")\n        break","a, b, c, d = map(int, input().split())\nac = int(a \/ d + 1)\nbc = int(c \/ b + 1)\n \nif ac >= bc:\n    print('Yes')\nelse:\n    print('No')","A, B, C, D = map(int, input().split())\n\nwhile True:\n  C -= B\n  if C <= 0:\n    print(\"Yes\")\n    break\n  A -= D\n  if A <= 0:\n    print(\"No\")\n    break","A, B, C, D = map(int, input().split())\nflag = True\n\nwhile True:\n  C -= B\n  if C <= 0:\n    break\n  A -= D\n  if A <= 0:\n    flag = False\n    break\n\nif flag:\n  print(\"Yes\")\nelse:\n  print(\"No\")","A,B,C,D = map(int,input().split())\n\nlifeT = A\nlifeA = C\n\nwhile True:\n    lifeA -= B\n    if lifeA<=0:\n        print('Yes')\n        break\n    lifeT -= D\n    if lifeT<=0:\n        print('No')\n        break","a,b,c,d = map(int,input().split())\n\nif -(-c\/\/b) >= -(-a\/\/d):\n    print(\"No\")\nelse:\n    print(\"Yes\")","import sys, re, os\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians\nfrom itertools import permutations, combinations, product, accumulate\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom heapq import heapify, heappop, heappush\n\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef S_MAP(): return map(str, input().split())\ndef LIST(): return list(map(int, input().split()))\ndef S_LIST(): return list(map(str, input().split()))\n \nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\nA, B, C, D = MAP()\n\nwhile 1:\n    C -= B\n    # print(C)\n    if C <= 0:\n        print(\"Yes\")\n        exit()\n    A -= D\n    # print(A)\n    if A <= 0:\n        print(\"No\")\n        exit()\n","A,B,C,D = map(int,input().rstrip().split(\" \"))\nfor i in range(100):\n    C -= B\n    if (C <= 0):\n        print(\"Yes\")\n        break\n    A -= D\n    if (A <= 0):\n        print(\"No\")\n        break","import math\n\nA, B, C, D = map(int, input().split())\n\ncnt1 = math.ceil(C \/ B)\ncnt2 = math.ceil(A \/ D)\n\nif cnt1 <= cnt2:\n    print('Yes')\nelse:\n    print('No')\n","A,B,C,D=map(int,input().split())\n\nwhile(1):\n    A=A-D\n    print(A)\n    C=C-B\n    print(C)\n    if A <= 0:\n        print(\"No\")\n        break\n    else:\n        print(\"Yes\")\n        break","A,B,C,D = map(int,input().split())\n#print(A,B,C,D)\n\nwhile A > 0:\n    C -= B\n    A -= D\n    if C <= 0:\n        print(\"Yes\")\n        \n    elif A <= 0:\n        print(\"No\")\n    else:\n        pass\n ","def resolve():\n    a, b,c,d = map(int, input().split())\n    while a > 0 and c > 0:\n        c -= b\n        if c <= 0:\n            print(\"Yes\")\n            exit()\n        a -= d\n        if a<= 0:\n            print(\"No\")\n            exit()\nresolve()","t_tairyoku,t_attack,a_tairyoku,a_attack = list(map(int,input().split()))\n\nflag = 0\ni = 0\n\nwhile flag == 0:\n    if i%2 == 0:\n        a_tairyoku -= t_attack\n    else:\n        t_tairyoku -= a_attack\n    if a_tairyoku <= 0:\n        print(\"Yes\")\n        exit()\n    if t_tairyoku <= 0:\n        print(\"No\")\n        exit()\n    i += 1\n","# Battle\nln = list(map(int, input().split(' ')))\nthp = ln[0]\ntatk = ln[1]\nahp = ln[2]\naatk = ln[3]\nturn = 0\nwhile thp>0 and ahp>0:\n    if turn %2 == 0:\n        ahp -= tatk\n        turn += 1\n    else:\n        thp -= aatk\n        turn += 1\n\nif thp>0:\n    print('Yes')\nelse:\n    print('No')\n    ","a,b,c,d = map(int,input().split())\nif -(-a\/\/d) >= -(-c\/\/b):\n  print(\"Yes\")\nelse:\n  print(\"No\")\n  ","a, b, c, d = map(int, input().strip().split())\n\nwhile True:\n    c -= b\n    if c <= 0:\n        print('Yes')\n        break\n    a -= d\n    if a <= 0:\n        print('No')\n        break\n\n","import math\nA,B,C,D = map(int,input().split())\nif (math.ceil(C\/B) < math.ceil(A\/D)):\n    print('Yes')\nelse:\n    print('No')"],"formatted_programs":["a,b,c,d = map(int,input().split())\n\nwhile(True):\n    #print(c)\n    c -= b\n    #print(\"C\",c)\n    if c<=0:\n        print(\"Yes\")\n        break\n    #print(a)\n    a -= d\n    #print(\"A\",a)\n    if a<=0:\n        print(\"No\")\n        break","a,b,c,d = map(int, input().split())\n# a,b,c,d = [46, 4, 40, 5]\n\ntCount = (c+b-1)\/\/b\naCount = (a+d-1)\/\/d\nprint('Yes' if tCount <= aCount else 'No')\n\n","import sys\nsys.setrecursionlimit(10 ** 9)\ninput = sys.stdin.readline\nfrom itertools import permutations,  combinations, accumulate\nfrom functools import *\nfrom collections import deque, defaultdict, Counter\nfrom heapq import heapify, heappop, heappush, heappushpop\n\nINF = float('inf')\nNIL = - 1\n\n\nt, B, a, D = map(int, input().split())\n\nwhile True:\n    a -= B\n    if a <= 0:\n        print('Yes')\n        exit()\n    t -= D\n    if t <= 0:\n        print('No')\n        exit()\n","import numpy as np\nif __name__ == \"__main__\":\n    # \u5165\u529b\u30d1\u30bf\u30fc\u30f3\uff0e\n    # \u8981\u7d20\u306e\u6570\u304c\u308f\u304b\u3063\u3066\u3044\u308b\u30d1\u30bf\u30fc\u30f3\n    ### a,b\n    a_hp, a_at, b_hp, b_at = map(int, input().split())\n    ans = ''\n    # print(a_hp)\n    # print(a_at)\n    # print(b_hp)\n    # print(b_at)\n    while True:\n        b_hp -= a_at\n        #print(b_hp)\n        if b_hp <= 0:\n            ans = 'Yes'\n            break\n        a_hp -= b_at\n        #print(a_hp)\n        if a_hp <= 0:\n            ans = 'No'\n            break\n    \n    print(ans)\n\n","# -*- coding: utf-8 -*-\n\nimport sys\nimport math\n\n\ndebug = False\n\ndef log(text):\n    if debug:\n        print(text)\n\ndef parse_input(lines_as_string = None):\n\n    global debug\n    lines = []\n    if lines_as_string is None:\n        debug = False\n        # for line in sys.stdin:\n        #     lines.append(line)\n        lines.append(input())\n    else:\n        debug = True\n        lines = [e for e in lines_as_string.split(\"\\n\")][1:-1]\n\n    (a, b, c, d) = [int(e) for e in lines[0].split(' ')]\n\n    return (a, b, c, d)\n\n\ndef solve(a, b, c, d):\n\n    ta = c \/\/ b \n    ao = a \/\/ d\n\n    if ta >= ao:\n        result = 'Yes'\n    else:\n        result = 'No'\n    \n    return result\n    \n\n\ndef main():\n    # \u51fa\u529b\n    result = solve(*parse_input())\n    if isinstance(result, list):\n        for r in result:\n            print(\"%s\" % r, sep='')\n    else:\n        print(\"%s\" % result, sep='')\n\nif __name__ == '__main__':\n\n    main()","#200426B\nA, B, C, D = map(int, input().split())\nx = C\/\/B\ny = A\/\/D\n\nif C%B ==0:\n    x = x-1\nif A%D ==0:\n    y = y-1\n#print(x)\n#print(y)\nif x <= y:\n    \n    print(\"Yes\")\nelse:\n    print(\"No\")","a, b, c, d = map(int, input().split())\nwhile True:\n    c -= b\n    if (c <= 0):\n        ans = 'Yes'\n        break\n    a -= d\n    if (a <= 0):\n        ans = 'No'\n        break\nprint(ans)","a,b,c,d = map(int,input().split())\nwhile True:\n    x = c-b\n    c = x\n    if x<1:\n        print('Yes')\n        break\n    y = a-d\n    a = y\n    if y<1:\n        print('No')\n        break","A, B, C, D = map(int, input().split())\n\nwhile A > 0 and C > 0:\n    C -= B\n    if C <= 0:\n        print(\"Yes\")\n        break\n    A -= D\n    if A <= 0:\n        print(\"No\")\n        break\n","A,B,C,D=map(int,input().split())\nwhile A!=0 and C!=0:\n    C=C-B\n    A=A-D\nif C<=0:\n    print ('Yes')\nelse:\n    print ('No')","A, B, C, D = list(map(int, input().split()))\n\nwhile(1):\n  C = C - B\n  if C<=0:\n    print(\"Yes\")\n    break\n  A = A - D\n  if A<=0:\n    print(\"No\")\n    break","from sys import stdin\ndef main():\n    #\u5165\u529b\n    readline=stdin.readline\n    a,b,c,d=map(int,readline().split())\n    flag=0\n    while a>=1 and c>=1:\n        if flag==0:\n            c-=b\n            flag=1\n        else:\n            a-=d\n            flag=0\n    \n    if a>0:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\nif __name__==\"__main__\":\n    main()","a, b, c, d = map(int, input().split())\ni = 0\nwhile True:\n    if i%2 == 0:\n        c -= b\n        if c <= 0:\n            print('Yes')\n            break\n    \n    else:\n        a -= d\n        if a <= 0:\n            print('No')\n            break\n    \n    i += 1","a, b, c, d = map(int, input().split())\nwhile a * c:\n\u00a0 \u00a0 c -= b\n\u00a0 \u00a0 a -= d\nprint('Yes' if a else 'No')","a,b,c,d=map(int,input().split())\nflag=0\nwhile flag==0:\n    c=c-b\n    if c<=0:\n        print(\"Yes\")\n        flag=1\n        break\n    else:\n        a=a-d\n        if a<=0:\n            print(\"No\")\n            flag=1\n            break\n        ","a,b,c,d = map(int,input().split())\n\nwhile a > 0 or c > 0:\n    c -= b\n    a -= d\n    if a <= 0:\n        print('No')\n        exit()\n    else:\n        print('Yes')\n        exit()","a, b, c, d = map(int, input().split())\nwhile a > 0 and c > 0:\n  c = c-b\n  a = a-d\n  \nif (a<=0 and c<=0) or c<=0:\n  print('Yes')\nelse:\n  print('No')","a,b,c,d=map(int,input().split())\nif (a\/\/d+1 < c\/\/b):\n    print(\"No\")\nelif a\/\/d ==c\/\/b:\n    if (a%d==0 and c%b!=0) :\n        print(\"No\")\n    else:\n        print(\"Yes\")\nelse:\n    print(\"Yes\")","a,b,c,d=map(int,input().split(' '))\nwhile True:\n    c-=b\n    if c<=0:\n        print('Yes')\n        break\n    a-=d\n    if a<=0:\n        print('No')\n        break","a, b, c, d = list(map(int, input().split()))\n\nif (a-1)\/\/d >= (c-1)\/\/b:\n    print('Yes')\nelse:\n    print('No')","# \u9ad8\u6a4b\u541b\u306e\u30e2\u30f3\u30b9\u30bf\u30fc\u306f\u4f53\u529b\u304c A \u3067\u653b\u6483\u529b\u304c B \n# \u9752\u6728\u541b\u306e\u30e2\u30f3\u30b9\u30bf\u30fc\u306f\u4f53\u529b\u304c C \u3067\u653b\u6483\u529b\u304c D \n# \u30e2\u30f3\u30b9\u30bf\u30fc\u306e\u4f53\u529b\u304c 0 \u4ee5\u4e0b\u306b\u306a\u3063\u305f\u65b9\u306e\u8ca0\u3051\u3001\n# \u9ad8\u6a4b\u541b\u304c\u52dd\u3064\u306a\u3089 Yes\u3001\u8ca0\u3051\u308b\u306a\u3089 No \u3092\u51fa\u529b\n\nA, B, C, D = map(int, input().split())\n\nwhile A > 0 and C > 0:\n    C -= B\n    if C <= 0:\n        print('Yes')\n        break\n    A -= D\n    if A <= 0:\n        print('No')\n        break","A,B,C,D=map(int,input().split())\n\nsFlag=True\nHPC=C\nHPA=A\nwhile(sFlag):\n  HPC=HPC-B\n  if(HPC<=0):\n    print('Yes')\n    sFlag=False\n    break\n  HPA=HPA-D\n  if(HPA<=0):\n    print('No')\n    sFlag=False\n    break","# -*- coding: utf-8 -*-\n\nTT, TA, AT, AA = map(int, input().split())\n\nwhile True:\n    AT = AT - TA # T attack\n    if (AT <= 0):\n        print(\"Yes\")\n        break\n\n    TT = TT - AA #A attack\n    if (TT <= 0):\n        print(\"No\")\n        break","a , b , c, d = map(int,input().strip().split())\ncount = 0\nif (a-b)>0:\n    count = 0\nif (d-c)==0:\n    count = 1\nif count==0:\n    print('Yes')\nelse:\n    print('No')","from math import ceil \nA, B, C, D = map(int,input().split())\n\n#print(ceil(C\/B),ceil(A\/D))\n\ntkhs_cnt = ceil(C\/B)\naok_cnt = ceil(A\/D)\nans = \"Yes\" if aok_cnt >= tkhs_cnt else \"No\"\nprint(ans)","A,B,C,D = map(int,input().split())\n\nwhile True:\n    C -= B\n    if C <= 0 :\n        print('Yes')\n        break;\n    A -= D\n    if A <= 0:\n        print('No')\n        break;\n","def readinput():\n    a,b,c,d=map(int,input().split())\n    return a,b,c,d\n\ndef main(a,b,c,d):\n    while True:\n        c-=b\n        if c<=0:\n            return 'Yes'\n        a-=d\n        if a<=0:\n            return 'No'\n\n\nif __name__=='__main__':\n    a,b,c,d=readinput()\n    ans=main(a,b,c,d)\n    print(ans)\n","a,b,c,d=map(int,input().split())\nans=0\nfor i in range(1,101):\n  if b*i>=c and d*(i-1)<a:\n    ans=1\n    break\n  elif b*i<c and d*i>=a:\n    ans=0\n    break\nif ans==1:\n  print('Yes')\nelif ans==0:\n  print('No')","import math\nA,B,C,D = list(map(int,input().split()))\nx = math.ceil(C\/B)\ny = math.ceil(A\/D)\nif x > y:\n    print('No')\nelse:\n    print('Yes')","K = input().split(\" \")\nk = [int(n) for n in K]\nt =k[0]\/\/k[3]\na = k[2]\/\/k[1]\nt1 = k[0]%k[3]\na1 = k[2]%k[1]\nif t > a:\n    print('Yes')\nelif t == a and a1 == 0:\n    print('Yes')\nelif t+1 == a and t1 != 0:\n    print('Yes')\nelse:\n    print('No')\n","a, b, c, d = map(int, input().split())\n\nwhile a>0 and c>0:\n  c -= b\n  a -= d\n  \n  \n\nif a>0:\n  print(\"Yes\")\n  \nelse:\n  print(\"No\")\n  \n  \n","a,b,c,d = map(int,input().split())\n\nwhile(True):\n    c -= b\n    a -= d\n    if c<= 0:\n        print(\"Yes\")\n        break\n    elif a <= 0:\n        print(\"No\")\n        break","A, B, C, D = map(int, input().split())\nwhile True:\n  C = C - B\n  if C <= 0:\n    print(\"Yes\")\n    break\n  A = A - D\n  if A <= 0:\n    print(\"No\")\n    break","A, B, C, D = map(int, input().split())\n\nfor i in range(1000):\n    if (i % 2 == 0):\n        C = C - B\n        if C <= 0:\n            print('Yes')\n            break\n    else:\n        A = A - D\n        if A <= 0:\n            print('No')\n            break\n","import sys, re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians, gcd\nfrom itertools import accumulate, permutations, combinations, product, groupby\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\ndef ZIP(n): return zip(*(MAP() for _ in range(n)))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\nA, B, C, D = MAP()\n\nif -(-C\/\/B)  > -(-A\/\/D):\n\tprint(\"No\")\nelse:\n\tprint(\"Yes\")","# \u9ad8\u6a4b\u541b\u3068\u9752\u6728\u541b\u304c\u30e2\u30f3\u30b9\u30bf\u30fc\u3092\u95d8\u308f\u305b\u307e\u3059\u3002\n# \u9ad8\u6a4b\u541b\u4f53\u529b  A  \u653b\u6483\u529b  B  \u3067\u3059\u3002\n# \u9752\u6728\u541b\u4f53\u529b  C  \u653b\u6483\u529b  D  \u3067\u3059\u3002\n# \u9ad8\u6a4b\u541b\u2192\u9752\u6728\u541b\u2192\u9ad8\u6a4b\u541b\u2192\u9752\u6728\u541b\u2192... \u306e\u9806\u306b\u653b\u6483\u3092\u884c\u3044\u307e\u3059\u3002\n# \u3053\u306e\u3053\u3068\u3092\u3069\u3061\u3089\u304b\u306e\u30e2\u30f3\u30b9\u30bf\u30fc\u306e\u4f53\u529b\u304c  0  \u4ee5\u4e0b\u306b\u306a\u308b\u307e\u3067\u7d9a\u3051\u305f\u3068\u304d\u3001\n# \u5148\u306b\u81ea\u5206\u306e\u30e2\u30f3\u30b9\u30bf\u30fc\u306e\u4f53\u529b\u304c  0  \u4ee5\u4e0b\u306b\u306a\u3063\u305f\u65b9\u306e\u8ca0\u3051\u3001\u305d\u3046\u3067\u306a\u3044\u65b9\u306e\u52dd\u3061\u3067\u3059\u3002\n# \u9ad8\u6a4b\u541b\u304c\u52dd\u3064\u306a\u3089 Yes\u3001\u8ca0\u3051\u308b\u306a\u3089 No \u3092\u51fa\u529b\u3057\u3066\u304f\u3060\u3055\n\na, b, c, d = list(map(int, input(). split()))#10 9 10 10\n\nwhile True:\n    c -= b\n    if c  <= 0:\n        print(\"Yes\")\n        break\n    a -= d\n    if a <= 0:\n        print(\"No\")\n        break\n\n\n","A,B,C,D=map(int,input().split())\n\nx=-(-C\/\/B)\ny=-(-A\/\/D)\n\nif x>y:\n    print(\"No\")\nelse:\n    print(\"Yes\")","a, b, c, d = map(int, input().split())\nwhile a > 0 or c > 0:\n    c -= b\n    if c <= 0:\n        print(\"Yes\")\n        break\n    a -= d\n    if a <= 0:\n        print(\"No\")\n        break","a,b,c,d=map(int,input().split())\n\nt=0\nwhile 1:\n    if t==0:\n        c-=b\n        t=1\n        if c<=0:\n            print(\"Yes\")\n            exit()\n    else:\n        a-=d\n        t=0\n        if a<=0:\n            print(\"No\")\n            exit()","a, b, c, d = map(int, input().split())\n\nwhile True:\n    c -= b\n    if c <= 0:\n        print('Yes')\n        break\n\n    a -= d\n    if a <= 0:\n        print('No')\n        break","#B\na, b, c, d = map(int, input().split())\nfor i in range(0, 100):\n    c = c - b\n    if c <= 0:\n        print('Yes')\n        break\n\n    a = a - d\n    if a <= 0:\n        print('No')\n        break   ","a, b, c, d = map(int, input().split())\ncount_a = 0\ncount_b = 0\nwhile a>0:\n    a -= d\n    count_a += 1\nwhile c>0:\n    c -= b\n    count_b += 1\n\nif count_a > count_b:\n    print(\"No\")\nelse:\n    print(\"Yes\")","A, B, C, D = map(int, input().split())\nfor i in range(101):\n    if C-B*i <= 0:\n        print(\"Yes\")\n        break\n    elif A-D*i <= 0:\n        print(\"No\")\n        break","A, B, C, D = map(int, input().split())\nwhile A > 0 and C > 0:\n  C -= B\n  if C <= 0:\n    break\n  A -= D\n  if A <= 0:\n    break\nif C <= 0:\n  print('Yes')\nif A <= 0:\n  print('No')","def i1str():\n    return input()\n\n\ndef istrs(n=None):\n    if n is None:\n        return input().split()\n    a = []\n    for _ in range(n):\n        a.append(istrs())\n    return a\n\n\ndef i1num():\n    return int(input())\n\n\ndef inums(n=None):\n    if n is None:\n        return list(map(int, input().split()))\n    a = []\n    for _ in range(n):\n        a.append(inums())\n    return a\n\n\ndef ostrs(l, sp=\" \"):\n    print(sp.join(l))\n\n\ndef onums(l, sp=\" \"):\n    print(sp.join(map(str, l)))\n\n\ndef solve(a, b, c, d):\n    is_a_turn = True\n    while True:\n        if a <= 0:\n            return \"No\"\n        if c <= 0:\n            return \"Yes\"\n        if is_a_turn:\n            c -= b\n        else:\n            a -= d\n        is_a_turn = not is_a_turn\n\n\nif __name__ == \"__main__\":\n    a, b, c, d = inums()\n    print(solve(a, b, c, d))\n","A, B, C, D = map(int, input().split())\n\nflag = 0\nT = 1\n\nwhile flag == 0:\n    if T == 1:\n        C = C - B\n        T = 0\n        if C <= 0:\n            flag = 1\n    else:\n        A = A - D\n        T = 1\n        if A <= 0:\n            flag = 2\n\nif T == 1:\n    print('No')\nelse:\n    print('Yes')\n","a,b,c,d = map(int,input().split())\nans = \"\"\nwhile a>0 and c>0:\n    c-=b\n    if c<1:\n        ans = \"Yes\"\n        break\n    a-=d\n    if a<1:\n        ans = \"No\"\n        break\nprint(ans)","A, B, C, D =  map(int, input().split())\nx = A\ny = C\nT_count = 0 \nA_count = 0\nfor i in range(100):\n    x = x-C\n    if x >= 0:\n        T_count += 1 \n    else:\n        T_count += 0\n        break\n\nfor j in range(100):\n    y = y-A\n    if y >= 0:\n        A_count += 1 \n    else:\n        A_count += 0\n        break\n\nif T_count <= A_count:\n    print('Yes')\nelse:print('No')","A, B, C, D = map(int, input().split())\nwhile True:\n    if C <= B:\n        print(\"Yes\")\n        break\n    if A <= D:\n        print(\"No\")\n        break\n    A -= D\n    C -= B","[a, b, c, d] = [int(i) for i in input().split()]\nwhile a > 0 and c > 0:\n    c -= b\n    a -= d\nif c <= 0:\n    print(\"Yes\")\nelse:\n    print(\"No\")","a,b,c,d = (int(x) for x in input().split())\n \nwhile(True):\n    c-=b\n    if(c <= 0):\n        print(\"Yes\")\n        break\n    a-=d\n    if(a <= 0):\n        print(\"No\")\n        break","p =list(map(int, input().split()))\na = p[0]\nb = p[1]\nc = p[2]\nd = p[3]\nwhile True:\n    c = c - b\n    if c <= 0:\n        print(\"Yes\")\n        exit()\n    a = a - d\n    if a <=0:\n        print(\"No\")\n        exit()","a, b, c, d = map(int, input().split())\nif c % b == 0:\n    t = c \/\/ b\nelse:\n    t = c \/\/ b + 1\nif a % d == 0:\n    k = a \/\/ d\nelse:\n    k = a \/\/ d + 1\n    \nprint('Yes' if t <= k else 'No')","import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(2 * 10**6)\n\n\ndef inpl():\n    return list(map(int, input().split()))\n\n\ndef main():\n    A, B, C, D = inpl()\n    takahashi = (C + B - 1) \/\/ B\n    aoki = (A + D - 1) \/\/ D\n\n    # print(takahashi, aoki)\n    if takahashi <= aoki:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n\n\nif __name__ == '__main__':\n    main()\n","a,b,c,d=map(int,input().split( ))\ng=0\nwhile a>0 and c>0:\n    if g%2==0:\n        c-=b\n    else:\n        a-=d\n    g+=1\nif a>0:\n    print('Yes')\nelse:\n    print('No')\n","A, B, C, D = map(int, input().split())\n\nif -(-C \/\/ B) <= -(-A \/\/ D):\n    print('Yes')\nelse:\n    print('No')\n","A, B, C, D = list(map(int, input().split()))\n\na = A \/\/ D\nb = C \/\/ B\nN = max(a, b) + 1\nfor i in range(N):\n    if C > 0:\n        C -= B\n        if C <= 0:\n            break\n    if A > 0:\n        A -= D\n        if A <= 0:\n            break\n\nans = \"No\"\nif A > C:\n    ans = \"Yes\"\n\nprint(ans)","A, B, C, D = map(int, input().split(' '))\n\nwhile True:\n  C = C - B\n  if C <= 0:\n    print('Yes')\n    break\n  A = A - D\n  if A <= 0:\n    print('No')\n    break","a, b, c, d = list(map(int, input().strip().split()))\n\n\nwhile True:\n    c -= b\n    if c <= 0 :\n        print('Yes')\n        break\n    \n    a -= d\n    if a <= 0:\n        print('No')\n        break","A,B,C,D=map(int,input().split())\nif A%D==0:\n\tx=A\/\/D\nelse:\n\tx=A\/\/D +1\nif C%B==0:\n\ty=C\/\/B\nelse:\n\ty=C\/\/B +1\nif y<=x:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")","A, B, C, D = map(int, input().split())\nwhile True:\n    C -= B\n    if C <= 0:\n        print(\"Yes\")\n        exit()\n    A -= D\n    if A <= 0:\n        print(\"No\")\n        exit()\n","a,b,c,d = map(int, input().split())\n\nwhile a > 0:\n  c -= b\n  if c <= 0:\n    print('Yes')\n    break\n  a -= d\n  if a <= 0:\n    print('No')\n    break\n  ","t_hp, t_att, a_hp, a_att = map(int, input().split())\n\nwhile(t_hp > 0 and a_hp > 0):\n    a_hp -= t_att\n    t_hp -= a_att\n\nif a_hp <= 0:\n    print('Yes')\nelse:\n    print('No')\n","hp_a,at_a, hp_b, at_b = list(map(int, input().split()))\nwhile True:\n  hp_b = hp_b - at_a\n  if hp_b <= 0:\n    print(\"Yes\")\n    exit()\n  hp_a = hp_a - at_b\n  if hp_a <= 0:\n    print(\"No\")\n    exit()\n","\nif __name__ == \"__main__\":\n    A, B, C, D = map(int, input().split())\n    ret = \"No\"\n    while A > 0 and C > 0:\n        A = A - D\n        print(A)\n        C = C - B\n        print(C)\n    if C <= 0:\n        ret = \"Yes\"\n    print(ret)","A, B, C, D=map(int,input().split())\n\nwhile C or A >= 0:\n    C -= B\n    A -= D\n    if C <= 0:\n        print(\"Yes\")\n    if A <= 0:\n        print(\"No\")\n    break","a, b, c, d = map(int, input().split())\nwhile True:\n  c -= b\n  if c <= 0:\n    print('Yes')\n    break\n  a -= d\n  if a <= 0:\n    print('No')\n    break\n  ","A, B, C, D = map(int, input().split())\n\ntakahashi = 0\naoki = 0\n\nwhile C > 0:\n  C -= B\n  takahashi += 1\n  \nwhile A > 0:\n  A -= D\n  aoki += 1\n  \nif takahashi <= aoki:\n  print(\"Yes\")\nelse:\n  print(\"No\")","def main():\n    A,B,C,D = map(int,input().split())\n    temp = 0\n\n    while A>0 and C>0:\n        temp += 1\n        if temp%2 == 1:\n            C = C - B\n        else:\n            A -= D\n        #print(temp,A,C)\n\n    if temp%2 == 1:\n        return 'Yes'\n    else:\n        return 'No'\n\nprint(main())\n","A, B, C, D = map(int, input().split())\n\nwhile True:\n  D -= B\n  if D > 0:\n    A -= C\n    if A <= 0:\n      print(\"No\")\n      exit()\n  else:\n    print(\"Yes\")\n    exit()","def main():\n    A, B, C, D = map(int, input().split())\n    while True:\n        C -= B\n        if C <= 0:\n            print(\"No\")\n            return 0\n        A -= D\n        if A <= 0:\n            print(\"Yes\")\n            return 0\n\n    return 0\n\nif __name__ == '__main__':\n    main()","\na,b,c,d = map(int, input().split())\ncnta = 0\ncntc = 0\nwhile a <= 0:\n    a -= d\n    cnta += 1\n\nwhile c <= 0:\n    c -= b\n    cntc += 1\n    \nif cnta >= cntc:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n    ","A, B, C, D= map(int, input().split())\n\n\nwhile A > 0 and C > 0:\n    C -= B\n    if C <= 0:\n        print(\"Yes\")\n        exit()\n    A -= D\n    if A <= 0:\n        print(\"No\")\n        exit()","a,b,c,d=map(int,input().split())\ne=a\/\/d\nf=c\/\/b\ng=0\nif a%d!=0:\n    e=e+1\nelse:\n    g=0\nif c%b!=0:\n    f=f+1\nelse:\n    g=0\nif f<=e:\n    print('Yes')\nelse:\n    print('No')","import math\n\na, b, c, d = map(int, input().split())\n\nif math.ceil(a \/ d) < math.ceil(c \/ b):\n    print('No')\nelse:\n    print('Yes')","import sys\ninput = sys.stdin.readline\n\nn = int(input())\na = set()\n\nfor i in range(n):\n    a.add(input())\n\nprint(len(a))","a,b,c,d=map(int,input().split())\nt=c\/\/b+1if not c\/b==c\/\/b else c\/\/b\na=a\/\/d+1if not a\/d==a\/\/d else a\/\/d\nprint('Yes'if t<=a else'No')\n","h1, a1, h2, a2 = map(int, input().split())\n\nn1 = h1\/\/a2 + (h1%a2 != 0)\nn2 = h2\/\/a1 + (h2%a1 != 0)\n\nif n2 <= n1:\n    print(\"Yes\")\nelse:\n    print(\"No\")","import math\na,b,c,d = map(int,input().split())\nao = math.ceil(a\/d)\nta = math.ceil(c\/b)\nif ta <= ao:\n  print('Yes')\nelse:\n  print('No')","#!\/usr\/bin\/env python3\nimport sys\n\nYES = \"Yes\"  # type: str\nNO = \"No\"  # type: str\n\n\ndef solve(A: int, B: int, C: int, D: int):\n    while True:\n        C -= B\n        if C <= 0:\n            print(YES)\n            break\n        A -= D\n        if A <= 0:\n            print(NO)\n            break\n    return\n\n\n# Generated by 1.1.6 https:\/\/github.com\/kyuridenamida\/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)\ndef main():\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    A = int(next(tokens))  # type: int\n    B = int(next(tokens))  # type: int\n    C = int(next(tokens))  # type: int\n    D = int(next(tokens))  # type: int\n    solve(A, B, C, D)\n\nif __name__ == '__main__':\n    main()","A,B,C,D= map(int,input().split())\nif A%D == 0:\n  E = A \/\/ D\nelse:\n  E = A\/\/D + 1\nif C%B == 0:\n  F= C \/\/ B\nelse:\n  F= C \/\/ B+1\nif E >= F:\n  print('Yes')\nelse:\n  print('No')\n","import math\nA,B,C,D = list(map(int, input().split()))\n\nturn_t = math.ceil(C \/ B);\nturn_a = math.ceil(A \/ D);\n\nprint(\"No\" if turn_t > turn_a else \"Yes\")","A, B, C, D = map(int, input().split())\n\nx = C \/ B\ny = C % B\np = A \/ D\nq = A % D\n\nif (y <> 0):\n  x += 1\nif (q <> 0):\n  p += 1\n\nif (x <= p):\n  print(\"Yes\")\nelif (x > p):\n  print(\"No\")\n","A,B,C,D = map(int, input().split())\n\nfor i in range(1000):\n    C = C - B\n    if C <=0:\n        print(\"Yes\")\n        break\n    A = A - D\n    if A <= 0:\n        print(\"No\")\n        break","a, b, c, d = map(int, input().split())\nac = int(a \/ d + 1)\nbc = int(c \/ b + 1)\n \nif ac >= bc:\n    print('Yes')\nelse:\n    print('No')","A, B, C, D = map(int, input().split())\n\nwhile True:\n  C -= B\n  if C <= 0:\n    print(\"Yes\")\n    break\n  A -= D\n  if A <= 0:\n    print(\"No\")\n    break","A, B, C, D = map(int, input().split())\nflag = True\n\nwhile True:\n  C -= B\n  if C <= 0:\n    break\n  A -= D\n  if A <= 0:\n    flag = False\n    break\n\nif flag:\n  print(\"Yes\")\nelse:\n  print(\"No\")","A,B,C,D = map(int,input().split())\n\nlifeT = A\nlifeA = C\n\nwhile True:\n    lifeA -= B\n    if lifeA<=0:\n        print('Yes')\n        break\n    lifeT -= D\n    if lifeT<=0:\n        print('No')\n        break","a,b,c,d = map(int,input().split())\n\nif -(-c\/\/b) >= -(-a\/\/d):\n    print(\"No\")\nelse:\n    print(\"Yes\")","import sys, re, os\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians\nfrom itertools import permutations, combinations, product, accumulate\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom heapq import heapify, heappop, heappush\n\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef S_MAP(): return map(str, input().split())\ndef LIST(): return list(map(int, input().split()))\ndef S_LIST(): return list(map(str, input().split()))\n \nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n\nA, B, C, D = MAP()\n\nwhile 1:\n    C -= B\n    # print(C)\n    if C <= 0:\n        print(\"Yes\")\n        exit()\n    A -= D\n    # print(A)\n    if A <= 0:\n        print(\"No\")\n        exit()\n","A,B,C,D = map(int,input().rstrip().split(\" \"))\nfor i in range(100):\n    C -= B\n    if (C <= 0):\n        print(\"Yes\")\n        break\n    A -= D\n    if (A <= 0):\n        print(\"No\")\n        break","import math\n\nA, B, C, D = map(int, input().split())\n\ncnt1 = math.ceil(C \/ B)\ncnt2 = math.ceil(A \/ D)\n\nif cnt1 <= cnt2:\n    print('Yes')\nelse:\n    print('No')\n","A,B,C,D=map(int,input().split())\n\nwhile(1):\n    A=A-D\n    print(A)\n    C=C-B\n    print(C)\n    if A <= 0:\n        print(\"No\")\n        break\n    else:\n        print(\"Yes\")\n        break","A,B,C,D = map(int,input().split())\n#print(A,B,C,D)\n\nwhile A > 0:\n    C -= B\n    A -= D\n    if C <= 0:\n        print(\"Yes\")\n        \n    elif A <= 0:\n        print(\"No\")\n    else:\n        pass\n ","def resolve():\n    a, b,c,d = map(int, input().split())\n    while a > 0 and c > 0:\n        c -= b\n        if c <= 0:\n            print(\"Yes\")\n            exit()\n        a -= d\n        if a<= 0:\n            print(\"No\")\n            exit()\nresolve()","t_tairyoku,t_attack,a_tairyoku,a_attack = list(map(int,input().split()))\n\nflag = 0\ni = 0\n\nwhile flag == 0:\n    if i%2 == 0:\n        a_tairyoku -= t_attack\n    else:\n        t_tairyoku -= a_attack\n    if a_tairyoku <= 0:\n        print(\"Yes\")\n        exit()\n    if t_tairyoku <= 0:\n        print(\"No\")\n        exit()\n    i += 1\n","# Battle\nln = list(map(int, input().split(' ')))\nthp = ln[0]\ntatk = ln[1]\nahp = ln[2]\naatk = ln[3]\nturn = 0\nwhile thp>0 and ahp>0:\n    if turn %2 == 0:\n        ahp -= tatk\n        turn += 1\n    else:\n        thp -= aatk\n        turn += 1\n\nif thp>0:\n    print('Yes')\nelse:\n    print('No')\n    ","a,b,c,d = map(int,input().split())\nif -(-a\/\/d) >= -(-c\/\/b):\n  print(\"Yes\")\nelse:\n  print(\"No\")\n  ","a, b, c, d = map(int, input().strip().split())\n\nwhile True:\n    c -= b\n    if c <= 0:\n        print('Yes')\n        break\n    a -= d\n    if a <= 0:\n        print('No')\n        break\n\n","import math\nA,B,C,D = map(int,input().split())\nif (math.ceil(C\/B) < math.ceil(A\/D)):\n    print('Yes')\nelse:\n    print('No')"]}
{"description_html":"<h1>Social Game<\/h1>\n\n<!-- Time limit: 2 sec \/ Memory limit: 256MB-->\n\n<h2>Problem Statement<\/h2>\n\n<p>\nJOI has decided to start playing a new social game from tomorrow.\n<\/p>\n\n<p>\nIn this social game, you can log in up to once a day and get <var>A<\/var> coins each time.\n<\/p>\n\n<p>\nAlso, if you log in continuously from Monday to Sunday for 7 consecutive days, you can get an additional <var>B<\/var> coins each time.\n<\/p>\n\n<p>\nThere is no other way to get coins.\n<\/p>\n\n<p>\nTomorrow is Monday. Find the minimum number of times JOI must log in to get at least <var>C<\/var> coins.\n<\/p>\n\n\n<h2>Constraints<\/h2>\n\n<ul>\n<li><var>1 \u2266 A \u2266 1000<\/var><\/li>\n<li><var>0 \u2266 B \u2266 1000<\/var><\/li>\n<li><var>1 \u2266 C \u2266 1000000 (= 10^6)<\/var><\/li>\n<\/ul>\n\n<h2>Input and Output<\/h2>\n\n<p>\n<b>Input<\/b><br>\nThe input is given in the following format from the standard input.<br>\n<var>A<\/var> <var>B<\/var> <var>C<\/var>\n<\/p>\n\n<p>\n<b>Output<\/b><br>\nFind the minimum number of times JOI must log in to get at least <var>C<\/var> coins.\n<\/p>\n\n\n<h2>Input and Output Examples<\/h2>\n\n<h3>Input Example 1<\/h3>\n<pre>\n3 0 10\n<\/pre>\n\n<h3>Output Example 1<\/h3>\n<pre>\n4\n<\/pre>\n\n<ul>\n<li>You can get <var>3<\/var> coins per login, and you want to get <var>10<\/var> coins or more.<\/li>\n<li>JOI can get <var>12<\/var> coins by logging in for <var>4<\/var> consecutive days from Monday to Thursday.<\/li>\n<li>Since you cannot get <var>10<\/var> or more coins in less than <var>3<\/var> logins, the minimum number of times JOI must log in is <var>4<\/var>. Therefore, output <var>4<\/var>.<\/li>\n<\/ul>\n\n<h3>Input Example 2<\/h3>\n<pre>\n1 2 10\n<\/pre>\n\n<h3>Output Example 2<\/h3>\n<pre>\n8\n<\/pre>\n\n<ul>\n<li>You can get <var>1<\/var> coin per login, and you can get an additional <var>2<\/var> coins by logging in continuously for a week. You want to get <var>10<\/var> coins or more.<\/li>\n<li>If you log in continuously from Monday to Sunday, you can get a total of <var>9<\/var> coins, including <var>7<\/var> coins per day and <var>2<\/var> additional coins. Therefore, by logging in one more time, you can get <var>10<\/var> coins.<\/li>\n<li>Since you cannot get <var>10<\/var> or more coins in less than <var>7<\/var> logins, the minimum number of times JOI must log in is <var>8<\/var>. Therefore, output <var>8<\/var>.<\/li>\n<\/ul>\n\n<br\/>\n<div class=\"source\">\n<p class=\"source\">\n<a rel=\"license\" href=\"http:\/\/creativecommons.org\/licenses\/by-sa\/4.0\/\"><img alt=\"Creative Commons License\" style=\"border-width:0\" src=\"https:\/\/i.creativecommons.org\/l\/by-sa\/4.0\/80x15.png\"\/><\/a>\n<\/p>\n<p class=\"source\">\n<a href=\"https:\/\/www.ioi-jp.org\/joi\/2018\/2019-yo\/index.html\">Provided by the JOI Japan Committee, \"18th JOI 2018\/2019 Qualifying Round Tasks\"<\/a>\n<\/p>\n<\/div>","description_string":"Social Game\n\nProblem Statement\n\nJOI has decided to start playing a new social game from tomorrow.\n\n\nIn this social game, you can log in up to once a day and get A coins each time.\n\n\nAlso, if you log in continuously from Monday to Sunday for 7 consecutive days, you can get an additional B coins each time.\n\n\nThere is no other way to get coins.\n\n\nTomorrow is Monday. Find the minimum number of times JOI must log in to get at least C coins.\n\nConstraints\n\n1 \u2266 A \u2266 1000\n0 \u2266 B \u2266 1000\n1 \u2266 C \u2266 1000000 (= 10^6)\n\nInput and Output\n\nInput\nThe input is given in the following format from the standard input.\nA B C\n\n\nOutput\nFind the minimum number of times JOI must log in to get at least C coins.\n\nInput and Output Examples\nInput Example 1\n\n3 0 10\n\nOutput Example 1\n\n4\n\n\nYou can get 3 coins per login, and you want to get 10 coins or more.\nJOI can get 12 coins by logging in for 4 consecutive days from Monday to Thursday.\nSince you cannot get 10 or more coins in less than 3 logins, the minimum number of times JOI must log in is 4. Therefore, output 4.\n\nInput Example 2\n\n1 2 10\n\nOutput Example 2\n\n8\n\n\nYou can get 1 coin per login, and you can get an additional 2 coins by logging in continuously for a week. You want to get 10 coins or more.\nIf you log in continuously from Monday to Sunday, you can get a total of 9 coins, including 7 coins per day and 2 additional coins. Therefore, by logging in one more time, you can get 10 coins.\nSince you cannot get 10 or more coins in less than 7 logins, the minimum number of times JOI must log in is 8. Therefore, output 8.\n\n\n\n\n\n\n\nProvided by the JOI Japan Committee, \"18th JOI 2018\/2019 Qualifying Round Tasks\"\n\n","orig_lang_html":"<h1>\u30bd\u30fc\u30b7\u30e3\u30eb\u30b2\u30fc\u30e0 (Social Game)<\/h1>\n\n<!--\u3000\u3000\u6642\u9593\u5236\u9650 : 2sec \/ \u30e1\u30e2\u30ea\u5236\u9650 : 256MB-->\n\n<h2> \u554f\u984c\u6587<\/h2>\n\n<p>\nJOI \u541b\u306f\u660e\u65e5\u304b\u3089\u65b0\u305f\u306b\u30bd\u30fc\u30b7\u30e3\u30eb\u30b2\u30fc\u30e0\u3092\u59cb\u3081\u308b\u3053\u3068\u306b\u3057\u305f\uff0e\n<\/p>\n\n<p>\n\u3053\u306e\u30bd\u30fc\u30b7\u30e3\u30eb\u30b2\u30fc\u30e0\u3067\u306f\uff0c<var>1<\/var> \u65e5\u306b\u3064\u304d <var>1<\/var> \u56de\u307e\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\uff0c\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u305f\u3073\u306b <var>A<\/var> \u679a\u306e\u30b3\u30a4\u30f3\u304c\u5f97\u3089\u308c\u308b\uff0e\n<\/p>\n\n<p>\n\u307e\u305f\uff0c\u6708\u66dc\u65e5\u304b\u3089\u65e5\u66dc\u65e5\u307e\u3067 <var>7<\/var> \u65e5\u9023\u7d9a\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3068\uff0c\u305d\u306e\u305f\u3073\u306b\uff0c\u8ffd\u52a0\u3067 <var>B<\/var> \u679a\u306e\u30b3\u30a4\u30f3\u304c\u5f97\u3089\u308c\u308b\uff0e\n<\/p>\n\n<p>\n\u3053\u308c\u4ee5\u5916\u306b\u30b3\u30a4\u30f3\u304c\u3082\u3089\u3048\u308b\u3053\u3068\u306f\u306a\u3044\uff0e\n<\/p>\n\n<p>\n\u660e\u65e5\u306f\u6708\u66dc\u65e5\u3067\u3042\u308b\uff0eJOI \u541b\u304c\u5c11\u306a\u304f\u3068\u3082 <var>C<\/var> \u679a\u306e\u30b3\u30a4\u30f3\u3092\u5f97\u308b\u305f\u3081\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u56de\u6570\u306e\u6700\u5c0f\u5024\u3092\u6c42\u3081\u3088\uff0e\n<\/p>\n\n\n<h2> \u5236\u7d04<\/h2>\n\n<ul>\n<li><var>1 \u2266 A \u2266 1000<\/var><\/li>\n<li><var>0 \u2266 B \u2266 1000<\/var><\/li>\n<li><var>1 \u2266 C \u2266 1000000 (= 10^6)<\/var><\/li>\n<\/ul>\n\n<h2>  \u5165\u529b\u30fb\u51fa\u529b<\/h2>\n\n<p>\n<b>\u5165\u529b<\/b><br>\n\u5165\u529b\u306f\u4ee5\u4e0b\u306e\u5f62\u5f0f\u3067\u6a19\u6e96\u5165\u529b\u304b\u3089\u4e0e\u3048\u3089\u308c\u308b\uff0e<br>\n<var>A<\/var> <var>B<\/var> <var>C<\/var>\n<\/p>\n\n<p>\n<b>\u51fa\u529b<\/b><br>\nJOI \u541b\u304c\u5c11\u306a\u304f\u3068\u3082 <var>C<\/var> \u679a\u306e\u30b3\u30a4\u30f3\u3092\u5f97\u308b\u305f\u3081\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u56de\u6570\u306e\u6700\u5c0f\u5024\u3092\u51fa\u529b\u305b\u3088\uff0e\n<\/p>\n\n<!--\n<h2> \u5c0f\u8ab2\u984c<\/h2>\n<p style=\"line-height: 200%;  margin-left: 30px; margin-right: 30px;\">\n<\/p>\n\n<p style=\"line-height: 200%;  margin-left: 30px; margin-right: 30px;\">\n<ol style=\"line-height: 200%;  margin-left: 30px; margin-right: 30px;\">\n<li>(<var>40<\/var> \u70b9) <var>B = 0<\/var><\/li>\n<li>(<var>60<\/var> \u70b9) \u8ffd\u52a0\u306e\u5236\u7d04\u306f\u306a\u3044\uff0e<\/li>\n<\/ol>\n<\/p>\n-->\n\n<h2> \u5165\u51fa\u529b\u4f8b<\/h2>\n\n<h3>\u5165\u529b\u4f8b 1<\/h3>\n<pre>\n3 0 10\n<\/pre>\n\n<h3>\u51fa\u529b\u4f8b 1<\/h3>\n<pre>\n4\n<\/pre>\n\n<ul>\n<li><var>1<\/var> \u56de\u306e\u30ed\u30b0\u30a4\u30f3\u3042\u305f\u308a <var>3<\/var> \u679a\u306e\u30b3\u30a4\u30f3\u304c\u5f97\u3089\u308c\uff0c<var>10<\/var> \u679a\u306e\u30b3\u30a4\u30f3\u3092\u96c6\u3081\u305f\u3044\uff0e<\/li>\n<li>JOI \u541b\u306f\uff0c\u6708\u66dc\u65e5\u304b\u3089\u9023\u7d9a <var>4<\/var> \u65e5\u9593\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3053\u3068\u3067 <var>12<\/var> \u679a\u306e\u30b3\u30a4\u30f3\u304c\u5f97\u3089\u308c\u308b\uff0e<\/li>\n<li><var>3<\/var> \u56de\u4ee5\u4e0b\u306e\u30ed\u30b0\u30a4\u30f3\u3067 <var>10<\/var> \u679a\u4ee5\u4e0a\u306e\u30b3\u30a4\u30f3\u3092\u5f97\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u306e\u3067\uff0cJOI \u541b\u304c\u30ed\u30b0\u30a4\u30f3\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u56de\u6570\u306e\u6700\u5c0f\u5024\u306f <var>4<\/var> \u3067\u3042\u308b\uff0e\u5f93\u3063\u3066\uff0c<var>4<\/var> \u3092\u51fa\u529b\u3059\u308b\uff0e<\/li>\n<\/ul>\n<\/p>\n\n<h3>\u5165\u529b\u4f8b 2<\/h3>\n<pre>\n1 2 10\n<\/pre>\n\n<h3>\u51fa\u529b\u4f8b 2<\/h3>\n<pre>\n8\n<\/pre>\n\n<ul>\n<li><var>1<\/var> \u56de\u306e\u30ed\u30b0\u30a4\u30f3\u3042\u305f\u308a <var>1<\/var> \u679a\u306e\u30b3\u30a4\u30f3\u304c\u5f97\u3089\u308c\u308b\uff0e\u305d\u308c\u3068\u306f\u5225\u306b\uff0c1 \u9031\u9593\u9023\u7d9a\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3053\u3068\u3067 <var>2<\/var> \u679a\u306e\u30b3\u30a4\u30f3\u304c\u5f97\u3089\u308c\u308b\uff0e<var>10<\/var> \u679a\u306e\u30b3\u30a4\u30f3\u3092\u96c6\u3081\u305f\u3044\uff0e<\/li>\n<li>\u6708\u66dc\u65e5\u304b\u3089\u65e5\u66dc\u65e5\u307e\u3067\u9023\u7d9a\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3068\uff0c\u65e5\u3005\u306e\u30b3\u30a4\u30f3 <var>7<\/var> \u679a\u306b\u52a0\u3048\u3066\uff0c<var>2<\/var> \u679a\u306e\u30b3\u30a4\u30f3\u304c\u5f97\u3089\u308c\u308b\u305f\u3081\uff0c\u5408\u8a08 <var>9<\/var> \u679a\u306e\u30b3\u30a4\u30f3\u304c\u5f97\u3089\u308c\u308b\uff0e\u5f93\u3063\u3066\uff0c\u66f4\u306b\u3082\u3046 <var>1<\/var> \u56de\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3053\u3068\u306b\u3088\u308a\uff0c<var>10<\/var> \u679a\u306e\u30b3\u30a4\u30f3\u304c\u5f97\u3089\u308c\u308b\uff0e<\/li>\n<li><var>7<\/var> \u56de\u4ee5\u4e0b\u306e\u30ed\u30b0\u30a4\u30f3\u3067 <var>10<\/var> \u679a\u4ee5\u4e0a\u306e\u30b3\u30a4\u30f3\u3092\u5f97\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u306e\u3067\uff0cJOI \u541b\u304c\u30ed\u30b0\u30a4\u30f3\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u56de\u6570\u306e\u6700\u5c0f\u5024\u306f <var>8<\/var> \u3067\u3042\u308b\uff0e\u5f93\u3063\u3066\uff0c<var>8<\/var> \u3092\u51fa\u529b\u3059\u308b\uff0e<\/li>\n<\/ul>\n\n<br\/>\n<div class=\"source\">\n<p class=\"source\">\n<a rel=\"license\" href=\"http:\/\/creativecommons.org\/licenses\/by-sa\/4.0\/\"><img alt=\"\u30af\u30ea\u30a8\u30a4\u30c6\u30a3\u30d6\u30fb\u30b3\u30e2\u30f3\u30ba\u30fb\u30e9\u30a4\u30bb\u30f3\u30b9\" style=\"border-width:0\" src=\"https:\/\/i.creativecommons.org\/l\/by-sa\/4.0\/80x15.png\"\/><\/a>\n<\/p>\n<p class=\"source\">\n<a href=\"https:\/\/www.ioi-jp.org\/joi\/2018\/2019-yo\/index.html\">\u60c5\u5831\u30aa\u30ea\u30f3\u30d4\u30c3\u30af\u65e5\u672c\u59d4\u54e1\u4f1a\u4f5c \u300e\u7b2c 18 \u56de\u65e5\u672c\u60c5\u5831\u30aa\u30ea\u30f3\u30d4\u30c3\u30af JOI 2018\/2019 \u4e88\u9078\u7af6\u6280\u8ab2\u984c\u300f<\/a>\n<\/p>\n<\/div>\n","orig_lang_string":"\u30bd\u30fc\u30b7\u30e3\u30eb\u30b2\u30fc\u30e0 (Social Game)\n\n \u554f\u984c\u6587\n\nJOI \u541b\u306f\u660e\u65e5\u304b\u3089\u65b0\u305f\u306b\u30bd\u30fc\u30b7\u30e3\u30eb\u30b2\u30fc\u30e0\u3092\u59cb\u3081\u308b\u3053\u3068\u306b\u3057\u305f\uff0e\n\n\n\u3053\u306e\u30bd\u30fc\u30b7\u30e3\u30eb\u30b2\u30fc\u30e0\u3067\u306f\uff0c1 \u65e5\u306b\u3064\u304d 1 \u56de\u307e\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\uff0c\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u305f\u3073\u306b A \u679a\u306e\u30b3\u30a4\u30f3\u304c\u5f97\u3089\u308c\u308b\uff0e\n\n\n\u307e\u305f\uff0c\u6708\u66dc\u65e5\u304b\u3089\u65e5\u66dc\u65e5\u307e\u3067 7 \u65e5\u9023\u7d9a\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3068\uff0c\u305d\u306e\u305f\u3073\u306b\uff0c\u8ffd\u52a0\u3067 B \u679a\u306e\u30b3\u30a4\u30f3\u304c\u5f97\u3089\u308c\u308b\uff0e\n\n\n\u3053\u308c\u4ee5\u5916\u306b\u30b3\u30a4\u30f3\u304c\u3082\u3089\u3048\u308b\u3053\u3068\u306f\u306a\u3044\uff0e\n\n\n\u660e\u65e5\u306f\u6708\u66dc\u65e5\u3067\u3042\u308b\uff0eJOI \u541b\u304c\u5c11\u306a\u304f\u3068\u3082 C \u679a\u306e\u30b3\u30a4\u30f3\u3092\u5f97\u308b\u305f\u3081\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u56de\u6570\u306e\u6700\u5c0f\u5024\u3092\u6c42\u3081\u3088\uff0e\n\n \u5236\u7d04\n\n1 \u2266 A \u2266 1000\n0 \u2266 B \u2266 1000\n1 \u2266 C \u2266 1000000 (= 10^6)\n\n  \u5165\u529b\u30fb\u51fa\u529b\n\n\u5165\u529b\n\u5165\u529b\u306f\u4ee5\u4e0b\u306e\u5f62\u5f0f\u3067\u6a19\u6e96\u5165\u529b\u304b\u3089\u4e0e\u3048\u3089\u308c\u308b\uff0e\nA B C\n\n\n\u51fa\u529b\nJOI \u541b\u304c\u5c11\u306a\u304f\u3068\u3082 C \u679a\u306e\u30b3\u30a4\u30f3\u3092\u5f97\u308b\u305f\u3081\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u56de\u6570\u306e\u6700\u5c0f\u5024\u3092\u51fa\u529b\u305b\u3088\uff0e\n\n\n \u5165\u51fa\u529b\u4f8b\n\u5165\u529b\u4f8b 1\n\n3 0 10\n\n\u51fa\u529b\u4f8b 1\n\n4\n\n\n1 \u56de\u306e\u30ed\u30b0\u30a4\u30f3\u3042\u305f\u308a 3 \u679a\u306e\u30b3\u30a4\u30f3\u304c\u5f97\u3089\u308c\uff0c10 \u679a\u306e\u30b3\u30a4\u30f3\u3092\u96c6\u3081\u305f\u3044\uff0e\nJOI \u541b\u306f\uff0c\u6708\u66dc\u65e5\u304b\u3089\u9023\u7d9a 4 \u65e5\u9593\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3053\u3068\u3067 12 \u679a\u306e\u30b3\u30a4\u30f3\u304c\u5f97\u3089\u308c\u308b\uff0e\n3 \u56de\u4ee5\u4e0b\u306e\u30ed\u30b0\u30a4\u30f3\u3067 10 \u679a\u4ee5\u4e0a\u306e\u30b3\u30a4\u30f3\u3092\u5f97\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u306e\u3067\uff0cJOI \u541b\u304c\u30ed\u30b0\u30a4\u30f3\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u56de\u6570\u306e\u6700\u5c0f\u5024\u306f 4 \u3067\u3042\u308b\uff0e\u5f93\u3063\u3066\uff0c4 \u3092\u51fa\u529b\u3059\u308b\uff0e\n\n\n\u5165\u529b\u4f8b 2\n\n1 2 10\n\n\u51fa\u529b\u4f8b 2\n\n8\n\n\n1 \u56de\u306e\u30ed\u30b0\u30a4\u30f3\u3042\u305f\u308a 1 \u679a\u306e\u30b3\u30a4\u30f3\u304c\u5f97\u3089\u308c\u308b\uff0e\u305d\u308c\u3068\u306f\u5225\u306b\uff0c1 \u9031\u9593\u9023\u7d9a\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3053\u3068\u3067 2 \u679a\u306e\u30b3\u30a4\u30f3\u304c\u5f97\u3089\u308c\u308b\uff0e10 \u679a\u306e\u30b3\u30a4\u30f3\u3092\u96c6\u3081\u305f\u3044\uff0e\n\u6708\u66dc\u65e5\u304b\u3089\u65e5\u66dc\u65e5\u307e\u3067\u9023\u7d9a\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3068\uff0c\u65e5\u3005\u306e\u30b3\u30a4\u30f3 7 \u679a\u306b\u52a0\u3048\u3066\uff0c2 \u679a\u306e\u30b3\u30a4\u30f3\u304c\u5f97\u3089\u308c\u308b\u305f\u3081\uff0c\u5408\u8a08 9 \u679a\u306e\u30b3\u30a4\u30f3\u304c\u5f97\u3089\u308c\u308b\uff0e\u5f93\u3063\u3066\uff0c\u66f4\u306b\u3082\u3046 1 \u56de\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3053\u3068\u306b\u3088\u308a\uff0c10 \u679a\u306e\u30b3\u30a4\u30f3\u304c\u5f97\u3089\u308c\u308b\uff0e\n7 \u56de\u4ee5\u4e0b\u306e\u30ed\u30b0\u30a4\u30f3\u3067 10 \u679a\u4ee5\u4e0a\u306e\u30b3\u30a4\u30f3\u3092\u5f97\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u306e\u3067\uff0cJOI \u541b\u304c\u30ed\u30b0\u30a4\u30f3\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u56de\u6570\u306e\u6700\u5c0f\u5024\u306f 8 \u3067\u3042\u308b\uff0e\u5f93\u3063\u3066\uff0c8 \u3092\u51fa\u529b\u3059\u308b\uff0e\n\n\n\n\n\n\n\n\u60c5\u5831\u30aa\u30ea\u30f3\u30d4\u30c3\u30af\u65e5\u672c\u59d4\u54e1\u4f1a\u4f5c \u300e\u7b2c 18 \u56de\u65e5\u672c\u60c5\u5831\u30aa\u30ea\u30f3\u30d4\u30c3\u30af JOI 2018\/2019 \u4e88\u9078\u7af6\u6280\u8ab2\u984c\u300f\n\n\n","solve_rate":0.953125,"codenet_problem_id":"p00575","input_testcases":{"25":"1 1 183","47":"1 0 28","7":"8 0 22","24":"1 1 163","29":"4 0 156","44":"2 0 43","89":"7 0 22","87":"4 0 58","101":"3 0 10","92":"6 0 14","0":"3 0 19","14":"5 0 43","43":"3 0 58","53":"5 0 156","73":"7 1 351","91":"8 0 43","80":"1 1 53","19":"1 0 19","88":"4 0 22","84":"2 0 278","9":"2 0 31","1":"2 0 19","76":"1 1 299","38":"4 0 229","78":"3 4 102","93":"3 1 10","86":"5 0 30","66":"1 0 37","94":"5 0 19","100":"3 0 10","26":"1 1 85","77":"1 1 154","90":"7 1 22","95":"4 1 19","12":"4 0 2","2":"4 0 19","21":"1 0 35","11":"4 1 58","49":"1 0 163","72":"2 0 161","18":"5 0 10","65":"1 1 128"},"output_testcases":{"25":"161\n","47":"28\n","7":"3\n","24":"143\n","29":"39\n","44":"22\n","89":"4\n","87":"15\n","101":"4\n","92":"3\n","0":"7\n","14":"9\n","43":"20\n","53":"32\n","73":"50\n","91":"6\n","80":"47\n","19":"19\n","88":"6\n","84":"139\n","9":"16\n","1":"10\n","76":"262\n","38":"58\n","78":"29\n","93":"4\n","86":"6\n","66":"37\n","94":"4\n","100":"4\n","26":"75\n","77":"135\n","90":"4\n","95":"5\n","12":"1\n","2":"5\n","21":"35\n","11":"14\n","49":"163\n","72":"81\n","18":"2\n","65":"112\n"},"n_missing":60,"programs":["A,B,C = map(int,input().split())\nday=0\ncoin=0\n\nwhile True:\n    if coin>=C:\n        break\n    day+=1\n    coin+=A\n    if day%7==0:\n        coin+=B\nprint(day)\n","A,B,C = map(int,input().split())\ncoin=0\nfor day in range(1,C+1):\n    coin+=A\n    if day % 7 == 0:\n        coin+=B\n    if coin >= C: break\nprint(day)\n","#! \/usr\/bin\/env python\n# -*- coding: utf-8 -*-\nimport sys\n\n\ndef main():\n    day = 0\n    data = map(int,input().split())\n    data = list(data)\n    while( data[2] > 0):\n        day = day +1\n        data[2] -= data[0]\n        if(day % 7 == 0):\n            data[2] -= data[1]\n    print(day)\n\nif __name__ == '__main__':\n    main()\n","a, b, c=map(int, input().split())\nans=c\/\/(a*7+b)*7\nc%=a*7+b\nans+=min(7, (c+a-1)\/\/a)\nprint(ans)\n","A,B,C=map(int,input().split())\nx=A*7+B\ny=C\/\/(A*7+B)\nz=x*y\nw=C-z\n\nif (A*7)<w<x:\n    print((y+1)*7)\nelse:\n    coin=0\n    day=0\n    while coin<w:\n        coin+=A\n        day+=1\n    print(y*7+day)\n\n","A,B,C=(int(x) for x in input().split())\n\nif B==0:\n    x=C\/\/A\n    if C%A!=0:\n        x=x+1\n\nelif A>C:\n    x=1\nelif C\/\/A<7:\n    x=C\/\/A+1\nelse:\n    t=0\n    y=A*7\n    y=y+B\n    z=C%y\n    if 0<z<A:\n        t=1\n    z=z\/\/A\n    if z>7:\n        t=7-z\n    s=C\/\/y\n    s=s*7\n    x=z+s+t\nprint(x)\n","a, b, c = map(int, input().split())\ncoin = 0\ncount = 0\noutput = 0\n\nwhile coin < c:\n    coin += a\n    count += 1\n    output += 1\n    \n    if count == 7 :\n        coin += b\n        count = 0\n\nprint(output)\n","inputText = input().split()\na = int(inputText[0])\nb = int(inputText[1])\nc = int(inputText[2])\nweek = a*7+b\nweeks = int(c \/week)\nremain = c % week\ntotalday = weeks * 7\ntotalday += int(remain\/a)\ntotalday2 = (int(c\/week)+1)*7\nif remain%a != 0:\n    totalday +=1\nprint(min(totalday,totalday2))\n\n","a,b,c = map(int,input().split())\n\nok = 100000000\nng = 0\nwhile ok - ng > 1:\n    m = (ok + ng) \/\/ 2\n    ge = m * a + (m \/\/ 7) * b\n    if ge >= c:\n        ok = m\n    else:\n        ng = m\nprint(ok)\n","A,B,C=map(int, input().split())\n\ncoin=0\nfor day in range(1, C+1) :\n    coin+=A\n    if day % 7 == 0 :\n        coin+=B\n    if coin >= C : break \nprint(day)\n\n","A,B,C=map(int,input().split())\ncoin=0\nfor day in range(1,C+1):\n    coin+=A\n    if day % 7 == 0:\n        coin+=B\n    if coin>=C:\n        break\nprint(day)\n\n","import math\n\na,b,c = map(int,input().split())\n\nx = c \/\/ (7*a + b)\ny = c - (7*a + b)*x\nz = math.ceil(y\/a)\n\nif y > 6 * a:\n    print(7 * (x + 1))\nelse:\n    print(7 * x + z)\n","A,B,C=map(int,input().split())\nx=A*7+B\ny=C\/\/(A*7+B)\nz=x*y\nv=C-z\n\nif (A*7)<v<x:\n    print((y+1)*7)\nelse:\n    coin=0\n    day=0\n    while coin<v:\n        coin+=A\n        day+=1\n    print(y*7+day)\n","import math\n\ninputs = inout().split(\" \")\n\nprint(math.cell(inputs[2]\/(inputs[0]+inputs[1]\/7))\n","a, b, c = map(int, input().split())\nweek = a * 7 + b\nd = c \/\/ week\nans = d * 7\nc -= d * week\n\ncnt = 0\nwhile(c > 0):\n    c -= a\n    ans += 1\n    cnt += 1\n    if(cnt == 7):\n        c -= b\n        cnt = 0\nprint(ans) \n","a,b,c=map(int,input().split())\nx=0\ny=0\nwhile x<c:\n    y+=1\n    x+=a\n    if y%7==0:\n        x+=b\nprint(y)\n","def eval(A, B, C):\n    rest = C\n    count = 0\n    \n    while True:\n        for i in range(7):\n            rest -= A\n            if i == 6:\n                rest -= B\n                \n            count += 1\n            if rest <= 0:\n                return count\n\n\nA, B, C = tuple(map(int, input().split()))\nprint(eval(A, B, C))\n","A,B,C = map(int,input().split())\ncoin=0\nfor day in range(1,C+1):\n    coin += A\n    if day %7 == 0:\n        coin += B\n    if coin >= C: break\nprint(day)\n","a,b,c=map(int,input().split())\nprint(c\/\/(7*a+b)*7+(7 if c%(7*a+b)>6*a else (c%(7*a+b)+a-1)\/\/a))\n","a, b, c = map(int, input().split())\nans = c\/\/(a*7+b)*7+min((c%(a*7+b)+a-1)\/\/a,7)\nprint(ans)\n","a,b,c = map(int,input().split())\ns = 0\ns += c \/\/ (a*7+b)*7\nc %= (a*7+b)\ns += min(7, (c + a - 1) \/\/ a)\nprint(s)\n","a,b,c = map(int,input().split())\nans = 0\nans += c\/\/(a*7 +b)*7\nc %= (a*7+b)\nans += min(7,c\/\/a)\nif c%a and c\/\/a <7:\n    ans += 1\nprint(ans)    \n","a,b,c=input().split()\na=int(a)\nb=int(b)\nc=int(c)\n\ni=0;\nwhile c>0:\n\ti=i+1\n\tc=c-a\n\tif i%7==0:\n\t\tc=c-b\nprint(i)\n\n","s = input().split()\nl = 0\nN = int(s[0])#\uff11\u65e5\nA = int(s[1])#\u30dc\u30fc\u30ca\u30b9\nB = int(s[2])#\u307b\u3057\u3044\nW = N*7+A\nif B%W == 0:\n  l = B\/\/W*7\nelse:\n  if int(B%W) > int(N*7):\n    l = (1+B\/\/W)*7\n  else:\n    if int(B%W%N) == 0:\n      l = B\/\/W*7+B%W\/\/N\n    else:\n      l = B\/\/W*7+B%W\/\/N+1\nprint(l)\n","A,B,C=map(int,input().split())\nsum=0\ni=1\nwhile True:\n    if i%7==0:\n        sum+=B\n    sum+=A\n    if sum>=C:\n        break\n    i+=1\nprint(i)\n","a,b,c = map(int,input().split())\n\nd = 0\ns = 0\nwhile s < c:\n    d += 1\n    if d%7 == 0:\n        s += b\n    s += a\nprint(d)\n\n","a, b, c = map(int, input().split())\nq, r = divmod(c, a*7+b)\ns = min(7, (r+a-1)\/\/a)\nprint(7*q + s)\n\n","a, b, c = map(int, input().split())\nd = 0\ns = 0\nwhile s < c:\n    d += 1\n    if d%7 == 0:\n        s += b\n    s += a\nprint(d)\n","A,B,C=map(int,input().split())\n\ncoin=0\n\nfor day in range(1,C+1):\n    coin+=A\n    if day % 7 ==0:\n       coin+=B\n    if coin >=C:\n       break\n   \nprint(day)\n","A, B, C = map(int, input().split())\n\nweek = C \/\/ (7 * A + B)\ncoin = week * (7 * A + B)\n\nday = week * 7\n\nif (C - coin) \/ A < 7 :\n    day += (C - coin) \/\/ A\n    coin += (C - coin) \/\/ A * A\n    \n    if coin != C :\n        day += 1\n        \nelse :\n    day += 7\n    coin += 7 * A + B\n    \n    if coin < C :\n        day += 1\n        \nprint(day)\n","A,B,C=map(int,input().split())\nif C<7*A+B:         #1\u9031\u9593\u76ee\u3067\u304a\u308f\u308b\n    if  A*7<C and C<A*7+B: #\u5b9f\u306f1\u9031\u76ee\u306e\u65e5\u66dc\u65e5\u306b\u7d42\u308f\u308b\n        print(7)\n    else:    \n        if C%A==0:          \n            print(C\/\/A)\n        else:               #\u3042\u307e\u308a\u304c\u3042\u3063\u305f\u3089\uff0b\uff11\n            print(C\/\/A+1) \nelse:                       #2\u9031\u9593\u76ee\u4ee5\u964d\n    if C%((7*A)+B)==0:              #\u65e5\u66dc\u65e5\u306b\u7d42\u308f\u308b\n        print((C\/\/((7*A)+B))*7)\n    else :\n        if C%((7*A)+B)>=7*A and C%((7*A)+B)<7*A+B: #\u5b9f\u306f\u65e5\u66dc\u65e5\u306b\u7d42\u308f\u308b\n            print((C\/\/((7*A)+B)+1)*7)\n        else:\n            if (C%((7*A)+B))%A==0 :\n                print(((C\/\/((7*A)+B))*7)+((C%((7*A)+B))\/\/A))\n            else:                       #\u4f59\u308a\u304c\u3042\u3063\u305f\u3089+\uff11\n             print(((C\/\/((7*A)+B))*7)+((C%((7*A)+B)))\/\/A+1)\n    \n","A,B,C = map(int,input().split())\n\ncoin=0\nfor day in range(1,C+1):\n    coin+=A\n    if day % 7== 0:\n        coin+=B\n    if coin >= C: break\n\nprint(day)\n","A, B, C = map(int, input().split())\n\nweek_value = A * 7 + B\n\nweeks = C \/\/ week_value\nrest = C % week_value\n\nday = 0\nif rest != 0 and A * 7 < rest:\n    day = 7\nelse:\n    day = rest \/\/ A\n    if rest % A != 0:\n        day += 1\n\nprint(weeks * 7 + day)\n\n","a,b,c=map(int,input().split())\n\ncoin=0\nfor day in range(1,c+1):\n    coin+=a\n    #\u6708\u66dc\u304b\u3089\u65e5\u66dc\u307e\u3067\u9023\u7d9a\u3067\u30ed\u30b0\u30a4\u30f3\n    if day % 7 == 0:\n        coin+=b\n    if coin >= c: break\nprint(day)\n\n","a, b, c = map(int, input().split())\n\ncoin=0\nfor day in range(1, c+1):\n    coin+=a\n    \n    if day % 7 == 0:\n        coin+=b\n    if coin >= c: break\n\nprint(day)\n","import math\n\nA,B,C=map(int,input().split())\n\nw=C\/\/(7*A+B)\n\nz=C-(7*A+B)*w\n\nif z<=A*6:\n    print(w*7+math.ceil(z\/A))\n    \nelse:\n    print(w*7+7)\n\n","ABC=list(map(int,input().split()))\ncoin=0\ndate=0\ndays=0\n\nwhile(1):\n    days+=1\n    \n    if not date==6:\n        coin=coin+ABC[0]\n    else:\n        coin=coin+ABC[1]\n        coin=coin+ABC[0]\n\n    if coin>=ABC[2]:\n        print(days)\n        break\n    date=(date+1)%7\n","a, b, c = map(int,input().split())\n\nday = 0\ncoin = 0\nloginCont = 0\nwhile True:\n    day += 1\n    loginCont += 1\n    coin += a\n    if day == 7:\n        coin += b\n        day = 0\n        if coin >= c:\n            break\n    if coin >= c:\n        break\n\nprint(loginCont)\n","a,b,c=map(int,input().split())\ncount=0\nsum=0\nwhile True:\n    count+=1\n    sum+=a\n    if count%7==0:\n        sum+=b\n    if sum>=c:\n        break\nprint(count)\n","a,b,c=map(int,input().split())\nd=1\ncoin=0\nwhile coin<c:\n    if d%7==0:\n        coin+=b\n    coin+=a\n    d+=1\nprint(d-1)\n","l = list(map(int,input().split()))\ncoins = 0\nlogin_times = 0\nwhile True:\n    coins += l[0]\n    login_times += 1\n    if login_times%7==0:\n        coins += l[1]\n    if coins>=l[2]:\n        print(login_times)\n        break\n","inputs = input().split()\na = int(inputs[0])\nb = int(inputs[1])\nc = int(inputs[2])\n\ny = 7*c \/ (7*a + b)\nif y - int(y) > 0:\n    x = int(y) + 1\nelse:\n    x = int(y)\n\n\nwhile True:\n    if a*x + int(x\/7) * b >= c:\n        print(x)\n        break\n    else:\n        x+=1\n","d, b, t = [int(x) for x in input().split()]\n\nw = 7 * d + b\n\nc = 0\nc += (t \/\/ w) * 7\nt %= w\n\nif t >= 7*d:\n    c +=7\n    t = 0\nelse:\n    c += t\/\/d\n    t %= d\n    if t > 0:\n        c += 1\n\nprint(c)\n\n","\nif __name__ == '__main__':\n\n\ta,b,c = map(int,input().split())\n\ttmp = 0\n\ttmp2 = 0\n\ttmp3 = 0\n\ttmp4 = 0\n\n\ttmp = a * 7 + b\n\ttmp2 = int(c \/ tmp)\n\ttmp3 = c % tmp\n\n\tif tmp3 != 0:\n\t\tif tmp3 > a*7:\n\t\t\ttmp4 = 7\n\t\telse:\n\t\t\ttmp4 = int(tmp3 \/ a)\n\t\t\tif tmp3 % a != 0:\n\t\t\t\ttmp4 += 1\n\tif c < tmp:\n\t\tprint(tmp4)\n\telse:\n\t\tprint(tmp2*7 + tmp4)\n\n","a,b,c = map(int,input().split())\n\nday=0\ncoin=0\n\nwhile coin<c:\n    day+=1\n    coin+=a\n    if day%7==0:\n        coin+=b\n        \n    \nprint(day)\n","A,B,C=(int(x) for x in input().split())\n\nif B==0:\n    x=C\/\/A\n    if C%A!=0:\n        x=x+1\nelif A>C:\n    x=1\nelif C\/\/A<7:\n    x=C\/\/A+1\nelse:\n    t=0\n    y=A*7\n    y=y+B\n    z=C%y\n    if 0<z<A:\n        t=1\n    z=z\/\/A\n    if z>7:\n        t=7-z\n    s=C\/\/y\n    s=s*7\n    x=z+s+t\nprint(x)\n","a, b, x = map(int, input().split())\ni = 0\nwhile x>0:\n    i += 1\n    x -= a\n    if i%7==0: x-=b\nprint(i)\n","A,B,C=map(int,input().split())\nC_7=7*A+B\nweek_day,week_rem,day_0,day_rem=C\/\/C_7*7,C%C_7,C\/\/A,C%A\n\nif C<=A:\n    print(1)\nelif C<C_7:\n    if A*7<week_rem<=C:\n        print(7)\n    elif 0<day_rem<=A:\n        print(day_0+1) \n    elif day_rem==0:\n        print(day_0)\n    else:\n        print(day_0+day_rem)\nelif B==0:\n    if day_rem==0:\n        print(day_0)\n    else:\n        print(day_0+1)\nelif week_rem==0:\n    print(week_day)\nelif C>C_7:\n    if 0<week_rem<=A:\n        print(week_day+1)\n    elif A*7<week_rem<=C_7:\n        print(week_day+7)\n    else:\n        print(week_day+week_rem)  \n","A,B,C=map(int,input().split())\ns=7*A+B\nw=C\/\/s\nD=C%s\n\nif D<7*A :\n    d=-(-D\/\/A)\nelif 0<=D-7*A and D-7*A<B :\n    d=7\n    \nprint(7*w+d)\n","a,b,c=input().split()\nd = int(a)*7+int(b) #\u4e00\u9031\u9593\u3067\u624b\u306b\u5165\u308b\u30b3\u30a4\u30f3\ne = int(c)\/\/d #\u5fc5\u8981\u306a\u9031\u306e\u6570\nf = int(c)-d*e #\u6b8b\u308a\u306e\u30b3\u30a4\u30f3\nif f<=6*int(a) and f%int(a)>0 : g=f\/\/int(a)+1\nelif f<=6*int(a) and f%int(a)<=0 : g=f\/int(a)\nelse : g=7\nprint(int(e*7+g))\n","A,B,C=map(int,input().split())\nsum=0\nx=0\nwhile C>sum:\n    x+=1\n    sum+=A\n    if x%7==0:\n        sum+=B\nprint(x)\n","sum_coins = 0\ncoin_day, coin_weekly, coin_needed = map(int, input().split())\nday = 0\n\nwhile sum_coins < coin_needed:\n    day +=1\n    sum_coins += coin_day\n\n    if day % 7 == 0:\n        sum_coins += coin_weekly\nprint(day)\n","A,B,C=map(int,input().split())\n\nsum=0\ni=0\nwhile True:\n    sum+=A\n    i+=1\n    if sum>=C:\n        print(i)\n        break\n    if i%7==0:\n        sum+=B\n        if sum>=C:\n            print(i)\n            break\n","import math as m\nA,B,C=map(int,input().split())\npw=A*7+B\nw=C\/\/pw\nr=C%pw\nd=0\nif  0<r<7*A:\n    if r%A==0:\n        d=r\/\/A\n    else:\n        d=(r\/\/A)+1\n    \nelif 7*A<=r<7*A+B: \n    d=7\nprint(w*7+ d )       \n","A,B,C=map(int,input().split())\nx=A*7+B\ny=C\/\/(A*7+B)\nz=x*y\nw=C-z\nif (A*7)<w<x:\n    print((y+1)*7)\nelse:\n    coin=0\n    day=0\n    while coin<w:\n        coin+=A\n        day+=1\n    print(y*7+day)\n","a,b,c=map(int,input().split())\ni=0\ncnt=0\nwhile cnt<c:\n    i+=1\n    cnt+=a\n    if i%7==0:\n        cnt+=b\nprint(i)\n","import math\na,b,c = map(int,input().split())\nfor i in range(10**6):\n    c -= a\n    if i%7 == 6:\n        c -= b\n    if c <= 0:\n        print(i+1)\n        break\n","a, b, c = map(int, input().split())\np = c \/\/ (a*7 + b)\nq = c % (a*7 + b)\nr = q \/\/ a\ns = q % a\nif a*7 < q < a*7+b:\n    print(p*7 + 7)\nelif s == 0:\n    print(p*7 + r)\nelse:\n    print(p*7 + r + 1)\n\n    \n    \n\n\n","#!\/usr\/bin\/python3\n\nimport array\nfrom fractions import Fraction\nimport functools\nimport itertools\nimport math\nimport os\nimport sys\n\n\ndef main():\n    A, B, C = read_ints()\n    print(solve(A, B, C))\n\n\ndef solve(A, B, C):\n    weekly = A * 7 + B\n    weeks = C \/\/ weekly\n    rest = C - weekly * weeks\n    days = (rest + A - 1) \/\/ A\n    if days > 7:\n        days = 7\n    return weeks * 7 + days\n\n\n###############################################################################\n# AUXILIARY FUNCTIONS\n\nDEBUG = 'DEBUG' in os.environ\n\n\ndef inp():\n    return sys.stdin.readline().rstrip()\n\n\ndef read_int():\n    return int(inp())\n\n\ndef read_ints():\n    return [int(e) for e in inp().split()]\n\n\ndef dprint(*value, sep=' ', end='\\n'):\n    if DEBUG:\n        print(*value, sep=sep, end=end)\n\n\nif __name__ == '__main__':\n    main()\n\n","import math\na, b, c = map(int, input().split())\n\nn = 0\n\nwhile True:\n    n += 1\n    if (a * n + math.floor(n \/ 7) * b >= c):\n        break\n\nprint(n)\n\n","A,B,C = map(int,input().split())\ncoin = 0\nfor day in range(1,C+1):\n    coin += A\n    if day % 7 == 0:\n        coin += B\n    if coin >= C:\n        break\nprint(day)\n\n","a,b,c = map(int,input().split())\n\nd = 0\ns = 0\nwhile s < c:\n    d += 1\n    if d%7 == 0:\n        s += b\n    s += a\nprint(d)\n","a,b,c=map(int,input().split())\nans=7\nw=7*a+b\nif c<=6*a:\n    if c%a==0:\n        ans=c\/\/a\n    else:\n        ans=c\/\/a+1\nelse:\n    if c>w:\n        ans+=(c\/\/w-1)*7\n        c-=c\/\/w*w\n        if c%a==0 and c<=6*a:\n            ans+=c\/\/a\n        else:\n            if 6*a<c<=7*a+b:\n                ans+=7\n            else:\n                ans+=c\/\/a+1\nprint(ans)\n\n\n","A,B,C = map(int,input().split())\n\ncoin=0\nfor day in range(1, C+1):\n    coin+=A\n    if day % 7 == 0:\n        coin+=B\n    if coin >= C: break\n\nprint(day)\n","import math\na, b, c=map(int,input().split())\nw = a*7+b\nx = c\/\/w\ny = c%w\nif y <= a*7:\n   print((7*x)+math.ceil(y\/a))\nelse:\n   print(7*(x+1))\n\n","a,b,c = map(int,input().split())\nx = 0\nd = 0\nwhile 1:\n    if x >= c:\n        break\n    else:\n        d = d +1\n        x = x+a\n        if d%7 == 0:\n            x = x+b\nprint(d)\n\n","A, B, C = map(int,input().split())\n\ncoin = 0\nfor day in range(1, C+1):\n    coin += A\n    if day % 7 == 0:\n        coin += B\n    if coin >= C:\n        break\nprint(day)\n","a,b,c=map(int,input().split())\ni=1\nwhile True:\n    x=a*i+b*(i\/\/7)\n    if x >= c:\n        print(i)\n        break\n    i += 1\n","inputline = input().split()\na = int(inputline[0])\nb = int(inputline[1])\nc = int(inputline[2])\n\ncnt = 0\ncoin = 0\n\nwhile coin < c:\n    cnt += 1\n    if (cnt % 7) == 0:\n        coin += b\n    coin += a\nprint(cnt)\n\n\n","A,B,C=map(int,input().split())\nDay=0\ncoin=0\nwhile C>coin:\n    Day+=1\n    coin+=A\n    if Day%7==0:\n        coin+=B\nprint(Day)\n","A,B,C=map(int,input().split())\nday=0\ncoin=0\nwhile coin<C:\n    day+=1\n    coin+=A\n    if day%7==0:\n        coin+=B\nprint(day)\n","a,b,c = map(int,input().split())\n\nd = 0\ns = 0\nwhile s < c:\n    d += 1\n    if d%7 == 0:\n        s += b\n    s += a\nprint(d)\n\n","def getInput():\n    (a, b, c) = (int(i) for i in input().split(\" \"))\n    return a, b, c\n\na, b, c = getInput()\n\nn_weeklylogin = 0\nn_dailylogin = 0\nweekly_gain = 7*a+b\n\nn_weeklylogin = c\/\/weekly_gain\ntotal_bonus = n_weeklylogin*weekly_gain\n\nif total_bonus >= c:\n    print(n_weeklylogin*7)\nelse:\n    n_dailylogin = -(-(c-total_bonus)\/\/a)\n    print(n_weeklylogin*7 + (n_dailylogin>=7)*7 + (n_dailylogin<7)*(n_dailylogin))\n\n","A,B,C=map(int,input().split())\ni=1\nwhile True:\n    if i*A+int(i\/7)*B>=C:\n        break\n    i+=1\nprint(i)    \n","A,B,C=map(int,input().split())\n\nx=C%(A*7+B)\ny =C\/\/(A*7+B)\n\nif (C\/\/A)<7:\n    if C%A==0:\n        print(C\/\/A)\n    else:\n        print(C\/\/A+1)\n        \nelif x==0:\n    print(y*7)\nelse:\n    z=x%A\n    w=x\/\/A\n    if w>(A*7):\n        print(y*7+7)\n    elif w==7 and z<=B:\n        print(y*7+7)\n    elif z==0:\n        print(y*7+w)\n    else:\n        print(y*7+w+1)\n","a,b,c = map(int,input().split())\n\nd = 0\ns = 0\nwhile s < c:\n    d += 1\n    if d%7 == 0:\n        s += b\n    s += a\nprint(d)\n\n","# coding: utf-8\n# Your code here!\na,b,c=map(int,input().split())\n\nsum=0\ni=0\nwhile True:\n    sum+=a\n    i+=1\n    if sum>=c:\n        print(i)\n        break\n    if i%7==0:\n        sum+=b\n        if sum>=c:\n            print(i)\n            break\n","#0652\na , b , c = map(int,input().split())\nsum = 0\ncount = 0 \nwhile True:\n    if sum >= c:\n        break\n    sum += a\n    count += 1\n    if count%7 == 0:\n        sum += b \n        \nprint(count)\n","    \nA, B, C = map(int, input().split())\nans = 0\nk = C \/\/ (7*A+B)\nC -= k*(7*A+B)\nif C <= 7*A:\n    print(7*k + (C+A-1)\/\/A)\nelse:\n    print(7*(k+1))\n","day=0\nsum=0\n\na,b,c=map(int,input().split())\n\nwhile True:\n    day+=1\n    \n    if day%7==0:\n        sum+=(a+b)\n    else:\n        sum+=a\n    \n    if sum>=c:\n        print(day)\n        break\n","A,B,C=map(int,input().split())\nX=1\nwhile True:\n    if (C<=A*X+(X\/\/7)*B):\n\n        print(X)\n        break\n    else:\n        X=X+1\n        \n","a,b,c=map(int,input().split())\nd=c\/\/(a*7+b)*7\nc%=a*7+b\ne=0\nwhile c>0 and e<7:\n    d+=1\n    c-=a\n    e+=1\nprint(d)\n","import math\nline = input().split(\" \")\nA = int(line[0])\nB = int(line[1])\nC = int(line[2])\n\nW = C\/\/(7*A+B)\nremain = C - (7*A+B)*W\n#print(W, \" \", remain)\nD = 0\nif(remain >= 7*A):\n    D = 7 \nelse:\n    D = math.ceil(remain\/A)\n\nans = 7*W + D\n\nprint(ans)\n","import math\n\na, b, c = map(int, input().split())\n\ndays = 1 \ncoin = 0\n\n\n\nwhile c > coin: \n    coin = a * days + b * math.floor(days\/7)\n    days = days + 1\nprint (days - 1)\n","#!usr\/bin\/env python3\nimport sys\nimport math\nimport string\nimport collections\nimport fractions\nimport random\nfrom operator import itemgetter\nimport itertools\nfrom collections import deque\nimport copy\nimport heapq\nimport bisect\n\nMOD = 10 ** 9 + 7\nINF = float('inf')\ninput = lambda: sys.stdin.readline().strip()\n\nsys.setrecursionlimit(10 ** 8)\n\nA, B, C = map(int, input().split())\nSum = 0\nfor i in range(1, 10**9):\n    Sum += A\n    if i%7 == 0:\n        Sum += B\n    if Sum >= C:\n        print(i)\n        sys.exit()\n","A,B,C=(int(x) for x in input().split())\n\ni=0\nN=C\nwhile N>0:\n    N=C-A*i\n    if N<=0:\n        print(i)\n        break\n            \n    else:\n         i+=1\n         if i%7==0:\n            C-=B\n\n","A, B, C = (int(x) for x in input().split())\nd = A*6\n\nif C<d:\n    if C%A == 0:\n        print(C\/\/A)\n    if C%A > 0 :\n        print(C\/\/A+1)\n\nif C>=d:\n    D = A*7+B\n    E = C%D\n    F = C\/\/D\n    x = E\/\/A\n    y = E%A\n    if x < 7 :\n        if y == 0:\n            print(F*7+x)\n        if y > 0 :\n            print(F*7+x+1)\n    if x >= 7:\n        print((F+1)*7)\n","A,B,C=list(map(int,input().split()))\np=0\nq=0\nwhile p<C:\n    q+=1\n    p+=A\n    if q%7==0:\n        p+=B\nprint(q)\n\n\n","import random\nimport math\nN = list(map(int, input().split()))\nA=N[0]\nB=N[1]\nC=N[2]\nx=(int)(C\/(A*7+B))\nsum=x*7\n\nif abs(x*(A*7+B)-C)>= 0.0000001:\n    for i in range (1,8):\n        sum=sum+1\n        if i== 7 and C<=x*(A*7+B)+i*A+B:\n            break\n        if C<=x*(A*7+B)+i*A:\n            break\nprint(sum)\n\n","import math\na,b,c=map(int,input().split())\n\nm=a*7+b\n\nif c<a*7:\n    print(math.ceil(c\/a))\nelse:\n    n=math.floor(c\/m)\n    p=c-m*n\n    if p\/a<7:\n        x=n*7+math.ceil(p\/a)\n    else:\n        x=n*7+7\n\n    print(x)\n","\nA,B,C=map(int,input().split())\n\ny=0\n\nfor x in range(1,C+1):\n    y+=A\n    if x%7==0:\n        y+=B\n    if y>=C:\n        break\nprint(x)\n","A, B, C = map(int,input().split())\n\ncoin = 0\nfor day in range(1, C+1):\n    coin+=A\n    \n    if day%7==0:\n        coin+=B\n    if coin >= C: break\n\nprint(day)\n","A,B,C=map(int,input().split())\ncoin=0\nday=1\nwhile True:\n    coin+=A\n    if day%7==0:\n        coin+=B\n    if coin>C or coin==C:\n        break\n    day+=1\nprint(day)\n","a,b,c=map(int,input().split())\n\nday=0\ncoin=0\n\nwhile coin<c:\n    day+=1\n    coin+=a\n    if day%7==0:\n        coin+=b\nprint(day)\n","a,b,c = map(int,input().split())\n\ntot = 0\nd = 0\nwhile tot < c:\n  d+=1\n  tot += a\n  if d%7 == 0:\n    tot += b\nprint(d)\n\n","a,b,c=map(int,input().split())\nw=a*7+b\nans=c\/\/w*7\nc=c%w\nd=c\/\/a\nif c%a>0:d+=1\nif d>7:d=7\nans+=d\nprint(ans)\n","a,b,c=map(int,input().split())\nday=0\ncoin=0\n \nwhile coin<c:\n    day+=1\n    coin+=a\n    if day%7==0:\n        coin+=b\nprint(day)\n\n","A, B, C = map(int,input().split())\n\ncoin = 0\nfor day in range(1,C+1):\n    coin += A\n    \n    if day % 7 == 0:\n        coin += B\n    if coin >= C:break\n\nprint(day)\n","A,B,C = map(int,input().split())\ni = 0\nx = 0\nwhile (i < C):\n    x += 1\n    if x%7 == 0:\n        i += A+B\n    else:\n        i += A\nelse:\n    print(x)\n","import math\nA, B, C=map(int,input().split())\nx=C\/\/(A*7+B)\ny=C%(A*7+B)\n\nz=math.ceil(y\/A)\nr=math.ceil(z\/(A*7+B))\nif z>=7:\n    print(x*7+7*r)\nelse:\n    print(x*7+z)\n\n"],"raw_generations":["A,B,C = map(int,input().split())\nday=0\ncoin=0\n\nwhile True:\n    if coin>=C:\n        break\n    day+=1\n    coin+=A\n    if day%7==0:\n        coin+=B\nprint(day)\n","A,B,C = map(int,input().split())\ncoin=0\nfor day in range(1,C+1):\n    coin+=A\n    if day % 7 == 0:\n        coin+=B\n    if coin >= C: break\nprint(day)\n","#! \/usr\/bin\/env python\n# -*- coding: utf-8 -*-\nimport sys\n\n\ndef main():\n    day = 0\n    data = map(int,input().split())\n    data = list(data)\n    while( data[2] > 0):\n        day = day +1\n        data[2] -= data[0]\n        if(day % 7 == 0):\n            data[2] -= data[1]\n    print(day)\n\nif __name__ == '__main__':\n    main()\n","a, b, c=map(int, input().split())\nans=c\/\/(a*7+b)*7\nc%=a*7+b\nans+=min(7, (c+a-1)\/\/a)\nprint(ans)\n","A,B,C=map(int,input().split())\nx=A*7+B\ny=C\/\/(A*7+B)\nz=x*y\nw=C-z\n\nif (A*7)<w<x:\n    print((y+1)*7)\nelse:\n    coin=0\n    day=0\n    while coin<w:\n        coin+=A\n        day+=1\n    print(y*7+day)\n\n","A,B,C=(int(x) for x in input().split())\n\nif B==0:\n    x=C\/\/A\n    if C%A!=0:\n        x=x+1\n\nelif A>C:\n    x=1\nelif C\/\/A<7:\n    x=C\/\/A+1\nelse:\n    t=0\n    y=A*7\n    y=y+B\n    z=C%y\n    if 0<z<A:\n        t=1\n    z=z\/\/A\n    if z>7:\n        t=7-z\n    s=C\/\/y\n    s=s*7\n    x=z+s+t\nprint(x)\n","a, b, c = map(int, input().split())\ncoin = 0\ncount = 0\noutput = 0\n\nwhile coin < c:\n    coin += a\n    count += 1\n    output += 1\n    \n    if count == 7 :\n        coin += b\n        count = 0\n\nprint(output)\n","inputText = input().split()\na = int(inputText[0])\nb = int(inputText[1])\nc = int(inputText[2])\nweek = a*7+b\nweeks = int(c \/week)\nremain = c % week\ntotalday = weeks * 7\ntotalday += int(remain\/a)\ntotalday2 = (int(c\/week)+1)*7\nif remain%a != 0:\n    totalday +=1\nprint(min(totalday,totalday2))\n\n","a,b,c = map(int,input().split())\n\nok = 100000000\nng = 0\nwhile ok - ng > 1:\n    m = (ok + ng) \/\/ 2\n    ge = m * a + (m \/\/ 7) * b\n    if ge >= c:\n        ok = m\n    else:\n        ng = m\nprint(ok)\n","A,B,C=map(int, input().split())\n\ncoin=0\nfor day in range(1, C+1) :\n    coin+=A\n    if day % 7 == 0 :\n        coin+=B\n    if coin >= C : break \nprint(day)\n\n","A,B,C=map(int,input().split())\ncoin=0\nfor day in range(1,C+1):\n    coin+=A\n    if day % 7 == 0:\n        coin+=B\n    if coin>=C:\n        break\nprint(day)\n\n","import math\n\na,b,c = map(int,input().split())\n\nx = c \/\/ (7*a + b)\ny = c - (7*a + b)*x\nz = math.ceil(y\/a)\n\nif y > 6 * a:\n    print(7 * (x + 1))\nelse:\n    print(7 * x + z)\n","A,B,C=map(int,input().split())\nx=A*7+B\ny=C\/\/(A*7+B)\nz=x*y\nv=C-z\n\nif (A*7)<v<x:\n    print((y+1)*7)\nelse:\n    coin=0\n    day=0\n    while coin<v:\n        coin+=A\n        day+=1\n    print(y*7+day)\n","import math\n\ninputs = inout().split(\" \")\n\nprint(math.cell(inputs[2]\/(inputs[0]+inputs[1]\/7))\n","a, b, c = map(int, input().split())\nweek = a * 7 + b\nd = c \/\/ week\nans = d * 7\nc -= d * week\n\ncnt = 0\nwhile(c > 0):\n    c -= a\n    ans += 1\n    cnt += 1\n    if(cnt == 7):\n        c -= b\n        cnt = 0\nprint(ans) \n","a,b,c=map(int,input().split())\nx=0\ny=0\nwhile x<c:\n    y+=1\n    x+=a\n    if y%7==0:\n        x+=b\nprint(y)\n","def eval(A, B, C):\n    rest = C\n    count = 0\n    \n    while True:\n        for i in range(7):\n            rest -= A\n            if i == 6:\n                rest -= B\n                \n            count += 1\n            if rest <= 0:\n                return count\n\n\nA, B, C = tuple(map(int, input().split()))\nprint(eval(A, B, C))\n","A,B,C = map(int,input().split())\ncoin=0\nfor day in range(1,C+1):\n    coin += A\n    if day %7 == 0:\n        coin += B\n    if coin >= C: break\nprint(day)\n","a,b,c=map(int,input().split())\nprint(c\/\/(7*a+b)*7+(7 if c%(7*a+b)>6*a else (c%(7*a+b)+a-1)\/\/a))\n","a, b, c = map(int, input().split())\nans = c\/\/(a*7+b)*7+min((c%(a*7+b)+a-1)\/\/a,7)\nprint(ans)\n","a,b,c = map(int,input().split())\ns = 0\ns += c \/\/ (a*7+b)*7\nc %= (a*7+b)\ns += min(7, (c + a - 1) \/\/ a)\nprint(s)\n","a,b,c = map(int,input().split())\nans = 0\nans += c\/\/(a*7 +b)*7\nc %= (a*7+b)\nans += min(7,c\/\/a)\nif c%a and c\/\/a <7:\n    ans += 1\nprint(ans)    \n","a,b,c=input().split()\na=int(a)\nb=int(b)\nc=int(c)\n\ni=0;\nwhile c>0:\n\ti=i+1\n\tc=c-a\n\tif i%7==0:\n\t\tc=c-b\nprint(i)\n\n","s = input().split()\nl = 0\nN = int(s[0])#\uff11\u65e5\nA = int(s[1])#\u30dc\u30fc\u30ca\u30b9\nB = int(s[2])#\u307b\u3057\u3044\nW = N*7+A\nif B%W == 0:\n  l = B\/\/W*7\nelse:\n  if int(B%W) > int(N*7):\n    l = (1+B\/\/W)*7\n  else:\n    if int(B%W%N) == 0:\n      l = B\/\/W*7+B%W\/\/N\n    else:\n      l = B\/\/W*7+B%W\/\/N+1\nprint(l)\n","A,B,C=map(int,input().split())\nsum=0\ni=1\nwhile True:\n    if i%7==0:\n        sum+=B\n    sum+=A\n    if sum>=C:\n        break\n    i+=1\nprint(i)\n","a,b,c = map(int,input().split())\n\nd = 0\ns = 0\nwhile s < c:\n    d += 1\n    if d%7 == 0:\n        s += b\n    s += a\nprint(d)\n\n","a, b, c = map(int, input().split())\nq, r = divmod(c, a*7+b)\ns = min(7, (r+a-1)\/\/a)\nprint(7*q + s)\n\n","a, b, c = map(int, input().split())\nd = 0\ns = 0\nwhile s < c:\n    d += 1\n    if d%7 == 0:\n        s += b\n    s += a\nprint(d)\n","A,B,C=map(int,input().split())\n\ncoin=0\n\nfor day in range(1,C+1):\n    coin+=A\n    if day % 7 ==0:\n       coin+=B\n    if coin >=C:\n       break\n   \nprint(day)\n","A, B, C = map(int, input().split())\n\nweek = C \/\/ (7 * A + B)\ncoin = week * (7 * A + B)\n\nday = week * 7\n\nif (C - coin) \/ A < 7 :\n    day += (C - coin) \/\/ A\n    coin += (C - coin) \/\/ A * A\n    \n    if coin != C :\n        day += 1\n        \nelse :\n    day += 7\n    coin += 7 * A + B\n    \n    if coin < C :\n        day += 1\n        \nprint(day)\n","A,B,C=map(int,input().split())\nif C<7*A+B:         #1\u9031\u9593\u76ee\u3067\u304a\u308f\u308b\n    if  A*7<C and C<A*7+B: #\u5b9f\u306f1\u9031\u76ee\u306e\u65e5\u66dc\u65e5\u306b\u7d42\u308f\u308b\n        print(7)\n    else:    \n        if C%A==0:          \n            print(C\/\/A)\n        else:               #\u3042\u307e\u308a\u304c\u3042\u3063\u305f\u3089\uff0b\uff11\n            print(C\/\/A+1) \nelse:                       #2\u9031\u9593\u76ee\u4ee5\u964d\n    if C%((7*A)+B)==0:              #\u65e5\u66dc\u65e5\u306b\u7d42\u308f\u308b\n        print((C\/\/((7*A)+B))*7)\n    else :\n        if C%((7*A)+B)>=7*A and C%((7*A)+B)<7*A+B: #\u5b9f\u306f\u65e5\u66dc\u65e5\u306b\u7d42\u308f\u308b\n            print((C\/\/((7*A)+B)+1)*7)\n        else:\n            if (C%((7*A)+B))%A==0 :\n                print(((C\/\/((7*A)+B))*7)+((C%((7*A)+B))\/\/A))\n            else:                       #\u4f59\u308a\u304c\u3042\u3063\u305f\u3089+\uff11\n             print(((C\/\/((7*A)+B))*7)+((C%((7*A)+B)))\/\/A+1)\n    \n","A,B,C = map(int,input().split())\n\ncoin=0\nfor day in range(1,C+1):\n    coin+=A\n    if day % 7== 0:\n        coin+=B\n    if coin >= C: break\n\nprint(day)\n","A, B, C = map(int, input().split())\n\nweek_value = A * 7 + B\n\nweeks = C \/\/ week_value\nrest = C % week_value\n\nday = 0\nif rest != 0 and A * 7 < rest:\n    day = 7\nelse:\n    day = rest \/\/ A\n    if rest % A != 0:\n        day += 1\n\nprint(weeks * 7 + day)\n\n","a,b,c=map(int,input().split())\n\ncoin=0\nfor day in range(1,c+1):\n    coin+=a\n    #\u6708\u66dc\u304b\u3089\u65e5\u66dc\u307e\u3067\u9023\u7d9a\u3067\u30ed\u30b0\u30a4\u30f3\n    if day % 7 == 0:\n        coin+=b\n    if coin >= c: break\nprint(day)\n\n","a, b, c = map(int, input().split())\n\ncoin=0\nfor day in range(1, c+1):\n    coin+=a\n    \n    if day % 7 == 0:\n        coin+=b\n    if coin >= c: break\n\nprint(day)\n","import math\n\nA,B,C=map(int,input().split())\n\nw=C\/\/(7*A+B)\n\nz=C-(7*A+B)*w\n\nif z<=A*6:\n    print(w*7+math.ceil(z\/A))\n    \nelse:\n    print(w*7+7)\n\n","ABC=list(map(int,input().split()))\ncoin=0\ndate=0\ndays=0\n\nwhile(1):\n    days+=1\n    \n    if not date==6:\n        coin=coin+ABC[0]\n    else:\n        coin=coin+ABC[1]\n        coin=coin+ABC[0]\n\n    if coin>=ABC[2]:\n        print(days)\n        break\n    date=(date+1)%7\n","a, b, c = map(int,input().split())\n\nday = 0\ncoin = 0\nloginCont = 0\nwhile True:\n    day += 1\n    loginCont += 1\n    coin += a\n    if day == 7:\n        coin += b\n        day = 0\n        if coin >= c:\n            break\n    if coin >= c:\n        break\n\nprint(loginCont)\n","a,b,c=map(int,input().split())\ncount=0\nsum=0\nwhile True:\n    count+=1\n    sum+=a\n    if count%7==0:\n        sum+=b\n    if sum>=c:\n        break\nprint(count)\n","a,b,c=map(int,input().split())\nd=1\ncoin=0\nwhile coin<c:\n    if d%7==0:\n        coin+=b\n    coin+=a\n    d+=1\nprint(d-1)\n","l = list(map(int,input().split()))\ncoins = 0\nlogin_times = 0\nwhile True:\n    coins += l[0]\n    login_times += 1\n    if login_times%7==0:\n        coins += l[1]\n    if coins>=l[2]:\n        print(login_times)\n        break\n","inputs = input().split()\na = int(inputs[0])\nb = int(inputs[1])\nc = int(inputs[2])\n\ny = 7*c \/ (7*a + b)\nif y - int(y) > 0:\n    x = int(y) + 1\nelse:\n    x = int(y)\n\n\nwhile True:\n    if a*x + int(x\/7) * b >= c:\n        print(x)\n        break\n    else:\n        x+=1\n","d, b, t = [int(x) for x in input().split()]\n\nw = 7 * d + b\n\nc = 0\nc += (t \/\/ w) * 7\nt %= w\n\nif t >= 7*d:\n    c +=7\n    t = 0\nelse:\n    c += t\/\/d\n    t %= d\n    if t > 0:\n        c += 1\n\nprint(c)\n\n","\nif __name__ == '__main__':\n\n\ta,b,c = map(int,input().split())\n\ttmp = 0\n\ttmp2 = 0\n\ttmp3 = 0\n\ttmp4 = 0\n\n\ttmp = a * 7 + b\n\ttmp2 = int(c \/ tmp)\n\ttmp3 = c % tmp\n\n\tif tmp3 != 0:\n\t\tif tmp3 > a*7:\n\t\t\ttmp4 = 7\n\t\telse:\n\t\t\ttmp4 = int(tmp3 \/ a)\n\t\t\tif tmp3 % a != 0:\n\t\t\t\ttmp4 += 1\n\tif c < tmp:\n\t\tprint(tmp4)\n\telse:\n\t\tprint(tmp2*7 + tmp4)\n\n","a,b,c = map(int,input().split())\n\nday=0\ncoin=0\n\nwhile coin<c:\n    day+=1\n    coin+=a\n    if day%7==0:\n        coin+=b\n        \n    \nprint(day)\n","A,B,C=(int(x) for x in input().split())\n\nif B==0:\n    x=C\/\/A\n    if C%A!=0:\n        x=x+1\nelif A>C:\n    x=1\nelif C\/\/A<7:\n    x=C\/\/A+1\nelse:\n    t=0\n    y=A*7\n    y=y+B\n    z=C%y\n    if 0<z<A:\n        t=1\n    z=z\/\/A\n    if z>7:\n        t=7-z\n    s=C\/\/y\n    s=s*7\n    x=z+s+t\nprint(x)\n","a, b, x = map(int, input().split())\ni = 0\nwhile x>0:\n    i += 1\n    x -= a\n    if i%7==0: x-=b\nprint(i)\n","A,B,C=map(int,input().split())\nC_7=7*A+B\nweek_day,week_rem,day_0,day_rem=C\/\/C_7*7,C%C_7,C\/\/A,C%A\n\nif C<=A:\n    print(1)\nelif C<C_7:\n    if A*7<week_rem<=C:\n        print(7)\n    elif 0<day_rem<=A:\n        print(day_0+1) \n    elif day_rem==0:\n        print(day_0)\n    else:\n        print(day_0+day_rem)\nelif B==0:\n    if day_rem==0:\n        print(day_0)\n    else:\n        print(day_0+1)\nelif week_rem==0:\n    print(week_day)\nelif C>C_7:\n    if 0<week_rem<=A:\n        print(week_day+1)\n    elif A*7<week_rem<=C_7:\n        print(week_day+7)\n    else:\n        print(week_day+week_rem)  \n","A,B,C=map(int,input().split())\ns=7*A+B\nw=C\/\/s\nD=C%s\n\nif D<7*A :\n    d=-(-D\/\/A)\nelif 0<=D-7*A and D-7*A<B :\n    d=7\n    \nprint(7*w+d)\n","a,b,c=input().split()\nd = int(a)*7+int(b) #\u4e00\u9031\u9593\u3067\u624b\u306b\u5165\u308b\u30b3\u30a4\u30f3\ne = int(c)\/\/d #\u5fc5\u8981\u306a\u9031\u306e\u6570\nf = int(c)-d*e #\u6b8b\u308a\u306e\u30b3\u30a4\u30f3\nif f<=6*int(a) and f%int(a)>0 : g=f\/\/int(a)+1\nelif f<=6*int(a) and f%int(a)<=0 : g=f\/int(a)\nelse : g=7\nprint(int(e*7+g))\n","A,B,C=map(int,input().split())\nsum=0\nx=0\nwhile C>sum:\n    x+=1\n    sum+=A\n    if x%7==0:\n        sum+=B\nprint(x)\n","sum_coins = 0\ncoin_day, coin_weekly, coin_needed = map(int, input().split())\nday = 0\n\nwhile sum_coins < coin_needed:\n    day +=1\n    sum_coins += coin_day\n\n    if day % 7 == 0:\n        sum_coins += coin_weekly\nprint(day)\n","A,B,C=map(int,input().split())\n\nsum=0\ni=0\nwhile True:\n    sum+=A\n    i+=1\n    if sum>=C:\n        print(i)\n        break\n    if i%7==0:\n        sum+=B\n        if sum>=C:\n            print(i)\n            break\n","import math as m\nA,B,C=map(int,input().split())\npw=A*7+B\nw=C\/\/pw\nr=C%pw\nd=0\nif  0<r<7*A:\n    if r%A==0:\n        d=r\/\/A\n    else:\n        d=(r\/\/A)+1\n    \nelif 7*A<=r<7*A+B: \n    d=7\nprint(w*7+ d )       \n","A,B,C=map(int,input().split())\nx=A*7+B\ny=C\/\/(A*7+B)\nz=x*y\nw=C-z\nif (A*7)<w<x:\n    print((y+1)*7)\nelse:\n    coin=0\n    day=0\n    while coin<w:\n        coin+=A\n        day+=1\n    print(y*7+day)\n","a,b,c=map(int,input().split())\ni=0\ncnt=0\nwhile cnt<c:\n    i+=1\n    cnt+=a\n    if i%7==0:\n        cnt+=b\nprint(i)\n","import math\na,b,c = map(int,input().split())\nfor i in range(10**6):\n    c -= a\n    if i%7 == 6:\n        c -= b\n    if c <= 0:\n        print(i+1)\n        break\n","a, b, c = map(int, input().split())\np = c \/\/ (a*7 + b)\nq = c % (a*7 + b)\nr = q \/\/ a\ns = q % a\nif a*7 < q < a*7+b:\n    print(p*7 + 7)\nelif s == 0:\n    print(p*7 + r)\nelse:\n    print(p*7 + r + 1)\n\n    \n    \n\n\n","#!\/usr\/bin\/python3\n\nimport array\nfrom fractions import Fraction\nimport functools\nimport itertools\nimport math\nimport os\nimport sys\n\n\ndef main():\n    A, B, C = read_ints()\n    print(solve(A, B, C))\n\n\ndef solve(A, B, C):\n    weekly = A * 7 + B\n    weeks = C \/\/ weekly\n    rest = C - weekly * weeks\n    days = (rest + A - 1) \/\/ A\n    if days > 7:\n        days = 7\n    return weeks * 7 + days\n\n\n###############################################################################\n# AUXILIARY FUNCTIONS\n\nDEBUG = 'DEBUG' in os.environ\n\n\ndef inp():\n    return sys.stdin.readline().rstrip()\n\n\ndef read_int():\n    return int(inp())\n\n\ndef read_ints():\n    return [int(e) for e in inp().split()]\n\n\ndef dprint(*value, sep=' ', end='\\n'):\n    if DEBUG:\n        print(*value, sep=sep, end=end)\n\n\nif __name__ == '__main__':\n    main()\n\n","import math\na, b, c = map(int, input().split())\n\nn = 0\n\nwhile True:\n    n += 1\n    if (a * n + math.floor(n \/ 7) * b >= c):\n        break\n\nprint(n)\n\n","A,B,C = map(int,input().split())\ncoin = 0\nfor day in range(1,C+1):\n    coin += A\n    if day % 7 == 0:\n        coin += B\n    if coin >= C:\n        break\nprint(day)\n\n","a,b,c = map(int,input().split())\n\nd = 0\ns = 0\nwhile s < c:\n    d += 1\n    if d%7 == 0:\n        s += b\n    s += a\nprint(d)\n","a,b,c=map(int,input().split())\nans=7\nw=7*a+b\nif c<=6*a:\n    if c%a==0:\n        ans=c\/\/a\n    else:\n        ans=c\/\/a+1\nelse:\n    if c>w:\n        ans+=(c\/\/w-1)*7\n        c-=c\/\/w*w\n        if c%a==0 and c<=6*a:\n            ans+=c\/\/a\n        else:\n            if 6*a<c<=7*a+b:\n                ans+=7\n            else:\n                ans+=c\/\/a+1\nprint(ans)\n\n\n","A,B,C = map(int,input().split())\n\ncoin=0\nfor day in range(1, C+1):\n    coin+=A\n    if day % 7 == 0:\n        coin+=B\n    if coin >= C: break\n\nprint(day)\n","import math\na, b, c=map(int,input().split())\nw = a*7+b\nx = c\/\/w\ny = c%w\nif y <= a*7:\n   print((7*x)+math.ceil(y\/a))\nelse:\n   print(7*(x+1))\n\n","a,b,c = map(int,input().split())\nx = 0\nd = 0\nwhile 1:\n    if x >= c:\n        break\n    else:\n        d = d +1\n        x = x+a\n        if d%7 == 0:\n            x = x+b\nprint(d)\n\n","A, B, C = map(int,input().split())\n\ncoin = 0\nfor day in range(1, C+1):\n    coin += A\n    if day % 7 == 0:\n        coin += B\n    if coin >= C:\n        break\nprint(day)\n","a,b,c=map(int,input().split())\ni=1\nwhile True:\n    x=a*i+b*(i\/\/7)\n    if x >= c:\n        print(i)\n        break\n    i += 1\n","inputline = input().split()\na = int(inputline[0])\nb = int(inputline[1])\nc = int(inputline[2])\n\ncnt = 0\ncoin = 0\n\nwhile coin < c:\n    cnt += 1\n    if (cnt % 7) == 0:\n        coin += b\n    coin += a\nprint(cnt)\n\n\n","A,B,C=map(int,input().split())\nDay=0\ncoin=0\nwhile C>coin:\n    Day+=1\n    coin+=A\n    if Day%7==0:\n        coin+=B\nprint(Day)\n","A,B,C=map(int,input().split())\nday=0\ncoin=0\nwhile coin<C:\n    day+=1\n    coin+=A\n    if day%7==0:\n        coin+=B\nprint(day)\n","a,b,c = map(int,input().split())\n\nd = 0\ns = 0\nwhile s < c:\n    d += 1\n    if d%7 == 0:\n        s += b\n    s += a\nprint(d)\n\n","def getInput():\n    (a, b, c) = (int(i) for i in input().split(\" \"))\n    return a, b, c\n\na, b, c = getInput()\n\nn_weeklylogin = 0\nn_dailylogin = 0\nweekly_gain = 7*a+b\n\nn_weeklylogin = c\/\/weekly_gain\ntotal_bonus = n_weeklylogin*weekly_gain\n\nif total_bonus >= c:\n    print(n_weeklylogin*7)\nelse:\n    n_dailylogin = -(-(c-total_bonus)\/\/a)\n    print(n_weeklylogin*7 + (n_dailylogin>=7)*7 + (n_dailylogin<7)*(n_dailylogin))\n\n","A,B,C=map(int,input().split())\ni=1\nwhile True:\n    if i*A+int(i\/7)*B>=C:\n        break\n    i+=1\nprint(i)    \n","A,B,C=map(int,input().split())\n\nx=C%(A*7+B)\ny =C\/\/(A*7+B)\n\nif (C\/\/A)<7:\n    if C%A==0:\n        print(C\/\/A)\n    else:\n        print(C\/\/A+1)\n        \nelif x==0:\n    print(y*7)\nelse:\n    z=x%A\n    w=x\/\/A\n    if w>(A*7):\n        print(y*7+7)\n    elif w==7 and z<=B:\n        print(y*7+7)\n    elif z==0:\n        print(y*7+w)\n    else:\n        print(y*7+w+1)\n","a,b,c = map(int,input().split())\n\nd = 0\ns = 0\nwhile s < c:\n    d += 1\n    if d%7 == 0:\n        s += b\n    s += a\nprint(d)\n\n","# coding: utf-8\n# Your code here!\na,b,c=map(int,input().split())\n\nsum=0\ni=0\nwhile True:\n    sum+=a\n    i+=1\n    if sum>=c:\n        print(i)\n        break\n    if i%7==0:\n        sum+=b\n        if sum>=c:\n            print(i)\n            break\n","#0652\na , b , c = map(int,input().split())\nsum = 0\ncount = 0 \nwhile True:\n    if sum >= c:\n        break\n    sum += a\n    count += 1\n    if count%7 == 0:\n        sum += b \n        \nprint(count)\n","    \nA, B, C = map(int, input().split())\nans = 0\nk = C \/\/ (7*A+B)\nC -= k*(7*A+B)\nif C <= 7*A:\n    print(7*k + (C+A-1)\/\/A)\nelse:\n    print(7*(k+1))\n","day=0\nsum=0\n\na,b,c=map(int,input().split())\n\nwhile True:\n    day+=1\n    \n    if day%7==0:\n        sum+=(a+b)\n    else:\n        sum+=a\n    \n    if sum>=c:\n        print(day)\n        break\n","A,B,C=map(int,input().split())\nX=1\nwhile True:\n    if (C<=A*X+(X\/\/7)*B):\n\n        print(X)\n        break\n    else:\n        X=X+1\n        \n","a,b,c=map(int,input().split())\nd=c\/\/(a*7+b)*7\nc%=a*7+b\ne=0\nwhile c>0 and e<7:\n    d+=1\n    c-=a\n    e+=1\nprint(d)\n","import math\nline = input().split(\" \")\nA = int(line[0])\nB = int(line[1])\nC = int(line[2])\n\nW = C\/\/(7*A+B)\nremain = C - (7*A+B)*W\n#print(W, \" \", remain)\nD = 0\nif(remain >= 7*A):\n    D = 7 \nelse:\n    D = math.ceil(remain\/A)\n\nans = 7*W + D\n\nprint(ans)\n","import math\n\na, b, c = map(int, input().split())\n\ndays = 1 \ncoin = 0\n\n\n\nwhile c > coin: \n    coin = a * days + b * math.floor(days\/7)\n    days = days + 1\nprint (days - 1)\n","#!usr\/bin\/env python3\nimport sys\nimport math\nimport string\nimport collections\nimport fractions\nimport random\nfrom operator import itemgetter\nimport itertools\nfrom collections import deque\nimport copy\nimport heapq\nimport bisect\n\nMOD = 10 ** 9 + 7\nINF = float('inf')\ninput = lambda: sys.stdin.readline().strip()\n\nsys.setrecursionlimit(10 ** 8)\n\nA, B, C = map(int, input().split())\nSum = 0\nfor i in range(1, 10**9):\n    Sum += A\n    if i%7 == 0:\n        Sum += B\n    if Sum >= C:\n        print(i)\n        sys.exit()\n","A,B,C=(int(x) for x in input().split())\n\ni=0\nN=C\nwhile N>0:\n    N=C-A*i\n    if N<=0:\n        print(i)\n        break\n            \n    else:\n         i+=1\n         if i%7==0:\n            C-=B\n\n","A, B, C = (int(x) for x in input().split())\nd = A*6\n\nif C<d:\n    if C%A == 0:\n        print(C\/\/A)\n    if C%A > 0 :\n        print(C\/\/A+1)\n\nif C>=d:\n    D = A*7+B\n    E = C%D\n    F = C\/\/D\n    x = E\/\/A\n    y = E%A\n    if x < 7 :\n        if y == 0:\n            print(F*7+x)\n        if y > 0 :\n            print(F*7+x+1)\n    if x >= 7:\n        print((F+1)*7)\n","A,B,C=list(map(int,input().split()))\np=0\nq=0\nwhile p<C:\n    q+=1\n    p+=A\n    if q%7==0:\n        p+=B\nprint(q)\n\n\n","import random\nimport math\nN = list(map(int, input().split()))\nA=N[0]\nB=N[1]\nC=N[2]\nx=(int)(C\/(A*7+B))\nsum=x*7\n\nif abs(x*(A*7+B)-C)>= 0.0000001:\n    for i in range (1,8):\n        sum=sum+1\n        if i== 7 and C<=x*(A*7+B)+i*A+B:\n            break\n        if C<=x*(A*7+B)+i*A:\n            break\nprint(sum)\n\n","import math\na,b,c=map(int,input().split())\n\nm=a*7+b\n\nif c<a*7:\n    print(math.ceil(c\/a))\nelse:\n    n=math.floor(c\/m)\n    p=c-m*n\n    if p\/a<7:\n        x=n*7+math.ceil(p\/a)\n    else:\n        x=n*7+7\n\n    print(x)\n","\nA,B,C=map(int,input().split())\n\ny=0\n\nfor x in range(1,C+1):\n    y+=A\n    if x%7==0:\n        y+=B\n    if y>=C:\n        break\nprint(x)\n","A, B, C = map(int,input().split())\n\ncoin = 0\nfor day in range(1, C+1):\n    coin+=A\n    \n    if day%7==0:\n        coin+=B\n    if coin >= C: break\n\nprint(day)\n","A,B,C=map(int,input().split())\ncoin=0\nday=1\nwhile True:\n    coin+=A\n    if day%7==0:\n        coin+=B\n    if coin>C or coin==C:\n        break\n    day+=1\nprint(day)\n","a,b,c=map(int,input().split())\n\nday=0\ncoin=0\n\nwhile coin<c:\n    day+=1\n    coin+=a\n    if day%7==0:\n        coin+=b\nprint(day)\n","a,b,c = map(int,input().split())\n\ntot = 0\nd = 0\nwhile tot < c:\n  d+=1\n  tot += a\n  if d%7 == 0:\n    tot += b\nprint(d)\n\n","a,b,c=map(int,input().split())\nw=a*7+b\nans=c\/\/w*7\nc=c%w\nd=c\/\/a\nif c%a>0:d+=1\nif d>7:d=7\nans+=d\nprint(ans)\n","a,b,c=map(int,input().split())\nday=0\ncoin=0\n \nwhile coin<c:\n    day+=1\n    coin+=a\n    if day%7==0:\n        coin+=b\nprint(day)\n\n","A, B, C = map(int,input().split())\n\ncoin = 0\nfor day in range(1,C+1):\n    coin += A\n    \n    if day % 7 == 0:\n        coin += B\n    if coin >= C:break\n\nprint(day)\n","A,B,C = map(int,input().split())\ni = 0\nx = 0\nwhile (i < C):\n    x += 1\n    if x%7 == 0:\n        i += A+B\n    else:\n        i += A\nelse:\n    print(x)\n","import math\nA, B, C=map(int,input().split())\nx=C\/\/(A*7+B)\ny=C%(A*7+B)\n\nz=math.ceil(y\/A)\nr=math.ceil(z\/(A*7+B))\nif z>=7:\n    print(x*7+7*r)\nelse:\n    print(x*7+z)\n\n"],"formatted_programs":["A,B,C = map(int,input().split())\nday=0\ncoin=0\n\nwhile True:\n    if coin>=C:\n        break\n    day+=1\n    coin+=A\n    if day%7==0:\n        coin+=B\nprint(day)\n","A,B,C = map(int,input().split())\ncoin=0\nfor day in range(1,C+1):\n    coin+=A\n    if day % 7 == 0:\n        coin+=B\n    if coin >= C: break\nprint(day)\n","#! \/usr\/bin\/env python\n# -*- coding: utf-8 -*-\nimport sys\n\n\ndef main():\n    day = 0\n    data = map(int,input().split())\n    data = list(data)\n    while( data[2] > 0):\n        day = day +1\n        data[2] -= data[0]\n        if(day % 7 == 0):\n            data[2] -= data[1]\n    print(day)\n\nif __name__ == '__main__':\n    main()\n","a, b, c=map(int, input().split())\nans=c\/\/(a*7+b)*7\nc%=a*7+b\nans+=min(7, (c+a-1)\/\/a)\nprint(ans)\n","A,B,C=map(int,input().split())\nx=A*7+B\ny=C\/\/(A*7+B)\nz=x*y\nw=C-z\n\nif (A*7)<w<x:\n    print((y+1)*7)\nelse:\n    coin=0\n    day=0\n    while coin<w:\n        coin+=A\n        day+=1\n    print(y*7+day)\n\n","A,B,C=(int(x) for x in input().split())\n\nif B==0:\n    x=C\/\/A\n    if C%A!=0:\n        x=x+1\n\nelif A>C:\n    x=1\nelif C\/\/A<7:\n    x=C\/\/A+1\nelse:\n    t=0\n    y=A*7\n    y=y+B\n    z=C%y\n    if 0<z<A:\n        t=1\n    z=z\/\/A\n    if z>7:\n        t=7-z\n    s=C\/\/y\n    s=s*7\n    x=z+s+t\nprint(x)\n","a, b, c = map(int, input().split())\ncoin = 0\ncount = 0\noutput = 0\n\nwhile coin < c:\n    coin += a\n    count += 1\n    output += 1\n    \n    if count == 7 :\n        coin += b\n        count = 0\n\nprint(output)\n","inputText = input().split()\na = int(inputText[0])\nb = int(inputText[1])\nc = int(inputText[2])\nweek = a*7+b\nweeks = int(c \/week)\nremain = c % week\ntotalday = weeks * 7\ntotalday += int(remain\/a)\ntotalday2 = (int(c\/week)+1)*7\nif remain%a != 0:\n    totalday +=1\nprint(min(totalday,totalday2))\n\n","a,b,c = map(int,input().split())\n\nok = 100000000\nng = 0\nwhile ok - ng > 1:\n    m = (ok + ng) \/\/ 2\n    ge = m * a + (m \/\/ 7) * b\n    if ge >= c:\n        ok = m\n    else:\n        ng = m\nprint(ok)\n","A,B,C=map(int, input().split())\n\ncoin=0\nfor day in range(1, C+1) :\n    coin+=A\n    if day % 7 == 0 :\n        coin+=B\n    if coin >= C : break \nprint(day)\n\n","A,B,C=map(int,input().split())\ncoin=0\nfor day in range(1,C+1):\n    coin+=A\n    if day % 7 == 0:\n        coin+=B\n    if coin>=C:\n        break\nprint(day)\n\n","import math\n\na,b,c = map(int,input().split())\n\nx = c \/\/ (7*a + b)\ny = c - (7*a + b)*x\nz = math.ceil(y\/a)\n\nif y > 6 * a:\n    print(7 * (x + 1))\nelse:\n    print(7 * x + z)\n","A,B,C=map(int,input().split())\nx=A*7+B\ny=C\/\/(A*7+B)\nz=x*y\nv=C-z\n\nif (A*7)<v<x:\n    print((y+1)*7)\nelse:\n    coin=0\n    day=0\n    while coin<v:\n        coin+=A\n        day+=1\n    print(y*7+day)\n","import math\n\ninputs = inout().split(\" \")\n\nprint(math.cell(inputs[2]\/(inputs[0]+inputs[1]\/7))\n","a, b, c = map(int, input().split())\nweek = a * 7 + b\nd = c \/\/ week\nans = d * 7\nc -= d * week\n\ncnt = 0\nwhile(c > 0):\n    c -= a\n    ans += 1\n    cnt += 1\n    if(cnt == 7):\n        c -= b\n        cnt = 0\nprint(ans) \n","a,b,c=map(int,input().split())\nx=0\ny=0\nwhile x<c:\n    y+=1\n    x+=a\n    if y%7==0:\n        x+=b\nprint(y)\n","def eval(A, B, C):\n    rest = C\n    count = 0\n    \n    while True:\n        for i in range(7):\n            rest -= A\n            if i == 6:\n                rest -= B\n                \n            count += 1\n            if rest <= 0:\n                return count\n\n\nA, B, C = tuple(map(int, input().split()))\nprint(eval(A, B, C))\n","A,B,C = map(int,input().split())\ncoin=0\nfor day in range(1,C+1):\n    coin += A\n    if day %7 == 0:\n        coin += B\n    if coin >= C: break\nprint(day)\n","a,b,c=map(int,input().split())\nprint(c\/\/(7*a+b)*7+(7 if c%(7*a+b)>6*a else (c%(7*a+b)+a-1)\/\/a))\n","a, b, c = map(int, input().split())\nans = c\/\/(a*7+b)*7+min((c%(a*7+b)+a-1)\/\/a,7)\nprint(ans)\n","a,b,c = map(int,input().split())\ns = 0\ns += c \/\/ (a*7+b)*7\nc %= (a*7+b)\ns += min(7, (c + a - 1) \/\/ a)\nprint(s)\n","a,b,c = map(int,input().split())\nans = 0\nans += c\/\/(a*7 +b)*7\nc %= (a*7+b)\nans += min(7,c\/\/a)\nif c%a and c\/\/a <7:\n    ans += 1\nprint(ans)    \n","a,b,c=input().split()\na=int(a)\nb=int(b)\nc=int(c)\n\ni=0;\nwhile c>0:\n\ti=i+1\n\tc=c-a\n\tif i%7==0:\n\t\tc=c-b\nprint(i)\n\n","s = input().split()\nl = 0\nN = int(s[0])#\uff11\u65e5\nA = int(s[1])#\u30dc\u30fc\u30ca\u30b9\nB = int(s[2])#\u307b\u3057\u3044\nW = N*7+A\nif B%W == 0:\n  l = B\/\/W*7\nelse:\n  if int(B%W) > int(N*7):\n    l = (1+B\/\/W)*7\n  else:\n    if int(B%W%N) == 0:\n      l = B\/\/W*7+B%W\/\/N\n    else:\n      l = B\/\/W*7+B%W\/\/N+1\nprint(l)\n","A,B,C=map(int,input().split())\nsum=0\ni=1\nwhile True:\n    if i%7==0:\n        sum+=B\n    sum+=A\n    if sum>=C:\n        break\n    i+=1\nprint(i)\n","a,b,c = map(int,input().split())\n\nd = 0\ns = 0\nwhile s < c:\n    d += 1\n    if d%7 == 0:\n        s += b\n    s += a\nprint(d)\n\n","a, b, c = map(int, input().split())\nq, r = divmod(c, a*7+b)\ns = min(7, (r+a-1)\/\/a)\nprint(7*q + s)\n\n","a, b, c = map(int, input().split())\nd = 0\ns = 0\nwhile s < c:\n    d += 1\n    if d%7 == 0:\n        s += b\n    s += a\nprint(d)\n","A,B,C=map(int,input().split())\n\ncoin=0\n\nfor day in range(1,C+1):\n    coin+=A\n    if day % 7 ==0:\n       coin+=B\n    if coin >=C:\n       break\n   \nprint(day)\n","A, B, C = map(int, input().split())\n\nweek = C \/\/ (7 * A + B)\ncoin = week * (7 * A + B)\n\nday = week * 7\n\nif (C - coin) \/ A < 7 :\n    day += (C - coin) \/\/ A\n    coin += (C - coin) \/\/ A * A\n    \n    if coin != C :\n        day += 1\n        \nelse :\n    day += 7\n    coin += 7 * A + B\n    \n    if coin < C :\n        day += 1\n        \nprint(day)\n","A,B,C=map(int,input().split())\nif C<7*A+B:         #1\u9031\u9593\u76ee\u3067\u304a\u308f\u308b\n    if  A*7<C and C<A*7+B: #\u5b9f\u306f1\u9031\u76ee\u306e\u65e5\u66dc\u65e5\u306b\u7d42\u308f\u308b\n        print(7)\n    else:    \n        if C%A==0:          \n            print(C\/\/A)\n        else:               #\u3042\u307e\u308a\u304c\u3042\u3063\u305f\u3089\uff0b\uff11\n            print(C\/\/A+1) \nelse:                       #2\u9031\u9593\u76ee\u4ee5\u964d\n    if C%((7*A)+B)==0:              #\u65e5\u66dc\u65e5\u306b\u7d42\u308f\u308b\n        print((C\/\/((7*A)+B))*7)\n    else :\n        if C%((7*A)+B)>=7*A and C%((7*A)+B)<7*A+B: #\u5b9f\u306f\u65e5\u66dc\u65e5\u306b\u7d42\u308f\u308b\n            print((C\/\/((7*A)+B)+1)*7)\n        else:\n            if (C%((7*A)+B))%A==0 :\n                print(((C\/\/((7*A)+B))*7)+((C%((7*A)+B))\/\/A))\n            else:                       #\u4f59\u308a\u304c\u3042\u3063\u305f\u3089+\uff11\n             print(((C\/\/((7*A)+B))*7)+((C%((7*A)+B)))\/\/A+1)\n    \n","A,B,C = map(int,input().split())\n\ncoin=0\nfor day in range(1,C+1):\n    coin+=A\n    if day % 7== 0:\n        coin+=B\n    if coin >= C: break\n\nprint(day)\n","A, B, C = map(int, input().split())\n\nweek_value = A * 7 + B\n\nweeks = C \/\/ week_value\nrest = C % week_value\n\nday = 0\nif rest != 0 and A * 7 < rest:\n    day = 7\nelse:\n    day = rest \/\/ A\n    if rest % A != 0:\n        day += 1\n\nprint(weeks * 7 + day)\n\n","a,b,c=map(int,input().split())\n\ncoin=0\nfor day in range(1,c+1):\n    coin+=a\n    #\u6708\u66dc\u304b\u3089\u65e5\u66dc\u307e\u3067\u9023\u7d9a\u3067\u30ed\u30b0\u30a4\u30f3\n    if day % 7 == 0:\n        coin+=b\n    if coin >= c: break\nprint(day)\n\n","a, b, c = map(int, input().split())\n\ncoin=0\nfor day in range(1, c+1):\n    coin+=a\n    \n    if day % 7 == 0:\n        coin+=b\n    if coin >= c: break\n\nprint(day)\n","import math\n\nA,B,C=map(int,input().split())\n\nw=C\/\/(7*A+B)\n\nz=C-(7*A+B)*w\n\nif z<=A*6:\n    print(w*7+math.ceil(z\/A))\n    \nelse:\n    print(w*7+7)\n\n","ABC=list(map(int,input().split()))\ncoin=0\ndate=0\ndays=0\n\nwhile(1):\n    days+=1\n    \n    if not date==6:\n        coin=coin+ABC[0]\n    else:\n        coin=coin+ABC[1]\n        coin=coin+ABC[0]\n\n    if coin>=ABC[2]:\n        print(days)\n        break\n    date=(date+1)%7\n","a, b, c = map(int,input().split())\n\nday = 0\ncoin = 0\nloginCont = 0\nwhile True:\n    day += 1\n    loginCont += 1\n    coin += a\n    if day == 7:\n        coin += b\n        day = 0\n        if coin >= c:\n            break\n    if coin >= c:\n        break\n\nprint(loginCont)\n","a,b,c=map(int,input().split())\ncount=0\nsum=0\nwhile True:\n    count+=1\n    sum+=a\n    if count%7==0:\n        sum+=b\n    if sum>=c:\n        break\nprint(count)\n","a,b,c=map(int,input().split())\nd=1\ncoin=0\nwhile coin<c:\n    if d%7==0:\n        coin+=b\n    coin+=a\n    d+=1\nprint(d-1)\n","l = list(map(int,input().split()))\ncoins = 0\nlogin_times = 0\nwhile True:\n    coins += l[0]\n    login_times += 1\n    if login_times%7==0:\n        coins += l[1]\n    if coins>=l[2]:\n        print(login_times)\n        break\n","inputs = input().split()\na = int(inputs[0])\nb = int(inputs[1])\nc = int(inputs[2])\n\ny = 7*c \/ (7*a + b)\nif y - int(y) > 0:\n    x = int(y) + 1\nelse:\n    x = int(y)\n\n\nwhile True:\n    if a*x + int(x\/7) * b >= c:\n        print(x)\n        break\n    else:\n        x+=1\n","d, b, t = [int(x) for x in input().split()]\n\nw = 7 * d + b\n\nc = 0\nc += (t \/\/ w) * 7\nt %= w\n\nif t >= 7*d:\n    c +=7\n    t = 0\nelse:\n    c += t\/\/d\n    t %= d\n    if t > 0:\n        c += 1\n\nprint(c)\n\n","\nif __name__ == '__main__':\n\n\ta,b,c = map(int,input().split())\n\ttmp = 0\n\ttmp2 = 0\n\ttmp3 = 0\n\ttmp4 = 0\n\n\ttmp = a * 7 + b\n\ttmp2 = int(c \/ tmp)\n\ttmp3 = c % tmp\n\n\tif tmp3 != 0:\n\t\tif tmp3 > a*7:\n\t\t\ttmp4 = 7\n\t\telse:\n\t\t\ttmp4 = int(tmp3 \/ a)\n\t\t\tif tmp3 % a != 0:\n\t\t\t\ttmp4 += 1\n\tif c < tmp:\n\t\tprint(tmp4)\n\telse:\n\t\tprint(tmp2*7 + tmp4)\n\n","a,b,c = map(int,input().split())\n\nday=0\ncoin=0\n\nwhile coin<c:\n    day+=1\n    coin+=a\n    if day%7==0:\n        coin+=b\n        \n    \nprint(day)\n","A,B,C=(int(x) for x in input().split())\n\nif B==0:\n    x=C\/\/A\n    if C%A!=0:\n        x=x+1\nelif A>C:\n    x=1\nelif C\/\/A<7:\n    x=C\/\/A+1\nelse:\n    t=0\n    y=A*7\n    y=y+B\n    z=C%y\n    if 0<z<A:\n        t=1\n    z=z\/\/A\n    if z>7:\n        t=7-z\n    s=C\/\/y\n    s=s*7\n    x=z+s+t\nprint(x)\n","a, b, x = map(int, input().split())\ni = 0\nwhile x>0:\n    i += 1\n    x -= a\n    if i%7==0: x-=b\nprint(i)\n","A,B,C=map(int,input().split())\nC_7=7*A+B\nweek_day,week_rem,day_0,day_rem=C\/\/C_7*7,C%C_7,C\/\/A,C%A\n\nif C<=A:\n    print(1)\nelif C<C_7:\n    if A*7<week_rem<=C:\n        print(7)\n    elif 0<day_rem<=A:\n        print(day_0+1) \n    elif day_rem==0:\n        print(day_0)\n    else:\n        print(day_0+day_rem)\nelif B==0:\n    if day_rem==0:\n        print(day_0)\n    else:\n        print(day_0+1)\nelif week_rem==0:\n    print(week_day)\nelif C>C_7:\n    if 0<week_rem<=A:\n        print(week_day+1)\n    elif A*7<week_rem<=C_7:\n        print(week_day+7)\n    else:\n        print(week_day+week_rem)  \n","A,B,C=map(int,input().split())\ns=7*A+B\nw=C\/\/s\nD=C%s\n\nif D<7*A :\n    d=-(-D\/\/A)\nelif 0<=D-7*A and D-7*A<B :\n    d=7\n    \nprint(7*w+d)\n","a,b,c=input().split()\nd = int(a)*7+int(b) #\u4e00\u9031\u9593\u3067\u624b\u306b\u5165\u308b\u30b3\u30a4\u30f3\ne = int(c)\/\/d #\u5fc5\u8981\u306a\u9031\u306e\u6570\nf = int(c)-d*e #\u6b8b\u308a\u306e\u30b3\u30a4\u30f3\nif f<=6*int(a) and f%int(a)>0 : g=f\/\/int(a)+1\nelif f<=6*int(a) and f%int(a)<=0 : g=f\/int(a)\nelse : g=7\nprint(int(e*7+g))\n","A,B,C=map(int,input().split())\nsum=0\nx=0\nwhile C>sum:\n    x+=1\n    sum+=A\n    if x%7==0:\n        sum+=B\nprint(x)\n","sum_coins = 0\ncoin_day, coin_weekly, coin_needed = map(int, input().split())\nday = 0\n\nwhile sum_coins < coin_needed:\n    day +=1\n    sum_coins += coin_day\n\n    if day % 7 == 0:\n        sum_coins += coin_weekly\nprint(day)\n","A,B,C=map(int,input().split())\n\nsum=0\ni=0\nwhile True:\n    sum+=A\n    i+=1\n    if sum>=C:\n        print(i)\n        break\n    if i%7==0:\n        sum+=B\n        if sum>=C:\n            print(i)\n            break\n","import math as m\nA,B,C=map(int,input().split())\npw=A*7+B\nw=C\/\/pw\nr=C%pw\nd=0\nif  0<r<7*A:\n    if r%A==0:\n        d=r\/\/A\n    else:\n        d=(r\/\/A)+1\n    \nelif 7*A<=r<7*A+B: \n    d=7\nprint(w*7+ d )       \n","A,B,C=map(int,input().split())\nx=A*7+B\ny=C\/\/(A*7+B)\nz=x*y\nw=C-z\nif (A*7)<w<x:\n    print((y+1)*7)\nelse:\n    coin=0\n    day=0\n    while coin<w:\n        coin+=A\n        day+=1\n    print(y*7+day)\n","a,b,c=map(int,input().split())\ni=0\ncnt=0\nwhile cnt<c:\n    i+=1\n    cnt+=a\n    if i%7==0:\n        cnt+=b\nprint(i)\n","import math\na,b,c = map(int,input().split())\nfor i in range(10**6):\n    c -= a\n    if i%7 == 6:\n        c -= b\n    if c <= 0:\n        print(i+1)\n        break\n","a, b, c = map(int, input().split())\np = c \/\/ (a*7 + b)\nq = c % (a*7 + b)\nr = q \/\/ a\ns = q % a\nif a*7 < q < a*7+b:\n    print(p*7 + 7)\nelif s == 0:\n    print(p*7 + r)\nelse:\n    print(p*7 + r + 1)\n\n    \n    \n\n\n","#!\/usr\/bin\/python3\n\nimport array\nfrom fractions import Fraction\nimport functools\nimport itertools\nimport math\nimport os\nimport sys\n\n\ndef main():\n    A, B, C = read_ints()\n    print(solve(A, B, C))\n\n\ndef solve(A, B, C):\n    weekly = A * 7 + B\n    weeks = C \/\/ weekly\n    rest = C - weekly * weeks\n    days = (rest + A - 1) \/\/ A\n    if days > 7:\n        days = 7\n    return weeks * 7 + days\n\n\n###############################################################################\n# AUXILIARY FUNCTIONS\n\nDEBUG = 'DEBUG' in os.environ\n\n\ndef inp():\n    return sys.stdin.readline().rstrip()\n\n\ndef read_int():\n    return int(inp())\n\n\ndef read_ints():\n    return [int(e) for e in inp().split()]\n\n\ndef dprint(*value, sep=' ', end='\\n'):\n    if DEBUG:\n        print(*value, sep=sep, end=end)\n\n\nif __name__ == '__main__':\n    main()\n\n","import math\na, b, c = map(int, input().split())\n\nn = 0\n\nwhile True:\n    n += 1\n    if (a * n + math.floor(n \/ 7) * b >= c):\n        break\n\nprint(n)\n\n","A,B,C = map(int,input().split())\ncoin = 0\nfor day in range(1,C+1):\n    coin += A\n    if day % 7 == 0:\n        coin += B\n    if coin >= C:\n        break\nprint(day)\n\n","a,b,c = map(int,input().split())\n\nd = 0\ns = 0\nwhile s < c:\n    d += 1\n    if d%7 == 0:\n        s += b\n    s += a\nprint(d)\n","a,b,c=map(int,input().split())\nans=7\nw=7*a+b\nif c<=6*a:\n    if c%a==0:\n        ans=c\/\/a\n    else:\n        ans=c\/\/a+1\nelse:\n    if c>w:\n        ans+=(c\/\/w-1)*7\n        c-=c\/\/w*w\n        if c%a==0 and c<=6*a:\n            ans+=c\/\/a\n        else:\n            if 6*a<c<=7*a+b:\n                ans+=7\n            else:\n                ans+=c\/\/a+1\nprint(ans)\n\n\n","A,B,C = map(int,input().split())\n\ncoin=0\nfor day in range(1, C+1):\n    coin+=A\n    if day % 7 == 0:\n        coin+=B\n    if coin >= C: break\n\nprint(day)\n","import math\na, b, c=map(int,input().split())\nw = a*7+b\nx = c\/\/w\ny = c%w\nif y <= a*7:\n   print((7*x)+math.ceil(y\/a))\nelse:\n   print(7*(x+1))\n\n","a,b,c = map(int,input().split())\nx = 0\nd = 0\nwhile 1:\n    if x >= c:\n        break\n    else:\n        d = d +1\n        x = x+a\n        if d%7 == 0:\n            x = x+b\nprint(d)\n\n","A, B, C = map(int,input().split())\n\ncoin = 0\nfor day in range(1, C+1):\n    coin += A\n    if day % 7 == 0:\n        coin += B\n    if coin >= C:\n        break\nprint(day)\n","a,b,c=map(int,input().split())\ni=1\nwhile True:\n    x=a*i+b*(i\/\/7)\n    if x >= c:\n        print(i)\n        break\n    i += 1\n","inputline = input().split()\na = int(inputline[0])\nb = int(inputline[1])\nc = int(inputline[2])\n\ncnt = 0\ncoin = 0\n\nwhile coin < c:\n    cnt += 1\n    if (cnt % 7) == 0:\n        coin += b\n    coin += a\nprint(cnt)\n\n\n","A,B,C=map(int,input().split())\nDay=0\ncoin=0\nwhile C>coin:\n    Day+=1\n    coin+=A\n    if Day%7==0:\n        coin+=B\nprint(Day)\n","A,B,C=map(int,input().split())\nday=0\ncoin=0\nwhile coin<C:\n    day+=1\n    coin+=A\n    if day%7==0:\n        coin+=B\nprint(day)\n","a,b,c = map(int,input().split())\n\nd = 0\ns = 0\nwhile s < c:\n    d += 1\n    if d%7 == 0:\n        s += b\n    s += a\nprint(d)\n\n","def getInput():\n    (a, b, c) = (int(i) for i in input().split(\" \"))\n    return a, b, c\n\na, b, c = getInput()\n\nn_weeklylogin = 0\nn_dailylogin = 0\nweekly_gain = 7*a+b\n\nn_weeklylogin = c\/\/weekly_gain\ntotal_bonus = n_weeklylogin*weekly_gain\n\nif total_bonus >= c:\n    print(n_weeklylogin*7)\nelse:\n    n_dailylogin = -(-(c-total_bonus)\/\/a)\n    print(n_weeklylogin*7 + (n_dailylogin>=7)*7 + (n_dailylogin<7)*(n_dailylogin))\n\n","A,B,C=map(int,input().split())\ni=1\nwhile True:\n    if i*A+int(i\/7)*B>=C:\n        break\n    i+=1\nprint(i)    \n","A,B,C=map(int,input().split())\n\nx=C%(A*7+B)\ny =C\/\/(A*7+B)\n\nif (C\/\/A)<7:\n    if C%A==0:\n        print(C\/\/A)\n    else:\n        print(C\/\/A+1)\n        \nelif x==0:\n    print(y*7)\nelse:\n    z=x%A\n    w=x\/\/A\n    if w>(A*7):\n        print(y*7+7)\n    elif w==7 and z<=B:\n        print(y*7+7)\n    elif z==0:\n        print(y*7+w)\n    else:\n        print(y*7+w+1)\n","a,b,c = map(int,input().split())\n\nd = 0\ns = 0\nwhile s < c:\n    d += 1\n    if d%7 == 0:\n        s += b\n    s += a\nprint(d)\n\n","# coding: utf-8\n# Your code here!\na,b,c=map(int,input().split())\n\nsum=0\ni=0\nwhile True:\n    sum+=a\n    i+=1\n    if sum>=c:\n        print(i)\n        break\n    if i%7==0:\n        sum+=b\n        if sum>=c:\n            print(i)\n            break\n","#0652\na , b , c = map(int,input().split())\nsum = 0\ncount = 0 \nwhile True:\n    if sum >= c:\n        break\n    sum += a\n    count += 1\n    if count%7 == 0:\n        sum += b \n        \nprint(count)\n","    \nA, B, C = map(int, input().split())\nans = 0\nk = C \/\/ (7*A+B)\nC -= k*(7*A+B)\nif C <= 7*A:\n    print(7*k + (C+A-1)\/\/A)\nelse:\n    print(7*(k+1))\n","day=0\nsum=0\n\na,b,c=map(int,input().split())\n\nwhile True:\n    day+=1\n    \n    if day%7==0:\n        sum+=(a+b)\n    else:\n        sum+=a\n    \n    if sum>=c:\n        print(day)\n        break\n","A,B,C=map(int,input().split())\nX=1\nwhile True:\n    if (C<=A*X+(X\/\/7)*B):\n\n        print(X)\n        break\n    else:\n        X=X+1\n        \n","a,b,c=map(int,input().split())\nd=c\/\/(a*7+b)*7\nc%=a*7+b\ne=0\nwhile c>0 and e<7:\n    d+=1\n    c-=a\n    e+=1\nprint(d)\n","import math\nline = input().split(\" \")\nA = int(line[0])\nB = int(line[1])\nC = int(line[2])\n\nW = C\/\/(7*A+B)\nremain = C - (7*A+B)*W\n#print(W, \" \", remain)\nD = 0\nif(remain >= 7*A):\n    D = 7 \nelse:\n    D = math.ceil(remain\/A)\n\nans = 7*W + D\n\nprint(ans)\n","import math\n\na, b, c = map(int, input().split())\n\ndays = 1 \ncoin = 0\n\n\n\nwhile c > coin: \n    coin = a * days + b * math.floor(days\/7)\n    days = days + 1\nprint (days - 1)\n","#!usr\/bin\/env python3\nimport sys\nimport math\nimport string\nimport collections\nimport fractions\nimport random\nfrom operator import itemgetter\nimport itertools\nfrom collections import deque\nimport copy\nimport heapq\nimport bisect\n\nMOD = 10 ** 9 + 7\nINF = float('inf')\ninput = lambda: sys.stdin.readline().strip()\n\nsys.setrecursionlimit(10 ** 8)\n\nA, B, C = map(int, input().split())\nSum = 0\nfor i in range(1, 10**9):\n    Sum += A\n    if i%7 == 0:\n        Sum += B\n    if Sum >= C:\n        print(i)\n        sys.exit()\n","A,B,C=(int(x) for x in input().split())\n\ni=0\nN=C\nwhile N>0:\n    N=C-A*i\n    if N<=0:\n        print(i)\n        break\n            \n    else:\n         i+=1\n         if i%7==0:\n            C-=B\n\n","A, B, C = (int(x) for x in input().split())\nd = A*6\n\nif C<d:\n    if C%A == 0:\n        print(C\/\/A)\n    if C%A > 0 :\n        print(C\/\/A+1)\n\nif C>=d:\n    D = A*7+B\n    E = C%D\n    F = C\/\/D\n    x = E\/\/A\n    y = E%A\n    if x < 7 :\n        if y == 0:\n            print(F*7+x)\n        if y > 0 :\n            print(F*7+x+1)\n    if x >= 7:\n        print((F+1)*7)\n","A,B,C=list(map(int,input().split()))\np=0\nq=0\nwhile p<C:\n    q+=1\n    p+=A\n    if q%7==0:\n        p+=B\nprint(q)\n\n\n","import random\nimport math\nN = list(map(int, input().split()))\nA=N[0]\nB=N[1]\nC=N[2]\nx=(int)(C\/(A*7+B))\nsum=x*7\n\nif abs(x*(A*7+B)-C)>= 0.0000001:\n    for i in range (1,8):\n        sum=sum+1\n        if i== 7 and C<=x*(A*7+B)+i*A+B:\n            break\n        if C<=x*(A*7+B)+i*A:\n            break\nprint(sum)\n\n","import math\na,b,c=map(int,input().split())\n\nm=a*7+b\n\nif c<a*7:\n    print(math.ceil(c\/a))\nelse:\n    n=math.floor(c\/m)\n    p=c-m*n\n    if p\/a<7:\n        x=n*7+math.ceil(p\/a)\n    else:\n        x=n*7+7\n\n    print(x)\n","\nA,B,C=map(int,input().split())\n\ny=0\n\nfor x in range(1,C+1):\n    y+=A\n    if x%7==0:\n        y+=B\n    if y>=C:\n        break\nprint(x)\n","A, B, C = map(int,input().split())\n\ncoin = 0\nfor day in range(1, C+1):\n    coin+=A\n    \n    if day%7==0:\n        coin+=B\n    if coin >= C: break\n\nprint(day)\n","A,B,C=map(int,input().split())\ncoin=0\nday=1\nwhile True:\n    coin+=A\n    if day%7==0:\n        coin+=B\n    if coin>C or coin==C:\n        break\n    day+=1\nprint(day)\n","a,b,c=map(int,input().split())\n\nday=0\ncoin=0\n\nwhile coin<c:\n    day+=1\n    coin+=a\n    if day%7==0:\n        coin+=b\nprint(day)\n","a,b,c = map(int,input().split())\n\ntot = 0\nd = 0\nwhile tot < c:\n  d+=1\n  tot += a\n  if d%7 == 0:\n    tot += b\nprint(d)\n\n","a,b,c=map(int,input().split())\nw=a*7+b\nans=c\/\/w*7\nc=c%w\nd=c\/\/a\nif c%a>0:d+=1\nif d>7:d=7\nans+=d\nprint(ans)\n","a,b,c=map(int,input().split())\nday=0\ncoin=0\n \nwhile coin<c:\n    day+=1\n    coin+=a\n    if day%7==0:\n        coin+=b\nprint(day)\n\n","A, B, C = map(int,input().split())\n\ncoin = 0\nfor day in range(1,C+1):\n    coin += A\n    \n    if day % 7 == 0:\n        coin += B\n    if coin >= C:break\n\nprint(day)\n","A,B,C = map(int,input().split())\ni = 0\nx = 0\nwhile (i < C):\n    x += 1\n    if x%7 == 0:\n        i += A+B\n    else:\n        i += A\nelse:\n    print(x)\n","import math\nA, B, C=map(int,input().split())\nx=C\/\/(A*7+B)\ny=C%(A*7+B)\n\nz=math.ceil(y\/A)\nr=math.ceil(z\/(A*7+B))\nif z>=7:\n    print(x*7+7*r)\nelse:\n    print(x*7+z)\n\n"]}
{"description_html":"<span class=\"lang-en\">\n<p>Score : <var>100<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>You are given a <var>4<\/var>-character string <var>S<\/var> consisting of uppercase English letters.\nDetermine if <var>S<\/var> consists of exactly two kinds of characters which both appear twice in <var>S<\/var>.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li>The length of <var>S<\/var> is <var>4<\/var>.<\/li>\n<li><var>S<\/var> consists of uppercase English letters.<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>S<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>If <var>S<\/var> consists of exactly two kinds of characters which both appear twice in <var>S<\/var>, print <code>Yes<\/code>; otherwise, print <code>No<\/code>.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>ASSA\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>Yes\n<\/pre>\n<p><var>S<\/var> consists of <code>A<\/code> and <code>S<\/code> which both appear twice in <var>S<\/var>.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>STOP\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>No\n<\/pre>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>FFEE\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>Yes\n<\/pre>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 4<\/h3><pre>FREE\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 4<\/h3><pre>No\n<\/pre><\/section>\n<\/div>\n<\/span>","description_string":"\nScore : 100 points\n\n\nProblem StatementYou are given a 4-character string S consisting of uppercase English letters.\nDetermine if S consists of exactly two kinds of characters which both appear twice in S.\n\n\n\n\nConstraints\nThe length of S is 4.\nS consists of uppercase English letters.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nS\n\n\n\n\n\nOutputIf S consists of exactly two kinds of characters which both appear twice in S, print Yes; otherwise, print No.\n\n\n\n\n\n\nSample Input 1ASSA\n\n\n\n\n\nSample Output 1Yes\n\nS consists of A and S which both appear twice in S.\n\n\n\n\n\nSample Input 2STOP\n\n\n\n\n\nSample Output 2No\n\n\n\n\n\n\nSample Input 3FFEE\n\n\n\n\n\nSample Output 3Yes\n\n\n\n\n\n\nSample Input 4FREE\n\n\n\n\n\nSample Output 4No\n\n\n","orig_lang_html":"<span class=\"lang-en\">\n<p>Score : <var>100<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>You are given a <var>4<\/var>-character string <var>S<\/var> consisting of uppercase English letters.\nDetermine if <var>S<\/var> consists of exactly two kinds of characters which both appear twice in <var>S<\/var>.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li>The length of <var>S<\/var> is <var>4<\/var>.<\/li>\n<li><var>S<\/var> consists of uppercase English letters.<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>S<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>If <var>S<\/var> consists of exactly two kinds of characters which both appear twice in <var>S<\/var>, print <code>Yes<\/code>; otherwise, print <code>No<\/code>.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>ASSA\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>Yes\n<\/pre>\n<p><var>S<\/var> consists of <code>A<\/code> and <code>S<\/code> which both appear twice in <var>S<\/var>.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>STOP\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>No\n<\/pre>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>FFEE\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>Yes\n<\/pre>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 4<\/h3><pre>FREE\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 4<\/h3><pre>No\n<\/pre><\/section>\n<\/div>\n<\/span>","orig_lang_string":"\nScore : 100 points\n\n\nProblem StatementYou are given a 4-character string S consisting of uppercase English letters.\nDetermine if S consists of exactly two kinds of characters which both appear twice in S.\n\n\n\n\nConstraints\nThe length of S is 4.\nS consists of uppercase English letters.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nS\n\n\n\n\n\nOutputIf S consists of exactly two kinds of characters which both appear twice in S, print Yes; otherwise, print No.\n\n\n\n\n\n\nSample Input 1ASSA\n\n\n\n\n\nSample Output 1Yes\n\nS consists of A and S which both appear twice in S.\n\n\n\n\n\nSample Input 2STOP\n\n\n\n\n\nSample Output 2No\n\n\n\n\n\n\nSample Input 3FFEE\n\n\n\n\n\nSample Output 3Yes\n\n\n\n\n\n\nSample Input 4FREE\n\n\n\n\n\nSample Output 4No\n\n\n","solve_rate":0.587649109,"codenet_problem_id":"p02987","input_testcases":{"63":"?QRC","40":"PECH","85":"HGCP","81":"?DRQ","24":"S@QB","94":"JGDP","83":"RPPS","28":"PCDG","49":"OEBH","20":"TRMP","8":"RPNT","39":"C@RS","32":"TRLP","14":"TMPR","72":"ERQ?","3":"ASRA","2":"SPOT","15":"@QSB","34":"GCEP","90":"E?RQ","10":"EDQG","11":"TNPR","88":"IGCP","70":"COFH","95":"TPOQ","69":"DRQ?","79":"HGOC","29":"PRLT","46":"HBEO","7":"EEQG","45":"RR@C","71":"SONS","97":"PDGJ","57":"RC?Q","4":"EEQF","68":"SNOS","64":"CHEO","13":"GQDE","27":"S@RB","66":"CRQ?","51":"R@CR","104":"FREE","35":"TPLR","73":"HFOC","80":"RPOS","92":"TPOR","16":"GEDQ","41":"RLOT","93":"QR?E","67":"CHFO","98":"QOPT","52":"OECH","96":"EQR?","6":"ARSA","19":"GEDP","22":"GDDP","76":"COGH","33":"S@SC","36":"C@SS","59":"SOMT","87":"D?RQ","37":"HCEP","91":"JGCP","21":"SBQ@","75":"QRE?","9":"ARSB","86":"ROPS","44":"TLOR","56":"ROMT","23":"PRMT","84":"QR?D","89":"ROPT","26":"PRTM","42":"SR@C","50":"TOMR","58":"HECO","18":"@QBS","103":"STOP","54":"RC?R","5":"SPNT","78":"QRD?","25":"PDDG","65":"SMOS","38":"TOLR","17":"TRPM","1":"FQEE","47":"RMOT","48":"RC@R","30":"S@RC","53":"TMOR","61":"EHCO","43":"HCEO","12":"AQSB","99":"EQ?R","77":"ROOS","55":"OCEH","31":"PCEG","82":"HGPC","60":"RQ?C","62":"TMOS"},"output_testcases":{"63":"No\n","40":"No\n","85":"No\n","81":"No\n","24":"No\n","94":"No\n","83":"No\n","28":"No\n","49":"No\n","20":"No\n","8":"No\n","39":"No\n","32":"No\n","14":"No\n","72":"No\n","3":"No\n","2":"No\n","15":"No\n","34":"No\n","90":"No\n","10":"No\n","11":"No\n","88":"No\n","70":"No\n","95":"No\n","69":"No\n","79":"No\n","29":"No\n","46":"No\n","7":"No\n","45":"No\n","71":"No\n","97":"No\n","57":"No\n","4":"No\n","68":"No\n","64":"No\n","13":"No\n","27":"No\n","66":"No\n","51":"No\n","104":"No\n","35":"No\n","73":"No\n","80":"No\n","92":"No\n","16":"No\n","41":"No\n","93":"No\n","67":"No\n","98":"No\n","52":"No\n","96":"No\n","6":"No\n","19":"No\n","22":"No\n","76":"No\n","33":"No\n","36":"No\n","59":"No\n","87":"No\n","37":"No\n","91":"No\n","21":"No\n","75":"No\n","9":"No\n","86":"No\n","44":"No\n","56":"No\n","23":"No\n","84":"No\n","89":"No\n","26":"No\n","42":"No\n","50":"No\n","58":"No\n","18":"No\n","103":"No\n","54":"No\n","5":"No\n","78":"No\n","25":"No\n","65":"No\n","38":"No\n","17":"No\n","1":"No\n","47":"No\n","48":"No\n","30":"No\n","53":"No\n","61":"No\n","43":"No\n","12":"No\n","99":"No\n","77":"No\n","55":"No\n","31":"No\n","82":"No\n","60":"No\n","62":"No\n"},"n_missing":5,"programs":["s=input()\nif s[0]==s[1]==s[2]==s[3]:\n    print(\"No\")\nelif (s[0]==s[1] and s[2]==s[3]) or (s[0]==s[2] and s[1]==s[3]) or (s[0]==s[3] and s[1]==s[2]):\n    print(\"Yes\")\nelse:\n    print(\"No\")","s = input()\n\nlis = []\nfor i in s:\n    lis.append(i)\n    \ntmp = list(set(lis))\n\nif len(tmp) == 2 and lis.count(tmp[0]) == 2:\n    print(\"Yes\")\nelse:\n    print(\"No\")","s = input()\nnum =0\nfor i in range(4):\n    if s.count(s[i]) == 2:\n        num +=1\nif num ==4:\n    print(\"Yes\")\nelse:\n    print(\"No\")","print('Yes' if len(set(input()))==2 else 'No')","S = input()\ncount_dict = {}\nfor i in S:\n  if i not in count_dict:\n    count_dict[i] = 1\n  else:\n    count_dict[i] += 1\n\nvalue = list(count_dict.values())\nif len(value) == 2 and value[0] == value[1]:\n  print(\"Yes\")\nelse:\n  print(\"No\")","s=input()\nsl=list(s)\np=s[0]\nans=0\nans2=0\nfor i in range(4):\n    if s[i]==p:\n        ans+=1\n    else:\n        q=s[i]\n\nfor i in range(4):\n    if s[i]==q:\n        ans2+=1\n\nif ans==2 and ans2==2:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n\n","S = list(input())\nSs = set(S)\ncount2 = 0\nfor alp in Ss:\n    if S.count(alp) == 2:\n        count2 += 1\nif count2 == len(Ss):\n    print(\"Yes\")\nelse:\n    print(\"No\")","from sys import stdin\nS = (stdin.readline().rstrip())\nflag = True\nif len(set(S)) == 2:\n    flag = True\nelse:\n    flag = False\n\nfor i in list(set(S)):\n    if S.count(i) != 2:\n        flag = False\n\nif flag:\n    print(\"Yes\")\nelse:\n    print(\"No\")","#!\/usr\/bin\/python3\n# -*- coding: utf-8 -*-\n\n\n\nS = str(input())\nret = set()\nfor c in S:\n  ret.add(S.count(c))\nif 2 in ret and len(ret)==1:\n  print(\"Yes\")\nelse:\n  print(\"No\")","s = input()\n\nif s[0] == s[1]:\n    a = s.count(s[0])\n    b = s.count(s[2])\n    if a == 2 and b == 2:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nelse:\n    a = s.count(s[0])\n    b = s.count(s[1])\n    if a == 2 and b == 2:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n","S = input()\nans = 'Yes'\nfor i in S:\n    if S.count(i) != 2:\n        ans = 'No'\nprint(ans)","s = str(input())\nif s[0] == s[1] and s[2] == s[3] and s[0] != s[2]:\n    print(\"Yes\")\nelif s[0] == s[2] and s[1] == s[3] and s[0] != s[1]:\n    print(\"Yes\")\nelif s[0] == s[3] and s[1] == s[2] and s[0] != s[1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")","S = set(input())\nif len(S) == 2:\n    print(\"Yes\")\nelse:\n    print(\"No\")","s = list(input())\nimport collections\nc = collections.Counter(s)\nans = 1\nfor i in range(4):\n    if c[s[i]] != 2:\n        ans = 0\nprint([\"No\",\"Yes\"][ans])","S = input()\nd = {}\nfor s in S:\n    if s in d:\n        d[s] += 1\n    else:\n        d[s] = 1\nif len(d) == 2:\n    for i in d.values():\n        if i != 2:\n            break\n    print('Yes')\n    exit()\nprint('No')\n","S = input()\n\nd = {}\nfor s in S:\n    if s in d.keys():\n        d[s] += 1\n    else:\n        d[s] = 1\n\nflag = 1\nfor v in d.values():\n    if v != 2:\n        flag = 0\n\nif flag:\n    print('Yes')\nelse:\n    print('No')","# input string S\nS = input()\n\n# judge if 2S[0], 2S[1] and 2S[2] exist in S\nif S.count(S[0])==2 and S.count(S[1])==2 and S.count(S[2])==2:\n    print('Yes')\nelse:\n    print('No')","S = input()\n\nS_ = [ord(s) for s in S]\nS_.sort()\n\nif S_[0] == S_[1] and S_[2] == S_[3] and S_[1] != S_[2] :\n    print('Yes')\nelse :\n    print('No')","from collections import Counter\ns=list(str(input()))\ns.sort()\n\nif s[0]==s[1] and s[2]==s[3] and s[1]!=s[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n","s = input()\nx = list(set(s))\nif len(x) == 2:\n  if s.count(x[0])==2 and s.count(x[1])==2:\n    print(\"Yes\")\n  else:\n    print(\"No\")\nelse:\n  print(\"No\")","s = input()\nl = []\nfor i in range( len( s )):\n  if not ( s[i] in l ):\n    l.append( s[i] )\n\nif len(l) == 2:\n  print(\"Yes\")\nelse:\n  print(\"No\")","S = input()\n\nlstStr = sorted(S)\n\nres = \"Yes\" if len(set(lstStr)) == 2 and lstStr[1]!=lstStr[2] else \"No\"\n\nprint(res)","import sys\nsys.setrecursionlimit(2147483647)\nINF=float(\"inf\")\nMOD=10**9+7\ninput=lambda :sys.stdin.readline().rstrip()\ndef resolve():\n    from collections import Counter\n    C=Counter(input())\n    if(len(C)!=2):\n        print(\"No\")\n        return\n    for k,v in C.items():\n        if(v!=2):\n            print(\"No\")\n            return\n    print(\"Yes\")\nresolve()","S = input()\n\nalph = set(S)\nif len(alph) != 2:\n    print(\"No\")\n    exit(0)\n\nfor c in alph:\n    if S.count(c) != 2:\n        print(\"No\")\n        exit(0)\n\nprint(\"Yes\")\n","s=sorted(input())\nif s[0]==s[1] and s[2]==s[3] and s[1]!=s[2]:\n  print('Yes')\nelse:\n  print('No')","S = input()\n\na = set()\n\nfor i in range(len(S)):\n  a.add(S[i])\n\nif len(a) == 2:\n  print(\"Yes\")\nelse:\n  print(\"No\")","s = input()\n\norgin = set(list(s))\n\nif len(orgin) > 2:\n    print(\"No\")\n    exit()\n\na=0\nb=0\nfor i in s:\n    if i == origin[0]: a+=1\n    elif i == origin[1]: b+=1\n\nif a==2:\n    print(\"Yes\")\nelse:\n    print(\"No\")","\nS=str(input())\n\ncnt1=1\ncnt2=0\na1=S[0]\nt=0\nfor i in range(1,len(S)):\n    if S[i]==a1:\n        cnt1+=1\n    elif t ==0:\n        a2=S[i]\n        t=1\n        cnt2+=1\n    elif a2==S[i]:\n        cnt2+=1\n    else:\n        t=0\n        break\n\nif t==0:\n    print(\"No\")\nelse:\n    print(\"Yes\")\n        ","# -*- coding: utf-8 -*-\n\n# input\nS = list(input())\n\n# solve\nS = sorted(S)\nans = 'Yes' if S[0] == S[1] and S[2] == S[3] else 'No'\n\n# output\nprint(ans)\n","s = input()\n_set = set(s)\nif len(_set) == 2 and s.count(s[0]) == 2:\n    print('Yes')\nelse:\n    print('No')\n","import sys\nsys.setrecursionlimit(10 ** 9)\ninput = sys.stdin.readline\nfrom itertools import permutations,  combinations, accumulate\nfrom functools import *\nfrom collections import deque, defaultdict, Counter\nfrom heapq import heapify, heappop, heappush, heappushpop\n\nINF = float('inf')\nNIL = - 1\n\n\"\"\" Input\nN = int(input())\nN, A, B = map(int, input().split())\nA = list(map(int, input().split()))\nA = np.array(input().split(), dtype=np.float64)\nD = [int(input()) for _ in range(N)]\nAB = [[int(x) for x in input().split()] for _ in range(N)]\nPX = [[int(x) for x in input().split()] for _ in range(Q)]\n\"\"\"\n\nS = input().rstrip()\nS = sorted(S)\nif S[0] == S[1] and S[2] == S[3]:\n    print('Yes')\nelse:\n    print('No')\n\n\n\n\n\n# def main():\n\n# if __name__ == '__main__':\n#     main()\n","import collections as c\nif list(c.Counter(list(input())).values()) == [2,2]:\n  print(\"Yes\")\nelse:\n  print(\"No\")","\nS=input()\nhantei=False\nif(len(set(S))==2):\n    if(SS[0]==SS[1] and SS[0]!=SS[2]):\n        hantei=True\n    else:\n        hantei=False\nelse:\n    hantei=False\nSS=sorted(S)\n\nif(hantei==True):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n    ","import sys\nimport math\nfrom copy import deepcopy\nfrom collections import deque\nsys.setrecursionlimit(20000000)\n\n\ndef main():\n    from collections import defaultdict\n    S = input()\n    ans = defaultdict(str)\n    for s in S:\n        if s in ans:\n            ans[s] += 1\n        else:\n            ans[s] = 1\n\n    if len(ans) == 2 and ans[S[0]] == 2:\n        print('Yes')\n    else:\n        print('No')\n\n\nif __name__ == '__main__':\n    main()\n\n","S = input()\n# S = \"JSKK\"\nr = \"No\"\nS_unique = list(set(S))\nif len(S_unique) == 2:\n    T = S[1] + S[2] + S[3]\n    T_unique = list(set(T))\n    if len(T_unique) == 2:\n        T = S[0] + S[2] + S[3]\n        T_unique = list(set(T))\n        if len(T_unique) == 2:\n            T = S[0] + S[1] + S[3]\n            T_unique = list(set(T))\n            if len(T_unique) == 2:\n                T = S[0] + S[1] + S[2]\n                T_unique = list(set(T))\n                if len(T_unique) == 2:\n                    r = \"Yes\"\nprint(r)","s=input();print('NYoe s'[(len(set(s[:2]))==1 and len(set(s[2:]))==1) or (len(set(s[:2]))==2 and len(set(s[2:]))==2)::2])","a = list(input())\na.sort()\nif a[0]==a[1] and a[2]==a[3] and a[1]!=a[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")","a = [i for i in input()]\nb = list(set(a))\n\nif len(b) != 2:\n    print(\"No\")\nelif a.count(b[0]) != 2 or a.count(b[1]) != 2:\n    print(\"No\")\nelse:\n    print(\"Yes\")\n","S = list(input())\nanswer = \"Yes\"\nfor i in range(len(S)):\n    check = S[i]\n    if(S.count(check) != 2):\n        answer = \"No\"\nprint(answer)","S = input()\nstr_dir = {}\nfor c in list(S):\n    if c in str_dir:\n        str_dir[c] += 1\n    else:\n        str_dir[c] = 1\n\nif len(str_dir) == 2 and list(str_dir.values()) == [2, 2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")","#!\/usr\/bin\/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Jun 29 20:53:13 2019\n\n@author: YudNK\n\"\"\"\n\nl = [i for i in input()]\n\nk = len(set(l))\n\na = l[0]\nc = 0\nfor i in l:\n    if i == a:\n        c = c + 1\n\nif k == 2 and c == 2:\n    print('Yes')\nelse:\n    print('No')","s = input()\n\nslist = list(set(s))\n\nif len(slist)==2:\n  print('Yes')\nelse:\n  print('No')\n","S = list(input())\nd = {}\nfor i in range(len(S)):\n    d[S[i]] = 1\nif len(d) == 2:\n    print('Yes')\nelse:\n    print('No')\n","S = input()\nc = 0\nfor i in S:\n  if S.count(i) == 2:\n    c = c + 1\nif (c == 4):\n  print(\"YES\")\nelse:\n  print(\"NO\")","#\n# \u3000\u3000  \u22c0_\u22c0\u3000 \n#\u3000\u3000  (\uff65\u03c9\uff65)  \n# .\uff0f \uff35 \u223d \uff35\uff3c\n#  \u2502\uff0a\u3000\u5408\u3000\uff0a\u2502\n#  \u2502\uff0a\u3000\u683c\u3000\uff0a\u2502 \n#  \u2502\uff0a\u3000\u7948\u3000\uff0a\u2502 \n#  \u2502\uff0a\u3000\u9858\u3000\uff0a\u2502 \n#  \u2502\uff0a\u3000\u3000\u3000\uff0a\u2502 \n#      \uffe3\n#\nimport sys\ninput=sys.stdin.readline\nfrom math import floor,ceil,sqrt,factorial,log #log2\u306a\u3044\uff59\uff50\nfrom heapq import heappop, heappush, heappushpop\nfrom collections import Counter,defaultdict\nfrom itertools import accumulate,permutations,combinations,product,combinations_with_replacement\nfrom bisect import bisect_left,bisect_right\ninf=float('inf')\nmod = 10**9+7\ndef INT_(n): return int(n)-1\ndef MI(): return map(int,input().split())\ndef MF(): return map(float, input().split())\ndef MI_(): return map(INT_,input().split())\ndef LI(): return list(MI())\ndef LI_(): return [int(x) - 1 for x in input().split()]\ndef LF(): return list(MF())\ndef LIN(n:int): return [I() for _ in range(n)]\ndef LLIN(n: int): return [LI() for _ in range(n)]\ndef LLIN_(n: int): return [LI_() for _ in range(n)]\ndef LLI(): return [list(map(int, l.split() )) for l in input()]\ndef I(): return int(input())\ndef F(): return float(input())\ndef ST(): return input().replace('\\n', '')\ndef main():\n    S = ST()\n    a = defaultdict(int)\n    for s in S:\n        a[s] += 1\n        if a[s] == 3:\n            print(\"No\")\n            exit()\n    if len(a) == 2:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__ == '__main__':\n    main()","s = set(input())\nif len(s) == 2:\n    print(\"Yes\")\nelse:\n    print(\"No\")","s = input()\ns_set = set(s)\ncount=0\nif len(s_set) == 2:\n    count = 1\n    for i,j in enumerate(s):\n        if i>0 and j == s[0]:\n             count += 1\nif count == 2:\n    print('Yes')\nelse:\n    print('No')","s = list(input())\ns.sort()\nif s[0] == s[1] and s[1] != s[2] and s[2] == s[3]:\n    print('Yes')\nelse:\n    print('No')","from sys import stdin\na = stdin.readline().rstrip()\nb = sorted(a)\nif b[0] == b[1] and b[2] == b[3]:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")","S=sorted(input())\nif (S[0]==S[1]) and (S[2]==S[3]) and (S[1]!=S[2]):\n    print('Yes')\nelse:\n    print('No')","s = input()\nif s[0] == s[1] and s[2] == s[3] and s[0] != s[2]:\n\tprint('Yes')\nelif s[0] == s[2] and s[1] == s[3] and s[0] != s[1]:\n\tprint('Yes')\nelif s[0] == s[3] and s[1] == s[2] and s[0] != s[1]:\n  \tprint('Yes')\nelse:\n\tprint('No')","S = sorted(input())\nif len(set(S)) == 2 and S[0] == S[1] and S[1] != S[2] and S[2] == S[3]:\n    print(\"Yes\")\nelse:\n    print(\"No\")","s = input()\n\na = []\nfor i in s:\n    a.append(i)\n\ncnt1 = 0\ncnt2 = 0\nmemo =24\nfor i in range(1,4):\n    if a[0] == a[i]:\n        memo = i\n        break;\n    \n\nans = \"No\"\nif(memo != 24):\n    for i in range(1,4):\n        for j in range(i,4):\n            if (i != memo and j != memo):\n                if a[i] == a[j]:\n                    if a[0] != a[i]:\n                        ans = \"Yes\"\n                        break;\n\n\nprint(ans)\n                        \n            \n    \n    \n    \n    \n","S = input()\nSlen = len(S)\ncnt=[0,0,0]\nflg = True\nfor i in range(Slen-1):\n  \n  for j in range(Slen):\n    if S[i]==S[j]:\n      cnt[i] += 1\n  \n  if cnt[i] < 2 or cnt[i] > 2:\n    flg = False\n    break\n\nif flg == True:\n  print(\"Yes\")\nelse:\n  print(\"No\")","S=list(map(str,input()))\nS.sort()\nif S[0]==S[1] and S[2]==S[3]:\n  print(\"Yes\")\nelse:\n  print(\"No\")","# Fifty-Fifty\nd = {}\nfor s in input():\n    if s not in d.keys():\n        d[s] = 1\n    else:\n        d[s] += 1\n\nif list(d.values()) == [2,2]:\n    print('Yes')\nelse:\n    print('No')","import collections\n\ns = input()\ns = [i for i in s]\nc = list(collections.Counter(s).values())\nif len(c)==2 and c[0]==2:\n    print('Yes')\nelse:\n    print('No')","s = input()\n\nif(len(set(s)) == 2):\n    print(\"Yes\")\nelse:\n    print(\"No\")","S = input()\nS1, S2, S3, S4 = map(str, list(S))\n\nif S1==S2 and S3==S4:\n  print(\"Yes\")\nelif S2==S3 and S1==S4:\n  print(\"Yes\")\nelif S1==S3 and S2==S4:\n  print(\"Yes\")\nelse:\n  print(\"No\")","#!venv\/bin\/python\nfrom collections import defaultdict \n\nS = input()\n\ncnt = defaultdict(int)\n\nfor s in S:\n    cnt[s] += 1\n\nif len(cnt) == 2 and list(cnt.values())[0] == 2:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n","s = set(list(input()))\nif len(s)==2:\n    print('Yes')\nelse:\n    print('No')","S = list(input())\nS.sort()\nif (S[0] == S[1]) and (S[2] == S[3]):\n  print(Yes)\nelse:\n  print(No)","S = str(input())\ns = list(S)\nif s[0] == s[1]:\n    if s[2] == s[3]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nelse if s[0] == s[2]:\n    if s[1] == s[3]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nelse if s[0] == s[3]:\n    if s[1] == s[2]:\n        print(\"Yes\")\n    else:\n        print(\"No\")","s=list(input())\nfrom collections import defaultdict\nd=defaultdict(int)\nfor i in s:\n    d[i]+=1\n# print(d)\nif len(d)!=2:\n    print(\"No\")\nelse:\n    for i in d.items():\n        if i[1]!=2:\n            print(\"No\")\n            import sys\n            sys.exit()\n    print(\"Yes\")","from collections import Counter\nfrom functools import reduce\n\nS = input()\nSC = Counter(S)\n\nif len(SC.items()) == 2 and reduce(lambda x, y: x and y, [v == 2 for v in SC.values()], True):\n    print('Yes')\nelse:\n    print('No')","S = input()\n\nif S[0] == S[1] and S[2] == S[3] and S[0] != S[3]:\n    print(\"Yes\")\n    exit(0)\nif S[0] == S[2] and S[1] == S[4] and S[0] != S[1]:\n    print(\"Yes\")\n    exit(0)\nif S[0] == S[3] and S[2] == S[1] and S[0] != S[1]:\n    print(\"Yes\")\n    exit(0)\nprint(\"No\")","from collections import defaultdict\ns = input()\nd = defaultdict(int)\nfor c in s:\n    d[c] += 1\nif len(d) == 2 and d[s[0]] == 2:\n    print('Yes')\nelse:\n    print('No')","word = input()\nlist1 = list(word)\nlist1.sort()\nif list1[0]!=list1[1]:\n    print(\"No\")\nelif list1[2]!=list1[3]:\n    print(\"No\")\nelif list1[0]==list1[2]:\n    print(\"No\")\nelse:\n    print(\"Yes\")","s = input()\n\nfor i in s:\n    if s.count(i) != 2:\n        print(\"No\")\n        break\nelse:\n    print(\"Yes\")\n","s = list(set(input()))\nif len(s) != 2 or s[0] == s[1]:\n    print('No')\nelse:\n    print('Yes')","S = input()\nif S[0] == S[1] and S[2] == S[3] != S[0] or \\\n   S[0] == S[2] and S[1] == S[3] != S[0] or \\\n   S[0] == S[3] and S[1] == S[2] != S[0]:\n  print(\"Yes\")\nelse:\n  print(\"No\")","S = list(input())\nd = {}\n\nfor s in S:\n    if s not in d:\n        d[s] = 1\n    else:\n        d[s] += 1\n\nif len(d) == 2 and d[S[0]] == 2:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n","import sys\nsys.setrecursionlimit(4100000)\nfrom collections import defaultdict\nn = str(input())\nseen = defaultdict(int)\nfor letter in n:\n    seen[letter] += 1\nres = 0\nfor key in seen.keys():\n    if seen[key] != 2:\n        res += 1\nif res != 0:\n    print(\"No\")\nelse:\n    print(\"Yes\")","s=list(str(input()))\nans=[]\nfor i in s:\n\tif i not in ans:\n\t\tans.append(i)\n\nif len(ans)==2:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")","s = input()\nif s[0] == s[1] or s[1] == s[2] or s[2] == s[3] or s[3] == s[0] and s[0] == s[1] or s[1] == s[2] or s[2] == s[3] or s[3] == s[0]:\n    print(\"Yes\")\nelse:\n    print('No')\n","from collections import Counter\ns = input()\nc = Counter(s).values()\nif list(c) == [2, 2]:\n    print('Yes')\nelse:\n    print('No')","s = input()\ns_ = [i for i in s]\n\nif s_[0] == s_[1] and s_[2] == s_[3]:\n  print(\"Yes\")\nelif s_[0] == s_[2] and s_[1] == s_[3]:\n  print(\"Yes\")\nelif s_[0] == s_[3] and s_[1] == s_[2]:\n  print(\"Yes\")\nelse:\n  print(\"No\")\n","s = input()\ncnt = 0\n\nfor i in range(len(s)-1):\n  if(s[i] == s[i+1]):\n    cnt = cnt + 1\n\nif(cnt == 2):\n  print(\"Yes\")\nelse:\n  print(\"No\")","def main():\n    S = input()\n    if S[0] == S[1] and S[2] == S[3]:\n        ans = \"Yes\"\n    elif S[0] == S[2] and S[1] == S[3]:\n        ans = \"Yes\"\n    elif S[0] == S[3] and S[1] == S[2]:\n        ans = \"Yes\"\n    else:\n    else:\n        ans = \"No\"\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n","from collections import Counter\n\ndef main():\n    s = input()\n\n    if solve(s):\n        print('Yes')\n    else:\n        print('No')\n\ndef solve(s):\n    cnt = Counter(s)\n    for k, v in cnt.items():\n        if v != 2:\n            return False\n    return True\n\nmain()","S = list(input())\nset_S = list(set(S))\nif(len(set_S)==2):\n    if((S.count(set_S[0])==2) and (S.count(set_S[1])==2)):\n        print('Yes')\n    else:\n        print('No')\nelse:\n    print('No')","import collections\nc = collections.Counter\n\nS =input()\nT = ['']*4\nfor i in range(4):\n    T[i] = S[i]\n\nt = c(T).most_common()\nif len(t) == 2 and t[0][1] ==2:\n    print('Yes')\nelse:\n    print('No') ","num = 0\na = input()\ns = [str(c) for c in a]\nfor i in range(4):\n    for j in range(i + 1, 4):\n        if(s[i] == s[j]):\n            num += 1\nif num == 2:\n    print('Yes')\nelse:\n    print('No')","s=list(input())\ns.sort()\nif s[0] == s[1] and s[2] == s[3] and s[1] != s[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")","#copy\n\ns = input()\nprint(\"Yes\" if len(set(s)) == 2 else \"No\")","s=input()\nd={}\nn=\"No\"\nfor i in s:\n  if i in d:\n    d[i]=d[i]+1\n  else:\n    d[i]=1\n    \nif len(d) ==2:\n  for k,v in d.items():\n    n=\"Yes\"\n    \nprint(n)\n  ","import collections\nS = list(input())\nc = collections.Counter(S)\nvalues, counts = zip(*c.most_common())\nif counts[0] == 2:\n    if counts[1] == 2:\n        print('Yes')\n    else:\n        print('No')\nelse:\n    print('No')","S = set(input())\nif len(S) == 2:\n    print('Yes')\nelse:\n    print('No')\n","a = input()\nb = len(a)\nd = 0\n\nfor x in range(b):\n    c = a.count(a[x])\n    if c > 1:\n         d += 1\n\nif d > 2:\n    print('Yes')\nelse:\n    print('No')\n\n","s = input()\nans = \"Yes\"\n\nfor i in s:\n    if s.count(i) != 2:\n        ans =\"No\"\nprint(ans)\n","s=input()\ns=set(s)\n\nif(len(s)==2):\n    print('Yes')\nelse:\n    print('No')","s = [n for n in input()];r = len(set(s)) == 2 and (s[0] == s[1] and s[2] == s[3]) or (s[0] == s[2] and s[1] == s[3]) or (s[0] == s[3] and s[1] == s[2]);print(\"Yes\" if r else \"No\")","lista = input()\n\na=lista.count(lista[0])\nb=lista.count(lista[1])\nc=lista.count(lista[2])\nd=lista.count(lista[3])\nif(a==2 and b==2 and c==2 and d==2):\n    print('Yes')\nelse:\n    print('No')\n\n","S = input()\ncount = {}\nfor k in S:\n  count[k] = 0\nfor y in S:\n  count[y] += 1\nif len(count) == 2 and count[S[0]] == 2:\n  print(\"Yes\")\nelse:\n  print(\"No\")\n      \n  ","#!\/usr\/bin\/env python3\ns = input()\na = min(s)\nb = max(s)\nprint((a != b and s.count(a) + s.count(b) == len(s)) and 'Yes' or 'No')\n","s = input()\na = s[0]\nb = s[1]\nc = s[2]\nd = s[3]\nif a==b:\n    if c==d:\n        if a!=c: print(\"Yes\")\n        else: print(\"No\")\n    else: print(\"No\")\nelif a==d:\n    if b==c: print(\"Yes\")\n    else: print(\"No\")\nelif a==c:\n    if b==d: print(\"Yes\")\n    else: print(\"No\")\nelse: print(\"No\")\n","S = list(input())\n\nuniq = list(set(S))\n\nif len(uniq) != 2 :\n    print('No')\nelse :\n    count = {}\n    for s in S :\n        if s in count :\n            count[s] += 1\n        else :\n            count[s] = 1\n\n    if count[uniq[0]] == 2 :\n        print('Yes')\n    else :\n        print('No')","S= input()\ncount = 0\n\nfor i in range(0,3):\n    for j in range(i+1,4):\n        if(S[i] == S[j]):\n            count += 1\nif(count == 2):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n        \n","import sys\nS = input()\nfor i in range (4):\n    if S.count(S[i]) != 2:\n        print('No')\n        sys.exit()\nprint('Yes')","print(\"Yes\" if len(set(input()))==2 else \"No\")"],"raw_generations":["s=input()\nif s[0]==s[1]==s[2]==s[3]:\n    print(\"No\")\nelif (s[0]==s[1] and s[2]==s[3]) or (s[0]==s[2] and s[1]==s[3]) or (s[0]==s[3] and s[1]==s[2]):\n    print(\"Yes\")\nelse:\n    print(\"No\")","s = input()\n\nlis = []\nfor i in s:\n    lis.append(i)\n    \ntmp = list(set(lis))\n\nif len(tmp) == 2 and lis.count(tmp[0]) == 2:\n    print(\"Yes\")\nelse:\n    print(\"No\")","s = input()\nnum =0\nfor i in range(4):\n    if s.count(s[i]) == 2:\n        num +=1\nif num ==4:\n    print(\"Yes\")\nelse:\n    print(\"No\")","print('Yes' if len(set(input()))==2 else 'No')","S = input()\ncount_dict = {}\nfor i in S:\n  if i not in count_dict:\n    count_dict[i] = 1\n  else:\n    count_dict[i] += 1\n\nvalue = list(count_dict.values())\nif len(value) == 2 and value[0] == value[1]:\n  print(\"Yes\")\nelse:\n  print(\"No\")","s=input()\nsl=list(s)\np=s[0]\nans=0\nans2=0\nfor i in range(4):\n    if s[i]==p:\n        ans+=1\n    else:\n        q=s[i]\n\nfor i in range(4):\n    if s[i]==q:\n        ans2+=1\n\nif ans==2 and ans2==2:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n\n","S = list(input())\nSs = set(S)\ncount2 = 0\nfor alp in Ss:\n    if S.count(alp) == 2:\n        count2 += 1\nif count2 == len(Ss):\n    print(\"Yes\")\nelse:\n    print(\"No\")","from sys import stdin\nS = (stdin.readline().rstrip())\nflag = True\nif len(set(S)) == 2:\n    flag = True\nelse:\n    flag = False\n\nfor i in list(set(S)):\n    if S.count(i) != 2:\n        flag = False\n\nif flag:\n    print(\"Yes\")\nelse:\n    print(\"No\")","#!\/usr\/bin\/python3\n# -*- coding: utf-8 -*-\n\n\n\nS = str(input())\nret = set()\nfor c in S:\n  ret.add(S.count(c))\nif 2 in ret and len(ret)==1:\n  print(\"Yes\")\nelse:\n  print(\"No\")","s = input()\n\nif s[0] == s[1]:\n    a = s.count(s[0])\n    b = s.count(s[2])\n    if a == 2 and b == 2:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nelse:\n    a = s.count(s[0])\n    b = s.count(s[1])\n    if a == 2 and b == 2:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n","S = input()\nans = 'Yes'\nfor i in S:\n    if S.count(i) != 2:\n        ans = 'No'\nprint(ans)","s = str(input())\nif s[0] == s[1] and s[2] == s[3] and s[0] != s[2]:\n    print(\"Yes\")\nelif s[0] == s[2] and s[1] == s[3] and s[0] != s[1]:\n    print(\"Yes\")\nelif s[0] == s[3] and s[1] == s[2] and s[0] != s[1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")","S = set(input())\nif len(S) == 2:\n    print(\"Yes\")\nelse:\n    print(\"No\")","s = list(input())\nimport collections\nc = collections.Counter(s)\nans = 1\nfor i in range(4):\n    if c[s[i]] != 2:\n        ans = 0\nprint([\"No\",\"Yes\"][ans])","S = input()\nd = {}\nfor s in S:\n    if s in d:\n        d[s] += 1\n    else:\n        d[s] = 1\nif len(d) == 2:\n    for i in d.values():\n        if i != 2:\n            break\n    print('Yes')\n    exit()\nprint('No')\n","S = input()\n\nd = {}\nfor s in S:\n    if s in d.keys():\n        d[s] += 1\n    else:\n        d[s] = 1\n\nflag = 1\nfor v in d.values():\n    if v != 2:\n        flag = 0\n\nif flag:\n    print('Yes')\nelse:\n    print('No')","# input string S\nS = input()\n\n# judge if 2S[0], 2S[1] and 2S[2] exist in S\nif S.count(S[0])==2 and S.count(S[1])==2 and S.count(S[2])==2:\n    print('Yes')\nelse:\n    print('No')","S = input()\n\nS_ = [ord(s) for s in S]\nS_.sort()\n\nif S_[0] == S_[1] and S_[2] == S_[3] and S_[1] != S_[2] :\n    print('Yes')\nelse :\n    print('No')","from collections import Counter\ns=list(str(input()))\ns.sort()\n\nif s[0]==s[1] and s[2]==s[3] and s[1]!=s[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n","s = input()\nx = list(set(s))\nif len(x) == 2:\n  if s.count(x[0])==2 and s.count(x[1])==2:\n    print(\"Yes\")\n  else:\n    print(\"No\")\nelse:\n  print(\"No\")","s = input()\nl = []\nfor i in range( len( s )):\n  if not ( s[i] in l ):\n    l.append( s[i] )\n\nif len(l) == 2:\n  print(\"Yes\")\nelse:\n  print(\"No\")","S = input()\n\nlstStr = sorted(S)\n\nres = \"Yes\" if len(set(lstStr)) == 2 and lstStr[1]!=lstStr[2] else \"No\"\n\nprint(res)","import sys\nsys.setrecursionlimit(2147483647)\nINF=float(\"inf\")\nMOD=10**9+7\ninput=lambda :sys.stdin.readline().rstrip()\ndef resolve():\n    from collections import Counter\n    C=Counter(input())\n    if(len(C)!=2):\n        print(\"No\")\n        return\n    for k,v in C.items():\n        if(v!=2):\n            print(\"No\")\n            return\n    print(\"Yes\")\nresolve()","S = input()\n\nalph = set(S)\nif len(alph) != 2:\n    print(\"No\")\n    exit(0)\n\nfor c in alph:\n    if S.count(c) != 2:\n        print(\"No\")\n        exit(0)\n\nprint(\"Yes\")\n","s=sorted(input())\nif s[0]==s[1] and s[2]==s[3] and s[1]!=s[2]:\n  print('Yes')\nelse:\n  print('No')","S = input()\n\na = set()\n\nfor i in range(len(S)):\n  a.add(S[i])\n\nif len(a) == 2:\n  print(\"Yes\")\nelse:\n  print(\"No\")","s = input()\n\norgin = set(list(s))\n\nif len(orgin) > 2:\n    print(\"No\")\n    exit()\n\na=0\nb=0\nfor i in s:\n    if i == origin[0]: a+=1\n    elif i == origin[1]: b+=1\n\nif a==2:\n    print(\"Yes\")\nelse:\n    print(\"No\")","\nS=str(input())\n\ncnt1=1\ncnt2=0\na1=S[0]\nt=0\nfor i in range(1,len(S)):\n    if S[i]==a1:\n        cnt1+=1\n    elif t ==0:\n        a2=S[i]\n        t=1\n        cnt2+=1\n    elif a2==S[i]:\n        cnt2+=1\n    else:\n        t=0\n        break\n\nif t==0:\n    print(\"No\")\nelse:\n    print(\"Yes\")\n        ","# -*- coding: utf-8 -*-\n\n# input\nS = list(input())\n\n# solve\nS = sorted(S)\nans = 'Yes' if S[0] == S[1] and S[2] == S[3] else 'No'\n\n# output\nprint(ans)\n","s = input()\n_set = set(s)\nif len(_set) == 2 and s.count(s[0]) == 2:\n    print('Yes')\nelse:\n    print('No')\n","import sys\nsys.setrecursionlimit(10 ** 9)\ninput = sys.stdin.readline\nfrom itertools import permutations,  combinations, accumulate\nfrom functools import *\nfrom collections import deque, defaultdict, Counter\nfrom heapq import heapify, heappop, heappush, heappushpop\n\nINF = float('inf')\nNIL = - 1\n\n\"\"\" Input\nN = int(input())\nN, A, B = map(int, input().split())\nA = list(map(int, input().split()))\nA = np.array(input().split(), dtype=np.float64)\nD = [int(input()) for _ in range(N)]\nAB = [[int(x) for x in input().split()] for _ in range(N)]\nPX = [[int(x) for x in input().split()] for _ in range(Q)]\n\"\"\"\n\nS = input().rstrip()\nS = sorted(S)\nif S[0] == S[1] and S[2] == S[3]:\n    print('Yes')\nelse:\n    print('No')\n\n\n\n\n\n# def main():\n\n# if __name__ == '__main__':\n#     main()\n","import collections as c\nif list(c.Counter(list(input())).values()) == [2,2]:\n  print(\"Yes\")\nelse:\n  print(\"No\")","\nS=input()\nhantei=False\nif(len(set(S))==2):\n    if(SS[0]==SS[1] and SS[0]!=SS[2]):\n        hantei=True\n    else:\n        hantei=False\nelse:\n    hantei=False\nSS=sorted(S)\n\nif(hantei==True):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n    ","import sys\nimport math\nfrom copy import deepcopy\nfrom collections import deque\nsys.setrecursionlimit(20000000)\n\n\ndef main():\n    from collections import defaultdict\n    S = input()\n    ans = defaultdict(str)\n    for s in S:\n        if s in ans:\n            ans[s] += 1\n        else:\n            ans[s] = 1\n\n    if len(ans) == 2 and ans[S[0]] == 2:\n        print('Yes')\n    else:\n        print('No')\n\n\nif __name__ == '__main__':\n    main()\n\n","S = input()\n# S = \"JSKK\"\nr = \"No\"\nS_unique = list(set(S))\nif len(S_unique) == 2:\n    T = S[1] + S[2] + S[3]\n    T_unique = list(set(T))\n    if len(T_unique) == 2:\n        T = S[0] + S[2] + S[3]\n        T_unique = list(set(T))\n        if len(T_unique) == 2:\n            T = S[0] + S[1] + S[3]\n            T_unique = list(set(T))\n            if len(T_unique) == 2:\n                T = S[0] + S[1] + S[2]\n                T_unique = list(set(T))\n                if len(T_unique) == 2:\n                    r = \"Yes\"\nprint(r)","s=input();print('NYoe s'[(len(set(s[:2]))==1 and len(set(s[2:]))==1) or (len(set(s[:2]))==2 and len(set(s[2:]))==2)::2])","a = list(input())\na.sort()\nif a[0]==a[1] and a[2]==a[3] and a[1]!=a[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")","a = [i for i in input()]\nb = list(set(a))\n\nif len(b) != 2:\n    print(\"No\")\nelif a.count(b[0]) != 2 or a.count(b[1]) != 2:\n    print(\"No\")\nelse:\n    print(\"Yes\")\n","S = list(input())\nanswer = \"Yes\"\nfor i in range(len(S)):\n    check = S[i]\n    if(S.count(check) != 2):\n        answer = \"No\"\nprint(answer)","S = input()\nstr_dir = {}\nfor c in list(S):\n    if c in str_dir:\n        str_dir[c] += 1\n    else:\n        str_dir[c] = 1\n\nif len(str_dir) == 2 and list(str_dir.values()) == [2, 2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")","#!\/usr\/bin\/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Jun 29 20:53:13 2019\n\n@author: YudNK\n\"\"\"\n\nl = [i for i in input()]\n\nk = len(set(l))\n\na = l[0]\nc = 0\nfor i in l:\n    if i == a:\n        c = c + 1\n\nif k == 2 and c == 2:\n    print('Yes')\nelse:\n    print('No')","s = input()\n\nslist = list(set(s))\n\nif len(slist)==2:\n  print('Yes')\nelse:\n  print('No')\n","S = list(input())\nd = {}\nfor i in range(len(S)):\n    d[S[i]] = 1\nif len(d) == 2:\n    print('Yes')\nelse:\n    print('No')\n","S = input()\nc = 0\nfor i in S:\n  if S.count(i) == 2:\n    c = c + 1\nif (c == 4):\n  print(\"YES\")\nelse:\n  print(\"NO\")","#\n# \u3000\u3000  \u22c0_\u22c0\u3000 \n#\u3000\u3000  (\uff65\u03c9\uff65)  \n# .\uff0f \uff35 \u223d \uff35\uff3c\n#  \u2502\uff0a\u3000\u5408\u3000\uff0a\u2502\n#  \u2502\uff0a\u3000\u683c\u3000\uff0a\u2502 \n#  \u2502\uff0a\u3000\u7948\u3000\uff0a\u2502 \n#  \u2502\uff0a\u3000\u9858\u3000\uff0a\u2502 \n#  \u2502\uff0a\u3000\u3000\u3000\uff0a\u2502 \n#      \uffe3\n#\nimport sys\ninput=sys.stdin.readline\nfrom math import floor,ceil,sqrt,factorial,log #log2\u306a\u3044\uff59\uff50\nfrom heapq import heappop, heappush, heappushpop\nfrom collections import Counter,defaultdict\nfrom itertools import accumulate,permutations,combinations,product,combinations_with_replacement\nfrom bisect import bisect_left,bisect_right\ninf=float('inf')\nmod = 10**9+7\ndef INT_(n): return int(n)-1\ndef MI(): return map(int,input().split())\ndef MF(): return map(float, input().split())\ndef MI_(): return map(INT_,input().split())\ndef LI(): return list(MI())\ndef LI_(): return [int(x) - 1 for x in input().split()]\ndef LF(): return list(MF())\ndef LIN(n:int): return [I() for _ in range(n)]\ndef LLIN(n: int): return [LI() for _ in range(n)]\ndef LLIN_(n: int): return [LI_() for _ in range(n)]\ndef LLI(): return [list(map(int, l.split() )) for l in input()]\ndef I(): return int(input())\ndef F(): return float(input())\ndef ST(): return input().replace('\\n', '')\ndef main():\n    S = ST()\n    a = defaultdict(int)\n    for s in S:\n        a[s] += 1\n        if a[s] == 3:\n            print(\"No\")\n            exit()\n    if len(a) == 2:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__ == '__main__':\n    main()","s = set(input())\nif len(s) == 2:\n    print(\"Yes\")\nelse:\n    print(\"No\")","s = input()\ns_set = set(s)\ncount=0\nif len(s_set) == 2:\n    count = 1\n    for i,j in enumerate(s):\n        if i>0 and j == s[0]:\n             count += 1\nif count == 2:\n    print('Yes')\nelse:\n    print('No')","s = list(input())\ns.sort()\nif s[0] == s[1] and s[1] != s[2] and s[2] == s[3]:\n    print('Yes')\nelse:\n    print('No')","from sys import stdin\na = stdin.readline().rstrip()\nb = sorted(a)\nif b[0] == b[1] and b[2] == b[3]:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")","S=sorted(input())\nif (S[0]==S[1]) and (S[2]==S[3]) and (S[1]!=S[2]):\n    print('Yes')\nelse:\n    print('No')","s = input()\nif s[0] == s[1] and s[2] == s[3] and s[0] != s[2]:\n\tprint('Yes')\nelif s[0] == s[2] and s[1] == s[3] and s[0] != s[1]:\n\tprint('Yes')\nelif s[0] == s[3] and s[1] == s[2] and s[0] != s[1]:\n  \tprint('Yes')\nelse:\n\tprint('No')","S = sorted(input())\nif len(set(S)) == 2 and S[0] == S[1] and S[1] != S[2] and S[2] == S[3]:\n    print(\"Yes\")\nelse:\n    print(\"No\")","s = input()\n\na = []\nfor i in s:\n    a.append(i)\n\ncnt1 = 0\ncnt2 = 0\nmemo =24\nfor i in range(1,4):\n    if a[0] == a[i]:\n        memo = i\n        break;\n    \n\nans = \"No\"\nif(memo != 24):\n    for i in range(1,4):\n        for j in range(i,4):\n            if (i != memo and j != memo):\n                if a[i] == a[j]:\n                    if a[0] != a[i]:\n                        ans = \"Yes\"\n                        break;\n\n\nprint(ans)\n                        \n            \n    \n    \n    \n    \n","S = input()\nSlen = len(S)\ncnt=[0,0,0]\nflg = True\nfor i in range(Slen-1):\n  \n  for j in range(Slen):\n    if S[i]==S[j]:\n      cnt[i] += 1\n  \n  if cnt[i] < 2 or cnt[i] > 2:\n    flg = False\n    break\n\nif flg == True:\n  print(\"Yes\")\nelse:\n  print(\"No\")","S=list(map(str,input()))\nS.sort()\nif S[0]==S[1] and S[2]==S[3]:\n  print(\"Yes\")\nelse:\n  print(\"No\")","# Fifty-Fifty\nd = {}\nfor s in input():\n    if s not in d.keys():\n        d[s] = 1\n    else:\n        d[s] += 1\n\nif list(d.values()) == [2,2]:\n    print('Yes')\nelse:\n    print('No')","import collections\n\ns = input()\ns = [i for i in s]\nc = list(collections.Counter(s).values())\nif len(c)==2 and c[0]==2:\n    print('Yes')\nelse:\n    print('No')","s = input()\n\nif(len(set(s)) == 2):\n    print(\"Yes\")\nelse:\n    print(\"No\")","S = input()\nS1, S2, S3, S4 = map(str, list(S))\n\nif S1==S2 and S3==S4:\n  print(\"Yes\")\nelif S2==S3 and S1==S4:\n  print(\"Yes\")\nelif S1==S3 and S2==S4:\n  print(\"Yes\")\nelse:\n  print(\"No\")","#!venv\/bin\/python\nfrom collections import defaultdict \n\nS = input()\n\ncnt = defaultdict(int)\n\nfor s in S:\n    cnt[s] += 1\n\nif len(cnt) == 2 and list(cnt.values())[0] == 2:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n","s = set(list(input()))\nif len(s)==2:\n    print('Yes')\nelse:\n    print('No')","S = list(input())\nS.sort()\nif (S[0] == S[1]) and (S[2] == S[3]):\n  print(Yes)\nelse:\n  print(No)","S = str(input())\ns = list(S)\nif s[0] == s[1]:\n    if s[2] == s[3]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nelse if s[0] == s[2]:\n    if s[1] == s[3]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nelse if s[0] == s[3]:\n    if s[1] == s[2]:\n        print(\"Yes\")\n    else:\n        print(\"No\")","s=list(input())\nfrom collections import defaultdict\nd=defaultdict(int)\nfor i in s:\n    d[i]+=1\n# print(d)\nif len(d)!=2:\n    print(\"No\")\nelse:\n    for i in d.items():\n        if i[1]!=2:\n            print(\"No\")\n            import sys\n            sys.exit()\n    print(\"Yes\")","from collections import Counter\nfrom functools import reduce\n\nS = input()\nSC = Counter(S)\n\nif len(SC.items()) == 2 and reduce(lambda x, y: x and y, [v == 2 for v in SC.values()], True):\n    print('Yes')\nelse:\n    print('No')","S = input()\n\nif S[0] == S[1] and S[2] == S[3] and S[0] != S[3]:\n    print(\"Yes\")\n    exit(0)\nif S[0] == S[2] and S[1] == S[4] and S[0] != S[1]:\n    print(\"Yes\")\n    exit(0)\nif S[0] == S[3] and S[2] == S[1] and S[0] != S[1]:\n    print(\"Yes\")\n    exit(0)\nprint(\"No\")","from collections import defaultdict\ns = input()\nd = defaultdict(int)\nfor c in s:\n    d[c] += 1\nif len(d) == 2 and d[s[0]] == 2:\n    print('Yes')\nelse:\n    print('No')","word = input()\nlist1 = list(word)\nlist1.sort()\nif list1[0]!=list1[1]:\n    print(\"No\")\nelif list1[2]!=list1[3]:\n    print(\"No\")\nelif list1[0]==list1[2]:\n    print(\"No\")\nelse:\n    print(\"Yes\")","s = input()\n\nfor i in s:\n    if s.count(i) != 2:\n        print(\"No\")\n        break\nelse:\n    print(\"Yes\")\n","s = list(set(input()))\nif len(s) != 2 or s[0] == s[1]:\n    print('No')\nelse:\n    print('Yes')","S = input()\nif S[0] == S[1] and S[2] == S[3] != S[0] or \\\n   S[0] == S[2] and S[1] == S[3] != S[0] or \\\n   S[0] == S[3] and S[1] == S[2] != S[0]:\n  print(\"Yes\")\nelse:\n  print(\"No\")","S = list(input())\nd = {}\n\nfor s in S:\n    if s not in d:\n        d[s] = 1\n    else:\n        d[s] += 1\n\nif len(d) == 2 and d[S[0]] == 2:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n","import sys\nsys.setrecursionlimit(4100000)\nfrom collections import defaultdict\nn = str(input())\nseen = defaultdict(int)\nfor letter in n:\n    seen[letter] += 1\nres = 0\nfor key in seen.keys():\n    if seen[key] != 2:\n        res += 1\nif res != 0:\n    print(\"No\")\nelse:\n    print(\"Yes\")","s=list(str(input()))\nans=[]\nfor i in s:\n\tif i not in ans:\n\t\tans.append(i)\n\nif len(ans)==2:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")","s = input()\nif s[0] == s[1] or s[1] == s[2] or s[2] == s[3] or s[3] == s[0] and s[0] == s[1] or s[1] == s[2] or s[2] == s[3] or s[3] == s[0]:\n    print(\"Yes\")\nelse:\n    print('No')\n","from collections import Counter\ns = input()\nc = Counter(s).values()\nif list(c) == [2, 2]:\n    print('Yes')\nelse:\n    print('No')","s = input()\ns_ = [i for i in s]\n\nif s_[0] == s_[1] and s_[2] == s_[3]:\n  print(\"Yes\")\nelif s_[0] == s_[2] and s_[1] == s_[3]:\n  print(\"Yes\")\nelif s_[0] == s_[3] and s_[1] == s_[2]:\n  print(\"Yes\")\nelse:\n  print(\"No\")\n","s = input()\ncnt = 0\n\nfor i in range(len(s)-1):\n  if(s[i] == s[i+1]):\n    cnt = cnt + 1\n\nif(cnt == 2):\n  print(\"Yes\")\nelse:\n  print(\"No\")","def main():\n    S = input()\n    if S[0] == S[1] and S[2] == S[3]:\n        ans = \"Yes\"\n    elif S[0] == S[2] and S[1] == S[3]:\n        ans = \"Yes\"\n    elif S[0] == S[3] and S[1] == S[2]:\n        ans = \"Yes\"\n    else:\n    else:\n        ans = \"No\"\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n","from collections import Counter\n\ndef main():\n    s = input()\n\n    if solve(s):\n        print('Yes')\n    else:\n        print('No')\n\ndef solve(s):\n    cnt = Counter(s)\n    for k, v in cnt.items():\n        if v != 2:\n            return False\n    return True\n\nmain()","S = list(input())\nset_S = list(set(S))\nif(len(set_S)==2):\n    if((S.count(set_S[0])==2) and (S.count(set_S[1])==2)):\n        print('Yes')\n    else:\n        print('No')\nelse:\n    print('No')","import collections\nc = collections.Counter\n\nS =input()\nT = ['']*4\nfor i in range(4):\n    T[i] = S[i]\n\nt = c(T).most_common()\nif len(t) == 2 and t[0][1] ==2:\n    print('Yes')\nelse:\n    print('No') ","num = 0\na = input()\ns = [str(c) for c in a]\nfor i in range(4):\n    for j in range(i + 1, 4):\n        if(s[i] == s[j]):\n            num += 1\nif num == 2:\n    print('Yes')\nelse:\n    print('No')","s=list(input())\ns.sort()\nif s[0] == s[1] and s[2] == s[3] and s[1] != s[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")","#copy\n\ns = input()\nprint(\"Yes\" if len(set(s)) == 2 else \"No\")","s=input()\nd={}\nn=\"No\"\nfor i in s:\n  if i in d:\n    d[i]=d[i]+1\n  else:\n    d[i]=1\n    \nif len(d) ==2:\n  for k,v in d.items():\n    n=\"Yes\"\n    \nprint(n)\n  ","import collections\nS = list(input())\nc = collections.Counter(S)\nvalues, counts = zip(*c.most_common())\nif counts[0] == 2:\n    if counts[1] == 2:\n        print('Yes')\n    else:\n        print('No')\nelse:\n    print('No')","S = set(input())\nif len(S) == 2:\n    print('Yes')\nelse:\n    print('No')\n","a = input()\nb = len(a)\nd = 0\n\nfor x in range(b):\n    c = a.count(a[x])\n    if c > 1:\n         d += 1\n\nif d > 2:\n    print('Yes')\nelse:\n    print('No')\n\n","s = input()\nans = \"Yes\"\n\nfor i in s:\n    if s.count(i) != 2:\n        ans =\"No\"\nprint(ans)\n","s=input()\ns=set(s)\n\nif(len(s)==2):\n    print('Yes')\nelse:\n    print('No')","s = [n for n in input()];r = len(set(s)) == 2 and (s[0] == s[1] and s[2] == s[3]) or (s[0] == s[2] and s[1] == s[3]) or (s[0] == s[3] and s[1] == s[2]);print(\"Yes\" if r else \"No\")","lista = input()\n\na=lista.count(lista[0])\nb=lista.count(lista[1])\nc=lista.count(lista[2])\nd=lista.count(lista[3])\nif(a==2 and b==2 and c==2 and d==2):\n    print('Yes')\nelse:\n    print('No')\n\n","S = input()\ncount = {}\nfor k in S:\n  count[k] = 0\nfor y in S:\n  count[y] += 1\nif len(count) == 2 and count[S[0]] == 2:\n  print(\"Yes\")\nelse:\n  print(\"No\")\n      \n  ","#!\/usr\/bin\/env python3\ns = input()\na = min(s)\nb = max(s)\nprint((a != b and s.count(a) + s.count(b) == len(s)) and 'Yes' or 'No')\n","s = input()\na = s[0]\nb = s[1]\nc = s[2]\nd = s[3]\nif a==b:\n    if c==d:\n        if a!=c: print(\"Yes\")\n        else: print(\"No\")\n    else: print(\"No\")\nelif a==d:\n    if b==c: print(\"Yes\")\n    else: print(\"No\")\nelif a==c:\n    if b==d: print(\"Yes\")\n    else: print(\"No\")\nelse: print(\"No\")\n","S = list(input())\n\nuniq = list(set(S))\n\nif len(uniq) != 2 :\n    print('No')\nelse :\n    count = {}\n    for s in S :\n        if s in count :\n            count[s] += 1\n        else :\n            count[s] = 1\n\n    if count[uniq[0]] == 2 :\n        print('Yes')\n    else :\n        print('No')","S= input()\ncount = 0\n\nfor i in range(0,3):\n    for j in range(i+1,4):\n        if(S[i] == S[j]):\n            count += 1\nif(count == 2):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n        \n","import sys\nS = input()\nfor i in range (4):\n    if S.count(S[i]) != 2:\n        print('No')\n        sys.exit()\nprint('Yes')","print(\"Yes\" if len(set(input()))==2 else \"No\")"],"formatted_programs":["s=input()\nif s[0]==s[1]==s[2]==s[3]:\n    print(\"No\")\nelif (s[0]==s[1] and s[2]==s[3]) or (s[0]==s[2] and s[1]==s[3]) or (s[0]==s[3] and s[1]==s[2]):\n    print(\"Yes\")\nelse:\n    print(\"No\")","s = input()\n\nlis = []\nfor i in s:\n    lis.append(i)\n    \ntmp = list(set(lis))\n\nif len(tmp) == 2 and lis.count(tmp[0]) == 2:\n    print(\"Yes\")\nelse:\n    print(\"No\")","s = input()\nnum =0\nfor i in range(4):\n    if s.count(s[i]) == 2:\n        num +=1\nif num ==4:\n    print(\"Yes\")\nelse:\n    print(\"No\")","print('Yes' if len(set(input()))==2 else 'No')","S = input()\ncount_dict = {}\nfor i in S:\n  if i not in count_dict:\n    count_dict[i] = 1\n  else:\n    count_dict[i] += 1\n\nvalue = list(count_dict.values())\nif len(value) == 2 and value[0] == value[1]:\n  print(\"Yes\")\nelse:\n  print(\"No\")","s=input()\nsl=list(s)\np=s[0]\nans=0\nans2=0\nfor i in range(4):\n    if s[i]==p:\n        ans+=1\n    else:\n        q=s[i]\n\nfor i in range(4):\n    if s[i]==q:\n        ans2+=1\n\nif ans==2 and ans2==2:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n\n","S = list(input())\nSs = set(S)\ncount2 = 0\nfor alp in Ss:\n    if S.count(alp) == 2:\n        count2 += 1\nif count2 == len(Ss):\n    print(\"Yes\")\nelse:\n    print(\"No\")","from sys import stdin\nS = (stdin.readline().rstrip())\nflag = True\nif len(set(S)) == 2:\n    flag = True\nelse:\n    flag = False\n\nfor i in list(set(S)):\n    if S.count(i) != 2:\n        flag = False\n\nif flag:\n    print(\"Yes\")\nelse:\n    print(\"No\")","#!\/usr\/bin\/python3\n# -*- coding: utf-8 -*-\n\n\n\nS = str(input())\nret = set()\nfor c in S:\n  ret.add(S.count(c))\nif 2 in ret and len(ret)==1:\n  print(\"Yes\")\nelse:\n  print(\"No\")","s = input()\n\nif s[0] == s[1]:\n    a = s.count(s[0])\n    b = s.count(s[2])\n    if a == 2 and b == 2:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nelse:\n    a = s.count(s[0])\n    b = s.count(s[1])\n    if a == 2 and b == 2:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n","S = input()\nans = 'Yes'\nfor i in S:\n    if S.count(i) != 2:\n        ans = 'No'\nprint(ans)","s = str(input())\nif s[0] == s[1] and s[2] == s[3] and s[0] != s[2]:\n    print(\"Yes\")\nelif s[0] == s[2] and s[1] == s[3] and s[0] != s[1]:\n    print(\"Yes\")\nelif s[0] == s[3] and s[1] == s[2] and s[0] != s[1]:\n    print(\"Yes\")\nelse:\n    print(\"No\")","S = set(input())\nif len(S) == 2:\n    print(\"Yes\")\nelse:\n    print(\"No\")","s = list(input())\nimport collections\nc = collections.Counter(s)\nans = 1\nfor i in range(4):\n    if c[s[i]] != 2:\n        ans = 0\nprint([\"No\",\"Yes\"][ans])","S = input()\nd = {}\nfor s in S:\n    if s in d:\n        d[s] += 1\n    else:\n        d[s] = 1\nif len(d) == 2:\n    for i in d.values():\n        if i != 2:\n            break\n    print('Yes')\n    exit()\nprint('No')\n","S = input()\n\nd = {}\nfor s in S:\n    if s in d.keys():\n        d[s] += 1\n    else:\n        d[s] = 1\n\nflag = 1\nfor v in d.values():\n    if v != 2:\n        flag = 0\n\nif flag:\n    print('Yes')\nelse:\n    print('No')","# input string S\nS = input()\n\n# judge if 2S[0], 2S[1] and 2S[2] exist in S\nif S.count(S[0])==2 and S.count(S[1])==2 and S.count(S[2])==2:\n    print('Yes')\nelse:\n    print('No')","S = input()\n\nS_ = [ord(s) for s in S]\nS_.sort()\n\nif S_[0] == S_[1] and S_[2] == S_[3] and S_[1] != S_[2] :\n    print('Yes')\nelse :\n    print('No')","from collections import Counter\ns=list(str(input()))\ns.sort()\n\nif s[0]==s[1] and s[2]==s[3] and s[1]!=s[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n","s = input()\nx = list(set(s))\nif len(x) == 2:\n  if s.count(x[0])==2 and s.count(x[1])==2:\n    print(\"Yes\")\n  else:\n    print(\"No\")\nelse:\n  print(\"No\")","s = input()\nl = []\nfor i in range( len( s )):\n  if not ( s[i] in l ):\n    l.append( s[i] )\n\nif len(l) == 2:\n  print(\"Yes\")\nelse:\n  print(\"No\")","S = input()\n\nlstStr = sorted(S)\n\nres = \"Yes\" if len(set(lstStr)) == 2 and lstStr[1]!=lstStr[2] else \"No\"\n\nprint(res)","import sys\nsys.setrecursionlimit(2147483647)\nINF=float(\"inf\")\nMOD=10**9+7\ninput=lambda :sys.stdin.readline().rstrip()\ndef resolve():\n    from collections import Counter\n    C=Counter(input())\n    if(len(C)!=2):\n        print(\"No\")\n        return\n    for k,v in C.items():\n        if(v!=2):\n            print(\"No\")\n            return\n    print(\"Yes\")\nresolve()","S = input()\n\nalph = set(S)\nif len(alph) != 2:\n    print(\"No\")\n    exit(0)\n\nfor c in alph:\n    if S.count(c) != 2:\n        print(\"No\")\n        exit(0)\n\nprint(\"Yes\")\n","s=sorted(input())\nif s[0]==s[1] and s[2]==s[3] and s[1]!=s[2]:\n  print('Yes')\nelse:\n  print('No')","S = input()\n\na = set()\n\nfor i in range(len(S)):\n  a.add(S[i])\n\nif len(a) == 2:\n  print(\"Yes\")\nelse:\n  print(\"No\")","s = input()\n\norgin = set(list(s))\n\nif len(orgin) > 2:\n    print(\"No\")\n    exit()\n\na=0\nb=0\nfor i in s:\n    if i == origin[0]: a+=1\n    elif i == origin[1]: b+=1\n\nif a==2:\n    print(\"Yes\")\nelse:\n    print(\"No\")","\nS=str(input())\n\ncnt1=1\ncnt2=0\na1=S[0]\nt=0\nfor i in range(1,len(S)):\n    if S[i]==a1:\n        cnt1+=1\n    elif t ==0:\n        a2=S[i]\n        t=1\n        cnt2+=1\n    elif a2==S[i]:\n        cnt2+=1\n    else:\n        t=0\n        break\n\nif t==0:\n    print(\"No\")\nelse:\n    print(\"Yes\")\n        ","# -*- coding: utf-8 -*-\n\n# input\nS = list(input())\n\n# solve\nS = sorted(S)\nans = 'Yes' if S[0] == S[1] and S[2] == S[3] else 'No'\n\n# output\nprint(ans)\n","s = input()\n_set = set(s)\nif len(_set) == 2 and s.count(s[0]) == 2:\n    print('Yes')\nelse:\n    print('No')\n","import sys\nsys.setrecursionlimit(10 ** 9)\ninput = sys.stdin.readline\nfrom itertools import permutations,  combinations, accumulate\nfrom functools import *\nfrom collections import deque, defaultdict, Counter\nfrom heapq import heapify, heappop, heappush, heappushpop\n\nINF = float('inf')\nNIL = - 1\n\n\"\"\" Input\nN = int(input())\nN, A, B = map(int, input().split())\nA = list(map(int, input().split()))\nA = np.array(input().split(), dtype=np.float64)\nD = [int(input()) for _ in range(N)]\nAB = [[int(x) for x in input().split()] for _ in range(N)]\nPX = [[int(x) for x in input().split()] for _ in range(Q)]\n\"\"\"\n\nS = input().rstrip()\nS = sorted(S)\nif S[0] == S[1] and S[2] == S[3]:\n    print('Yes')\nelse:\n    print('No')\n\n\n\n\n\n# def main():\n\n# if __name__ == '__main__':\n#     main()\n","import collections as c\nif list(c.Counter(list(input())).values()) == [2,2]:\n  print(\"Yes\")\nelse:\n  print(\"No\")","\nS=input()\nhantei=False\nif(len(set(S))==2):\n    if(SS[0]==SS[1] and SS[0]!=SS[2]):\n        hantei=True\n    else:\n        hantei=False\nelse:\n    hantei=False\nSS=sorted(S)\n\nif(hantei==True):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n    ","import sys\nimport math\nfrom copy import deepcopy\nfrom collections import deque\nsys.setrecursionlimit(20000000)\n\n\ndef main():\n    from collections import defaultdict\n    S = input()\n    ans = defaultdict(str)\n    for s in S:\n        if s in ans:\n            ans[s] += 1\n        else:\n            ans[s] = 1\n\n    if len(ans) == 2 and ans[S[0]] == 2:\n        print('Yes')\n    else:\n        print('No')\n\n\nif __name__ == '__main__':\n    main()\n\n","S = input()\n# S = \"JSKK\"\nr = \"No\"\nS_unique = list(set(S))\nif len(S_unique) == 2:\n    T = S[1] + S[2] + S[3]\n    T_unique = list(set(T))\n    if len(T_unique) == 2:\n        T = S[0] + S[2] + S[3]\n        T_unique = list(set(T))\n        if len(T_unique) == 2:\n            T = S[0] + S[1] + S[3]\n            T_unique = list(set(T))\n            if len(T_unique) == 2:\n                T = S[0] + S[1] + S[2]\n                T_unique = list(set(T))\n                if len(T_unique) == 2:\n                    r = \"Yes\"\nprint(r)","s=input();print('NYoe s'[(len(set(s[:2]))==1 and len(set(s[2:]))==1) or (len(set(s[:2]))==2 and len(set(s[2:]))==2)::2])","a = list(input())\na.sort()\nif a[0]==a[1] and a[2]==a[3] and a[1]!=a[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")","a = [i for i in input()]\nb = list(set(a))\n\nif len(b) != 2:\n    print(\"No\")\nelif a.count(b[0]) != 2 or a.count(b[1]) != 2:\n    print(\"No\")\nelse:\n    print(\"Yes\")\n","S = list(input())\nanswer = \"Yes\"\nfor i in range(len(S)):\n    check = S[i]\n    if(S.count(check) != 2):\n        answer = \"No\"\nprint(answer)","S = input()\nstr_dir = {}\nfor c in list(S):\n    if c in str_dir:\n        str_dir[c] += 1\n    else:\n        str_dir[c] = 1\n\nif len(str_dir) == 2 and list(str_dir.values()) == [2, 2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")","#!\/usr\/bin\/env python3\n# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Jun 29 20:53:13 2019\n\n@author: YudNK\n\"\"\"\n\nl = [i for i in input()]\n\nk = len(set(l))\n\na = l[0]\nc = 0\nfor i in l:\n    if i == a:\n        c = c + 1\n\nif k == 2 and c == 2:\n    print('Yes')\nelse:\n    print('No')","s = input()\n\nslist = list(set(s))\n\nif len(slist)==2:\n  print('Yes')\nelse:\n  print('No')\n","S = list(input())\nd = {}\nfor i in range(len(S)):\n    d[S[i]] = 1\nif len(d) == 2:\n    print('Yes')\nelse:\n    print('No')\n","S = input()\nc = 0\nfor i in S:\n  if S.count(i) == 2:\n    c = c + 1\nif (c == 4):\n  print(\"YES\")\nelse:\n  print(\"NO\")","#\n# \u3000\u3000  \u22c0_\u22c0\u3000 \n#\u3000\u3000  (\uff65\u03c9\uff65)  \n# .\uff0f \uff35 \u223d \uff35\uff3c\n#  \u2502\uff0a\u3000\u5408\u3000\uff0a\u2502\n#  \u2502\uff0a\u3000\u683c\u3000\uff0a\u2502 \n#  \u2502\uff0a\u3000\u7948\u3000\uff0a\u2502 \n#  \u2502\uff0a\u3000\u9858\u3000\uff0a\u2502 \n#  \u2502\uff0a\u3000\u3000\u3000\uff0a\u2502 \n#      \uffe3\n#\nimport sys\ninput=sys.stdin.readline\nfrom math import floor,ceil,sqrt,factorial,log #log2\u306a\u3044\uff59\uff50\nfrom heapq import heappop, heappush, heappushpop\nfrom collections import Counter,defaultdict\nfrom itertools import accumulate,permutations,combinations,product,combinations_with_replacement\nfrom bisect import bisect_left,bisect_right\ninf=float('inf')\nmod = 10**9+7\ndef INT_(n): return int(n)-1\ndef MI(): return map(int,input().split())\ndef MF(): return map(float, input().split())\ndef MI_(): return map(INT_,input().split())\ndef LI(): return list(MI())\ndef LI_(): return [int(x) - 1 for x in input().split()]\ndef LF(): return list(MF())\ndef LIN(n:int): return [I() for _ in range(n)]\ndef LLIN(n: int): return [LI() for _ in range(n)]\ndef LLIN_(n: int): return [LI_() for _ in range(n)]\ndef LLI(): return [list(map(int, l.split() )) for l in input()]\ndef I(): return int(input())\ndef F(): return float(input())\ndef ST(): return input().replace('\\n', '')\ndef main():\n    S = ST()\n    a = defaultdict(int)\n    for s in S:\n        a[s] += 1\n        if a[s] == 3:\n            print(\"No\")\n            exit()\n    if len(a) == 2:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nif __name__ == '__main__':\n    main()","s = set(input())\nif len(s) == 2:\n    print(\"Yes\")\nelse:\n    print(\"No\")","s = input()\ns_set = set(s)\ncount=0\nif len(s_set) == 2:\n    count = 1\n    for i,j in enumerate(s):\n        if i>0 and j == s[0]:\n             count += 1\nif count == 2:\n    print('Yes')\nelse:\n    print('No')","s = list(input())\ns.sort()\nif s[0] == s[1] and s[1] != s[2] and s[2] == s[3]:\n    print('Yes')\nelse:\n    print('No')","from sys import stdin\na = stdin.readline().rstrip()\nb = sorted(a)\nif b[0] == b[1] and b[2] == b[3]:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")","S=sorted(input())\nif (S[0]==S[1]) and (S[2]==S[3]) and (S[1]!=S[2]):\n    print('Yes')\nelse:\n    print('No')","s = input()\nif s[0] == s[1] and s[2] == s[3] and s[0] != s[2]:\n\tprint('Yes')\nelif s[0] == s[2] and s[1] == s[3] and s[0] != s[1]:\n\tprint('Yes')\nelif s[0] == s[3] and s[1] == s[2] and s[0] != s[1]:\n  \tprint('Yes')\nelse:\n\tprint('No')","S = sorted(input())\nif len(set(S)) == 2 and S[0] == S[1] and S[1] != S[2] and S[2] == S[3]:\n    print(\"Yes\")\nelse:\n    print(\"No\")","s = input()\n\na = []\nfor i in s:\n    a.append(i)\n\ncnt1 = 0\ncnt2 = 0\nmemo =24\nfor i in range(1,4):\n    if a[0] == a[i]:\n        memo = i\n        break;\n    \n\nans = \"No\"\nif(memo != 24):\n    for i in range(1,4):\n        for j in range(i,4):\n            if (i != memo and j != memo):\n                if a[i] == a[j]:\n                    if a[0] != a[i]:\n                        ans = \"Yes\"\n                        break;\n\n\nprint(ans)\n                        \n            \n    \n    \n    \n    \n","S = input()\nSlen = len(S)\ncnt=[0,0,0]\nflg = True\nfor i in range(Slen-1):\n  \n  for j in range(Slen):\n    if S[i]==S[j]:\n      cnt[i] += 1\n  \n  if cnt[i] < 2 or cnt[i] > 2:\n    flg = False\n    break\n\nif flg == True:\n  print(\"Yes\")\nelse:\n  print(\"No\")","S=list(map(str,input()))\nS.sort()\nif S[0]==S[1] and S[2]==S[3]:\n  print(\"Yes\")\nelse:\n  print(\"No\")","# Fifty-Fifty\nd = {}\nfor s in input():\n    if s not in d.keys():\n        d[s] = 1\n    else:\n        d[s] += 1\n\nif list(d.values()) == [2,2]:\n    print('Yes')\nelse:\n    print('No')","import collections\n\ns = input()\ns = [i for i in s]\nc = list(collections.Counter(s).values())\nif len(c)==2 and c[0]==2:\n    print('Yes')\nelse:\n    print('No')","s = input()\n\nif(len(set(s)) == 2):\n    print(\"Yes\")\nelse:\n    print(\"No\")","S = input()\nS1, S2, S3, S4 = map(str, list(S))\n\nif S1==S2 and S3==S4:\n  print(\"Yes\")\nelif S2==S3 and S1==S4:\n  print(\"Yes\")\nelif S1==S3 and S2==S4:\n  print(\"Yes\")\nelse:\n  print(\"No\")","#!venv\/bin\/python\nfrom collections import defaultdict \n\nS = input()\n\ncnt = defaultdict(int)\n\nfor s in S:\n    cnt[s] += 1\n\nif len(cnt) == 2 and list(cnt.values())[0] == 2:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n","s = set(list(input()))\nif len(s)==2:\n    print('Yes')\nelse:\n    print('No')","S = list(input())\nS.sort()\nif (S[0] == S[1]) and (S[2] == S[3]):\n  print(Yes)\nelse:\n  print(No)","S = str(input())\ns = list(S)\nif s[0] == s[1]:\n    if s[2] == s[3]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nelse if s[0] == s[2]:\n    if s[1] == s[3]:\n        print(\"Yes\")\n    else:\n        print(\"No\")\nelse if s[0] == s[3]:\n    if s[1] == s[2]:\n        print(\"Yes\")\n    else:\n        print(\"No\")","s=list(input())\nfrom collections import defaultdict\nd=defaultdict(int)\nfor i in s:\n    d[i]+=1\n# print(d)\nif len(d)!=2:\n    print(\"No\")\nelse:\n    for i in d.items():\n        if i[1]!=2:\n            print(\"No\")\n            import sys\n            sys.exit()\n    print(\"Yes\")","from collections import Counter\nfrom functools import reduce\n\nS = input()\nSC = Counter(S)\n\nif len(SC.items()) == 2 and reduce(lambda x, y: x and y, [v == 2 for v in SC.values()], True):\n    print('Yes')\nelse:\n    print('No')","S = input()\n\nif S[0] == S[1] and S[2] == S[3] and S[0] != S[3]:\n    print(\"Yes\")\n    exit(0)\nif S[0] == S[2] and S[1] == S[4] and S[0] != S[1]:\n    print(\"Yes\")\n    exit(0)\nif S[0] == S[3] and S[2] == S[1] and S[0] != S[1]:\n    print(\"Yes\")\n    exit(0)\nprint(\"No\")","from collections import defaultdict\ns = input()\nd = defaultdict(int)\nfor c in s:\n    d[c] += 1\nif len(d) == 2 and d[s[0]] == 2:\n    print('Yes')\nelse:\n    print('No')","word = input()\nlist1 = list(word)\nlist1.sort()\nif list1[0]!=list1[1]:\n    print(\"No\")\nelif list1[2]!=list1[3]:\n    print(\"No\")\nelif list1[0]==list1[2]:\n    print(\"No\")\nelse:\n    print(\"Yes\")","s = input()\n\nfor i in s:\n    if s.count(i) != 2:\n        print(\"No\")\n        break\nelse:\n    print(\"Yes\")\n","s = list(set(input()))\nif len(s) != 2 or s[0] == s[1]:\n    print('No')\nelse:\n    print('Yes')","S = input()\nif S[0] == S[1] and S[2] == S[3] != S[0] or \\\n   S[0] == S[2] and S[1] == S[3] != S[0] or \\\n   S[0] == S[3] and S[1] == S[2] != S[0]:\n  print(\"Yes\")\nelse:\n  print(\"No\")","S = list(input())\nd = {}\n\nfor s in S:\n    if s not in d:\n        d[s] = 1\n    else:\n        d[s] += 1\n\nif len(d) == 2 and d[S[0]] == 2:\n    print(\"Yes\")\nelse:\n    print(\"No\")\n","import sys\nsys.setrecursionlimit(4100000)\nfrom collections import defaultdict\nn = str(input())\nseen = defaultdict(int)\nfor letter in n:\n    seen[letter] += 1\nres = 0\nfor key in seen.keys():\n    if seen[key] != 2:\n        res += 1\nif res != 0:\n    print(\"No\")\nelse:\n    print(\"Yes\")","s=list(str(input()))\nans=[]\nfor i in s:\n\tif i not in ans:\n\t\tans.append(i)\n\nif len(ans)==2:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")","s = input()\nif s[0] == s[1] or s[1] == s[2] or s[2] == s[3] or s[3] == s[0] and s[0] == s[1] or s[1] == s[2] or s[2] == s[3] or s[3] == s[0]:\n    print(\"Yes\")\nelse:\n    print('No')\n","from collections import Counter\ns = input()\nc = Counter(s).values()\nif list(c) == [2, 2]:\n    print('Yes')\nelse:\n    print('No')","s = input()\ns_ = [i for i in s]\n\nif s_[0] == s_[1] and s_[2] == s_[3]:\n  print(\"Yes\")\nelif s_[0] == s_[2] and s_[1] == s_[3]:\n  print(\"Yes\")\nelif s_[0] == s_[3] and s_[1] == s_[2]:\n  print(\"Yes\")\nelse:\n  print(\"No\")\n","s = input()\ncnt = 0\n\nfor i in range(len(s)-1):\n  if(s[i] == s[i+1]):\n    cnt = cnt + 1\n\nif(cnt == 2):\n  print(\"Yes\")\nelse:\n  print(\"No\")","def main():\n    S = input()\n    if S[0] == S[1] and S[2] == S[3]:\n        ans = \"Yes\"\n    elif S[0] == S[2] and S[1] == S[3]:\n        ans = \"Yes\"\n    elif S[0] == S[3] and S[1] == S[2]:\n        ans = \"Yes\"\n    else:\n    else:\n        ans = \"No\"\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n","from collections import Counter\n\ndef main():\n    s = input()\n\n    if solve(s):\n        print('Yes')\n    else:\n        print('No')\n\ndef solve(s):\n    cnt = Counter(s)\n    for k, v in cnt.items():\n        if v != 2:\n            return False\n    return True\n\nmain()","S = list(input())\nset_S = list(set(S))\nif(len(set_S)==2):\n    if((S.count(set_S[0])==2) and (S.count(set_S[1])==2)):\n        print('Yes')\n    else:\n        print('No')\nelse:\n    print('No')","import collections\nc = collections.Counter\n\nS =input()\nT = ['']*4\nfor i in range(4):\n    T[i] = S[i]\n\nt = c(T).most_common()\nif len(t) == 2 and t[0][1] ==2:\n    print('Yes')\nelse:\n    print('No') ","num = 0\na = input()\ns = [str(c) for c in a]\nfor i in range(4):\n    for j in range(i + 1, 4):\n        if(s[i] == s[j]):\n            num += 1\nif num == 2:\n    print('Yes')\nelse:\n    print('No')","s=list(input())\ns.sort()\nif s[0] == s[1] and s[2] == s[3] and s[1] != s[2]:\n    print(\"Yes\")\nelse:\n    print(\"No\")","#copy\n\ns = input()\nprint(\"Yes\" if len(set(s)) == 2 else \"No\")","s=input()\nd={}\nn=\"No\"\nfor i in s:\n  if i in d:\n    d[i]=d[i]+1\n  else:\n    d[i]=1\n    \nif len(d) ==2:\n  for k,v in d.items():\n    n=\"Yes\"\n    \nprint(n)\n  ","import collections\nS = list(input())\nc = collections.Counter(S)\nvalues, counts = zip(*c.most_common())\nif counts[0] == 2:\n    if counts[1] == 2:\n        print('Yes')\n    else:\n        print('No')\nelse:\n    print('No')","S = set(input())\nif len(S) == 2:\n    print('Yes')\nelse:\n    print('No')\n","a = input()\nb = len(a)\nd = 0\n\nfor x in range(b):\n    c = a.count(a[x])\n    if c > 1:\n         d += 1\n\nif d > 2:\n    print('Yes')\nelse:\n    print('No')\n\n","s = input()\nans = \"Yes\"\n\nfor i in s:\n    if s.count(i) != 2:\n        ans =\"No\"\nprint(ans)\n","s=input()\ns=set(s)\n\nif(len(s)==2):\n    print('Yes')\nelse:\n    print('No')","s = [n for n in input()];r = len(set(s)) == 2 and (s[0] == s[1] and s[2] == s[3]) or (s[0] == s[2] and s[1] == s[3]) or (s[0] == s[3] and s[1] == s[2]);print(\"Yes\" if r else \"No\")","lista = input()\n\na=lista.count(lista[0])\nb=lista.count(lista[1])\nc=lista.count(lista[2])\nd=lista.count(lista[3])\nif(a==2 and b==2 and c==2 and d==2):\n    print('Yes')\nelse:\n    print('No')\n\n","S = input()\ncount = {}\nfor k in S:\n  count[k] = 0\nfor y in S:\n  count[y] += 1\nif len(count) == 2 and count[S[0]] == 2:\n  print(\"Yes\")\nelse:\n  print(\"No\")\n      \n  ","#!\/usr\/bin\/env python3\ns = input()\na = min(s)\nb = max(s)\nprint((a != b and s.count(a) + s.count(b) == len(s)) and 'Yes' or 'No')\n","s = input()\na = s[0]\nb = s[1]\nc = s[2]\nd = s[3]\nif a==b:\n    if c==d:\n        if a!=c: print(\"Yes\")\n        else: print(\"No\")\n    else: print(\"No\")\nelif a==d:\n    if b==c: print(\"Yes\")\n    else: print(\"No\")\nelif a==c:\n    if b==d: print(\"Yes\")\n    else: print(\"No\")\nelse: print(\"No\")\n","S = list(input())\n\nuniq = list(set(S))\n\nif len(uniq) != 2 :\n    print('No')\nelse :\n    count = {}\n    for s in S :\n        if s in count :\n            count[s] += 1\n        else :\n            count[s] = 1\n\n    if count[uniq[0]] == 2 :\n        print('Yes')\n    else :\n        print('No')","S= input()\ncount = 0\n\nfor i in range(0,3):\n    for j in range(i+1,4):\n        if(S[i] == S[j]):\n            count += 1\nif(count == 2):\n    print(\"Yes\")\nelse:\n    print(\"No\")\n        \n","import sys\nS = input()\nfor i in range (4):\n    if S.count(S[i]) != 2:\n        print('No')\n        sys.exit()\nprint('Yes')","print(\"Yes\" if len(set(input()))==2 else \"No\")"]}
{"description_html":"<span class=\"lang-en\">\n<p>Score : <var>600<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>Find the number of sequences of length <var>K<\/var> consisting of positive integers such that the product of any two adjacent elements is at most <var>N<\/var>, modulo <var>10^9+7<\/var>.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li><var>1\\leq N\\leq 10^9<\/var><\/li>\n<li><s>1<\/s> <var>2\\leq K\\leq 100<\/var> (fixed at 21:33 JST)<\/li>\n<li><var>N<\/var> and <var>K<\/var> are integers.<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>N<\/var> <var>K<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>Print the number of sequences, modulo <var>10^9+7<\/var>.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>3 2\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>5\n<\/pre>\n<p><var>(1,1)<\/var>, <var>(1,2)<\/var>, <var>(1,3)<\/var>, <var>(2,1)<\/var>, and <var>(3,1)<\/var> satisfy the condition.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>10 3\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>147\n<\/pre>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>314159265 35\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>457397712\n<\/pre><\/section>\n<\/div>\n<\/span>","description_string":"\nScore : 600 points\n\n\nProblem StatementFind the number of sequences of length K consisting of positive integers such that the product of any two adjacent elements is at most N, modulo 10^9+7.\n\n\n\n\nConstraints\n1\\leq N\\leq 10^9\n1 2\\leq K\\leq 100 (fixed at 21:33 JST)\nN and K are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN K\n\n\n\n\n\nOutputPrint the number of sequences, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 13 2\n\n\n\n\n\nSample Output 15\n\n(1,1), (1,2), (1,3), (2,1), and (3,1) satisfy the condition.\n\n\n\n\n\nSample Input 210 3\n\n\n\n\n\nSample Output 2147\n\n\n\n\n\n\nSample Input 3314159265 35\n\n\n\n\n\nSample Output 3457397712\n\n\n","orig_lang_html":"<span class=\"lang-en\">\n<p>Score : <var>600<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>Find the number of sequences of length <var>K<\/var> consisting of positive integers such that the product of any two adjacent elements is at most <var>N<\/var>, modulo <var>10^9+7<\/var>.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li><var>1\\leq N\\leq 10^9<\/var><\/li>\n<li><s>1<\/s> <var>2\\leq K\\leq 100<\/var> (fixed at 21:33 JST)<\/li>\n<li><var>N<\/var> and <var>K<\/var> are integers.<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>N<\/var> <var>K<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>Print the number of sequences, modulo <var>10^9+7<\/var>.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>3 2\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>5\n<\/pre>\n<p><var>(1,1)<\/var>, <var>(1,2)<\/var>, <var>(1,3)<\/var>, <var>(2,1)<\/var>, and <var>(3,1)<\/var> satisfy the condition.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>10 3\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>147\n<\/pre>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>314159265 35\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>457397712\n<\/pre><\/section>\n<\/div>\n<\/span>","orig_lang_string":"\nScore : 600 points\n\n\nProblem StatementFind the number of sequences of length K consisting of positive integers such that the product of any two adjacent elements is at most N, modulo 10^9+7.\n\n\n\n\nConstraints\n1\\leq N\\leq 10^9\n1 2\\leq K\\leq 100 (fixed at 21:33 JST)\nN and K are integers.\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN K\n\n\n\n\n\nOutputPrint the number of sequences, modulo 10^9+7.\n\n\n\n\n\n\nSample Input 13 2\n\n\n\n\n\nSample Output 15\n\n(1,1), (1,2), (1,3), (2,1), and (3,1) satisfy the condition.\n\n\n\n\n\nSample Input 210 3\n\n\n\n\n\nSample Output 2147\n\n\n\n\n\n\nSample Input 3314159265 35\n\n\n\n\n\nSample Output 3457397712\n\n\n","solve_rate":0.6182462356,"codenet_problem_id":"p02992","input_testcases":{"15":"5 4","38":"7 3","46":"73187302 56","72":"6 3","65":"5 7","101":"3 2","42":"147511774 83","80":"73187302 92","34":"9 3","35":"6 6","91":"264963966 40","95":"7 7","70":"4 5","62":"3 5","32":"306063188 108","102":"3 2","36":"91889974 108","33":"8 2","68":"306063188 94","53":"709231709 10","90":"2 9","52":"14 3","0":"10 4","93":"742427141 7","25":"2 5","63":"742427141 4","30":"14994182 2","96":"4100492 3","61":"5 6","6":"419072353 35","66":"2 4","74":"147511774 74","8":"419072353 10","92":"2 12","29":"113305061 10","27":"8 4","39":"6 5","57":"314159265 88","99":"2 13","84":"14 4","20":"3 4","2":"5 2","97":"7 2","21":"742427141 10","41":"4 3","85":"709231709 19","26":"306063188 59","49":"544775384 35","17":"306063188 45","87":"466294663 4","100":"10 3","5":"5 3","1":"305678790 35","59":"12 9","60":"264963966 45","7":"3 3","83":"453788651 65","76":"2 2","14":"305678790 60","69":"6 2","40":"147511774 108","3":"10 5","94":"263007835 3","31":"8 8","24":"5 8","19":"419072353 14","82":"13 2","44":"2 3","51":"9 2","55":"614246832 4","16":"12 5","28":"1 4","9":"3 6","77":"147511774 98","48":"13 3","4":"306063188 35","64":"263007835 4","103":"314159265 35","18":"8 3","67":"4100492 2","13":"314159265 50","98":"544772216 94","50":"305678790 65"},"output_testcases":{"15":"79\n","38":"66\n","46":"193302408\n","72":"52\n","65":"1613\n","101":"5\n","42":"857497588\n","80":"437213129\n","34":"115\n","35":"1579\n","91":"755773551\n","95":"7608\n","70":"132\n","62":"43\n","32":"146723416\n","102":"5\n","36":"896962942\n","33":"20\n","68":"44563145\n","53":"542372569\n","90":"89\n","52":"289\n","0":"544\n","93":"277365377\n","25":"13\n","63":"967039099\n","30":"250067030\n","96":"920397703\n","61":"589\n","6":"770900105\n","66":"8\n","74":"521453987\n","8":"577961735\n","92":"377\n","29":"959874661\n","27":"304\n","39":"506\n","57":"812633384\n","99":"610\n","84":"1223\n","20":"21\n","2":"10\n","97":"16\n","21":"902186808\n","41":"22\n","85":"125592606\n","26":"701810723\n","49":"369751539\n","17":"408216\n","87":"233877283\n","100":"147\n","5":"32\n","1":"125439056\n","59":"2402415\n","60":"842969677\n","7":"11\n","83":"623074472\n","76":"3\n","14":"652748445\n","69":"14\n","40":"31609053\n","3":"2487\n","94":"647920900\n","31":"59712\n","24":"4321\n","19":"794506063\n","82":"37\n","44":"5\n","51":"23\n","55":"629516474\n","16":"4687\n","28":"1\n","9":"85\n","77":"939286011\n","48":"245\n","4":"945912017\n","64":"305828130\n","103":"457397712\n","18":"92\n","67":"63069892\n","13":"376676465\n","98":"122154841\n","50":"53193217\n"},"n_missing":21,"programs":["# N\u304c100\u4ee5\u4e0b\u306e\u6642\u306f\u5168\u90e8\u308c\u3063\u304d\u3087\n\nimport math\nN, K = map(int, input().split())\nmod = 10**9+7\n\n\ndef rev(X):\n    return pow(X, mod-2, mod)\n\n\nif N <= 100:\n    dp = [[0 for i in range(N+2)] for i in range(K+1)]\n    for i in range(1, N+1):\n        dp[1][i] += 1\n    for i in range(2, K+1):\n        for j in range(1, N+1):\n            dp[i][1] += dp[i-1][j]\n            dp[i][N\/\/j+1] -= dp[i-1][j]\n        for j in range(1, N+2):\n            dp[i][j] += dp[i][j-1]\n    ans = 0\n    for i in range(1, N+1):\n        ans += dp[K][i]\n    print(ans % mod)\n    exit()\n\n\nelse:\n    # N>100\n    ans = 0\n    L = math.floor(math.sqrt(N))\n    B = math.floor(N\/L)\n    dp = [[0 for i in range(L+B)] for i in range(K+1)]\n    cnt = [0 for i in range(L+B)]\n    for i in range(1, B+1):\n        dp[1][i] += 1\n        cnt[i] = 1\n    for i in range(B+1, B+L):\n        x = B+L-i\n        dp[1][i] += N\/\/x-N\/\/(x+1)\n        cnt[i] = N\/\/x-N\/\/(x+1)\n    for i in range(2, K+1):\n        S = sum(dp[i-1])%mod\n        for j in range(1, L+B-1):\n            dp[i][j] = (S*cnt[j]) % mod\n            S -= dp[i-1][-j]\n        dp[i][L+B-1] = (S*cnt[L+B-1]) % mod\n    for i in range(1, L+B):\n        ans += dp[K][i]\n        ans %= mod\n    print(ans%mod)\n    exit()","import sys\nsys.setrecursionlimit(2147483647)\nINF=float(\"inf\")\nMOD=10**9+7\ninput=lambda :sys.stdin.readline().rstrip()\ndef resolve():\n    n,k=map(int,input().split())\n    s=set()\n    for i in range(1,1+int(n**.5)):\n        s.add(i)\n        s.add(n\/\/i)\n    A=sorted(s)\n    m=len(A)\n    coef=[0]*m\n    coef[0]=1\n    for i in range(1,m):\n        coef[i]=A[i]-A[i-1]\n    dp=[0]*m\n    dp[0]=1\n    for i in range(k):\n        for j in range(m-1):\n            dp[j+1]+=dp[j]\n            dp[j+1]%=MOD\n        ndp=[0]*m\n        for j in range(m):\n            ndp[j]=dp[m-j-1]*coef[j]\n            ndp[j]%=MOD\n        dp=ndp\n    print(sum(dp)%MOD)\nresolve()","import math\nimport os\nimport sys\nfrom functools import lru_cache\n\nif os.getenv(\"LOCAL\"):\n    sys.stdin = open(\"_in.txt\", \"r\")\n\nsys.setrecursionlimit(2147483647)\nINF = float(\"inf\")\nIINF = 10 ** 18\n\nMOD = 10 ** 9 + 7\nN, K = list(map(int, sys.stdin.readline().split()))\n\n\n@lru_cache(maxsize=None)\ndef next_max(n):\n    # \u3042\u308b\u6570\u3068\u96a3\u308a\u5408\u308f\u305b\u306b\u306a\u308c\u308b\u6570\n    return int(N \/\/ n)\n\n\nNM = []\nprev = 0\nfor i in range(1, int(math.sqrt(N)) + 2):\n    NM.append(N - next_max(i) - prev)\n    prev = (N - next_max(i))\n\n\n# @lru_cache(maxsize=None)\n# @debug\n# def rec1(n, k):\n#     if k <= 1:\n#         return n\n#\n#     ret = 0\n#     cnt = n\n#     while cnt > 0:\n#         i = next_max(cnt)\n#         p = NM[i] if i < len(NM) else 1\n#         ret = (ret + rec1(i, k - 1) * p) % MOD\n#         cnt -= p\n#     return ret\n#\n#\n# #\n# # ans = rec1(N, K)\n# # print(ans % MOD)\n\n\n@lru_cache(maxsize=None)\ndef rec(n, k):\n    if n <= 0:\n        return 0\n    if k <= 1:\n        return n\n\n    i = next_max(n)\n    p = NM[i] if i < len(NM) else 1\n    ret = rec(i, k - 1)\n    cum = rec(n - p, k)\n    ret = ret * p % MOD\n    return (cum + ret) % MOD\n\n\nans = rec(N, K)\nprint(ans % MOD)\n","N, K = map(int, input().split())\nMOD = 10**9 + 7\n\nnum = []\nnow = N + 1\ni = 1\nwhile True:\n  r = N \/\/ (i+1) + 1\n  if r == now:\n    break\n  num.append(now - r)\n  now = r\n  i += 1\n  \nnum += [1] * (N - sum(num))\nn = len(num)\ndp = [[0]*n for i in range(K)]\nfor _n in range(n):\n  dp[0][_n] = num[_n]\n\nfor i in range(1, K):\n  s = 0\n  for _n in range(n):\n    j = n - 1 - _n\n    s += dp[i-1][j] % MOD\n    s %= MOD\n    dp[i][_n] = s * num[_n] % MOD\n\nans = sum(dp[-1])\nprint(ans % MOD)","#!\/usr\/bin\/env python3\n# -*- coding: utf-8 -*-\nN, K = list(map(int, input().split()))\nmax_i = min(K, N - K + 1)\n\nMAX = max_i * 2\nPRIME = 10 ** 9 + 7\n\nfac = [0] * MAX\nfinv = [0] * MAX\n\n\ndef invMod(a, m):\n    a %= m\n    b, x, y = m, 1, 0\n    while b:\n        t = a \/\/ b\n        a -= t * b\n        a, b = b, a\n        x -= t * y\n        x, y = y, x\n    return x % m\n\n\ndef binomInit():\n    fac[0] = fac[1] = 1\n    finv[0] = finv[1] = 1\n    for i in range(2, MAX):\n        fac[i] = (fac[i - 1] * i) % PRIME\n        finv[i] = (finv[i - 1] * invMod(i, PRIME)) % PRIME\n        \n\ndef binom(n, k):\n    if n < 0 or k < 0 or n < k:\n        return 0\n    return (fac[n] * finv[k] * finv[n - k]) % PRIME\n\n\nbinomInit()\n    \n\nfor i in range(1, max_i + 1):\n    blue_part = binom(K - 1, i - 1)\n    red_part = binom(N - K + 1, i)\n    print((blue_part * red_part) % PRIME)\n","from numpy import int_\n\nmod = 10 ** 9 + 7\n\nN, K = map(int, input().split())\n\nM = int(N ** 0.5)\n\nT = [N \/\/ i - N \/\/ (i + 1) for i in range(1, M + 1)]\nA = int_([1] * (N - sum(T)) + T[::-1])\n\ndp = A[:]\nfor _ in range(K - 1):\n    dp = A * dp.cumsum()[::-1] % mod\n\nprint(sum(dp) % mod)","# -*- coding: utf-8 -*-\n\nN, K = map(int, input().split())\nmod = 10**9 + 7\n\n\ndef re_count(n, i):\n    # n \u306f\u524d\u306e\u6570\u5024\n    # i \u306f\u5f8c\u308d\u304b\u3089\u30ab\u30a6\u30f3\u30c8\n    ans = 0\n    if i == 1:\n        return N \/\/ n\n    for x in range(1, N \/\/ n+1):\n        ans += re_count(x, i-1)\n    return ans % mod\n\nprint(re_count(1, K))\n","N, K = map(int, input().split())\nMOD = 10**9 + 7\n\n# dp[i][x] := i\u6587\u5b57\u76ee\u307e\u3067\u3002\u6700\u5f8c\u304cx\u3068\u306a\u308b\u3082\u306e\n# \u2192 O(10**11) \u3067\u5165\u3089\u306a\u3044\u306e\u3067 \u30eb\u30fc\u30c8N \u306b\u5727\u7e2e\u3059\u308b\nrN = int(N ** 0.5)\nT = {N\/\/x for x in range(1, rN+1)}\nT |= {x for x in range(1, rN+1)}\nT = [0,] + sorted(list(T))\t# 1-indexed\n\n# 1-indexed\ndp = []\ndp.append([0,] + [T[i]-T[i-1] for i in range(1, len(T))])\n\nfor k in range(K-1):\n\tdp.append([0,] * len(T))\n\tdp[-1][-1] = dp[-2][1]\n\tfor t in range(2, len(T)):\n\t\tdp[-1][-t] = (dp[-2][t] + dp[-1][-t+1]) % MOD\n\tfor t in range(len(T)):\n\t\tdp[-1][t] = (dp[-1][t] * dp[0][t]) % MOD\n\nprint(sum(dp[-1]) % MOD)\n","n, k = map(int, input().split())\nmod = 1000000007\na = []\n\ni = 1\nwhile i * i <= n:\n    a.append(i)\n    a.append(n \/\/ i)\n    i += 1\nm = len(a)\na.append(0)\na.sort()\n\ndp = [0] * m\ndp[0] = 1\nacc = [0]  * m\nfor _ in range(k):\n    acc[0] = dp[0]\n    for j in range(1, m):\n        acc[j] = (acc[j-1] + dp[j]) % mod # \u7d2f\u7a4d\u548c\n    for j in range(m):\n        dp[j] = acc[m-j-1] * (a[j+1] - a[j]) % mod\nans = 0\nfor x in dp:\n    ans = (ans + x) % mod\nprint(ans)\n","n, k = map(int, input().split())\n\nMOD = 10 ** 9 + 7\np = int(n**0.5)\n\n\na = [i for i in range(1, p+1)]\n\nfor x in range(p, 0, -1):\n    if n \/\/ x != p:\n        a.append(n \/\/ x)\n\ndp = [[0 for _ in range(len(a))] for _ in range(k)]\n\nm = len(a)\n\ntemp = 0\nb = [0] * m\nfor i, x in enumerate(a):\n    b[i] = x - temp\n    temp = x\n\nfor i in range(m):\n    dp[0][i] = b[i]\n\nfor i in range(k-1):\n    temp = 0\n    for j in range(m-1, -1, -1):\n        temp = (temp + dp[i][m-1-j]) % MOD\n        dp[i+1][j] = temp * b[j] % MOD\n\n#print(dp)\n\nprint(sum(dp[-1]) % MOD)\n","N,K=map(int,input().split())\n\nmod=10**9+7\n\nans=0\nL=[[0,0]]\nfor i in range(1,N+1):\n    if i*i==N:\n        L.append([i,i])\n        break\n    elif i*i>N:\n        break\n    else:\n        L.append([N\/\/i,i])\nR=[]\nfor i in range(len(L)):\n    if L[-1-i][0]==L[-1-i][1]:\n        continue\n    else:\n        R.append([L[-1-i][1],L[-1-i][0]])\nArr=L+R\n#print(Arr)\n\nfor i in range(1,len(Arr)):\n    ans+=pow(Arr[i][0],K-1,mod)*(Arr[i][1]-Arr[i-1][1])\n#print(ans%mod)\nDP=[[1 for i in range(len(Arr)-1)]for j in range(K)]\nfor j in range(len(Arr)-1):\n    DP[0][j]=(Arr[j+1][1]-Arr[j][1])\n#print(DP)\nfor i in range(1,K):\n    Rui=[DP[i-1][0]]\n    for j in range(1,len(Arr)-1):\n        Rui.append(Rui[-1]+DP[i-1][j])\n    #print(Rui)\n    for j in range(len(Rui)):\n        DP[i][j]=(Rui[-1-j]*(Arr[j+1][1]-Arr[j][1]))%mod\nprint(sum(DP[-1])%mod)","N, K = map(int, input().split())\nLARGE = 10 ** 9 + 7\n\n# SQRT\nR = 1\nwhile (R + 1) ** 2 < N:\n    R += 1\n\nsquare = False\nif (R + 1) ** 2 == N:\n    square = True\n\n\nDP_S = [1] * R\nDP_L = [1] * R\nN_L = [1] * R\nDP_M = 0\nL = R\nif square:\n    DP_M = 1\n    L += 1\n\n\nfor i in range(R, -1, 0):\n    Q = N \/\/ i\n    DP_L[i - 1] = Q - L\n    N_L[i - 1] = Q - L\n    L = Q\n\nfor _ in range(K - 1):\n    S = 0\n    L = sum(DP_L) + DP_M\n    SS = sum(DP_S)\n    for i in range(R):\n        DP_L[i] = S * N_L[i] % LARGE\n        DP_S[i] = L + SS % LARGE\n        S = (S + DP_S[i]) % LARGE\n        L = (L - DP_L[i]) % LARGE\n\n        if square:\n            DP_M = (DP_M + SS) % LARGE\n\nprint((sum(DP_L) + sum(DP_S) + DP_M) % LARGE)\n","import itertools\nn, k = [int(i) for i in input().split()]\ntemp = [i for i in range(1, 101)]\ntemp2 = list(itertools.product(temp, repeat=2))\ncount = 0\nprint(len(temp2))\nfor i in range(len(temp2)):\n\tif temp2[i][0]*temp2[i][1] <= n:\n\t\tcount += 1\nprint(count % (10**9+7))","import bisect\n\nn,k = map(int,input().split())\nmod = 10**9+7\n\n\nm = int(n**0.5)\nif m**2 < n:\n    m += 1\n\n\ndp = [[0]*(m+1) for i in range(k+1)]\n\nfor i in range(1,m):\n    dp[1][i] = 1\ndp[1][m] = n-m+1\n\n\nfor i in range(1,k):\n    for j in range(1,m+1):\n        r = n\/\/j\n        for p in range(1,r+1):\n            p = min(p,m)\n            dp[i+1][p] += dp[i][j]\n            dp[i+1][p] %= mod\n\nres = 0\nfor i in range(1,m+1):\n    res = (res+dp[k][i])%mod\nprint(res)","def main():\n    N, K = map(int, input().split())\n    def r(C, D):\n        newD = {}\n        for key in D.keys():\n            for n in range(1, N + 1):\n                if int(key) * n <= N:\n                    if key in newD:\n                        newD[key] = D[key]\n                    else:\n                        newD[key] = newD[key] + D[key]\n        if C == 10:\n            return newD\n        else:\n            r(C + 1, D)\n    C, D = 1, {} # count, dict\n    for n in range(1, N + 1):\n        D[str(n)] = 1\n    newD = r(C, D)\n    return sum(newD.values()) % (10 ** 9 + 7)\n\nprint(main())\n","# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Jun 29 22:14:02 2019\n\n@author: Yamazaki Kenichi\n\"\"\"\n\nN, K = map(int,input().split())\nmod = 10**9+7\n\nr = int(pow(N,1\/2))\n\nconst = []\nif N \/\/ r == r:\n    s = r - 1\nelse:\n    s = r\n\nfor i in range(1,r+1):\n    const.append(N\/\/i - N\/\/(i+1))\n#if r == int(pow(N,1\/2)) :\n#    const += [1]\nconst.reverse()\nconst = [1 for i in range(s)] + const\n\ndp = [[]]\nfor c in const:\n    try:\n        dp[0].append(dp[0][-1] +c)\n    except:\n        dp[0].append(c)\ndp += [[0 for i in range(len(const))] for k in range(K-1)]\n\nfor k in range(1,K):\n    for i in range(len(const)):\n        dp[k][i] = (dp[k][i-1] + dp[k-1][len(const)-i-1]%mod\n                      * const[i])%mod\nprint(dp[-1][-1]%mod)\n","from bisect import bisect_left\nn,k=map(int,input().split())\nif n==1:exit(print(1))\nd=[1]\nt=[1]\nfor i in range(2,int(n**0.5)+2):\n  if n\/\/d[-1]!=n\/\/i:\n    d.append(i)\n    t.append(1)\n  else:\n    t[-1]+=1\ndd=[]\nfor i in range(d[-1],0,-1):\n  if n\/\/i<=d[-1]:continue\n  dd.append(n\/\/i)\nx=d+dd\nfor i in range(len(t),len(x)):\n  t.append(x[i]-x[i-1])\ndi=[0]*len(x)\nmod=10**9+7\nfor i in range(len(x)):di[i]=bisect_left(x,n\/\/x[i])\nn=len(x)\ndp=[n*[0]for _ in range(k)]\ndp[0]=t[:]\nfor i in range(1,k):\n  for j in range(1,n):\n    dp[i-1][j]+=dp[i-1][j-1]\n    dp[i-1][j]%=mod\n  for j in range(n):dp[i][j]=dp[i-1][di[j]]*t[j]%mod\nprint(sum(dp[-1])%mod)","def f_small_products(N, K, MOD=10**9 + 7):\n    # \u53c2\u8003: https:\/\/atcoder.jp\/contests\/abc132\/submissions\/6187073\n    sqrt_n = int(N**0.5)\n\n    # num: 0 <= i <= N\u306b\u3064\u3044\u3066\u3001N \/\/ i \u306e\u5024\u3067\u540c\u4e00\u8996\u3067\u304d\u308b\u3082\u306e\u306e\u500b\u6570\u304c\u524d\u304b\u3089\u683c\u7d0d\u3055\u308c\u308b\n    num = [0 for i in range(2 * sqrt_n + 1)]\n    # 1\u304b\u3089\u221aN \u307e\u3067\u306f\u3001\u540c\u4e00\u8996\u3067\u304d\u308b\u3082\u306e\u306e\u500b\u6570\u306f1\u3064\n    for i in range(1, sqrt_n + 1):\n        num[i] = 1\n    # \u221aN\u304b\u3089N \u307e\u3067\u306f\u3001\u8907\u6570\u306e\u6574\u6570\u304c\u540c\u4e00\u8996\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308b\n    for i in range(1, sqrt_n + 1):\n        lo = max(sqrt_n + 1, (N + i + 1) \/\/ (i + 1))\n        hi = N \/\/ i\n        num[2 * sqrt_n + 1 - i] = hi - lo + 1\n\n    # dp[n][m]: \u6700\u5f8c\u306e\u6574\u6570\u304c m \u3067\u3042\u308b\u3088\u3046\u306a n \u500b\u306e\u6574\u6570\u3092\n    # \u4e26\u3079\u3066\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3088\u3046\u306b\u3059\u308b\u5834\u5408\u306e\u6570\n    dp = [[0 for j in range(2 * sqrt_n + 2)] for i in range(K + 1)]\n    dp[0][1] = 1  # \u6570\u5217\u306e\u5148\u982d\u306e\u3055\u3089\u306b1\u500b\u524d\u306b1\u304c\u3042\u308b\u3068\u307f\u306a\u3059(\u7f6e\u304d\u65b91\u901a\u308a)\n    for i in range(K):\n        # \u7d2f\u7a4d\u548c\u3092\u7528\u3044\u305fdp\u30c6\u30fc\u30d6\u30eb\u306e\u66f4\u65b0(imos\u6cd5)\n        for j in range(1, 2 * sqrt_n + 1):\n            ways = (dp[i][j] * num[j]) % MOD\n            dp[i + 1][1] += ways\n            dp[i + 1][2 * sqrt_n + 2 - j] -= ways\n        for j in range(1, 2 * sqrt_n + 1):\n            dp[i + 1][j] += dp[i + 1][j - 1]\n\n    return sum(a * b for a, b in zip(dp[K], num)) % MOD\n\nN, K = [int(i) for i in input().split()]\nprint(f_small_products(N, K))","import copy\nn,k=map(int,input().split())\nmod=10**9+7\ndef f(i):\n  return n\/\/i\nans=[1]*n\nans_c=[1]*n\nfor _ in range(k-1):\n  for i in range(1,n+1):\n    for j in range(1,f(i)+1):\n      ans_c[j-1]+=ans[i-1]*f(i)\n  ans=copy.copy(ans)\n      \nprint(sum(ans)%mod)","import numpy as np\nN, K = map(int, input().split())\nmod = 1000000007\n\nm = N ** 0.5\ncnt = [N \/\/ i - N \/\/ (i + 1) for i in range(1, int(m) + 1)] \ncnt = np.array((cnt + [1 for _ in range(N - sum(cnt))])[::-1])\nnxt = cnt[:]\nfor _ in range(K - 1):\n    cnt = nxt * np.cumsum(cnt)[::-1] % mod\n\nprint(sum(cnt) % mod)\n","n,k = list(map(int,input().split(\" \")))\n\ndef check(l,n):\n    global k\n    if len(l) > k:\n        return False\n    for i in range(len(l)):\n        if i+1 == len(l):\n            break\n        if l[i] * l[i+1] > n:\n            return False\n    return True\na = 0\nold_l = [1 for i in range(k)]\nfor i in range(0,k-1):\n    for j in range(0,k):\n        l = None\n        l = old_l.copy()\n        try:\n            while check(l,n):\n                l[i+j] += 1\n                a += 1\n                print(l)\n        except:\n            pass\nprint(a)","from collections import deque\nN, K = map(int, input().split())\nMOD = 10 ** 9 + 7\n\n# guchoku case\n\n# dp = [[0 for _ in range(N+1)] for _ in range(K+1)]\n\n# for i in range(N+1):\n#     dp[1][i] = 1\n# for i in range(K):\n#     for j in range(1,N+1):\n#         for k in range(1, N \/\/ j + 1):\n#             dp[i+1][j] += dp[i][k]\n#             dp[i+1][j] %= MOD\n\nJN = deque()  # N\/\/j table\nSQN = int(N**0.5)\nJN.append(SQN)\n\nif SQN**2 != N:\n    JN.append(N\/\/SQN)\nfor j in range(SQN-1, 0, -1):\n    JN.appendleft(j)\n    JN.append(N\/\/j)\nJN.appendleft(0)\n\n# JN.sort()\n# PJN = {JN[i]: JN[i-1] for i in range(1, len(JN))}  # prev jn\nLJN = len(JN)\n\ndp = [[0 for _ in range(LJN)] for _ in range(K)]\ncdp = [[0 for _ in range(LJN)] for _ in range(K)]\nw = [0 for _ in range(LJN)]\n\n# init dp\nprv = 0\nfor i in range(1,LJN):\n    jn = JN[i]\n    dp[0][i] = 1\n    w[i] = jn - prv\n    cdp[0][i] = jn\n    prv = JN[i]\n\nfor i in range(K-1):\n    for j in range(1,LJN):\n        dp[i+1][j] = cdp[i][LJN-j]\n        dp[i+1][j] %= MOD\n        cdp[i+1][j] = cdp[i+1][j-1] + dp[i+1][j] * w[j]\n        cdp[i+1][j] %= MOD\n\nprint(cdp[-1][-1])\n","import sys\nN, K = map(int, input().split())\nMOD = 1000000007\ni, A, B = 1, [], []\nwhile i * i <= N:\n  A.append(1)\n  B.append(N \/\/ i - N \/\/ (i + 1))\n  i += 1\nB = list(reversed(B))\nif sum(A) + sum(B) == N:\n  C = list(reversed(A + B))\nelse:\n  C = list(reversed(A + B[1:]))\nDP = C\nL = len(C)\nfor k in range(K-1):\n  DP = list(reversed(DP))\n  DP[0] %= MOD\n  for i in range(L-1):\n    DP[i+1] += DP[i]\n    DP[i+1] %= MOD\n  for i in range(L):\n    DP[i] = DP[i] * C[i] % MOD\nprint(sum(DP) % MOD)","n,k=map(int,input().split())\nmod=10**9+7\n\ndata=[i for i in range(1,int(n**.5)+1)]+[n\/\/i for i in range(int(n**.5),0,-1)]\n\nL=len(data)\ndp=[1]*L\nfor i in range(1,L):\n    dp[i]=data[i]-data[i-1]\n\nfor i in range(k-1):\n    h=dp[:]\n    for i in range(1,L):\n        h[i]=(h[i]+h[i-1])%mod\n    h=h[::-1]\n    for i in range(1,L):\n        h[i]=h[i]*(data[i]-data[i-1])%mod\n    dp=h\n\nans=0\nfor u in dp:\n    ans=(ans+u)%mod\nprint(ans)","#!\/usr\/bin\/env python3\nfrom collections import defaultdict\nfrom collections import deque\nfrom heapq import heappush, heappop\nimport sys\nimport math\nimport bisect\nimport random\nimport itertools\nsys.setrecursionlimit(10**5)\nstdin = sys.stdin\nsqrt = math.sqrt\nbisect_left = bisect.bisect_left\nbisect_right = bisect.bisect_right\ndef LI(): return list(map(int, stdin.readline().split()))\ndef LF(): return list(map(float, stdin.readline().split()))\ndef LI_(): return list(map(lambda x: int(x)-1, stdin.readline().split()))\ndef II(): return int(stdin.readline())\ndef IF(): return float(stdin.readline())\ndef LS(): return list(map(list, stdin.readline().split()))\ndef S(): return list(stdin.readline().rstrip())\ndef IR(n): return [II() for _ in range(n)]\ndef LIR(n): return [LI() for _ in range(n)]\ndef FR(n): return [IF() for _ in range(n)]\ndef LFR(n): return [LI() for _ in range(n)]\ndef LIR_(n): return [LI_() for _ in range(n)]\ndef SR(n): return [S() for _ in range(n)]\ndef LSR(n): return [LS() for _ in range(n)]\nmod = 1000000007\ninf = float('INF')\n\n#A\ndef A():\n    s = S()\n    b = list(set(s))\n    a = len(list(set(s)))\n    if a == 2 and s.count(b[0]) == s.count(b[1]) == 2:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n    return\n\n#B\ndef B():\n    n = II()\n    p = LI()\n    ans = 0\n    for i in range(1,n-1):\n        if (p[i - 1] < p[i] and p[i] < p[i + 1]) or (p[i + 1] < p[i] and p[i] < p[i - 1]):\n            ans += 1\n    print(ans)\n    return\n\n#C\ndef C():\n    n = II()\n    d = LI()\n    d.sort()\n    ans = 0\n    for i in range(10**5+1):\n        if n \/\/ 2 == bisect_left(d, i):\n            ans += 1\n    print(ans)\n    return\n\n\ndef combination_mod(n, k, mod):\n    # power_func\u3092\u7528\u3044\u3066(nCk) mod p \u3092\u6c42\u3081\u308b \n    # nCk = n!\/((n-k)!k!)\u3092\u4f7f\u7528\n\n    from math import factorial\n    if n < 0 or k < 0 or n < k: return 0\n    if n == 0 or k == 0: return 1\n    a = factorial(n) % mod\n    b = factorial(k) % mod\n    c = factorial(n - k) % mod\n    return (a * power_func(b, mod - 2, mod) * power_func(c, mod - 2, mod)) % mod\n    \ndef power_func(a, b, mod):\n    # a^b mod p \u3092\u6c42\u3081\u308b\n    # b\u30922\u9032\u6570\u5206\u89e3\u3057\u3066\u9ad8\u901f\u7d2f\u4e57\n\n    if b == 0: return 1\n    if b % 2 == 0:\n        d = power_func(a, b \/\/ 2, mod)\n        return d * d % mod\n    if b % 2 == 1:\n        return (a * power_func(a, b - 1, mod)) % mod\n\n#D\ndef D():\n    n, k = LI()\n    ans = 0\n    for i in range(1,k+1):\n        a = combination_mod(n - k + 1, i, mod)\n        b = combination_mod(k - 1, i - 1, mod)\n        print((a*b)%mod)\n    return\n\ndef dijkstra(num, start, edge, g):\n\n    dist = defaultdict(lambda: inf)\n    dist[(start,0)] = 0\n    q = [(dist[(start,0)], start, 0)]\n    while q:\n        du, u, t = heappop(q)\n        for j in edge[u]:\n            if t == 2:\n                t = -1\n            if dist[(j, t + 1)] > du + 1:\n                dist[(j, t + 1)] = du + 1\n                heappush(q, [dist[(j, t + 1)], j, t + 1])\n    return dist\n#E\ndef E():\n    n, m = LI()\n    v = LIR_(m)\n    s, t = LI_()\n    edge = defaultdict(list)\n    for x,y in v:\n        edge[x].append(y)\n    d = dijkstra(n, s, edge, t)\n    if d[(t,0)] == inf:\n        print(-1)\n    else:\n        print(d[(t,0)]\/\/3)\n    return\n\n# F\n# \u89e3\u8aacAC\n# \u221an\u307e\u3067\u3067\u7d04\u6570\u306e\u5168\u5217\u6319\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u306f\n# n <= a * b (a <= b\u3068\u3057\u305f\u3068\u304d\u306b)\n# \u5404 a \u306f \u221an\u307e\u3067\u3057\u304b\u306a\u3044\u3053\u3068\u306f\u308f\u304b\u308b\n# ( a > \u221an \u306a\u3089 b < \u221an \u3060\u304b\u3089\u306d)\n# \u3059\u308b\u3068\u5404a\u306b\u5bfe\u3057\u3066\u5bfe\u5fdc\u3059\u308bb\u306e\u6700\u5927\u5024\u304c\u5b58\u5728\u3059\u308b\u305f\u3081\n# b \u306e\u500b\u6570\u306f\u9ad8\u3005 \u221an \u500b\u3057\u304b\u7121\u3044\u3053\u3068\u304c\u308f\u304b\u308b\n# \u5f8c\u306fDP\u3067\u3069\u3046\u305e \ndef F():\n    n, k = LI()\n    f = defaultdict(int)\n    Range = int(sqrt(n))\n    dp = [0] * (2 * Range)\n    m = 0\n    l = 0\n    for i in range(Range, 0, -1):\n        dp[i - 1] = 1\n        f[i - 1] = 1\n        if n \/\/ i == i:\n            l = 1\n            continue\n        dp[Range + m] = n \/\/ i - n \/\/ (i + 1)\n        f[Range + m] = n \/\/ i - n \/\/ (i + 1)\n        m += 1\n    R = 2 * Range - l\n    for _ in range(k - 1):\n        ndp = [0] * (2 * Range)\n        for j in range(R):\n            ndp[R - j - 1] = dp[j]\n        ndp = list(itertools.accumulate(ndp[::-1]))[::-1]\n        dp = [(d * f[num]) % mod for num,d in enumerate(ndp)]\n    ans = sum(dp)%mod\n    print(ans)\n    return\n\n\n\n#Solve\nif __name__ == '__main__':\n    F()\n","import sys\ninput = sys.stdin.readline\n\ndef I(): return int(input())\ndef MI(): return map(int, input().split())\ndef LI(): return list(map(int, input().split()))\n\ndef main():\n    mod=10**9+7\n    \"\"\"\n    \u672b\u5c3e\u3060\u3051\u304c\u91cd\u8981\uff0cdp[i][j]\u3067i\u679a\u76ee\u307e\u3067\u898b\u3066\u672b\u5c3e\u304cj\uff0cO(NK)\n    N\u304c\u5c0f\u3055\u3051\u308c\u3070\u554f\u984c\u306a\u3044\uff0cj\u306e\u90e8\u5206\u306f(N\/j)\u306e\u5207\u308a\u6368\u3066\u3067\u307e\u3068\u3081\u3089\u308c\u308b\uff0e\n    \u524d\u534a\u90e8\u5206\u306f1~sqrt(N)\u3067\uff0c\u5404\u7d441\u3053\u305a\u3064\uff0e\u5f8c\u534a\u306fN\/i (i<=sqrt(N))\n    \n    \"\"\"\n    N,K=MI()\n    M=int(N**0.5)\n    cnt=[]\n    \n    i=1\n    while i<=N:\n        if i<=M:\n            cnt.append(1)\n            i+=1\n        else:\n            temp=int(N\/i)\n            cnt.append(int(N\/temp-i+1))\n            i=int(N\/temp +1)\n            \n    N2=len(cnt)\n            \n\n    \n    dp=[[0]*N2 for _ in range(K)]\n    #dp[i][j]\u306fi\u500b\u898b\u3066\uff0c\u6700\u5f8c\u5c3e\u304c\u30b0\u30eb\u30fc\u30d7L[j]\u306b\u5c5e\u3059\u5834\u5408\u306e\u6570\n    #j\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306fM\u30fcj\u756a\u76ee\u307e\u3067\u306e\u30b0\u30eb\u30fc\u30d7\u3068\u7d44\u3081\u308b\n    \n    for j in range(N2):\n        dp[0][j]=cnt[j]\n        \n    for i in range(K-1):\n        S=[0]*(N2+1)\n        for j in range(N2):\n            S[j+1]=(S[j]+dp[i][j])%mod\n        \n        for j in range(N2):\n            dp[i+1][j]=(S[N2-j]*cnt[j])%mod\n            \n    ans=0\n    for j in range(N2):\n        ans=(ans+dp[-1][j])%mod\n        \n    print(ans)\n\n\n    \n    \n\nmain()\n","import sys\nfrom bisect import bisect_left as bl\ninput = sys.stdin.readline\nN, K = map(int, input().split())\nmod = 10 ** 9 + 7\nh = 1\nt = set()\nwhile h * h <= N:\n  t.add(N \/\/ h)\n  t.add(h)\n  h += 1\nt = sorted(t)\n#print(t)\ntt = []\nfor x in t:\n  tt.append(N \/\/ x)\n\ndp = [[0] * len(t) for _ in range(K + 1)]\ndp[0][0] = 1\nfor i in range(K):\n  for j in range(len(t)):\n    k = bl(t, tt[j])\n    dp[i + 1][k] += dp[i][j]\n    dp[i + 1][k] %= mod\n  #print(dp)\n  for k in range(len(t) - 1, 0, -1):\n    dp[i + 1][k - 1] += dp[i + 1][k]\n    dp[i + 1][k - 1] %= mod\n  for k in range(1, len(t)):\n    rng = (t[k] - t[k - 1]) % mod\n    dp[i + 1][k] *= rng\n    dp[i + 1][k] %= mod\n  #print(dp)\nres = 0\n#print(dp)\nfor j in range(len(t)):\n  res += dp[-1][j]\n  res %= mod\nprint(res)","import sys\n\ninput = sys.stdin.readline\n\nN, K = map(int, input().strip().split(' '))\ndiv = 1000000000 + 7\n\ncoefficients = [1] * N\nnums = [N \/\/ i for i in range(1, N+1)]\nfor i in range(1, K - 1):\n    mirror = [c for c in coefficients][::-1]\n    for index in range(N):\n        coefficients[index] += sum(e for e in mirror[index:-1])\nprint(sum(c * n for c, n in zip(coefficients, nums)))\n","def f(tail, left):\n  m = (tail, left)\n  if m in memo:\n    return memo[m]\n  \n  if left == 1:\n    ret = n \/\/ tail\n    memo[m] = n \/\/ tail\n    return ret\n  #if left == 0:\n  #  return 1\n\n  count = 0\n  for i in range(n \/\/ tail):\n    t = i + 1\n    count += f(t, left - 1)\n    #print(\"f({}, {})\".format(t, left - 1))\n  memo[m] = count\n  return count\n\nmemo = {}\n\nn, k = [int(v) for v in input().split()]\nprint(f(1, k))","from math import floor\n\nN, K = map(int, input().split())\n\nMOD = 10**9 + 7\n\n\nclass ModInt:\n    def __init__(self, x):\n        self.x = x % MOD\n\n    def __str__(self):\n        return str(self.x)\n\n    __repr__ = __str__\n\n    def __add__(self, other):\n        return (\n            ModInt(self.x + other.x) if isinstance(other, ModInt) else\n            ModInt(self.x + other)\n        )\n\n    def __sub__(self, other):\n        return (\n            ModInt(self.x - other.x) if isinstance(other, ModInt) else\n            ModInt(self.x - other)\n        )\n\n    def __mul__(self, other):\n        return (\n            ModInt(self.x * other.x) if isinstance(other, ModInt) else\n            ModInt(self.x * other)\n        )\n\n    def __truediv__(self, other):\n        return (\n            ModInt(\n                self.x * pow(other.x, MOD - 2, MOD)\n            ) if isinstance(other, ModInt) else\n            ModInt(self.x * pow(other, MOD - 2, MOD))\n        )\n\n    def __pow__(self, other):\n        return (\n            ModInt(\n                pow(self.x, other.x, MOD)\n            ) if isinstance(other, ModInt) else\n            ModInt(pow(self.x, other, MOD))\n        )\n\n    def __radd__(self, other):\n        return ModInt(other + self.x)\n\n    def __rsub__(self, other):\n        return ModInt(other - self.x)\n\n    def __rmul__(self, other):\n        return ModInt(other * self.x)\n\n    def __rtruediv__(self, other):\n        return ModInt(other * pow(self.x, MOD - 2, MOD))\n\n    def __rpow__(self, other):\n        return ModInt(pow(other, self.x, MOD))\n\n\n# floor(N \/ i) \u306e\u5024\u306b\u5fdc\u3058\u3066\u30b0\u30eb\u30fc\u30d7\u5206\u3051\u3057\u3001\n# \u30b0\u30eb\u30fc\u30d7\u5358\u4f4d\u3067\u6761\u4ef6\u3092\u6e80\u305f\u3059\u5217\u306e\u500b\u6570\u3092\u52d5\u7684\u8a08\u753b\u6cd5\u3067\u6c42\u3081\u308b\nP = floor(N**0.5)\nQ = N \/\/ P\n\nC = (\n    [ModInt(1) for _ in range(P + 1)] +\n    [\n        ModInt(N \/\/ (Q - i) - N \/\/ (Q - i + 1))\n        for i in range(1, Q)\n    ]\n)\n\ndp = [[0 for _ in range(P + Q)] for _ in range(K)]\ndp[0] = [C[i] for i in range(P + Q)]\nfor j in range(1, K):\n    acc = 0\n    for i in range(P + Q - 1, 0, -1):\n        acc += dp[j - 1][P + Q - i]\n        dp[j][i] = C[i] * acc\n\nans = sum(dp[K - 1])\n\nprint(ans)\n","def main():\n\tN, K = map(int, input().split())\n\tDIV = 10**9+7\n\tsqrtn = int(N**0.5)\n\tans = 1\n\ts = []\n\tfor i in range(1, sqrtn+1):\n\t\ts.append(i)\n\t\tif i < N\/\/i:\n\t\t\ts.append(N\/\/i)\n\ts.sort()\n\n\tr = []\n\tfor i in range(len(s)-1):\n\t\tleft = N\/\/s[i+1]\n\t\tright = N\/\/s[i]\n\t\tr.append(right-left)\n\tr.append(1)\n\n\tm = len(s)\n\tmp = {}\n\tfor i in range(m):\n\t\tmp[s[i]] = i\n\n\tdp = [[0 for _ in range(m)] for _ in range(K+1)]\n\tdp[0][mp[N]] = 1\n\tfor i in range(K):\n\t\tfor j in range(m-2, -1, -1):\n\t\t\tdp[i][j] += dp[i][j+1]\n\t\t\tdp[i][j] %= DIV\n\t\tfor j in range(m):\n\t\t\tnj = mp[N\/\/s[j]]\n\t\t\tdp[i+1][j] += dp[i][nj]*r[j]%DIV\n\t\t\tdp[i+1][j] %= DIV\n\n\tans = 0\n\tfor j in range(m):\n\t\tans += dp[K][j]\n\t\tans %= DIV\n\tprint(ans)\n\n\nif __name__ == '__main__':\n\tmain()","N, K = map(int,input().split())\nMOD = 10**9 + 7\n\nstate= [] # \u540c\u3058\u72b6\u614b\u3068\u307f\u306a\u3057\u3066\u3088\u3044\u3082\u306e\u306e\u500b\u6570\u306e\u914d\u5217\ni = 1\nwhile i <= N:\n    if i*i <= N:\n        state.append(1)\n        i += 1\n    else:\n        j = N \/\/ i # i\u306e\u5f8c\u306b\u304a\u3051\u308b\u6700\u5927\u306e\u6570\n        state.append(N\/\/j-i+1) \n        i = N\/\/j + 1\n\nL = len(state)\n#print(state)\n\n# dp[k][x] : \u6700\u5f8c\u304c\u72b6\u614bx\u3067\u3042\u308b\u3088\u3046\u306ak\u500b\u306e\u6574\u6570\u3092\u4e26\u3079\u308b\u5834\u5408\u306e\u6570\ndp = [[0]*L for _ in range(K+1)]\ndp[0][0] = 1\n\n#dp[k+1][x] = sum_{y: x\u3092\u5f8c\u308d\u306b\u304a\u3051\u308b\u72b6\u614b} dp[k][y]\nfor k in range(K):\n    cum_sum = [0] * (L+1)\n    for y in range(L): \n        cum_sum[y+1] = (cum_sum[y] + dp[k][y]) % MOD\n\n    for x in range(L):\n        # x\u3092\u5f8c\u308d\u306b\u304a\u3051\u308b\u3088\u3046\u306a\u6700\u5927\u306e\u72b6\u614b\u306fL-x-1\n        dp[k+1][x] += cum_sum[L-x]\n        dp[k+1][x] *= state[x]\n        dp[k+1][x] %= MOD\n\n#print(dp)\nprint(sum(dp[K]) % MOD)","N,K=map(int,input().split())\nmod=10**9+7\n\nimport math\nSQ=int(math.sqrt(N))\n\nDP1=[1]*(SQ+1)\nDP1[0]=0\n\n\nDP2=[]\n\nk=SQ\n\nfor i in range(SQ,0,-1):\n    DP2.append(N\/\/i-k)\n    k=N\/\/i\n\nKOSUU2=[v for v in DP2]\n\nfor j in range(K-1):\n    NDP1=[0]*(SQ+2)\n    NDP2=[0]*(SQ+1)\n\n    for j in range(1,SQ+1):\n        NDP2[-j]-=DP1[j]\n        NDP1[1]+=DP1[j]\n\n\n    for j in range(-1,-SQ-1,-1):\n        NDP1[-j+1]-=DP2[j]\n        NDP1[1]+=DP2[j]\n\n    for j in range(1,SQ+2):\n        NDP1[j]+=NDP1[j-1]\n\n    NDP2[0]+=NDP1[-1]\n\n    for j in range(1,SQ+1):\n        NDP2[j]+=NDP2[j-1]\n\n\n    for j in range(SQ):\n        NDP2[j]=NDP2[j]*KOSUU2[j]%mod\n\n    DP1=NDP1\n    DP2=NDP2\n    DP1.pop()\n    DP2.pop()\n\nprint((sum(DP1)+sum(DP2))%mod)","N, K = map(int, input().split())\nP = 10**9+7\nR = int(N**0.5)+1\nA = [i for i in range(R)] + [N\/\/i for i in range(1, R)][::-1]\nM = len(A)\nX = [0] + [1] * (M-1)\nfor i in range(1, K+1):\n    NX = [0] * M\n    for j in range(1, M):\n        NX[j] = (NX[j-1] + X[M-j]*(A[j]-A[j-1])) % P\n    X = NX\nprint(X[-1])","N, K = map(int, input().split())\nMOD = 10 ** 9 + 7\n\ni = 1\nn = []\nwhile i <= N :\n    j = N \/\/ i\n    if i <= j :\n        n.append(1)\n        i += 1\n    else :\n        n.append(N\/\/j-i+1)\n        i = N \/\/ j + 1\n\nM = len(n)\n\ndp = [[0] * M for _ in range(K)]\ndp[0] = n\n\nfor k in range(1, K) :\n    sdp = [0] * M\n    sdp[0] = dp[k-1][0]\n    for i in range(1, M) :\n        sdp[i] = (sdp[i-1] + dp[k-1][i]) % MOD\n    for i in range(M) :\n        dp[k][i] = sdp[M-i-1] * n[i] % MOD\n\nret = 0\n\nfor j in range(M) :\n    ret += dp[K-1][j]\n    ret %= MOD\n    \nprint(ret)","import math\n\nfrom itertools import accumulate\n\ndef cumsum(a):\n    return list(accumulate(a))\n\nn,k = map(int, input().split())\nif n == 1:\n    print(1)\n    exit()\nmod = 10 ** 9 + 7\nnow = n\nbig = []\nfor i in range(2,int(math.sqrt(n)+2)):\n    d = n \/\/ i\n    big.append(now - d)\n    now = d\nbig.reverse()\nl = [1] * d + big\nl2 = [1] * d + big\nfor i in range(k-1):\n    a = cumsum(l)\n    a.reverse()\n    count = 0\n    for i,j in zip(a,l2):\n        l[count] = (i * j) % mod\n        count += 1\nl = cumsum(l)\nans = l[-1] % mod\nprint(ans)\n    ","import sys\ntry: fin = open('in')\nexcept: fin = sys.stdin\ninput = lambda: fin.readline().strip()\n\nmod = 10 ** 9 + 7\n\nn, k = map(int, input().split())\nparts = [[n + 1, n + 1]]\ni = 1\ns = 0\nl = n + 1\nfor i in range(1, n + 1):\n\tr = n \/\/ i - n \/\/ (i + 1)\n\tparts.append([l - 1, l - r])\n\tl -= r\n\tif r == 1:\n\t\tfor i in range(l - 1, 0, -1): parts.append([i, i])\n\t\tbreak\nparts = [j for j, i in parts]\nnparts = [n \/\/ parts[i] - n \/\/ parts[i - 1] for i in range(1, len(parts))]\n\nrow = nparts\nfor r in range(1, k):\n\ttmp = []\n\ts = 0\n\tfor i in range(len(nparts) - 1, -1, -1): # go backwards\n\t\ts += row[-(i + 1)] # prefix sum thingy\n\t\ttmp.append(s * nparts[i] % mod)\n\ttmp.reverse()\n\trow = tmp\n\nprint (sum(row))","# -*- coding: utf-8 -*-\nimport sys\nfrom operator import itemgetter\n# gcd\nfrom fractions import gcd\n# \u5207\u308a\u4e0a\u3052\uff0c\u5207\u308a\u6368\u3066\nfrom math import ceil, floor\n# \u30ea\u30b9\u30c8\u306e\u771f\u306e\u30b3\u30d4\u30fc\uff08\u5909\u66f4\u304c\u4f1d\u64ad\u3057\u306a\u3044\uff09\nfrom copy import deepcopy\n# \u7d2f\u7a4d\u548c\u3002list(accumulate(A))\u3068\u3057\u3066A\u306e\u7d2f\u7a4d\u548c\nfrom itertools import accumulate\n# l = ['a', 'b', 'b', 'c', 'b', 'a', 'c', 'c', 'b', 'c', 'b', 'a']\n# S = Counter(l)  # \u30ab\u30a6\u30f3\u30bf\u30fc\u30af\u30e9\u30b9\u304c\u4f5c\u3089\u308c\u308b\u3002S=Counter({'b': 5, 'c': 4, 'a': 3})\n# print(S.most_common(2))  # [('b', 5), ('c', 4)]\n# print(S.keys())  # dict_keys(['a', 'b', 'c'])\n# print(S.values())  # dict_values([3, 5, 4])\n# print(S.items())  # dict_items([('a', 3), ('b', 5), ('c', 4)])\nfrom collections import Counter, defaultdict\nimport math\nfrom functools import reduce\n# input\u95a2\u4fc2\u306e\u5b9a\u7fa9\n# fin = open('in_3.txt', 'r')\n# sys.stdin = fin\n#\ninput = sys.stdin.readline\ndef ii(): return int(input())\ndef mi(): return map(int, input().rstrip().split())\ndef lmi(): return list(map(int, input().rstrip().split()))\ndef li(): return list(input().rstrip())\n# template\n\n\nMOD = 1000000007  # type: int\n\n\ndef solve(N: int, K: int):\n    d = defaultdict(int)\n    for i in range(1, int(math.sqrt(N)) + 1):\n        d[i] = N \/\/ i - N \/\/ (i + 1)\n    for i in range(1, int(math.sqrt(N)) + 1):\n        d[N \/\/ i] = 1\n    # print(d)\n    ans = 0\n    for num, value in d.items():\n        ans += value * pow(num, K - 1, MOD)\n    print(ans % MOD)\n\n\ndef main():\n\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    N = int(next(tokens))  # type: int\n    K = int(next(tokens))  # type: int\n    solve(N, K)\n\n\nif __name__ == '__main__':\n    main()\n","N, K = [int(i) for i in input().split()]\nP = 10**9 + 7\n\nans = 0\nfor i in range(1, N+1):\n    a = N \/\/ i\n    ans += a**(K-1) % P\nprint(ans % P)\n","def hersCode(l, r, n, N):\n  ok = l\n  ng = r + 1\n  while abs(ok - ng) > 1:\n    mid = abs(ok + ng) \/\/ 2\n    if mid * n <= N:\n      ok = mid\n    else:\n      ng = mid\n  return ng\n\n\nN, K = list(map(int, input().split()))\nMOD = 10 ** 9 + 7\n\nL = []\nt = 1\nn = N\nwhile t < N:\n  L.append(t)\n  t = hersCode(t, N, N \/\/ t ,N)\n\nD = [0] * len(L)\nL.append(N + 1)\nfor i in range(len(L) - 1):\n  D[i] = (L[i + 1] - L[i]) % MOD\n\nDP = [[0] * (len(D)) for _ in range(K)]\nfor i in range(len(D)):\n  DP[0][i] = D[i]\n\nfor i in range(1, K):\n  S = [0] * len(D)\n  S[0] = DP[i - 1][0]\n  for j in range(1, len(D)):\n    S[j] = S[j - 1] + DP[i - 1][j]\n  for j in range(len(D)):\n    DP[i][j] = S[-1 -j] * D[j] % MOD\n\nprint(sum(DP[K - 1]) % MOD)\n    ","N, K = map(int, input().split())\nMOD = 10**9 + 7\n\nsq = 0\nwhile (sq + 1) * (sq + 1) <= N:\n    sq += 1\n\nnum = [0 for i in range(2 * sq + 1)]\nfor i in range(1, sq + 1):\n    num[i] = 1\nfor i in range(1, sq + 1):\n    lo = max(sq + 1, (N + i + 1) \/\/ (i + 1))\n    hi = N \/\/ i\n    num[2 * sq + 1 - i] = hi - lo + 1\n\ndp = [[0 for j in range(2 * sq + 2)] for i in range(K + 1)]\ndp[0][1] = 1\nfor i in range(K):\n    for j in range(1, 2 * sq + 1):\n        ways = dp[i][j] * num[j] % MOD\n        dp[i + 1][1] += ways\n        dp[i + 1][2 * sq + 2 - j] -= ways\n    for j in range(1, 2 * sq + 1):\n        dp[i + 1][j] += dp[i + 1][j - 1]\n\nans = 0\nfor j in range(1, 2 * sq + 1):\n    ans += dp[K][j] * num[j]\nprint(ans % MOD)\n","from collections import defaultdict, deque, Counter\nfrom heapq import heappush, heappop, heapify\nimport math\nfrom bisect import bisect_left, bisect_right\nimport random\nfrom itertools import permutations, accumulate, combinations\nimport sys\nimport string\n\n\n\nINF = float('inf')\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef I(): return int(sys.stdin.readline())\ndef LS(): return sys.stdin.readline().split()\ndef S(): return sys.stdin.readline().strip()\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef LSR(n): return [LS() for i in range(n)]\ndef SRL(n): return [list(S()) for i in range(n)]\ndef MSRL(n): return [[int(j) for j in list(S())] for i in range(n)]\nmod = 10 ** 9 + 7\n\n\nn, k = LI()\nsqt = int(n ** 0.5)\ndp_mul_num = [1] * sqt + [n \/\/ i - n \/\/ (i + 1) for i in range(1, sqt + 1)][::-1]\ngroup_num = len(dp_mul_num)\ndp = [[0] * group_num for _ in range(k)]\ndp[0] = dp_mul_num\n\n\n\n\n\nfor i in range(k - 1):\n    ret = 0\n    for j in range(group_num):\n        ret = (ret + dp[i][j]) % mod\n        dp[i + 1][group_num - j - 1] = ret * dp_mul_num[group_num - j - 1] % mod\n\n\n\n\nprint(sum(dp[-1]) % mod)\n","from math import sqrt\ninpl = lambda: list(map(int,input().split()))\nMOD = 10**9 + 7\nN, K = inpl()\nsqN = int(sqrt(N))\nbound = [0]*(sqN+2)\nfor i in range(1,sqN+2):\n    bound[i] = N\/\/i\nbound[sqN+1] = sqN\ngroup_size = [0]*(sqN+1)\nfor i in range(1,sqN+1):\n    group_size[i] = bound[i]-bound[i+1]\n\ncur_small = [1] * (sqN+1)\ncur_small[0] = 0\ncur_large = [ s for s in group_size ]\nfor k in range(K-1):\n    prev_small = cur_small\n    cur_small = [0] * (sqN+2)\n    prev_large = cur_large\n    cur_small = [0] * (sqN+2)\n    cur_small[sqN+1] = sum(prev_small[:sqN+1])\n    for n in range(sqN,0,-1):\n        cur_small[n] = (prev_large[n] + cur_small[n+1]) % MOD\n    acc_prev_small = 0\n    for n in range(1,sqN+1):\n        acc_prev_small += prev_small[n]\n        cur_large[n] = acc_prev_small*group_size[n] % MOD\n\nprint((sum(cur_small[:sqN+1])+sum(cur_large[:sqN+1]))%MOD)","import math\n\nmod = 10**9+7\n\nN, K = map(int, input().split())\n\nroot_n = int(math.sqrt(N))\n\nscale = [0 for _ in range(root_n * 2)]\nlast = N\nfor i in range(root_n+1):\n    div = N \/\/ (i+1)\n    if i <= div:\n        scale[i] = 1\n        if i != 0:\n            scale[-i] = last-div\n    last = div\n\n# print(scale)\ndp0 = scale[:]\ndp1 = [None for _ in range(root_n * 2)]\n\nfor _ in range(K-1):\n    sum_val = 0\n    for i in range(root_n * 2):\n        sum_val += dp0[i]\n        dp1[root_n*2 -i-1] = sum_val * scale[root_n*2 -i-1] % mod\n\n    dp0 = dp1[:]\n    # print(dp0)\n\nprint(sum(dp0) % mod)\n\n\n","N, K = (int(i) for i in input().split())\nN += 1\nl1 = []\nl2 = []\nn_ma = 0\nfor i in range(1, N):\n    j = (N-1)\/\/(i+1) + 1\n    if i > j:\n        break\n    elif i == j:\n        l1.append(i)\n        break\n    l1.append(i)\n    l2.append(j)\nl2.reverse()\nL = l1 + l2 + [N]\nM = len(L) - 1\nDP = [[0] * (M+1) for counter1 in range(K+1)]\n\ndef BIT_query(BIT, idx):\n    res_sum = 0\n    while idx > 0:\n        res_sum += BIT[idx]\n        idx -= idx&(-idx)\n    return res_sum\n\ndef BIT_update(BIT, idx, x):\n    while idx <= M:\n        BIT[idx] += x\n        idx += idx&(-idx)\n    return\n\ndef BIT_debug(BIT):\n    return [BIT_query(BIT, i) - BIT_query(BIT, i-1) for i in range(1, M+1)]\n\nMOD = 10**9 + 7\nfor i in range(M):\n    BIT_update(DP[1], i+1, L[i+1]-L[i])\nfor i in range(1, K):\n    for j in range(M):\n        x = BIT_query(DP[i], M-j)\n        x *= L[j+1]-L[j]\n        x %= MOD\n        BIT_update(DP[i+1], j+1, x)\n\nprint(K, M)\n\nprint(BIT_query(DP[K], M)%MOD)","import sys\nsys.setrecursionlimit(10**7) #\u518d\u5e30\u95a2\u6570\u306e\u4e0a\u9650,10**5\u4ee5\u4e0a\u306e\u5834\u5408python\nimport math\nfrom copy import copy, deepcopy\nfrom copy import deepcopy as dcp\nfrom operator import itemgetter\nfrom bisect import bisect_left, bisect, bisect_right#2\u5206\u63a2\u7d22\n#bisect_left(l,x), bisect(l,x)#a\u306f\u30bd\u30fc\u30c8\u6e08\u307f\u3067\u3042\u308b\u5fc5\u8981\u3042\u308a\u3002a\u306e\u4e2d\u304b\u3089x\u672a\u6e80\u306e\u8981\u7d20\u6570\u3092\u8fd4\u3059\u3002right\u3060\u3068\u4ee5\u4e0b\nfrom collections import deque\n#deque(l), pop(), append(x), popleft(), appendleft(x)\n#q.rotate(n)\u3067 \u2192 \u306bn\u56de\u30ed\u30fc\u30c6\u30fc\u30c8\nfrom collections import Counter#\u6587\u5b57\u5217\u3092\u500b\u6570\u30ab\u30a6\u30f3\u30c8\u8f9e\u66f8\u306b\u3001\n#S=Counter(l),S.most_common(x),S.keys(),S.values(),S.items()\nfrom itertools import accumulate,combinations,permutations#\u7d2f\u7a4d\u548c\n#list(accumulate(l))\nfrom heapq import heapify,heappop,heappush\n#heapify(q),heappush(q,a),heappop(q) #q=heapify(q)\u3068\u3057\u306a\u3044\u3053\u3068\u3001\u8fd4\u308a\u5024\u306fNone\n#import fractions#\u53e4\u3044atcoder\u30b3\u30f3\u30c6\u30b9\u30c8\u306e\u5834\u5408GCD\u306a\u3069\u306f\u3053\u3053\u304b\u3089import\u3059\u308b\nfrom functools import lru_cache#pypy\u3067\u3082\u3046\u3054\u304f\n#@lru_cache(maxsize = None)#maxsize\u306f\u4fdd\u5b58\u3059\u308b\u30c7\u30fc\u30bf\u6570\u306e\u6700\u5927\u5024\u30012**n\u304c\u6700\u3082\u9ad8\u52b9\u7387\nfrom decimal import Decimal\n\ndef input(): \n    x=sys.stdin.readline()\n    return x[:-1] if x[-1]==\"\\n\" else x\ndef printe(*x):print(\"## \",*x,file=sys.stderr)\ndef printl(li): _=print(*li, sep=\"\\n\") if li else None\ndef argsort(s, return_sorted=False): \n    inds=sorted(range(len(s)), key=lambda k: s[k])\n    if return_sorted: return inds, [s[i] for i in inds]\n    return inds\ndef alp2num(c,cap=False): return ord(c)-97 if not cap else ord(c)-65\ndef num2alp(i,cap=False): return chr(i+97) if not cap else chr(i+65)\ndef matmat(A,B):\n    K,N,M=len(B),len(A),len(B[0])\n    return [[sum([(A[i][k]*B[k][j]) for k in range(K)]) for j in range(M)] for i in range(N)]\ndef matvec(M,v):\n    N,size=len(v),len(M)\n    return [sum([M[i][j]*v[j] for j in range(N)]) for i in range(size)]\ndef T(M):\n    n,m=len(M),len(M[0])\n    return [[M[j][i] for j in range(n)] for i in range(m)]\ndef main():\n    mod = 1000000007\n    #w.sort(key=itemgetter(1),reversed=True)  #\u4e8c\u500b\u76ee\u306e\u8981\u7d20\u3067\u964d\u9806\u4e26\u3073\u66ff\u3048\n\n    #N = int(input())\n    N, K = map(int, input().split())\n    #A = tuple(map(int, input().split())) #1\u884c\u30d9\u30af\u30c8\u30eb\n    #L = tuple(int(input()) for i in range(N)) #\u6539\u884c\u30d9\u30af\u30c8\u30eb\n    #S = tuple(tuple(map(int, input().split())) for i in range(N)) #\u6539\u884c\u884c\u5217\n    l=1\n    from collections import defaultdict\n    dp=dict()\n    ndp=defaultdict\n    for i in range(K):\n        ndp=dict()\n        l=N\n        s=0\n        while l>0:\n            d=N\/\/l\n            r=N\/\/(d+1)\n            if i==0:\n                s=1\n            else:\n                s+=dp[d]\n            ndp[l]=(l-r)*s%mod\n            l=r\n        dp=ndp\n    ans=0\n    for v in dp.values():\n        ans=ans+v\n        ans%=mod \n    print(ans)\n\n\n\n\n\nif __name__ == \"__main__\":\n    main()","from itertools import accumulate\nN, K = map(int, input().split())\nmod = 10 ** 9 + 7\nsqrt = int(N**(1\/2))\ncount = [N\/\/i - N\/\/(i+1) for i in range(1, N\/\/sqrt)] + [1] * sqrt\nansList = count\nfor _ in range(K):\n    ansList = [(i * j) % mod for i, j in zip(accumulate(reversed(ansList)), count)]\n\nprint(ansList[-1])","# coding: utf-8\n# Your code here!\nMOD = 10**9+7\n\nfrom math import sqrt, floor\n\nn,k = [int(i) for i in input().split()]\nsn = floor(sqrt(n))+1\n\npre = [0]*sn\npre[1] = 1\n\ncur = [1]*(sn)\ncur[0] = 0\n\n#big = n-sn+1\n\nfor _ in range(k-1):\n#    print(cur)\n    new = [sum(cur)%MOD]*(sn); new[0] = 0\n    s = sum(pre)%MOD\n    b=0\n    res=0\n    for j in range(sn-1,0,-1):\n        a = n\/\/j - (sn-1) #ok\u306a\u500b\u6570\n        res += (a-b)*s\n        res %=MOD\n        new[j] += res\n        if new[j] > MOD: new[j] -= MOD\n        s -= pre[j]\n        b=a\n        \n    pre,cur = cur,new\n\n\n#print(pre,cur)\nans =0\nfor j in range(sn-1,0,-1):\n    ans += pre[j]*(n\/\/j - (sn-1))\n    ans %=MOD\n\n\nprint((sum(cur)+ans)%MOD)\n\n\n\n","from heapq import heappush,heappop,heapify\nfrom collections import deque,defaultdict,Counter\nimport itertools\nfrom itertools import permutations,combinations,groupby\nimport sys\nimport bisect\nimport string\nimport math\nimport time\nimport random\ndef S_():\n    return input()\ndef LS():\n    return [i for i in input().split()]\ndef I():\n    return int(input())\ndef MI():\n    return map(int,input().split())\ndef LI():\n    return [int(i) for i in input().split()]\ndef LI_():\n    return [int(i)-1 for i in input().split()]\ndef NI(n):\n    return [int(input()) for i in range(n)]\ndef NI_(n):\n    return [int(input())-1 for i in range(n)]\ndef StoI():\n    return [ord(i)-97 for i in input()]\ndef ItoS(nn):\n    return chr(nn+97)\ndef LtoS(ls):\n    return ''.join([chr(i+97) for i in ls])\ndef GI(V,E,Directed=False,index=0):\n    org_inp=[]\n    g=[[] for i in range(n)]\n    for i in range(E):\n        inp=LI()\n        org_inp.append(inp)\n        if index==0:\n            inp[0]-=1\n            inp[1]-=1\n        if len(inp)==2:\n            a,b=inp\n            g[a].append(b)\n            if not Directed:\n                g[b].append(a)\n        elif len(inp)==3:\n            a,b,c=inp\n            aa=(inp[0],inp[2])\n            bb=(inp[1],inp[2])\n            g[a].append(bb)\n            if not Directed:\n                g[b].append(aa)\n    return g,org_inp\ndef bit_combination(k,n=2):\n    rt=[]\n    for tb in range(n**k):\n        s=[tb\/\/(n**bt)%n for bt in range(k)]\n        rt+=[s]\n    return rt\ndef show(*inp,end='\\n'):\n    if show_flg:\n        print(*inp,end=end)\nYN=['Yes','No']\nmo=10**9+7\ninf=float('inf')\nl_alp=string.ascii_lowercase\nu_alp=string.ascii_uppercase\nts=time.time()\nsys.setrecursionlimit(10**5)\ninput=lambda: sys.stdin.readline().rstrip()\n\ndef ran_input():\n    import random\n    n=random.randint(4,16)\n    rmin,rmax=1,10\n    a=[random.randint(rmin,rmax) for _ in range(n)]\n    return n,a\n\nshow_flg=False\nshow_flg=True\n\n\nans=0\n\nn,k=LI()\nb=[]\n\nfor i in range(1,int(n**0.5)+1):\n    b+=[n\/\/i]\n    b+=[n\/\/(n\/\/i)]\n\nb=sorted(set(b))\nd=[i-j for i,j in zip(b,[0]+b)]\nk+=1\n\nm=len(b)\ndp=[[0]*(m) for j in range(1+k)]\ndp[0][0]=1\n\nfor i in range(k):\n    sdp=[0]\n    #show('dp',dp[i])\n    for j in range(m):\n        sdp.append((sdp[-1]+dp[i][j]*d[j])%mo)\n    sdp=sdp[::-1]\n    #show('sdp',sdp)\n    for j in range(m):\n        dp[i+1][j]=sdp[j]\n\nprint(sdp[0])\n","MOD = 10**9 + 7\nclass mint:\n    def __init__(self, i):\n        self.i = i\n    def __add__(self, m):\n        t = self.i + (m.i if isinstance(m, mint) else m)\n        if t > MOD:\n            t -= MOD\n        return mint(t)\n    def __radd__(self, m):\n        t = self.i + (m.i if isinstance(m, mint) else m)\n        if t > MOD:\n            t -= MOD\n        return mint(t)\n    def __mul__(self, m):\n        return mint(self.i * (m.i if isinstance(m, mint) else m) % MOD)\n    def __sub__(self, m):\n        t = self.i - (m.i if isinstance(m, mint) else (m % MOD))\n        if t < 0:\n            t += MOD\n        return mint(t)\n    def __pow__(self, m):\n        i = self.i\n        return mint(pow(i, m, MOD))\n    def __truediv__(self, m):\n        return mint(self.i * pow(m, MOD - 2, MOD) % MOD)\n    def __repr__(self):\n        return repr(self.i)\n\n\nn, k = map(int, input().split())\n\nl, r = 1, n + 1\nwhile r - l > 1:\n    c = (l + r) \/\/ 2\n    if c ** 2 <= n:\n        l = c\n    else:\n        r = c\nr = l # less than or equal to sqrt(n)\n# 1 ... r - 1, r, (r, n\/r], ... (n\/3, n\/2], (n\/2, n]\n# (a, b] ... count for each elem in (a, b], not sum\n# (r, n\/r] is ignored if r*r == n\ndp = [mint(0) for _ in range(2 * r)]\ndp[0] = mint(1)\nfor _ in range(k):\n    ndp = [mint(0) for _ in range(2 * r)]\n    for i in range(1, r + 1):\n        pre_cnt = dp[i - 1]\n        if i == r and r ** 2 == n:\n            ndp[r - 1] += pre_cnt\n        else:\n            ndp[-i] += pre_cnt\n    for i in range(1, r + 1):\n        if i == r and r ** 2 == n:\n            continue\n        pre_cnt = dp[-i]\n        upper = n \/\/ i\n        lower = r + 1 if i == r else 1 + n \/\/ (i + 1)\n        ndp[i - 1] += pre_cnt * (upper - lower + 1)\n    acc = mint(0)\n    for i in range(r * 2 - 1, -1, -1):\n        if i == r and r ** 2 == n:\n            continue\n        acc += ndp[i]\n        dp[i] = acc\n\nans = mint(0)\nfor i in range(1, r + 1):\n    ans += dp[i - 1]\nfor i in range(1, r + 1):\n    upper = n \/\/ i\n    lower = r + 1 if i == r else 1 + n \/\/ (i + 1)\n    ans += dp[-i] * (upper - lower + 1)\nprint(ans)\n","n,k = [int(x) for x in input().split()]\nmod = 1000000007\nif n == 1:\n    print(1)\n    quit()\nf = [0,n]\ni = 1\nwhile f[i] >= i:\n    i += 1\n    f.append(n\/\/i)\ns = [0]*len(f)\nfor i in range(1,len(f)):\n    s[i] = 1\nfor i in range(2,len(f))[::-1]:\n    if f[i] <= i:\n        s[-1] = f[i-1]-f[i]\n    else:\n        s.append(f[i-1]-f[i])\nMA = len(s)\ndp = [[0]*MA for i in range(k)]\ndp[0] = [s[i] for i in range(MA)]\nfor i in range(MA-1):\n    dp[0][i+1] += dp[0][i]\n    dp[0][i+1] %= mod\nfor l in range(k-1):\n    for i in range(1,MA):\n        j = MA-i\n        dp[l+1][i] += dp[l][j]*s[i]\n        dp[l+1][i] %= mod\n        dp[l+1][i] += dp[l+1][i-1]\n        dp[l+1][i] %= mod\nprint(dp[-1][-1])\n","n,m=map(int,input().split(' '))\nMod=1000000007\nspl=int(n**0.5)+1\nf,k=[i for i in range(spl)]+[n\/\/i for i in range(1,spl)][::-1],2*spl-1\ndp=[0]+[1]*(k-1)\nfor i in range(m):\n\tdp2=[0]*k\n\tfor j in range(1,k):\n\t\tdp2[j]=(dp2[j-1]+dp[k-j]*(f[j]-f[j-1]))%Mod\n\tdp=dp2\nprint(dp[k-1])","N,K = map(int,input().split())\nMOD = 10**9+7\n\nm = 1\na,b = [],[]\nwhile m*m <= N:\n    a.append(m)\n    b.append(N\/\/m)\n    m += 1\nif a[-1] == b[-1]:\n    b.pop()\na += b[::-1]\nw = [b-a for a,b in zip([0]+a, a)]\n\nL = len(a)\ndp = [1]*L\nfor _ in range(K-1):\n    dp2 = [0]*L\n    c = 0\n    for i,v in enumerate(w):\n        c += dp[i] * v\n        dp2[L-1-i] += c\n        dp2[L-1-i] %= MOD\n    dp = dp2\nans = sum(a*b for a,b in zip(w,dp))\nprint(ans%MOD)","import sys\nimport numpy as np\n\nsr = lambda: sys.stdin.readline().rstrip()\nir = lambda: int(sr())\nlr = lambda: list(map(int, sr().split()))\n\nMOD = 10 ** 9 + 7\nN, K = lr()\nM = int(N**.5)\n\n# M+1\u4ee5\u4e0a\u3067\u3001N\u3092\u5272\u308b\u3068x\u306b\u306a\u308b\u3082\u306e\nupper_cnt = np.zeros(M+1, dtype=np.int64) # 1-indexed\nA = np.arange(M+1, dtype=np.int64)\nupper_cnt[1:] = N \/\/ A[1:] - np.maximum(M, N \/\/ (A[1:]+1)) # M\u306e\u6642\u306flower\u3067\u6570\u3048\u308b\u306e\u30670\u306b\n\n# \u6841DP\nlower = np.zeros(M+1, dtype=np.int64) # 1-indexed\nupper = np.zeros(M+1, dtype=np.int64)\n#\u6700\u521d\u306f\u5236\u9650\u306a\u3057\u306a\u306e\u30671\u3092\u7f6e\u3044\u3066\u304a\u304f\nlower[1] = 1\nfor i in range(K):\n    prev_lower = lower.copy()\n    prev_upper = upper.copy()\n    lower_cum = prev_lower.cumsum() % MOD\n    upper_cum = prev_upper.cumsum() % MOD\n    # lower \u3068 upper \u304b\u3089 lower \u3078\n    lower = np.zeros(M+1, dtype=np.int64)\n    lower[1:] += (lower_cum[-1] + upper_cum[-1])\n    lower[1:] -= upper_cum[:-1] # \u5927\u304d\u3059\u304e\u308b\u5024\u3092\u5f15\u304f\n    # upper \u304b\u3089 upper \u306f\u306a\u3057\n    # lower \u304b\u3089 upper \u3078\n    upper = lower_cum * upper_cnt\n    lower %= MOD; upper %= MOD\n\nanswer = (lower[1:].sum() + upper[1:].sum()) % MOD\nprint(answer)\n","from itertools import accumulate as r;n,k=map(int,input().split());m=10**9+7;j=int(n**0.5);c=[n\/\/(i+1)-n\/\/(i+2) for i in range(n\/\/(j+1))]+[1]*j;x=c;exec(\"x=[(y*d)%m for y,d in zip(r(x[::-1]),c)];\"*k);print(x[-1])","#!\/usr\/bin\/python3\n# -*- coding: utf-8 -*-\nimport math\n\nMOD = 1000000007\n\n\n\ndef fact(n):\n  ans = {0}\n  for i in range(1,math.ceil(n**0.5)+1):\n      ans.add(i)\n      ans.add(n\/\/i)\n  return sorted(list(ans))\n\ndef main():\n  N,K = map(int, input().split())\n  dp = [{} for _ in range(K+1)]\n  keys = fact(N)\n  dp[1] = {f:f for f in keys}\n\n  for i in range(1,K):\n    j_prev = 0\n    dp[i+1][0] = 0\n    for j in keys[1:]:\n      dp[i+1][j] = (dp[i+1][j_prev] + (j-j_prev)*dp[i][N\/\/j]) % MOD\n      j_prev = j\n  print(dp[K][N])\n\n\nif __name__ == \"__main__\":\n  main()","import math\nprintn = lambda x: sys.stdout.write(x)\ninn = lambda : int(input())\ninl   = lambda: list(map(int, input().split()))\ninm   = lambda:      map(int, input().split())\nDBG = True  and False\ndef ddprint(x):\n  if DBG:\n    print(x)\n\nR = 10**9+7\nn,k = inm()\nq = int(math.sqrt(n))\na = [ [0]*(q+1) for j in range(k) ]\nb = [ [0]*(q+1) for j in range(k) ]\nc = [0]*(q+1)\nc[1] = n - n\/\/2\nfor i in range(2,q):\n    c[i] = n\/\/i - n\/\/(i+1)\nc[q] = n\/\/q - q\nfor i in range(1,q+1):\n    a[0][i] = 1\n    b[0][i] = c[i]\n\n\nfor j in range(1,k):\n    aacc = [0]*(q+2)\n    bacc = [0]*(q+2)\n    for i in range(1,q+1):\n        aacc[i] = (aacc[i-1] + a[j-1][i])%R\n    for i in range(q,0,-1):\n        bacc[i] = (bacc[i+1] + b[j-1][i])%R\n    for i in range(1,q+1):\n        a[j][i] = (aacc[q]+bacc[i])%R\n        b[j][i] = (aacc[i]*c[i])%R\n\nprint( (sum(a[k-1]) + sum(b[k-1])) % R )\n","import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(1000000)\nfrom collections import deque, Counter, defaultdict\ndef getN():\n    return int(input())\ndef getList():\n    return list(map(int, input().split()))\nimport math\nimport copy\nimport bisect\nMOD = 10**9 + 7\nfrom logging import getLogger, StreamHandler, DEBUG, WARNING\nlogger = getLogger(__name__)\nhandler = StreamHandler()\nhandler.setLevel(DEBUG)\nlogger.setLevel(DEBUG)\n# handler.setLevel(WARNING)\n# logger.setLevel(WARNING)\nlogger.addHandler(handler)\ndef main():\n    n,k = getList()\n\n    # =================\u7d04\u6570\u5217\u6319=================\n    divisors = []\n    tmp_div = n + 1\n    for i in range(1, int(math.sqrt(n)) + 3):\n        if tmp_div * i > n:\n            other = n \/\/ i\n            if i > other:\n                break\n            elif i == other:\n                divisors.append(i)\n                break\n            else:\n                divisors.append(i)\n                divisors.append(other)\n\n    divisors.sort()\n    n_div = len(divisors)\n    # =================\u7d04\u6570\u5217\u6319=================\n\n    # =================dp[0]\u306e\u4f5c\u6210=============\n    diff = [divisors[0]]\n    for i, j in zip(divisors, divisors[1:]):\n        diff.append(j - i)\n    dp = copy.copy(diff)\n    # print(dp)\n    # =================dp[0]\u306e\u4f5c\u6210=============\n\n    for iteration in range(k-1):\n        dp_copy = []\n        tmp = sum(dp) % MOD\n        dp_copy.append((tmp * diff[0]) % MOD)\n        for cid, dp_content in enumerate(range(n_div - 1)):\n            tmp -= dp[n_div - dp_content - 1]\n            dp_copy.append((tmp * diff[cid+1]) % MOD)\n\n        dp = copy.copy(dp_copy)\n\n        # print(dp)\n    print(sum(dp) % MOD)\n    # print(acc)\n    # print(n_div)\nif __name__ == \"__main__\":\n    main()","n, k = list(map(int, input().split()))\nmod = 10 ** 9 + 7\n\nm = n ** 0.5\ncnt = [n \/\/ i - n \/\/ (i + 1) for i in range(1, int(m) + 1)] \ncnt = (cnt + [1 for _ in range(n - sum(cnt))])[::-1]\nnxt = cnt[:]\n\nfor _ in range(k - 1):\n\tcnt = [sum([x * nxt[i] % mod for x in cnt[:(len(cnt) - i)]])  for i in range(len(cnt))]\nprint(sum(cnt) % mod)\n","n,k = map(int,input().split())\nmod = 10**+7\nsub = int(n**0.5)\np = [1]*(sub)\nps = [i for i in range(1,sub+1)]\nl = [i for i in range(1,sub+1)]\nsub = n\/\/l[-1]\nwhile sub > 1:\n    sub -= 1\n    nex = n\/\/sub\n    if nex <= l[-1]:\n        sub -=1\n        nex = n\/\/sub\n    dis = nex-l[-1]\n    l.append(nex)\n    p.append(dis)\n    ps.append(ps[-1]+dis)\nx = len(p)\ndp = [[0]*x for i in range(k)]\ndps = [[0]*x for i in range(k)]\ndp[0] = p\ndps[0] = ps\nfor i in range(1,k):\n    for j in range(x):\n        dp[i][j] += dps[i-1][-1-j]*dp[0][j]\n        dp[i][j] %= mod\n        dps[i][j] = dps[i][j-1]+dp[i][j]\n        dps[i][j] %= mod\n\nprint(sum(dp[-1])%mod)\n","import sys\n\ndef solve():\n    input = sys.stdin.readline\n    N, K = map(int, input().split())\n    mod = 7 + 10 ** 9\n    S = 1\n    while S ** 2 <= N:\n        S += 1\n    DP = [[[0, 0] for _ in range(S)] for _ in range(K)]\n    Rev = [0] * S\n    S -= 1\n    Rev[S] = (N \/\/ S - S) % mod\n    for i in reversed(range(1, S)):\n        Rev[i] = ((N \/\/ i) - (N \/\/ (i + 1))) % mod\n    for i in range(1, S + 1):\n        DP[0][i][0] = 1\n        DP[0][i][1] = Rev[i]\n    for i in range(2, S + 1):\n        DP[0][i][0] += DP[0][i-1][0]\n        DP[0][i][0] %= mod\n    DP[0][S][1] += DP[0][S][0]\n    DP[0][S][1] %= mod\n    for i in reversed(range(1, S)):\n        DP[0][i][1] += DP[0][i+1][1]\n        DP[0][i][1] %= mod\n\n    for i in range(1, K):\n        for j in range(1, S + 1):\n            DP[i][j][0] += DP[i-1][j][1]\n            DP[i][j][1] += (DP[i-1][j][0] * Rev[j]) % mod\n            DP[i][j][1] %= mod\n            DP[i][j][0] += DP[i][j-1][0]\n            DP[i][j][0] %= mod\n        DP[i][S][1] = DP[i][S][0]\n        for j in reversed(range(1, S)):\n            DP[i][j][1] += DP[i][j+1][1]\n            DP[i][j][1] %= mod\n\n    print(DP[K-1][1][1])\n    #print(DP)\n\n    return 0\n\nif __name__ == \"__main__\":\n    solve()","import numpy as np\n\nn, k = list(map(int, input().split()))\nMOD = 10 ** 9 + 7\nl = int(n ** 0.5)\ncoe = [n \/\/ i - l for i in range(l, 0, -1)]\ncoe.append(0)\ncoe.reverse()\ncoe = np.array(coe, dtype=np.int64)\n\ndp1 = np.ones(l + 1, dtype=np.int64)\ndp2 = coe.copy()\ndp1[0] = 0\nfor i in range(k - 1):\n    dp1acc_f = np.add.accumulate(dp1) % MOD\n    dp1acc_b = np.add.accumulate((dp1 * coe % MOD)[::-1])[::-1] % MOD\n    s = dp1acc_f[-1]\n    dp1acc_f = np.roll(dp1acc_f, 1)\n    dp1[1:] = (s + dp2[1:]) % MOD\n    dp2[1:] = (dp1acc_b + dp1acc_f * coe)[1:] % MOD\nans = (dp1.sum() + dp2[1]) % MOD\nprint(ans)\n","from itertools import accumulate\n\nN, K = map(int, input().split())\nmod = 10**9 + 7\n\nxs = []\nx = 1\nwhile x * x <= N:\n    xs.append(N \/\/ x)\n    x += 1\ns = x - 1\ny = 1\nwhile y < N \/\/ y:\n    xs.append(y)\n    y += 1\nxs = list(set(xs))\nxs.sort()\ncompress = {x : i for i, x in enumerate(xs)}\n\ndp = [[0] * len(compress) for _ in range(K)]\nfor x, i in compress.items():\n    dp[-1][i] = x\n\nfor k in range(K-1)[::-1]:\n    cum = list(accumulate([0] + dp[k+1]))\n    for x, i in compress.items():\n        a = max(compress[N \/\/ x], compress[N \/\/ s])\n        dp[k][i] = (cum[-1] - cum[a]) % mod\n\n    b = 1\n    cum = [0] * len(compress)\n    while b < N \/\/ b:\n        cnt = N \/\/ b - N \/\/ (b + 1)\n        cum[compress[b]] = (cum[compress[b]] + cnt * dp[k+1][compress[b]]) % mod\n        b += 1\n    cum = list(accumulate([0] + cum))\n    for x, i in compress.items():\n        b = N \/\/ x\n        if x <= b:\n            continue\n        dp[k][i] += cum[-1] - cum[compress[b]+1]\n        dp[k][i] += (x - N \/\/ (b + 1)) * dp[k+1][compress[b]]\n        dp[k][i] %= mod\nprint(dp[0][-1])","import math\nfrom bisect import bisect_left\n\nMOD = 10**9 + 7\n\n\ndef main():\n    N, K = map(int, input().split())\n    R = int(math.sqrt(N))\n    if N \/\/ R == R:\n        M = R * 2 - 1\n    else:\n        M = R * 2\n    mapping = [0] * (M+1)\n    for i in range(1, R+1):\n        mapping[i] = i\n        mapping[-i] = N\/\/i\n    cnt = [0] * (M+1)\n    for i in range(1, M+1):\n        cnt[i] = mapping[i] - mapping[i-1]\n    dp = [[0] * (M+1) for _ in range(K+1)]\n    dp[0] = list(cnt)\n    for i in range(M):\n        dp[0][i+1] += dp[0][i]\n\n    for i in range(K-1):\n        for j in range(1, M+1):\n            v = N \/\/ mapping[j]\n            idx = bisect_left(mapping, v)\n            dp[i+1][j] = dp[i][idx]\n        for j in range(M):\n            dp[i+1][j+1] = (dp[i+1][j] + dp[i+1][j+1] * cnt[j+1]) % MOD\n    print(dp[K-1][M])\n\n\nif __name__ == \"__main__\":\n    main()\n","N, K = map(int, input().split())\nL = 10**9+7\n\nparts = []\ni = 1\nwhile i<=N:\n    a = N \/\/ i\n    j = N \/\/ a\n    parts.append(j-i+1)\n    i = j+1\n\nC = parts\nfor _ in range(K-1):\n    C_new = []\n    c = 0\n    for i,p in enumerate(parts[::-1]):\n        num_dual = i\n        c += C[i]\n        C_new.append(p * c % L)\n    C = C_new[::-1]\nprint(sum(C) % L)\n","import numpy as np\nN,K = map(int,input().split())\nMOD = 10 ** 9 + 7\nM = int(N**.5)\n\n# M+1\u4ee5\u4e0a\u3067\u3001\u5546\u304c\u3062\u3087\u3046\u3068x\u306b\u306a\u308b\u3084\u3064\nupper_cnt = np.zeros(M+1, dtype=np.int64)\na = np.arange(M+1, dtype=np.int64)\nupper_cnt[1:] = N \/\/ a[1:] - np.maximum(M, N \/\/ (a[1:]+1))\n\n# \u6570\u5217\u306e\u672b\u7aef\u3054\u3068\u306e\u500b\u6570\n# upper\u306b\u3064\u3044\u3066\u306f\u3001\u500b\u6570\u306b\u308f\u305f\u3063\u3066\u5408\u8a08\u3092\u3068\u308b\nlower = np.zeros(M+1, dtype=np.int64)\nupper = np.zeros(M+1, dtype=np.int64)\n# 0\u9805\u76ee\u306b1\u3092\u7f6e\u3044\u3066\u304a\u304f\u3068\u3059\u308b\nlower[1] = 1\nfor k in range(1,K+1):\n    prev_lower = lower\n    prev_upper = upper\n    np.cumsum(prev_lower, out = prev_lower)\n    np.cumsum(prev_upper, out = prev_upper)\n    prev_lower %= MOD\n    prev_upper %= MOD\n    # \u4e0b\u5074 to \u4e0b\u5074\n    lower = np.zeros(M+1, dtype=np.int64)\n    lower += (prev_lower[-1] + prev_upper[-1])\n    lower[1:] -= prev_upper[:-1] # \u5546\u304cn-1\u4ee5\u4e0b\u3060\u3068\u53d7\u3051\u4ed8\u3051\u306a\u3044\n    lower[0] = 0\n    # \u4e0a\u5074 to \u4e0a\u5074\uff1a\u306a\u3044\u306f\u305a\n    # \u4e0b\u5074 to \u4e0a\u5074\uff1a\n    upper = prev_lower * upper_cnt\n    lower %= MOD\n    upper %= MOD\n    \nanswer = (lower.sum() + upper.sum()) % MOD\nprint(answer)\n","MOD = pow(10, 9) + 7\n\ndef main():\n  n, k = map(int, input().split())\n  dyaku = set([1, n])\n  i = 2\n  while i*i<=n:\n    if n \/\/ i not in dyaku:\n      dyaku.add(i)\n      dyaku.add(n\/\/i)\n    i += 1\n  reyaku = [0] + list(sorted(dyaku))\n  ddyaku = {s: i+1 for i, s in enumerate(sorted(dyaku))}\n  dp = [[0 for _ in range(k)] for _ in range(len(dyaku) + 1)]\n  for i in range(1, len(dyaku)+1):\n    dp[i][1] = (((reyaku[i] - reyaku[i-1]) * (n \/\/ reyaku[i])) % MOD + dp[i-1][1]) % MOD\n  for i in range(2, k):\n    for j in range(1, len(dyaku)+1):\n      dp[j][i] = (((reyaku[j] - reyaku[j-1]) * dp[ddyaku[n\/\/reyaku[j]]][i-1]) % MOD + dp[j-1][i]) % MOD\n  print(dp[-1][-1])\n\n\nif __name__ == '__main__':\n  main()","import math\nfrom itertools import chain\n\nN, K = map(int, input().split())\n\nmodulo = 10 ** 9 + 7\nsqrtN  = int(math.sqrt(N))\n\nP = [N \/\/ d for d in range(1, sqrtN + 1)]\n\n# M[i] - \u6b63\u306e\u6574\u6570k\u500b\u3092\u4e26\u3079\u305f\u3082\u306e\u306e\u3046\u3061, \u5148\u982d\u304ci\u3067,\n#        \u96a3\u63a5\u3059\u308b\u6574\u6570\u306e\u7a4d\u304cN\u4ee5\u4e0b\u306e\u3082\u306e\u306e\u500b\u6570 (mod modulo).\n\n# k == 1 \u306e\u3068\u304d\u306f M[i] == 1\nM = {i: 1 for i in chain(P, range(1, P[-1]))}\n\n# M2[i] - M[i] at k\n# M2[i] = sum(M[j] for j such that 1 <= j <= N \/\/ i)\n#       = M2[m] + sum(M[j] for j such that N\/\/m < j <= N\/\/i) (some m > i)\nfor k in range(2, K + 2):\n    M2 = {}\n    M2[N] = M[1]\n    for m, i in zip(P, P[1:]):\n        M2[i]  = M2[m] + sum(M[j] for j in range(N \/\/ m + 1, N \/\/ i + 1))\n        M2[i] %= modulo\n    for i in range(P[-1] - 1, 0, -1):\n        M2[i]  = M2[i + 1] + M[N \/\/ i] * (N \/\/ i - N \/\/ (i + 1))\n        M2[i] %= modulo\n    M = M2\n\nprint(M[1])\n","n,k = map(int, input().split())\nmod = 10**9 + 7\n\nnums = set()\nd = {}\nfor i in range(1,10**6):\n    a = n\/\/i\n    b = 1 + n\/\/(i+1)\n    d[i] = a\n    nums.add(i)\n    nums.add(a)\n    if(i >= b):\n        break\n    d[b] = i\n    nums.add(b)\n\nd = sorted(d.items())\n\ndic_en = {}\ndic_de = {}\nnums = sorted(list(nums))\ncnt = [0] * len(nums)\ndone = 0\nfor i,num in enumerate(nums):\n    dic_en[num] = i\n    dic_de[i] = num\n    cnt[i] = num - done\n    done = num\n\nd = []\nfor num in nums:\n    d.append((dic_en[num],  dic_en[n\/\/num]))\n\nop = cnt[::]\n\ndef update(op):\n    n = len(nums)\n    res = [0] * (n+1)\n    for a,b in d:\n        res[0] += op[a]\n        res[b+1] -= op[a]\n    res[0] %= mod\n    for i in range(1,n):\n        res[i] += res[i-1]\n        res[i] %= mod\n    for i in range(n):\n        res[i] *= cnt[i]\n        res[i] %= mod\n    return res[:-1]\n\nfor i in range(k-1):\n    op = update(op)\n\nans = sum(op) % mod\n\nprint(ans)","import math\nN, K = map(int, (input().split()))\n\nmod = 10**9 + 7\n\nans_array = []\ndivide_max = N\ndivide_count = []\n\nfor i in range(2, math.floor(math.sqrt(N)) + 2):\n    divide = math.floor(N \/ i)\n    ans_array.append(divide_max - divide)\n    divide_count.append(divide_max - divide)\n    divide_max = divide\n\nfor i in range(divide):\n    ans_array.append(1)\nans_array = ans_array[::-1]\n# print(ans_count)\nans_length = len(ans_array)\nans_acc = [0] * ans_length\n\nfor k in range(2, K + 1):\n    ans_acc[0] = ans_array[0]\n    for i in range(1, ans_length):\n        ans_acc[i] = (ans_acc[i - 1] + ans_array[i]) % mod\n    # print(ans_array)\n    # print(ans_acc)\n    for i in range(divide):\n        ans_array[i] = ans_acc[ans_length - i - 1]\n    for i in range(divide, ans_length):\n        ans_array[i] = ans_acc[ans_length - i - 1] * divide_count[\n            ans_length - 1 - i] % mod\n\nans_acc[0] = ans_array[0]\nfor i in range(1, ans_length):\n    ans_acc[i] = (ans_acc[i - 1] + ans_array[i]) % mod\n\nprint(ans_acc[-1])","import sys\ndef MI(): return map(int,sys.stdin.readline().rstrip().split())\n\nN,K = MI()\nmod = 10**9+7\n\nB = [i for i in range(int(N**.5)+1)]\nC = [N\/\/i for i in range(1,int(N**.5)+1)]\nC.reverse()\n\nif B[-1] == C[0]:\n    del C[0]\n\nD = B+C\nA = [D[i+1]-D[i] for i in range(len(D)-1)]\na = len(A)\ndp = [[0]*a for _ in range(K)]\nfor i in range(K):\n    if i == 0:\n        for j in range(a):\n            if j == 0:\n                dp[i][j] = A[j]\n            else:\n                dp[i][j] = dp[i][j-1] + A[j]\n                dp[i][j] %= mod\n    else:\n        for j in range(a):\n            if j == 0:\n                dp[i][j] = dp[i-1][a-j-1]\n            else:\n                dp[i][j] = dp[i][j-1] + dp[i-1][a-j-1]*A[j]\n                dp[i][j] %= mod\n\nprint(dp[-1][-1])\n","N,K=map(int,input().split())\nif N==1:\n    print(1)\n    exit()\nmod=10**9+7\nLayer=[]\na=1\nb=1\nwhile(b<N):\n    a=b\n    b=N\/\/(N\/\/a)+1\n    Layer.append((a,b))\n#print(Layer)\nnum=[x[1]-x[0] for x in Layer]\nM=len(Layer)\n#print(num)\ndp=[[0 for j in range(M+1)] for i in range(K+1)]\ndp[0][0]=1\nsdp=[0 for i in range(M+2)]\nfor k in range(K):\n    for j in range(M+1):\n        sdp[j+1]=(dp[k][j]+sdp[j])%mod\n    for j in range(M):\n        dp[k+1][j]=(sdp[M-j]*num[j])%mod\nans=0\nfor j in range(M+1):\n    ans+=dp[K][j]\n    ans%=mod\nprint(ans)\n","MOD=10**9+7\nn,k=map(int,input().split())\nt=[]#\uff54\uff1dn\/\/j\u306e\u7a2e\u985e\u3092\u6570\u3048\u308b\u306e\u306b\u4f7f\u3046\nt_cnt=[]#t\u3068\u306a\u308bj\u306e\u500b\u6570\n\nfor i in range(1,n+1):\n  tmp=n\/\/i\n  if tmp not in t:\n    t.append(tmp)\n    t_cnt.append(1)\n  else:\n    t_cnt[-1]+=1\n#print(t,t_cnt)\n\nm = len(t)\nans = [[0]*m for i in range(k)]\ns_ans = [0]*m #\u7d2f\u7a4d\u548c\u7528\n\nfor i in range(m):\n  ans[0][i] = t_cnt[i]\nfor i in range(1,k):\n  s_ans[0] = ans[i-1][0]\n  for j in range(1,m):\n    s_ans[j] = s_ans[j-1] + ans[i-1][j]\n  #print(s_ans)\n  for j in range(m):\n    ans[i][j] = s_ans[-1-j] * t_cnt[j]\n#print(ans)\n\nx = 0\nfor i in range(m):\n  x += ans[-1][i]%MOD\nprint(x)","def examA():\n    N = DI()\/dec(7)\n    ans = N\n    print(N)\n    return\n\ndef examB():\n    ans = 0\n    print(ans)\n    return\n\ndef examC():\n    ans = 0\n    print(ans)\n    return\n\ndef examD():\n    ans = 0\n    print(ans)\n    return\n\ndef examE():\n    ans = 0\n    print(ans)\n    return\n\ndef examF():\n    N, K = LI()\n    n = int(N**0.5)\n    C = [] # N\/\/j=index\u3068\u306a\u308bj\u306e\u500b\u6570\n    L = [0]*(2*int(n)) # N\/\/index\u306e\u89e3 =>\u8981\u308a\u307e\u305b\u3093\u3002\u3002\n    for i in range(1,n+1):\n        now = N\/\/i - N\/\/(i+1)\n        C.append(now)\n    for i in range(1,n+1):\n        if N\/\/i==i:\n            continue\n        C.append(1)\n    C.reverse()\n    #print(C)\n    n = len(C)\n    #for i in range(1,n+1):\n    #    L[i-1] = N\/\/i\n    #for i in range(n):\n    #    L[i+n] = n - i\n    #L.reverse()\n    #print(L)\n    dp = [[0]*(n) for _ in range(K)]\n\n    for i in range(n):\n        dp[0][i] = C[i]\n    #print(dp[0])\n    for i in range(K-1):\n        S = 0\n        for j in range(n):\n            S += dp[i][j]\n            S %= mod\n            dp[i+1][n-j-1] = S*C[n-j-1] %mod\n    #print(dp)\n    ans = 0\n    for s in dp[-1]:\n        ans += s\n        ans %= mod\n    print(ans)\n    return\n\nfrom decimal import getcontext,Decimal as dec\nimport sys,bisect,itertools,heapq,math,random\nfrom copy import deepcopy\nfrom heapq import heappop,heappush,heapify\nfrom collections import Counter,defaultdict,deque\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\ndef I(): return int(input())\ndef LI(): return list(map(int,sys.stdin.readline().split()))\ndef DI(): return dec(input())\ndef LDI(): return list(map(dec,sys.stdin.readline().split()))\ndef LSI(): return list(map(str,sys.stdin.readline().split()))\ndef LS(): return sys.stdin.readline().split()\ndef SI(): return sys.stdin.readline().strip()\nglobal mod,mod2,inf,alphabet,_ep\nmod = 10**9 + 7\nmod2 = 998244353\ninf = 10**18\n_ep = dec(\"0.000000000001\")\nalphabet = [chr(ord('a') + i) for i in range(26)]\nalphabet_convert = {chr(ord('a') + i): i for i in range(26)}\n\ngetcontext().prec = 28\n\nsys.setrecursionlimit(10**7)\n\nif __name__ == '__main__':\n    examF()\n\n\"\"\"\n142\n12 9 1445 0 1\nasd dfg hj o o\naidn\n\"\"\"","\nimport sys\ndef input():\n\treturn sys.stdin.readline().strip()\n\nN, K = list(map(int, input().split()))\n\nrootN = int(N**0.5)\nnum_list = [1]*rootN\n\nnow = rootN\nfor num in range(rootN, 0, -1):\n\tx = N\/\/num\n\tnum_list.append(x - now)\n\tnow = x\n\ndp = [[0]*len(num_list) for i in range(K)]\nfor i in range(len(num_list)):\n\tdp[0][i] = num_list[i]\n\n\nmod = 10**9 + 7\nfor k in range(1, K):\n\tsum_before = [dp[k - 1][0]]\n\tfor i in range(1, len(num_list)):\n\t\tsum_before.append(sum_before[-1]+dp[k - 1][i])\n\tfor i in range(len(num_list)):\n\t\tdp[k][i] = (num_list[i]*sum_before[len(num_list) - 1 - i])%mod\n\nprint(sum(dp[-1])%mod)","from math import sqrt\nn, k = map(int, input().split())\nMOD = 10**9 + 7\nmax1 = int(sqrt(n))\ndp1 = [[0 for _ in range(max1+1)] for _ in range(k)]\nfor j in range(1, max1+1):\n\tdp1[0][j] = 1\nmax2 = int(n\/(max1+1))\ndp2 = [[0 for _ in range(max2+1)] for _ in range(k)]\nfor j in range(1, max2+1):\n\tdp2[0][j] = int(n\/j) - int(n\/(j+1))\n\nfor i in range(k-1):\n\tcsum1 = (sum(dp1[i])+sum(dp2[i])) % MOD\n\tdp1[i+1][1] = csum1\n\tfor j in range(2, max1+1):\n\t\tdp1[i+1][j] = (dp1[i+1][j-1] - dp2[i][j-1]) % MOD\n\tcsum2 = sum(dp1[i][:max2+1]) % MOD\n\tdp2[i+1][max2] = (csum2*dp2[0][max2]) % MOD\n\tfor j in range(max2-1, 0, -1):\n\t\tcsum2 -= dp1[i][j+1]\n\t\tcsum2 %= MOD\n\t\tdp2[i+1][j] = (csum2*dp2[0][j]) % MOD\n\nprint((sum(dp1[k-1])+sum(dp2[k-1]))%MOD)","hoge = input().split()\nN = int(hoge[0])\nK = int(hoge[1])\n\nif K == 2:\n  print(int((N*K-1) % (1e9 + 7)))\nelse:\n  hage = round(N \/ 2 - 0.5 + 0.01)\n  print(int((pow(K,K) * hage + (hage-1)*K) % (1e9 + 7)))","\n\"\"\"\n\u53f3\u306b\u304a\u3051\u308b\u306e\u304c\u540c\u3058\u3084\u3064\u306a\u3089\u540c\u4e00\u3067\u6271\u3046\n\u666e\u901a\u306a\u3089\u221aN * \u221aN\u306b\u306a\u3063\u3061\u3083\u3046\n\n\n\"\"\"\n\nN,K = map(int,input().split())\nmod = 10 ** 9 + 7\n\nlis = []\nlis2 = []\n\ni = 1\nwhile i ** 2 <= N:\n\n    if N \/\/ i != i:\n        lis.append(i)\n        lis2.append(N \/\/ i)\n    else:\n        lis.append(i)\n\n    i += 1\n\nlis2.reverse()\nlis += lis2\n\n\ndp = [0] * len(lis)\n\nfor i in range(len(lis)):\n    if i == 0:\n        dp[i] = 1\n    else:\n        dp[i] = lis[i]-lis[i-1]\n\n#print (dp)\n\nfor loop in range(K):\n\n    ndp = [0] * len(lis)\n    nsum = 0\n    \n    for i in range((len(lis))):\n\n        nsum += dp[i]\n        nsum %= mod\n\n        if i != len(lis)-1:\n            ndp[-1-i] += ((lis[-1-i] - lis[-2-i]) * nsum) % mod\n        else:\n            ndp[-1-i] += nsum % mod\n\n    dp = ndp\n\nprint (dp[0])","N, K = map(int, input().split())\nmod = 10**9+7\nn = int(N**0.5)\ndp1 = [[0]*(n+1) for _ in range(K)]\ndp2 = [[0]*(n+1) for _ in range(K)]\nfor i in range(1, n+1):\n    dp1[0][i] = 1\ndp2[0][n] = N\/\/n-n\nfor i in range(1, n):\n    dp2[0][i] = (N\/\/i-N\/\/(i+1))%mod\nfor i in range(1, K):\n    cum = 0\n    for j in range(1, n+1):\n        dp2[i][j] = ((dp1[i-1][j]+cum)%mod*dp2[0][j])%mod\n        cum+=dp1[i-1][j]\n        cum%=mod\n    for j in range(1, n+1)[::-1]:\n        dp1[i][j] = (cum+dp2[i-1][j])%mod\n        cum+=dp2[i-1][j]\n        cum%=mod\nprint((sum(dp1[-1])%mod+sum(dp2[-1])%mod)%mod)","N,K = map(int, input().split())\n# As = [N\/\/i for i in range(1,int(N**0.5)+1)]\n# Bs = [As[i]-As[i+1] for i in range(len(As)-1)]\n# Bs[0] -= 1\n# Bs = sorted(Bs) + [1]\nAs = [] \nfor i in range(1,int(N**0.5)+1):\n    As.append(i)\n    if N\/\/i != i:\n        As.append(N\/\/i)\nAs = sorted(As,reverse=False)\nnums = []\nfor i in range(len(As)-1):\n    nums.append(As[i+1]-As[i])\nnums = [1] + nums\nnums.reverse()\nmod = 10**9 + 7\nans = 0\ndp = [[0] * len(As) for i in range(K+1)]\n\n\nfrom itertools import accumulate\n# print(As,nums)\ndp[0][0] = 1\nfor i in range(K):\n    # 1\u3060\u3068\u5168\u901a\u308a\u5206\u304c\u6210\u308a\u7acb\u3064\u3057\u3001N\u3060\u30681\u901a\u308a\u3002\n    # \u305d\u308c\u305e\u308c\u7a2e\u5225\u306b\u307e\u3068\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3089\u3092\u304b\u3051\u308b\n    acc = list(accumulate(dp[i]))\n    for j in range(len(As)):\n        dp[i+1][len(As)-j-1] = acc[j]*nums[j]%mod\nprint(sum(dp[K])%mod)\n","from itertools import accumulate\nn,k = map(int,input().split())\nx = int(n**0.5)\nmod = 10**9+7\nif x*(x+1)<=n:\n  flg = 1\nelse:\n  flg = 0\nt = 2*x+flg\ndp = [[0 for i in range(t)] for j in range(2)]\nfor i in range(1,t):\n  if i<=x:\n    dp[0][i] = 1\n    dp[1][i] = 1\n  else:\n    p = t-i\n    dp[0][i] = n\/\/p-n\/\/(p+1)\n    dp[1][i] = n\/\/p-n\/\/(p+1)\ndp[1] = list(accumulate(dp[1]))\nfor i in range(2,k+1):\n  dp[1][1:] = dp[1][t:0:-1]\n  for j in range(1,t):\n    dp[1][j] = dp[1][j]*dp[0][j]%mod\n  for j in range(1,t):\n    dp[1][j] = (dp[1][j]+dp[1][j-1])%mod\nprint(dp[1][t-1])","from itertools import accumulate\n\nMOD = 10**9 + 7\n\nN, K = map(int, input().split())\n\ndef N2sqrtN(N):\n    M = int(N**0.5)\n    As = list(range(1, M+1))\n    Bs = [N\/\/A for A in reversed(As)]\n    if As[-1] == Bs[0]:\n        return As + Bs[1:]\n    else:\n        return As + Bs\n\nBs = N2sqrtN(N)\nlenB = len(Bs)\n\nnums = [1]\nfor i in range(lenB-1):\n    nums.append(Bs[i+1]-Bs[i])\n\ndp = [0] * lenB\ndp[0] = 1\nfor i in range(1, K+1):\n    dp = list(accumulate(dp))\n    dp = [dpi*num%MOD for dpi, num in zip(reversed(dp), nums)]\n\nprint(sum(dp) % MOD)\n","n,k=map(int,input().split())\na=int(n**0.5)\nmod=10**9+7\nl=[0]*(a+1)\nfor i in range(a,0,-1):\n    l[i]=i\n    l.append(n\/\/i)\nfor i in range(1,2*a+1):\n    l[-i]=l[-i]-l[-i-1]\ndp=[l]+[[0]*(2*a+1) for i in range(k-1)]\nfor i in range(1,k):\n    t=0\n    for j in range(1,2*a+1):\n        t+=dp[i-1][j]\n        t%=mod\n        dp[i][-j]=t*l[-j]%mod\nans=0\nfor i in dp[-1][1:]:\n    ans+=i\n    ans%=mod\nprint(ans)","def calc_floors(N):\n    # floor(N \/ n) (n = 1, ..., N) \u306e\u3068\u308a\u3046\u308b\u5024\u3068\n    # \u5404floor\u306e\u5024\u3092\u4e0e\u3048\u308bn\u306e\u7bc4\u56f2\uff08\u9589\u533a\u9593\uff09\u3092\u8fd4\u3059\n    n_values = list()\n    n_ranges = list()\n    k = 1\n    while k <= N:\n        # k = floor(N \/ n)  <-->  N\/(k+1) < n <= N\/k\n        # N\/(k+1)\u3088\u308a\u5927\u304d\u3044\u6700\u5c0f\u306e\u6574\u6570\u306f(N + k + 1) \/\/ (k + 1)\n        left, right = (N + k + 1) \/\/ (k + 1), N \/\/ k\n        n_values.append(k)\n        n_ranges.append((left, right))\n        if left == 1:\n            break\n        k = N \/\/ (left - 1)\n    return n_values, n_ranges\n\n\ndef main():\n    MOD = 10 ** 9 + 7\n    N, K = list(map(int, input().split()))\n    n_values, n_ranges = calc_floors(N)\n    # dp[k][i]: k\u500b\u76ee\u307e\u3067\u3067\u984c\u610f\u3092\u6e80\u305f\u3059\uff06\u4e00\u756a\u53f3\u306e\u6570\u304c\u533a\u5206i\u306e\u7bc4\u56f2\u306b\u5165\u308b\u3088\u3046\u306a\u6574\u6570\u306e\u7d44\u306e\u500b\u6570\n    dp = [[0 for _ in range(len(n_values))] for _ in range(K)]\n    dp[0][0] = n_values[0]\n    for i in range(1, len(n_values)):\n        dp[0][i] = n_values[i] - n_values[i - 1]\n    dp[0].reverse()\n    for k in range(1, K):\n        # dp\u306e\u7d2f\u7a4d\u548c\uff08\u5f8c\u308d\u304b\u3089\u9806\u306b\uff09\n        csdp = [0 for _ in range(len(n_values))]\n        csdp[len(n_values) - 1] = dp[k - 1][len(n_values) - 1]\n        for i in range(len(n_values) - 2, -1, -1):\n            csdp[i] = csdp[i + 1] + dp[k - 1][i]\n        # dp\u306e\u66f4\u65b0\n        for i in range(len(n_values)):\n            v = csdp[len(n_values) - i - 1] * (n_ranges[i][1] - n_ranges[i][0] + 1)\n            dp[k][i] = v % MOD\n    ans = 0\n    for i in range(len(n_values)):\n        ans += dp[K - 1][i]\n        ans %= MOD\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()","# using main() makes code faster from the point of view of \"access to variables in global name-space\"\n# def main():\n\n\"\"\" convenient functions\n# for i, a in enumerate(iterable)\n# q, mod = divmod(a, b)\n# divmod(x, y) returns the tuple (x\/\/y, x%y)\n# manage median(s) using two heapq https:\/\/atcoder.jp\/contests\/abc127\/tasks\/abc127_f\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(10**7)\nfrom itertools import accumulate, combinations, permutations, product # https:\/\/docs.python.org\/ja\/3\/library\/itertools.html\n# accumulate() returns iterator! to get list: list(accumulate())\nfrom math import factorial, ceil, floor\ndef factorize(n):\n    \"\"\"return the factors of the Arg and count of each factor\n    \n    Args:\n        n (long): number to be resolved into factors\n    \n    Returns:\n        list of tuples: factorize(220) returns [(2, 2), (5, 1), (11, 1)]\n    \"\"\"\n    fct = []  # prime factor\n    b, e = 2, 0  # base, exponent\n    while b * b <= n:\n        while n % b == 0:\n            n = n \/\/ b\n            e = e + 1\n        if e > 0:\n            fct.append((b, e))\n        b, e = b + 1, 0\n    if n > 1:\n        fct.append((n, 1))\n    return fct\ndef combinations_count(n, r):\n    \"\"\"Return the number of selecting r pieces of items from n kinds of items.\n    \n    Args:\n        n (long): number\n        r (long): number\n    \n    Raises:\n        Exception: not defined when n or r is negative\n    \n    Returns:\n        long: number\n    \"\"\"\n    # TODO: How should I do when n - r is negative?\n    if n < 0 or r < 0:\n        raise Exception('combinations_count(n, r) not defined when n or r is negative')\n    if n - r < r: r = n - r\n    if r < 0: return 0\n    if r == 0: return 1\n    if r == 1: return n\n    numerator = [n - r + k + 1 for k in range(r)]\n    denominator = [k + 1 for k in range(r)]\n    for p in range(2,r+1):\n        pivot = denominator[p - 1]\n        if pivot > 1:\n            offset = (n - r) % p\n            for k in range(p-1,r,p):\n                numerator[k - offset] \/= pivot\n                denominator[k] \/= pivot\n    result = 1\n    for k in range(r):\n        if numerator[k] > 1:\n            result *= int(numerator[k])\n    return result\ndef combinations_with_replacement_count(n, r):\n    \"\"\"Return the number of selecting r pieces of items from n kinds of items allowing individual elements to be repeated more than once.\n    \n    Args:\n        n (long): number\n        r (long): number\n    \n    Raises:\n        Exception: not defined when n or r is negative\n    \n    Returns:\n        long: number\n    \"\"\"\n    if n < 0 or r < 0:\n        raise Exception('combinations_with_replacement_count(n, r) not defined when n or r is negative')\n    elif n == 0:\n        return 1\n    else:\n        return combinations_count(n + r - 1, r)\nfrom bisect import bisect_left, bisect_right\nfrom collections import deque, Counter, defaultdict # https:\/\/docs.python.org\/ja\/3\/library\/collections.html#collections.deque\nfrom heapq import heapify, heappop, heappush, heappushpop, heapreplace,nlargest,nsmallest # https:\/\/docs.python.org\/ja\/3\/library\/heapq.html\nfrom copy import deepcopy, copy # https:\/\/docs.python.org\/ja\/3\/library\/copy.html\nfrom operator import itemgetter\n# ex1: List.sort(key=itemgetter(1))\n# ex2: sorted(tuples, key=itemgetter(1,2))\nfrom functools import reduce\ndef chmin(x, y):\n    \"\"\"change minimum\n    if x > y, x = y and return (x, True).\n    convenient when solving problems of dp[i]\n    \n    Args:\n        x (long): current minimum value\n        y (long): potential minimum value\n    \n    Returns:\n        (x, bool): (x, True) when updated, else (x, False)\n    \"\"\"\n    if x > y:\n        x = y\n        return (x, True)\n    else:\n        return (x, False)\ndef chmax(x, y):\n    \"\"\"change maximum\n    if x < y, x = y and return (x, True).\n    convenient when solving problems of dp[i]\n    \n    Args:\n        x (long): current maximum value\n        y (long): potential maximum value\n    \n    Returns:\n        (x, bool): (x, True) when updated, else (x, False)\n    \"\"\"\n    if x < y:\n        x = y\n        return (x, True)\n    else:\n        return (x, False)\n\nfrom fractions import gcd # Deprecated since version 3.5: Use math.gcd() instead.\ndef gcds(numbers):\n    return reduce(gcd, numbers)\ndef lcm(x, y):\n    return (x * y) \/\/ gcd(x, y)\ndef lcms(numbers):\n    return reduce(lcm, numbers, 1)\n\n# first create factorial_list\n# fac_list = mod_factorial_list(n)\nINF = 10 ** 18\nMOD = 10 ** 9 + 7\nmodpow = lambda a, n, p = MOD: pow(a, n, p) # Recursive function in python is slow!\ndef modinv(a, p = MOD):\n    # evaluate reciprocal using Fermat's little theorem:\n    # a**(p-1) is identical to 1 (mod p) when a and p is coprime\n    return modpow(a, p-2, p)\ndef modinv_list(n, p = MOD):\n    if n <= 1:\n        return [0,1][:n+1]\n    else:\n        inv_t = [0,1]\n        for i in range(2, n+1):\n            inv_t += [inv_t[p % i] * (p - int(p \/ i)) % p]\n        return inv_t\ndef modfactorial_list(n, p = MOD):\n    if n == 0:\n        return [1]\n    else:\n        l = [0] * (n+1)\n        tmp = 1\n        for i in range(1, n+1):\n            tmp = tmp * i % p\n            l[i] = tmp\n        return l\ndef modcomb(n, k, fac_list = [], p = MOD):\n    # fac_list = modfactorial_list(100)\n    # print(modcomb(100, 5, modfactorial_list(100)))\n    from math import factorial\n    if n < 0 or k < 0 or n < k: return 0\n    if n == 0 or k == 0: return 1\n    if len(fac_list) <= n:\n        a = factorial(n) % p\n        b = factorial(k) % p\n        c = factorial(n-k) % p\n    else:\n        a = fac_list[n]\n        b = fac_list[k]\n        c = fac_list[n-k]\n    return (a * modpow(b, p-2, p) * modpow(c, p-2, p)) % p\ndef modadd(a, b, p = MOD):\n    return (a + b) % MOD\ndef modsub(a, b, p = MOD):\n    return (a - b) % p\ndef modmul(a, b, p = MOD):\n    return ((a % p) * (b % p)) % p\ndef moddiv(a, b, p = MOD):\n    return modmul(a, modpow(b, p-2, p))\n\n\"\"\" initialize variables and set inputs\n# initialize variables\n    # to initialize list, use [0] * n\n    # to initialize two dimentional array, use [[0] * N for _ in range(N)]\n# set inputs\n    # open(0).read() is a convenient method:\n    # ex) n, m, *x = map(int, open(0).read().split())\n    #     min(x[::2]) - max(x[1::2])\n    # ex2) *x, = map(int, open(0).read().split())\n    #     don't forget to add comma after *x if only one variable is used\n# preprocessing\n    # transpose = [x for x in zip(*data)]\n    # ex) [[1, 2, 3], [4, 5, 6], [7, 8, 9]] => [(1, 4, 7), (2, 5, 8), (3, 6, 9)]\n    # flat = [flatten for inner in data for flatten in inner]\n    # ex) [[1, 2, 3], [4, 5, 6], [7, 8, 9]] => [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# calculate and output\n    # output pattern\n    # ex1) print(*l) => when l = [2, 5, 6], printed 2 5 6\n\"\"\"\n\n# functions used\nr = lambda: sys.stdin.readline().strip()\nr_int = lambda: int(r())\nR = lambda: list(map(int, r().split()))\nRfloat = lambda: list(map(float, r().split()))\nRtuple = lambda: tuple(map(int, r().split()))\nRmap = lambda: map(int, r().split())\n\n\"\"\" how to treat input\n# single int: int(r())\n# single string: r()\n# single float: float(r())\n# line int: R()\n# line string: r().split()\n# line (str, int, int): [j if i == 0 else int(j) for i, j in enumerate(r().split())]\n# lines int: [R() for _ in range(n)]\n\"\"\"\n\n# for test\n# sys.stdin = open('sample.txt') \n\n# ----------------------------------\n# main\nN, K = R()\n\ndvd = [0] * N\ndvd_cnt = [0] * N\ncount = -1\n# define group\nfor i in range(1, N+1):\n    if dvd[count] != N \/\/ i:\n        count += 1\n        dvd[count] = N \/\/ i        \n    dvd_cnt[count] += 1\nelse:\n    dvd = dvd[:count+1]\n    dvd_cnt = dvd_cnt[:count+1]\n    acc_cnt = list(accumulate(dvd_cnt))\n    dvdlen = count+1\n    dvd_prod = [0] * dvdlen\n\nfor i in range(dvdlen):\n    count = 0\n    target = dvd[i]\n    for j in range(dvdlen):\n        if target * dvd[dvdlen-1-j] <= N:\n            count += 1\n        else:\n            dvd_prod[i] = count\n            break\n    else:\n        dvd_prod[i] = count\n\ndp = [[0] * K for _ in range(dvdlen)]\nfor j in range(dvdlen):\n    dp[j][0] = dvd_cnt[j]\n    \nfor j in range(1, K):\n    for i in range(dvdlen):\n        for k in range(dvd_prod[dvdlen-1-i]):\n            dp[i][j] += dp[k][j-1]\n        else:\n            dp[i][j] *= dvd_cnt[i]\n            dp[i][j] %= MOD\nprint(sum([dp[i][K-1] for i in range(dvdlen)]) % MOD)\n\n# end of main\n# ----------------------------------\n\n\"\"\"memo: how to use defaultdict of list\n# initialize\nDic = defaultdict(list)\n# append \/ extend\nDic[x].append(y)\n# for\nfor k, v in Dic.items():\n\"\"\"\n\n# if __name__ == '__main__':\n#     main()","N,K = map(int, input().split())\n\nL = [N]\nc = 2\nwhile c < N**0.5:\n    if L[-1] != N\/\/c:\n        L.append(N\/\/c)\n    c += 1\nif c > N**0.5:\n    c -= 1\n    L.append(c)\nelse:\n    L.append(c)\n\n\nL.reverse()\ndp = [[0 for j in range(c+len(L))] for i in range(K+1)]\n\nfor j in range(1, c+1):\n    dp[2][j] = N\/\/j\nfor j in range(1, len(L)):\n    dp[2][j+c] = N\/\/L[j]*(L[j]-L[j-1])\n\nfor i in range(2, K):\n    dp[i+1][1] = sum(dp[i])\n    for j in range(2, c+len(L)):\n        dp[i+1][j] = dp[i+1][j-1]-dp[i][len(dp[0])+1-j]\n        if j > c:\n            dp[i+1][j] *= (L[j-c]-L[j-c-1])\n#    for j in range(1, len(L)):\n#        dp[i+1][j+c] *= (L[j]-L[j-1])\n        \n\nprint(sum(dp[K])%(10**9+7))","import sys\ninput = sys.stdin.readline\nN, K = map(int, input().split())\nP = 110000\nMOD = 10 ** 9 + 7\nS = [0] * P\ndp = [[0] * P for i in range(110)]\nnum = [0] * P\ni = 1\nt = 0\nwhile i <= N:\n    j = N \/\/ i\n    if i <= j:\n        num[t] = 1\n        t += 1\n        i += 1\n    else:\n        num[t] = N \/\/ j - i + 1\n        i = N \/\/ j + 1\n        t += 1\n\n\ndp[0][0] = 1\nfor k in range(K):\n    S = [0] * P\n    for j in range(t + 1):\n        S[j + 1] = S[j] + dp[k][j]\n        S[j + 1] %= MOD\n    for j in range(t):\n        dp[k + 1][j] = S[t - j] * num[j]\n        dp[k + 1][j] %= MOD\n\nans = 0\nfor i in range(t + 1):\n    ans += dp[K][i]\n    ans %= MOD\nprint(ans)\n\n","mod=1000000007\nn,k=map(int,input().split())\ns=int(n**0.5)\nNum=[0]*(s+1)\nfor i in range(s,0,-1):\n    Num[i]=i\n    Num.append(n\/\/i)\nl=len(Num)\nfor i in range(1,l):\n    Num[-i]=Num[-i]-Num[-i-1]\nDP=[[0]*l for _ in range(k)]\nDP[0]=Num[:]\nfor i in range(1,k):\n    tmp=0\n    for j in range(1,l):\n        tmp+=DP[i-1][j]\n        tmp%=mod\n        DP[i][-j]=(tmp*Num[-j])%mod\nans=0\nfor i in DP[-1][1:]:\n    ans+=i\n    ans%=mod\nprint(ans)","# from https:\/\/atcoder.jp\/contests\/abc132\/submissions\/6187293\n\ndef main():\n    N, K = map(int, input().split())\n\n    MOD = 10 ** 9 + 7\n    r = int(N ** 0.5 + 1)\n    z = [i for i in range(r)] + [N \/\/ i for i in range(1, r)][::-1]\n    m = len(z)\n    pre = [0] + [1] * (m - 1)\n    for _ in range(1, K+1):\n        dp = [0] * m\n        for i in range(1, m):\n            dp[i] = (dp[i-1] + pre[m-i] * (z[i] - z[i-1])) % MOD\n        pre = dp\n    print(dp[-1])\n\n\nmain()","N, K = list(map(int, input().split()))\n\nimport collections\npairs = collections.Counter()\nfor n in range(1, N +1):\n    pairs[n] = N \/\/ n\n\nans = 0\nfor n in range(1, N+1):\n    candidates = [pairs[n]]\n    for _ in range(K-1):\n        new_candidates  = []\n        for c in candidates:\n            for k in range(1, c+1):\n                new_candidates.append(pairs[k])\n        candidates = new_candidates\n    ans += len(candidates)\nprint(ans)","N, K = map(int, input().split())\nConst = []\npc = N\nfor i in range(1, 3200):\n    c = N\/\/i\n    if pc>i-1:\n        Const.append(pc - c)\n    if i*i>N:\n        sqrtN = i-1\n        break\n    pc = c\n#if sqrtN*sqrtN!=N:\n#    Const[-1] -= 1\n\nlen_dp = sqrtN + len(Const)\ndp = [[0]*(len_dp) for _ in range(K)]\ndp0 = dp[0]\n\n\nfor i in range(1, sqrtN+1):\n    dp0[i] = 1\n    if i<len(Const):\n        dp0[-i] = Const[i]\n\ncum_dp0 = []\nc = 0\nfor v in dp0:\n    c += v\n    cum_dp0.append(c)\nmod = 10**9+7\ndp_old = cum_dp0\nfor _ in range(K-1):\n    print(dp_old)\n    dp = [0]*(2*sqrtN+2)\n    for i in range(1,len_dp):\n        dp[i] = dp_old[-i] + dp[i-1] % mod\n        if i > sqrtN:\n            dp[i] *= Const[-(i-sqrtN)]\n            print(Const[-(i-sqrtN)])\n            dp[i] %= mod\n    dp_old = dp\nprint(dp)\n","N, K = map(int, input().split())\n\ndp = [[0]*(N+1) for _ in range(K+1)]\ndp[1] = [1]*(N+1)\n\nfor i in range(K):\n    for j in range(1, N+1):\n        for k in range(1, (N\/\/j)+1):\n            dp[i+1][k] += dp[i][j]\n\nprint(sum(dp[-1]))\n","import sys\ninput = sys.stdin.readline\nimport numpy as np\nMOD = 10**9+7\n  \nn, k = map(int, input().split())\nS = set()\ni = 1\nwhile i * i <= n:\n  S.add(i)\n  S.add(n\/\/i)\n  i += 1\nL = np.array([0] + sorted(S), dtype=np.int64)\nl = len(L) - 1\nnum = np.diff(L)\ndp = np.zeros(l, dtype=np.int64)\ndp[0] = 1\nfor _ in range(k):\n  A = np.cumsum(dp)\n  dp = A[::-1] * num\n  dp %= MOD\nans = dp.sum() % MOD\nprint(ans)","import bisect\nimport heapq\nimport sys\nimport itertools\nimport queue\n\n\ninput = sys.stdin.readline\nsys.setrecursionlimit(100000)\nmod = 10 ** 9 + 7\n\n\nclass V:\n    def __init__(self, f):\n        self.f = f\n        self.v = None\n\n    def __str__(self):\n        return str(self.v)\n\n    def ud(self, n):\n        if self.v is None:\n            self.v = n\n        else:\n            self.v = self.f(self.v, n)\n\n    def get(self):\n        return self.v\n\n\ndef read_values():\n    return map(int, input().split())\n\n\ndef read_list():\n    return list(read_values())\n\n\ndef P(N):\n    D = []\n    for n in range(1, int(N ** 0.5) + 1):\n        D.append(n)\n        if N \/\/ n != n:\n            D.append(N \/\/ n)\n    D.sort()\n    return D\n\n\ndef main():\n    N, K = read_values()\n    D = P(N)\n    C = [(D[i] - D[i - 1]) % mod if i != 0 else D[i] for i, d in enumerate(D)]\n    dp = [0] * len(D)\n    S = [D] + [[0] * len(D) for k in range(K - 1)]\n    I = [bisect.bisect_left(D, N \/\/ d) for d in D]\n\n    for k in range(1, K):\n        for i in range(len(D)):\n            j = I[i]\n            dp[i] = (S[k - 1][j] * C[i]) % mod\n            S[k][i] = (S[k][i - 1] + dp[i]) % mod\n    print(S[-1][-1] % mod)\n\n\nif __name__ == \"__main__\":\n    main()\n","from math import sqrt\n\nN,K=map(int,input().split())\nmod=10**9+7\n\nm=int(sqrt(N))\nif N\/\/(m+1)==m:\n    dp=[[[0  for i in range(0,2)] for j in range(0,int(sqrt(N)))] for k in range(0,K+1)]\n\n    for i in range(0,int(sqrt(N))):\n        dp[1][i][1]=1\n        dp[1][i][0]=(N\/\/(i+1)-N\/\/(i+2))\n\n    for k in range(2,K+1):\n        s=0\n        for i in range(0,int(sqrt(N))):\n            s=(s+dp[k-1][i][1])%mod\n            dp[k][i][0]=(s*(N\/\/(i+1)-N\/\/(i+2)))%mod\n\n        for j in range(0,int(sqrt(N))):\n            i=int(sqrt(N))-j-1\n            s=(s+dp[k-1][i][0])%mod\n            dp[k][i][1]=s\n\n    ans=sum(dp[K][i][0]+dp[k][i][1] for i in range(0,int(sqrt(N))))%mod\n    print(ans)\n\nelse:\n    dp0=[[0 for i in range(0,int(sqrt(N))-1)] for k in range(0,K+1)]\n    dp1=[[0 for i in range(0,int(sqrt(N)))] for k in range(0,K+1)]\n\n    for i in range(0,int(sqrt(N))-1):\n        dp0[1][i]=(N\/\/(i+1)-N\/\/(i+2))\n        dp1[1][i]=1\n\n    dp1[1][-1]=1\n\n    for k in range(2,K+1):\n        s=0\n        for i in range(0,int(sqrt(N))-1):\n            s=(s+dp1[k-1][i])%mod\n            dp0[k][i]=(s*(N\/\/(i+1)-N\/\/(i+2)))%mod\n\n        s=(s+dp1[k-1][int(sqrt(N))-1])%mod\n        dp1[k][int(sqrt(N))-1]=s%mod\n        for j in range(1,int(sqrt(N))):\n            i=int(sqrt(N))-j-1\n            s=(s+dp0[k-1][i])%mod\n            dp1[k][i]=s\n\n    ans=sum(dp0[K][i]+dp1[K][i] for i in range(0,int(sqrt(N))-1))%mod\n    ans=(ans+dp1[K][-1])%mod\n\n    print(ans)\n","#include <bits\/stdc++.h>\n#define N 32768\n#define M 0x3B9ACA07LL\nlong long a[N]={},b[N],c[N]={},d[N];\n#define REP(i,n)for(int i=0;i<n;i++)\nint main(){\nint n,k; std::cin>>n>>k;\nfor(int i=1;i<N;i++)a[i]=std::min(i,n),b[i]=n\/i;\nREP(j,k-1){\nfor(int i=1;i<N;i++)c[i]=(c[i-1]+b[i])%M;\nd[N-1]=c[n\/(N-1)];\nfor(int i=N-2;i>=1;i--)d[i]=(d[i+1]+a[i]*(n\/i-n\/(i+1)))%M;\nstd::swap(a,c);\nstd::swap(b,d);\n}\nstd::cout<<b[1];\n}\n","import sys\ninput = sys.stdin.readline\nimport math\n\nmod = 10**9+7\nN, K = map(int, input().split())\nK -= 1\n\nP = set()\ninv = {}\nfor i in range(1, int(math.sqrt(N)+2)):\n    P.add(i)\n    P.add(N\/\/i)\n    if i not in inv:\n        inv[i] = N\/\/i\n    if N\/\/i not in inv:\n        inv[N\/\/i] = i\n\nP1 = sorted(list(P))\n\nT = len(P1)\n\nM = [1]\nfor i in range(T-1):\n    M.append(P1[i+1]-P1[i])\n\n\nco_to_ind = {}\nfor i, p in enumerate(P1):\n    co_to_ind[p] = i\n\nInv = []\nfor p in P1:\n    Inv.append(co_to_ind[inv[p]])\n\ndp = [[0]*T for _ in range(K+1)]\n\ndp[0] = M\n\nfor i in range(K):\n    tosum = [0]*T\n    for ik in range(T):\n        j = Inv[ik]\n        tosum[j] = (tosum[j] + dp[i][ik]) % mod\n\n    sumup = 0\n    for ik in reversed(range(T)):\n        sumup = (sumup + tosum[ik]) % mod\n        dp[i+1][ik] = sumup * M[ik] % mod\n\nans = 0\nfor t in range(T):\n    ans = (ans + dp[K][t]) % mod\n\nprint(ans)","n,k=map(int,input().split())\nmd=10**9+7\na=[]\npre=n\ncnt=0\nfor i in range(1,n+1):\n    j=n\/\/i\n    if j==pre:\n        cnt+=1\n    elif j==1:\n        a.append([pre,cnt])\n        a.append([1,n+1-i])\n        break\n    else:\n        a.append([pre,cnt])\n        cnt=1\n        pre=j\nm=len(a)\na=a[::-1]\ndp0=[a0*a1 for a0,a1 in a]\nfor _ in range(k-2):\n    s=0\n    dp1=[0]*m\n    for i,(a0,a1) in enumerate(a):\n       s+=dp0[m-1-i]\n       dp1[i]=s*a1\n    dp0=dp1\nprint(sum(dp0))\n","def limit(last,N):\n  return(int(N\/last))\n\ndef loop(last,remain,N):\n  su=0\n  if remain==0:\n    return(1)\n  else:\n    for i in range(int(N\/last)):\n      times=1\n      times=times*loop(i+1,remain-1,N)\n      su+=times\n  return(su)\n\n\nN,K=map(int,input().split())\nssu=loop(1,K,N)\nprint(ssu%1000000007)","import numpy as np\nN, K = map(int,input().split())\nMOD = 10**9+7\ndiv = list(range(1, int(np.sqrt(N))+1))\nL1 = len(div)\ndiv2 = [N\/\/val for val in div]\ndiv2.sort()\nif div[-1] == div2[0]:\n    div2.remove(div2[0])\nL2 = len(div2)\nL = L1+L2\nls = [1]*L1 + [0]*L2\ntmp = div[-1]\nfor i,val in enumerate(div2):\n    ls[i+L1] = val-tmp\n    tmp = val\ndp = [0]*L\ndp = np.zeros((L), dtype='int64')\nls = np.array(ls, dtype='int64')\ndp[:] = ls\nr = np.zeros(L+1, dtype='int64')\nr[:-1] = np.cumsum(dp, dtype='int64')[::-1]\nfor i in range(K-1):\n    dp = (r[:-1]*ls)%MOD\n    r[:-1] = np.cumsum(dp, dtype='int64')[::-1]\nprint(r[0]%MOD)\n"],"raw_generations":["# N\u304c100\u4ee5\u4e0b\u306e\u6642\u306f\u5168\u90e8\u308c\u3063\u304d\u3087\n\nimport math\nN, K = map(int, input().split())\nmod = 10**9+7\n\n\ndef rev(X):\n    return pow(X, mod-2, mod)\n\n\nif N <= 100:\n    dp = [[0 for i in range(N+2)] for i in range(K+1)]\n    for i in range(1, N+1):\n        dp[1][i] += 1\n    for i in range(2, K+1):\n        for j in range(1, N+1):\n            dp[i][1] += dp[i-1][j]\n            dp[i][N\/\/j+1] -= dp[i-1][j]\n        for j in range(1, N+2):\n            dp[i][j] += dp[i][j-1]\n    ans = 0\n    for i in range(1, N+1):\n        ans += dp[K][i]\n    print(ans % mod)\n    exit()\n\n\nelse:\n    # N>100\n    ans = 0\n    L = math.floor(math.sqrt(N))\n    B = math.floor(N\/L)\n    dp = [[0 for i in range(L+B)] for i in range(K+1)]\n    cnt = [0 for i in range(L+B)]\n    for i in range(1, B+1):\n        dp[1][i] += 1\n        cnt[i] = 1\n    for i in range(B+1, B+L):\n        x = B+L-i\n        dp[1][i] += N\/\/x-N\/\/(x+1)\n        cnt[i] = N\/\/x-N\/\/(x+1)\n    for i in range(2, K+1):\n        S = sum(dp[i-1])%mod\n        for j in range(1, L+B-1):\n            dp[i][j] = (S*cnt[j]) % mod\n            S -= dp[i-1][-j]\n        dp[i][L+B-1] = (S*cnt[L+B-1]) % mod\n    for i in range(1, L+B):\n        ans += dp[K][i]\n        ans %= mod\n    print(ans%mod)\n    exit()","import sys\nsys.setrecursionlimit(2147483647)\nINF=float(\"inf\")\nMOD=10**9+7\ninput=lambda :sys.stdin.readline().rstrip()\ndef resolve():\n    n,k=map(int,input().split())\n    s=set()\n    for i in range(1,1+int(n**.5)):\n        s.add(i)\n        s.add(n\/\/i)\n    A=sorted(s)\n    m=len(A)\n    coef=[0]*m\n    coef[0]=1\n    for i in range(1,m):\n        coef[i]=A[i]-A[i-1]\n    dp=[0]*m\n    dp[0]=1\n    for i in range(k):\n        for j in range(m-1):\n            dp[j+1]+=dp[j]\n            dp[j+1]%=MOD\n        ndp=[0]*m\n        for j in range(m):\n            ndp[j]=dp[m-j-1]*coef[j]\n            ndp[j]%=MOD\n        dp=ndp\n    print(sum(dp)%MOD)\nresolve()","import math\nimport os\nimport sys\nfrom functools import lru_cache\n\nif os.getenv(\"LOCAL\"):\n    sys.stdin = open(\"_in.txt\", \"r\")\n\nsys.setrecursionlimit(2147483647)\nINF = float(\"inf\")\nIINF = 10 ** 18\n\nMOD = 10 ** 9 + 7\nN, K = list(map(int, sys.stdin.readline().split()))\n\n\n@lru_cache(maxsize=None)\ndef next_max(n):\n    # \u3042\u308b\u6570\u3068\u96a3\u308a\u5408\u308f\u305b\u306b\u306a\u308c\u308b\u6570\n    return int(N \/\/ n)\n\n\nNM = []\nprev = 0\nfor i in range(1, int(math.sqrt(N)) + 2):\n    NM.append(N - next_max(i) - prev)\n    prev = (N - next_max(i))\n\n\n# @lru_cache(maxsize=None)\n# @debug\n# def rec1(n, k):\n#     if k <= 1:\n#         return n\n#\n#     ret = 0\n#     cnt = n\n#     while cnt > 0:\n#         i = next_max(cnt)\n#         p = NM[i] if i < len(NM) else 1\n#         ret = (ret + rec1(i, k - 1) * p) % MOD\n#         cnt -= p\n#     return ret\n#\n#\n# #\n# # ans = rec1(N, K)\n# # print(ans % MOD)\n\n\n@lru_cache(maxsize=None)\ndef rec(n, k):\n    if n <= 0:\n        return 0\n    if k <= 1:\n        return n\n\n    i = next_max(n)\n    p = NM[i] if i < len(NM) else 1\n    ret = rec(i, k - 1)\n    cum = rec(n - p, k)\n    ret = ret * p % MOD\n    return (cum + ret) % MOD\n\n\nans = rec(N, K)\nprint(ans % MOD)\n","N, K = map(int, input().split())\nMOD = 10**9 + 7\n\nnum = []\nnow = N + 1\ni = 1\nwhile True:\n  r = N \/\/ (i+1) + 1\n  if r == now:\n    break\n  num.append(now - r)\n  now = r\n  i += 1\n  \nnum += [1] * (N - sum(num))\nn = len(num)\ndp = [[0]*n for i in range(K)]\nfor _n in range(n):\n  dp[0][_n] = num[_n]\n\nfor i in range(1, K):\n  s = 0\n  for _n in range(n):\n    j = n - 1 - _n\n    s += dp[i-1][j] % MOD\n    s %= MOD\n    dp[i][_n] = s * num[_n] % MOD\n\nans = sum(dp[-1])\nprint(ans % MOD)","#!\/usr\/bin\/env python3\n# -*- coding: utf-8 -*-\nN, K = list(map(int, input().split()))\nmax_i = min(K, N - K + 1)\n\nMAX = max_i * 2\nPRIME = 10 ** 9 + 7\n\nfac = [0] * MAX\nfinv = [0] * MAX\n\n\ndef invMod(a, m):\n    a %= m\n    b, x, y = m, 1, 0\n    while b:\n        t = a \/\/ b\n        a -= t * b\n        a, b = b, a\n        x -= t * y\n        x, y = y, x\n    return x % m\n\n\ndef binomInit():\n    fac[0] = fac[1] = 1\n    finv[0] = finv[1] = 1\n    for i in range(2, MAX):\n        fac[i] = (fac[i - 1] * i) % PRIME\n        finv[i] = (finv[i - 1] * invMod(i, PRIME)) % PRIME\n        \n\ndef binom(n, k):\n    if n < 0 or k < 0 or n < k:\n        return 0\n    return (fac[n] * finv[k] * finv[n - k]) % PRIME\n\n\nbinomInit()\n    \n\nfor i in range(1, max_i + 1):\n    blue_part = binom(K - 1, i - 1)\n    red_part = binom(N - K + 1, i)\n    print((blue_part * red_part) % PRIME)\n","from numpy import int_\n\nmod = 10 ** 9 + 7\n\nN, K = map(int, input().split())\n\nM = int(N ** 0.5)\n\nT = [N \/\/ i - N \/\/ (i + 1) for i in range(1, M + 1)]\nA = int_([1] * (N - sum(T)) + T[::-1])\n\ndp = A[:]\nfor _ in range(K - 1):\n    dp = A * dp.cumsum()[::-1] % mod\n\nprint(sum(dp) % mod)","# -*- coding: utf-8 -*-\n\nN, K = map(int, input().split())\nmod = 10**9 + 7\n\n\ndef re_count(n, i):\n    # n \u306f\u524d\u306e\u6570\u5024\n    # i \u306f\u5f8c\u308d\u304b\u3089\u30ab\u30a6\u30f3\u30c8\n    ans = 0\n    if i == 1:\n        return N \/\/ n\n    for x in range(1, N \/\/ n+1):\n        ans += re_count(x, i-1)\n    return ans % mod\n\nprint(re_count(1, K))\n","N, K = map(int, input().split())\nMOD = 10**9 + 7\n\n# dp[i][x] := i\u6587\u5b57\u76ee\u307e\u3067\u3002\u6700\u5f8c\u304cx\u3068\u306a\u308b\u3082\u306e\n# \u2192 O(10**11) \u3067\u5165\u3089\u306a\u3044\u306e\u3067 \u30eb\u30fc\u30c8N \u306b\u5727\u7e2e\u3059\u308b\nrN = int(N ** 0.5)\nT = {N\/\/x for x in range(1, rN+1)}\nT |= {x for x in range(1, rN+1)}\nT = [0,] + sorted(list(T))\t# 1-indexed\n\n# 1-indexed\ndp = []\ndp.append([0,] + [T[i]-T[i-1] for i in range(1, len(T))])\n\nfor k in range(K-1):\n\tdp.append([0,] * len(T))\n\tdp[-1][-1] = dp[-2][1]\n\tfor t in range(2, len(T)):\n\t\tdp[-1][-t] = (dp[-2][t] + dp[-1][-t+1]) % MOD\n\tfor t in range(len(T)):\n\t\tdp[-1][t] = (dp[-1][t] * dp[0][t]) % MOD\n\nprint(sum(dp[-1]) % MOD)\n","n, k = map(int, input().split())\nmod = 1000000007\na = []\n\ni = 1\nwhile i * i <= n:\n    a.append(i)\n    a.append(n \/\/ i)\n    i += 1\nm = len(a)\na.append(0)\na.sort()\n\ndp = [0] * m\ndp[0] = 1\nacc = [0]  * m\nfor _ in range(k):\n    acc[0] = dp[0]\n    for j in range(1, m):\n        acc[j] = (acc[j-1] + dp[j]) % mod # \u7d2f\u7a4d\u548c\n    for j in range(m):\n        dp[j] = acc[m-j-1] * (a[j+1] - a[j]) % mod\nans = 0\nfor x in dp:\n    ans = (ans + x) % mod\nprint(ans)\n","n, k = map(int, input().split())\n\nMOD = 10 ** 9 + 7\np = int(n**0.5)\n\n\na = [i for i in range(1, p+1)]\n\nfor x in range(p, 0, -1):\n    if n \/\/ x != p:\n        a.append(n \/\/ x)\n\ndp = [[0 for _ in range(len(a))] for _ in range(k)]\n\nm = len(a)\n\ntemp = 0\nb = [0] * m\nfor i, x in enumerate(a):\n    b[i] = x - temp\n    temp = x\n\nfor i in range(m):\n    dp[0][i] = b[i]\n\nfor i in range(k-1):\n    temp = 0\n    for j in range(m-1, -1, -1):\n        temp = (temp + dp[i][m-1-j]) % MOD\n        dp[i+1][j] = temp * b[j] % MOD\n\n#print(dp)\n\nprint(sum(dp[-1]) % MOD)\n","N,K=map(int,input().split())\n\nmod=10**9+7\n\nans=0\nL=[[0,0]]\nfor i in range(1,N+1):\n    if i*i==N:\n        L.append([i,i])\n        break\n    elif i*i>N:\n        break\n    else:\n        L.append([N\/\/i,i])\nR=[]\nfor i in range(len(L)):\n    if L[-1-i][0]==L[-1-i][1]:\n        continue\n    else:\n        R.append([L[-1-i][1],L[-1-i][0]])\nArr=L+R\n#print(Arr)\n\nfor i in range(1,len(Arr)):\n    ans+=pow(Arr[i][0],K-1,mod)*(Arr[i][1]-Arr[i-1][1])\n#print(ans%mod)\nDP=[[1 for i in range(len(Arr)-1)]for j in range(K)]\nfor j in range(len(Arr)-1):\n    DP[0][j]=(Arr[j+1][1]-Arr[j][1])\n#print(DP)\nfor i in range(1,K):\n    Rui=[DP[i-1][0]]\n    for j in range(1,len(Arr)-1):\n        Rui.append(Rui[-1]+DP[i-1][j])\n    #print(Rui)\n    for j in range(len(Rui)):\n        DP[i][j]=(Rui[-1-j]*(Arr[j+1][1]-Arr[j][1]))%mod\nprint(sum(DP[-1])%mod)","N, K = map(int, input().split())\nLARGE = 10 ** 9 + 7\n\n# SQRT\nR = 1\nwhile (R + 1) ** 2 < N:\n    R += 1\n\nsquare = False\nif (R + 1) ** 2 == N:\n    square = True\n\n\nDP_S = [1] * R\nDP_L = [1] * R\nN_L = [1] * R\nDP_M = 0\nL = R\nif square:\n    DP_M = 1\n    L += 1\n\n\nfor i in range(R, -1, 0):\n    Q = N \/\/ i\n    DP_L[i - 1] = Q - L\n    N_L[i - 1] = Q - L\n    L = Q\n\nfor _ in range(K - 1):\n    S = 0\n    L = sum(DP_L) + DP_M\n    SS = sum(DP_S)\n    for i in range(R):\n        DP_L[i] = S * N_L[i] % LARGE\n        DP_S[i] = L + SS % LARGE\n        S = (S + DP_S[i]) % LARGE\n        L = (L - DP_L[i]) % LARGE\n\n        if square:\n            DP_M = (DP_M + SS) % LARGE\n\nprint((sum(DP_L) + sum(DP_S) + DP_M) % LARGE)\n","import itertools\nn, k = [int(i) for i in input().split()]\ntemp = [i for i in range(1, 101)]\ntemp2 = list(itertools.product(temp, repeat=2))\ncount = 0\nprint(len(temp2))\nfor i in range(len(temp2)):\n\tif temp2[i][0]*temp2[i][1] <= n:\n\t\tcount += 1\nprint(count % (10**9+7))","import bisect\n\nn,k = map(int,input().split())\nmod = 10**9+7\n\n\nm = int(n**0.5)\nif m**2 < n:\n    m += 1\n\n\ndp = [[0]*(m+1) for i in range(k+1)]\n\nfor i in range(1,m):\n    dp[1][i] = 1\ndp[1][m] = n-m+1\n\n\nfor i in range(1,k):\n    for j in range(1,m+1):\n        r = n\/\/j\n        for p in range(1,r+1):\n            p = min(p,m)\n            dp[i+1][p] += dp[i][j]\n            dp[i+1][p] %= mod\n\nres = 0\nfor i in range(1,m+1):\n    res = (res+dp[k][i])%mod\nprint(res)","def main():\n    N, K = map(int, input().split())\n    def r(C, D):\n        newD = {}\n        for key in D.keys():\n            for n in range(1, N + 1):\n                if int(key) * n <= N:\n                    if key in newD:\n                        newD[key] = D[key]\n                    else:\n                        newD[key] = newD[key] + D[key]\n        if C == 10:\n            return newD\n        else:\n            r(C + 1, D)\n    C, D = 1, {} # count, dict\n    for n in range(1, N + 1):\n        D[str(n)] = 1\n    newD = r(C, D)\n    return sum(newD.values()) % (10 ** 9 + 7)\n\nprint(main())\n","# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Jun 29 22:14:02 2019\n\n@author: Yamazaki Kenichi\n\"\"\"\n\nN, K = map(int,input().split())\nmod = 10**9+7\n\nr = int(pow(N,1\/2))\n\nconst = []\nif N \/\/ r == r:\n    s = r - 1\nelse:\n    s = r\n\nfor i in range(1,r+1):\n    const.append(N\/\/i - N\/\/(i+1))\n#if r == int(pow(N,1\/2)) :\n#    const += [1]\nconst.reverse()\nconst = [1 for i in range(s)] + const\n\ndp = [[]]\nfor c in const:\n    try:\n        dp[0].append(dp[0][-1] +c)\n    except:\n        dp[0].append(c)\ndp += [[0 for i in range(len(const))] for k in range(K-1)]\n\nfor k in range(1,K):\n    for i in range(len(const)):\n        dp[k][i] = (dp[k][i-1] + dp[k-1][len(const)-i-1]%mod\n                      * const[i])%mod\nprint(dp[-1][-1]%mod)\n","from bisect import bisect_left\nn,k=map(int,input().split())\nif n==1:exit(print(1))\nd=[1]\nt=[1]\nfor i in range(2,int(n**0.5)+2):\n  if n\/\/d[-1]!=n\/\/i:\n    d.append(i)\n    t.append(1)\n  else:\n    t[-1]+=1\ndd=[]\nfor i in range(d[-1],0,-1):\n  if n\/\/i<=d[-1]:continue\n  dd.append(n\/\/i)\nx=d+dd\nfor i in range(len(t),len(x)):\n  t.append(x[i]-x[i-1])\ndi=[0]*len(x)\nmod=10**9+7\nfor i in range(len(x)):di[i]=bisect_left(x,n\/\/x[i])\nn=len(x)\ndp=[n*[0]for _ in range(k)]\ndp[0]=t[:]\nfor i in range(1,k):\n  for j in range(1,n):\n    dp[i-1][j]+=dp[i-1][j-1]\n    dp[i-1][j]%=mod\n  for j in range(n):dp[i][j]=dp[i-1][di[j]]*t[j]%mod\nprint(sum(dp[-1])%mod)","def f_small_products(N, K, MOD=10**9 + 7):\n    # \u53c2\u8003: https:\/\/atcoder.jp\/contests\/abc132\/submissions\/6187073\n    sqrt_n = int(N**0.5)\n\n    # num: 0 <= i <= N\u306b\u3064\u3044\u3066\u3001N \/\/ i \u306e\u5024\u3067\u540c\u4e00\u8996\u3067\u304d\u308b\u3082\u306e\u306e\u500b\u6570\u304c\u524d\u304b\u3089\u683c\u7d0d\u3055\u308c\u308b\n    num = [0 for i in range(2 * sqrt_n + 1)]\n    # 1\u304b\u3089\u221aN \u307e\u3067\u306f\u3001\u540c\u4e00\u8996\u3067\u304d\u308b\u3082\u306e\u306e\u500b\u6570\u306f1\u3064\n    for i in range(1, sqrt_n + 1):\n        num[i] = 1\n    # \u221aN\u304b\u3089N \u307e\u3067\u306f\u3001\u8907\u6570\u306e\u6574\u6570\u304c\u540c\u4e00\u8996\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308b\n    for i in range(1, sqrt_n + 1):\n        lo = max(sqrt_n + 1, (N + i + 1) \/\/ (i + 1))\n        hi = N \/\/ i\n        num[2 * sqrt_n + 1 - i] = hi - lo + 1\n\n    # dp[n][m]: \u6700\u5f8c\u306e\u6574\u6570\u304c m \u3067\u3042\u308b\u3088\u3046\u306a n \u500b\u306e\u6574\u6570\u3092\n    # \u4e26\u3079\u3066\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3088\u3046\u306b\u3059\u308b\u5834\u5408\u306e\u6570\n    dp = [[0 for j in range(2 * sqrt_n + 2)] for i in range(K + 1)]\n    dp[0][1] = 1  # \u6570\u5217\u306e\u5148\u982d\u306e\u3055\u3089\u306b1\u500b\u524d\u306b1\u304c\u3042\u308b\u3068\u307f\u306a\u3059(\u7f6e\u304d\u65b91\u901a\u308a)\n    for i in range(K):\n        # \u7d2f\u7a4d\u548c\u3092\u7528\u3044\u305fdp\u30c6\u30fc\u30d6\u30eb\u306e\u66f4\u65b0(imos\u6cd5)\n        for j in range(1, 2 * sqrt_n + 1):\n            ways = (dp[i][j] * num[j]) % MOD\n            dp[i + 1][1] += ways\n            dp[i + 1][2 * sqrt_n + 2 - j] -= ways\n        for j in range(1, 2 * sqrt_n + 1):\n            dp[i + 1][j] += dp[i + 1][j - 1]\n\n    return sum(a * b for a, b in zip(dp[K], num)) % MOD\n\nN, K = [int(i) for i in input().split()]\nprint(f_small_products(N, K))","import copy\nn,k=map(int,input().split())\nmod=10**9+7\ndef f(i):\n  return n\/\/i\nans=[1]*n\nans_c=[1]*n\nfor _ in range(k-1):\n  for i in range(1,n+1):\n    for j in range(1,f(i)+1):\n      ans_c[j-1]+=ans[i-1]*f(i)\n  ans=copy.copy(ans)\n      \nprint(sum(ans)%mod)","import numpy as np\nN, K = map(int, input().split())\nmod = 1000000007\n\nm = N ** 0.5\ncnt = [N \/\/ i - N \/\/ (i + 1) for i in range(1, int(m) + 1)] \ncnt = np.array((cnt + [1 for _ in range(N - sum(cnt))])[::-1])\nnxt = cnt[:]\nfor _ in range(K - 1):\n    cnt = nxt * np.cumsum(cnt)[::-1] % mod\n\nprint(sum(cnt) % mod)\n","n,k = list(map(int,input().split(\" \")))\n\ndef check(l,n):\n    global k\n    if len(l) > k:\n        return False\n    for i in range(len(l)):\n        if i+1 == len(l):\n            break\n        if l[i] * l[i+1] > n:\n            return False\n    return True\na = 0\nold_l = [1 for i in range(k)]\nfor i in range(0,k-1):\n    for j in range(0,k):\n        l = None\n        l = old_l.copy()\n        try:\n            while check(l,n):\n                l[i+j] += 1\n                a += 1\n                print(l)\n        except:\n            pass\nprint(a)","from collections import deque\nN, K = map(int, input().split())\nMOD = 10 ** 9 + 7\n\n# guchoku case\n\n# dp = [[0 for _ in range(N+1)] for _ in range(K+1)]\n\n# for i in range(N+1):\n#     dp[1][i] = 1\n# for i in range(K):\n#     for j in range(1,N+1):\n#         for k in range(1, N \/\/ j + 1):\n#             dp[i+1][j] += dp[i][k]\n#             dp[i+1][j] %= MOD\n\nJN = deque()  # N\/\/j table\nSQN = int(N**0.5)\nJN.append(SQN)\n\nif SQN**2 != N:\n    JN.append(N\/\/SQN)\nfor j in range(SQN-1, 0, -1):\n    JN.appendleft(j)\n    JN.append(N\/\/j)\nJN.appendleft(0)\n\n# JN.sort()\n# PJN = {JN[i]: JN[i-1] for i in range(1, len(JN))}  # prev jn\nLJN = len(JN)\n\ndp = [[0 for _ in range(LJN)] for _ in range(K)]\ncdp = [[0 for _ in range(LJN)] for _ in range(K)]\nw = [0 for _ in range(LJN)]\n\n# init dp\nprv = 0\nfor i in range(1,LJN):\n    jn = JN[i]\n    dp[0][i] = 1\n    w[i] = jn - prv\n    cdp[0][i] = jn\n    prv = JN[i]\n\nfor i in range(K-1):\n    for j in range(1,LJN):\n        dp[i+1][j] = cdp[i][LJN-j]\n        dp[i+1][j] %= MOD\n        cdp[i+1][j] = cdp[i+1][j-1] + dp[i+1][j] * w[j]\n        cdp[i+1][j] %= MOD\n\nprint(cdp[-1][-1])\n","import sys\nN, K = map(int, input().split())\nMOD = 1000000007\ni, A, B = 1, [], []\nwhile i * i <= N:\n  A.append(1)\n  B.append(N \/\/ i - N \/\/ (i + 1))\n  i += 1\nB = list(reversed(B))\nif sum(A) + sum(B) == N:\n  C = list(reversed(A + B))\nelse:\n  C = list(reversed(A + B[1:]))\nDP = C\nL = len(C)\nfor k in range(K-1):\n  DP = list(reversed(DP))\n  DP[0] %= MOD\n  for i in range(L-1):\n    DP[i+1] += DP[i]\n    DP[i+1] %= MOD\n  for i in range(L):\n    DP[i] = DP[i] * C[i] % MOD\nprint(sum(DP) % MOD)","n,k=map(int,input().split())\nmod=10**9+7\n\ndata=[i for i in range(1,int(n**.5)+1)]+[n\/\/i for i in range(int(n**.5),0,-1)]\n\nL=len(data)\ndp=[1]*L\nfor i in range(1,L):\n    dp[i]=data[i]-data[i-1]\n\nfor i in range(k-1):\n    h=dp[:]\n    for i in range(1,L):\n        h[i]=(h[i]+h[i-1])%mod\n    h=h[::-1]\n    for i in range(1,L):\n        h[i]=h[i]*(data[i]-data[i-1])%mod\n    dp=h\n\nans=0\nfor u in dp:\n    ans=(ans+u)%mod\nprint(ans)","#!\/usr\/bin\/env python3\nfrom collections import defaultdict\nfrom collections import deque\nfrom heapq import heappush, heappop\nimport sys\nimport math\nimport bisect\nimport random\nimport itertools\nsys.setrecursionlimit(10**5)\nstdin = sys.stdin\nsqrt = math.sqrt\nbisect_left = bisect.bisect_left\nbisect_right = bisect.bisect_right\ndef LI(): return list(map(int, stdin.readline().split()))\ndef LF(): return list(map(float, stdin.readline().split()))\ndef LI_(): return list(map(lambda x: int(x)-1, stdin.readline().split()))\ndef II(): return int(stdin.readline())\ndef IF(): return float(stdin.readline())\ndef LS(): return list(map(list, stdin.readline().split()))\ndef S(): return list(stdin.readline().rstrip())\ndef IR(n): return [II() for _ in range(n)]\ndef LIR(n): return [LI() for _ in range(n)]\ndef FR(n): return [IF() for _ in range(n)]\ndef LFR(n): return [LI() for _ in range(n)]\ndef LIR_(n): return [LI_() for _ in range(n)]\ndef SR(n): return [S() for _ in range(n)]\ndef LSR(n): return [LS() for _ in range(n)]\nmod = 1000000007\ninf = float('INF')\n\n#A\ndef A():\n    s = S()\n    b = list(set(s))\n    a = len(list(set(s)))\n    if a == 2 and s.count(b[0]) == s.count(b[1]) == 2:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n    return\n\n#B\ndef B():\n    n = II()\n    p = LI()\n    ans = 0\n    for i in range(1,n-1):\n        if (p[i - 1] < p[i] and p[i] < p[i + 1]) or (p[i + 1] < p[i] and p[i] < p[i - 1]):\n            ans += 1\n    print(ans)\n    return\n\n#C\ndef C():\n    n = II()\n    d = LI()\n    d.sort()\n    ans = 0\n    for i in range(10**5+1):\n        if n \/\/ 2 == bisect_left(d, i):\n            ans += 1\n    print(ans)\n    return\n\n\ndef combination_mod(n, k, mod):\n    # power_func\u3092\u7528\u3044\u3066(nCk) mod p \u3092\u6c42\u3081\u308b \n    # nCk = n!\/((n-k)!k!)\u3092\u4f7f\u7528\n\n    from math import factorial\n    if n < 0 or k < 0 or n < k: return 0\n    if n == 0 or k == 0: return 1\n    a = factorial(n) % mod\n    b = factorial(k) % mod\n    c = factorial(n - k) % mod\n    return (a * power_func(b, mod - 2, mod) * power_func(c, mod - 2, mod)) % mod\n    \ndef power_func(a, b, mod):\n    # a^b mod p \u3092\u6c42\u3081\u308b\n    # b\u30922\u9032\u6570\u5206\u89e3\u3057\u3066\u9ad8\u901f\u7d2f\u4e57\n\n    if b == 0: return 1\n    if b % 2 == 0:\n        d = power_func(a, b \/\/ 2, mod)\n        return d * d % mod\n    if b % 2 == 1:\n        return (a * power_func(a, b - 1, mod)) % mod\n\n#D\ndef D():\n    n, k = LI()\n    ans = 0\n    for i in range(1,k+1):\n        a = combination_mod(n - k + 1, i, mod)\n        b = combination_mod(k - 1, i - 1, mod)\n        print((a*b)%mod)\n    return\n\ndef dijkstra(num, start, edge, g):\n\n    dist = defaultdict(lambda: inf)\n    dist[(start,0)] = 0\n    q = [(dist[(start,0)], start, 0)]\n    while q:\n        du, u, t = heappop(q)\n        for j in edge[u]:\n            if t == 2:\n                t = -1\n            if dist[(j, t + 1)] > du + 1:\n                dist[(j, t + 1)] = du + 1\n                heappush(q, [dist[(j, t + 1)], j, t + 1])\n    return dist\n#E\ndef E():\n    n, m = LI()\n    v = LIR_(m)\n    s, t = LI_()\n    edge = defaultdict(list)\n    for x,y in v:\n        edge[x].append(y)\n    d = dijkstra(n, s, edge, t)\n    if d[(t,0)] == inf:\n        print(-1)\n    else:\n        print(d[(t,0)]\/\/3)\n    return\n\n# F\n# \u89e3\u8aacAC\n# \u221an\u307e\u3067\u3067\u7d04\u6570\u306e\u5168\u5217\u6319\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u306f\n# n <= a * b (a <= b\u3068\u3057\u305f\u3068\u304d\u306b)\n# \u5404 a \u306f \u221an\u307e\u3067\u3057\u304b\u306a\u3044\u3053\u3068\u306f\u308f\u304b\u308b\n# ( a > \u221an \u306a\u3089 b < \u221an \u3060\u304b\u3089\u306d)\n# \u3059\u308b\u3068\u5404a\u306b\u5bfe\u3057\u3066\u5bfe\u5fdc\u3059\u308bb\u306e\u6700\u5927\u5024\u304c\u5b58\u5728\u3059\u308b\u305f\u3081\n# b \u306e\u500b\u6570\u306f\u9ad8\u3005 \u221an \u500b\u3057\u304b\u7121\u3044\u3053\u3068\u304c\u308f\u304b\u308b\n# \u5f8c\u306fDP\u3067\u3069\u3046\u305e \ndef F():\n    n, k = LI()\n    f = defaultdict(int)\n    Range = int(sqrt(n))\n    dp = [0] * (2 * Range)\n    m = 0\n    l = 0\n    for i in range(Range, 0, -1):\n        dp[i - 1] = 1\n        f[i - 1] = 1\n        if n \/\/ i == i:\n            l = 1\n            continue\n        dp[Range + m] = n \/\/ i - n \/\/ (i + 1)\n        f[Range + m] = n \/\/ i - n \/\/ (i + 1)\n        m += 1\n    R = 2 * Range - l\n    for _ in range(k - 1):\n        ndp = [0] * (2 * Range)\n        for j in range(R):\n            ndp[R - j - 1] = dp[j]\n        ndp = list(itertools.accumulate(ndp[::-1]))[::-1]\n        dp = [(d * f[num]) % mod for num,d in enumerate(ndp)]\n    ans = sum(dp)%mod\n    print(ans)\n    return\n\n\n\n#Solve\nif __name__ == '__main__':\n    F()\n","import sys\ninput = sys.stdin.readline\n\ndef I(): return int(input())\ndef MI(): return map(int, input().split())\ndef LI(): return list(map(int, input().split()))\n\ndef main():\n    mod=10**9+7\n    \"\"\"\n    \u672b\u5c3e\u3060\u3051\u304c\u91cd\u8981\uff0cdp[i][j]\u3067i\u679a\u76ee\u307e\u3067\u898b\u3066\u672b\u5c3e\u304cj\uff0cO(NK)\n    N\u304c\u5c0f\u3055\u3051\u308c\u3070\u554f\u984c\u306a\u3044\uff0cj\u306e\u90e8\u5206\u306f(N\/j)\u306e\u5207\u308a\u6368\u3066\u3067\u307e\u3068\u3081\u3089\u308c\u308b\uff0e\n    \u524d\u534a\u90e8\u5206\u306f1~sqrt(N)\u3067\uff0c\u5404\u7d441\u3053\u305a\u3064\uff0e\u5f8c\u534a\u306fN\/i (i<=sqrt(N))\n    \n    \"\"\"\n    N,K=MI()\n    M=int(N**0.5)\n    cnt=[]\n    \n    i=1\n    while i<=N:\n        if i<=M:\n            cnt.append(1)\n            i+=1\n        else:\n            temp=int(N\/i)\n            cnt.append(int(N\/temp-i+1))\n            i=int(N\/temp +1)\n            \n    N2=len(cnt)\n            \n\n    \n    dp=[[0]*N2 for _ in range(K)]\n    #dp[i][j]\u306fi\u500b\u898b\u3066\uff0c\u6700\u5f8c\u5c3e\u304c\u30b0\u30eb\u30fc\u30d7L[j]\u306b\u5c5e\u3059\u5834\u5408\u306e\u6570\n    #j\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306fM\u30fcj\u756a\u76ee\u307e\u3067\u306e\u30b0\u30eb\u30fc\u30d7\u3068\u7d44\u3081\u308b\n    \n    for j in range(N2):\n        dp[0][j]=cnt[j]\n        \n    for i in range(K-1):\n        S=[0]*(N2+1)\n        for j in range(N2):\n            S[j+1]=(S[j]+dp[i][j])%mod\n        \n        for j in range(N2):\n            dp[i+1][j]=(S[N2-j]*cnt[j])%mod\n            \n    ans=0\n    for j in range(N2):\n        ans=(ans+dp[-1][j])%mod\n        \n    print(ans)\n\n\n    \n    \n\nmain()\n","import sys\nfrom bisect import bisect_left as bl\ninput = sys.stdin.readline\nN, K = map(int, input().split())\nmod = 10 ** 9 + 7\nh = 1\nt = set()\nwhile h * h <= N:\n  t.add(N \/\/ h)\n  t.add(h)\n  h += 1\nt = sorted(t)\n#print(t)\ntt = []\nfor x in t:\n  tt.append(N \/\/ x)\n\ndp = [[0] * len(t) for _ in range(K + 1)]\ndp[0][0] = 1\nfor i in range(K):\n  for j in range(len(t)):\n    k = bl(t, tt[j])\n    dp[i + 1][k] += dp[i][j]\n    dp[i + 1][k] %= mod\n  #print(dp)\n  for k in range(len(t) - 1, 0, -1):\n    dp[i + 1][k - 1] += dp[i + 1][k]\n    dp[i + 1][k - 1] %= mod\n  for k in range(1, len(t)):\n    rng = (t[k] - t[k - 1]) % mod\n    dp[i + 1][k] *= rng\n    dp[i + 1][k] %= mod\n  #print(dp)\nres = 0\n#print(dp)\nfor j in range(len(t)):\n  res += dp[-1][j]\n  res %= mod\nprint(res)","import sys\n\ninput = sys.stdin.readline\n\nN, K = map(int, input().strip().split(' '))\ndiv = 1000000000 + 7\n\ncoefficients = [1] * N\nnums = [N \/\/ i for i in range(1, N+1)]\nfor i in range(1, K - 1):\n    mirror = [c for c in coefficients][::-1]\n    for index in range(N):\n        coefficients[index] += sum(e for e in mirror[index:-1])\nprint(sum(c * n for c, n in zip(coefficients, nums)))\n","def f(tail, left):\n  m = (tail, left)\n  if m in memo:\n    return memo[m]\n  \n  if left == 1:\n    ret = n \/\/ tail\n    memo[m] = n \/\/ tail\n    return ret\n  #if left == 0:\n  #  return 1\n\n  count = 0\n  for i in range(n \/\/ tail):\n    t = i + 1\n    count += f(t, left - 1)\n    #print(\"f({}, {})\".format(t, left - 1))\n  memo[m] = count\n  return count\n\nmemo = {}\n\nn, k = [int(v) for v in input().split()]\nprint(f(1, k))","from math import floor\n\nN, K = map(int, input().split())\n\nMOD = 10**9 + 7\n\n\nclass ModInt:\n    def __init__(self, x):\n        self.x = x % MOD\n\n    def __str__(self):\n        return str(self.x)\n\n    __repr__ = __str__\n\n    def __add__(self, other):\n        return (\n            ModInt(self.x + other.x) if isinstance(other, ModInt) else\n            ModInt(self.x + other)\n        )\n\n    def __sub__(self, other):\n        return (\n            ModInt(self.x - other.x) if isinstance(other, ModInt) else\n            ModInt(self.x - other)\n        )\n\n    def __mul__(self, other):\n        return (\n            ModInt(self.x * other.x) if isinstance(other, ModInt) else\n            ModInt(self.x * other)\n        )\n\n    def __truediv__(self, other):\n        return (\n            ModInt(\n                self.x * pow(other.x, MOD - 2, MOD)\n            ) if isinstance(other, ModInt) else\n            ModInt(self.x * pow(other, MOD - 2, MOD))\n        )\n\n    def __pow__(self, other):\n        return (\n            ModInt(\n                pow(self.x, other.x, MOD)\n            ) if isinstance(other, ModInt) else\n            ModInt(pow(self.x, other, MOD))\n        )\n\n    def __radd__(self, other):\n        return ModInt(other + self.x)\n\n    def __rsub__(self, other):\n        return ModInt(other - self.x)\n\n    def __rmul__(self, other):\n        return ModInt(other * self.x)\n\n    def __rtruediv__(self, other):\n        return ModInt(other * pow(self.x, MOD - 2, MOD))\n\n    def __rpow__(self, other):\n        return ModInt(pow(other, self.x, MOD))\n\n\n# floor(N \/ i) \u306e\u5024\u306b\u5fdc\u3058\u3066\u30b0\u30eb\u30fc\u30d7\u5206\u3051\u3057\u3001\n# \u30b0\u30eb\u30fc\u30d7\u5358\u4f4d\u3067\u6761\u4ef6\u3092\u6e80\u305f\u3059\u5217\u306e\u500b\u6570\u3092\u52d5\u7684\u8a08\u753b\u6cd5\u3067\u6c42\u3081\u308b\nP = floor(N**0.5)\nQ = N \/\/ P\n\nC = (\n    [ModInt(1) for _ in range(P + 1)] +\n    [\n        ModInt(N \/\/ (Q - i) - N \/\/ (Q - i + 1))\n        for i in range(1, Q)\n    ]\n)\n\ndp = [[0 for _ in range(P + Q)] for _ in range(K)]\ndp[0] = [C[i] for i in range(P + Q)]\nfor j in range(1, K):\n    acc = 0\n    for i in range(P + Q - 1, 0, -1):\n        acc += dp[j - 1][P + Q - i]\n        dp[j][i] = C[i] * acc\n\nans = sum(dp[K - 1])\n\nprint(ans)\n","def main():\n\tN, K = map(int, input().split())\n\tDIV = 10**9+7\n\tsqrtn = int(N**0.5)\n\tans = 1\n\ts = []\n\tfor i in range(1, sqrtn+1):\n\t\ts.append(i)\n\t\tif i < N\/\/i:\n\t\t\ts.append(N\/\/i)\n\ts.sort()\n\n\tr = []\n\tfor i in range(len(s)-1):\n\t\tleft = N\/\/s[i+1]\n\t\tright = N\/\/s[i]\n\t\tr.append(right-left)\n\tr.append(1)\n\n\tm = len(s)\n\tmp = {}\n\tfor i in range(m):\n\t\tmp[s[i]] = i\n\n\tdp = [[0 for _ in range(m)] for _ in range(K+1)]\n\tdp[0][mp[N]] = 1\n\tfor i in range(K):\n\t\tfor j in range(m-2, -1, -1):\n\t\t\tdp[i][j] += dp[i][j+1]\n\t\t\tdp[i][j] %= DIV\n\t\tfor j in range(m):\n\t\t\tnj = mp[N\/\/s[j]]\n\t\t\tdp[i+1][j] += dp[i][nj]*r[j]%DIV\n\t\t\tdp[i+1][j] %= DIV\n\n\tans = 0\n\tfor j in range(m):\n\t\tans += dp[K][j]\n\t\tans %= DIV\n\tprint(ans)\n\n\nif __name__ == '__main__':\n\tmain()","N, K = map(int,input().split())\nMOD = 10**9 + 7\n\nstate= [] # \u540c\u3058\u72b6\u614b\u3068\u307f\u306a\u3057\u3066\u3088\u3044\u3082\u306e\u306e\u500b\u6570\u306e\u914d\u5217\ni = 1\nwhile i <= N:\n    if i*i <= N:\n        state.append(1)\n        i += 1\n    else:\n        j = N \/\/ i # i\u306e\u5f8c\u306b\u304a\u3051\u308b\u6700\u5927\u306e\u6570\n        state.append(N\/\/j-i+1) \n        i = N\/\/j + 1\n\nL = len(state)\n#print(state)\n\n# dp[k][x] : \u6700\u5f8c\u304c\u72b6\u614bx\u3067\u3042\u308b\u3088\u3046\u306ak\u500b\u306e\u6574\u6570\u3092\u4e26\u3079\u308b\u5834\u5408\u306e\u6570\ndp = [[0]*L for _ in range(K+1)]\ndp[0][0] = 1\n\n#dp[k+1][x] = sum_{y: x\u3092\u5f8c\u308d\u306b\u304a\u3051\u308b\u72b6\u614b} dp[k][y]\nfor k in range(K):\n    cum_sum = [0] * (L+1)\n    for y in range(L): \n        cum_sum[y+1] = (cum_sum[y] + dp[k][y]) % MOD\n\n    for x in range(L):\n        # x\u3092\u5f8c\u308d\u306b\u304a\u3051\u308b\u3088\u3046\u306a\u6700\u5927\u306e\u72b6\u614b\u306fL-x-1\n        dp[k+1][x] += cum_sum[L-x]\n        dp[k+1][x] *= state[x]\n        dp[k+1][x] %= MOD\n\n#print(dp)\nprint(sum(dp[K]) % MOD)","N,K=map(int,input().split())\nmod=10**9+7\n\nimport math\nSQ=int(math.sqrt(N))\n\nDP1=[1]*(SQ+1)\nDP1[0]=0\n\n\nDP2=[]\n\nk=SQ\n\nfor i in range(SQ,0,-1):\n    DP2.append(N\/\/i-k)\n    k=N\/\/i\n\nKOSUU2=[v for v in DP2]\n\nfor j in range(K-1):\n    NDP1=[0]*(SQ+2)\n    NDP2=[0]*(SQ+1)\n\n    for j in range(1,SQ+1):\n        NDP2[-j]-=DP1[j]\n        NDP1[1]+=DP1[j]\n\n\n    for j in range(-1,-SQ-1,-1):\n        NDP1[-j+1]-=DP2[j]\n        NDP1[1]+=DP2[j]\n\n    for j in range(1,SQ+2):\n        NDP1[j]+=NDP1[j-1]\n\n    NDP2[0]+=NDP1[-1]\n\n    for j in range(1,SQ+1):\n        NDP2[j]+=NDP2[j-1]\n\n\n    for j in range(SQ):\n        NDP2[j]=NDP2[j]*KOSUU2[j]%mod\n\n    DP1=NDP1\n    DP2=NDP2\n    DP1.pop()\n    DP2.pop()\n\nprint((sum(DP1)+sum(DP2))%mod)","N, K = map(int, input().split())\nP = 10**9+7\nR = int(N**0.5)+1\nA = [i for i in range(R)] + [N\/\/i for i in range(1, R)][::-1]\nM = len(A)\nX = [0] + [1] * (M-1)\nfor i in range(1, K+1):\n    NX = [0] * M\n    for j in range(1, M):\n        NX[j] = (NX[j-1] + X[M-j]*(A[j]-A[j-1])) % P\n    X = NX\nprint(X[-1])","N, K = map(int, input().split())\nMOD = 10 ** 9 + 7\n\ni = 1\nn = []\nwhile i <= N :\n    j = N \/\/ i\n    if i <= j :\n        n.append(1)\n        i += 1\n    else :\n        n.append(N\/\/j-i+1)\n        i = N \/\/ j + 1\n\nM = len(n)\n\ndp = [[0] * M for _ in range(K)]\ndp[0] = n\n\nfor k in range(1, K) :\n    sdp = [0] * M\n    sdp[0] = dp[k-1][0]\n    for i in range(1, M) :\n        sdp[i] = (sdp[i-1] + dp[k-1][i]) % MOD\n    for i in range(M) :\n        dp[k][i] = sdp[M-i-1] * n[i] % MOD\n\nret = 0\n\nfor j in range(M) :\n    ret += dp[K-1][j]\n    ret %= MOD\n    \nprint(ret)","import math\n\nfrom itertools import accumulate\n\ndef cumsum(a):\n    return list(accumulate(a))\n\nn,k = map(int, input().split())\nif n == 1:\n    print(1)\n    exit()\nmod = 10 ** 9 + 7\nnow = n\nbig = []\nfor i in range(2,int(math.sqrt(n)+2)):\n    d = n \/\/ i\n    big.append(now - d)\n    now = d\nbig.reverse()\nl = [1] * d + big\nl2 = [1] * d + big\nfor i in range(k-1):\n    a = cumsum(l)\n    a.reverse()\n    count = 0\n    for i,j in zip(a,l2):\n        l[count] = (i * j) % mod\n        count += 1\nl = cumsum(l)\nans = l[-1] % mod\nprint(ans)\n    ","import sys\ntry: fin = open('in')\nexcept: fin = sys.stdin\ninput = lambda: fin.readline().strip()\n\nmod = 10 ** 9 + 7\n\nn, k = map(int, input().split())\nparts = [[n + 1, n + 1]]\ni = 1\ns = 0\nl = n + 1\nfor i in range(1, n + 1):\n\tr = n \/\/ i - n \/\/ (i + 1)\n\tparts.append([l - 1, l - r])\n\tl -= r\n\tif r == 1:\n\t\tfor i in range(l - 1, 0, -1): parts.append([i, i])\n\t\tbreak\nparts = [j for j, i in parts]\nnparts = [n \/\/ parts[i] - n \/\/ parts[i - 1] for i in range(1, len(parts))]\n\nrow = nparts\nfor r in range(1, k):\n\ttmp = []\n\ts = 0\n\tfor i in range(len(nparts) - 1, -1, -1): # go backwards\n\t\ts += row[-(i + 1)] # prefix sum thingy\n\t\ttmp.append(s * nparts[i] % mod)\n\ttmp.reverse()\n\trow = tmp\n\nprint (sum(row))","# -*- coding: utf-8 -*-\nimport sys\nfrom operator import itemgetter\n# gcd\nfrom fractions import gcd\n# \u5207\u308a\u4e0a\u3052\uff0c\u5207\u308a\u6368\u3066\nfrom math import ceil, floor\n# \u30ea\u30b9\u30c8\u306e\u771f\u306e\u30b3\u30d4\u30fc\uff08\u5909\u66f4\u304c\u4f1d\u64ad\u3057\u306a\u3044\uff09\nfrom copy import deepcopy\n# \u7d2f\u7a4d\u548c\u3002list(accumulate(A))\u3068\u3057\u3066A\u306e\u7d2f\u7a4d\u548c\nfrom itertools import accumulate\n# l = ['a', 'b', 'b', 'c', 'b', 'a', 'c', 'c', 'b', 'c', 'b', 'a']\n# S = Counter(l)  # \u30ab\u30a6\u30f3\u30bf\u30fc\u30af\u30e9\u30b9\u304c\u4f5c\u3089\u308c\u308b\u3002S=Counter({'b': 5, 'c': 4, 'a': 3})\n# print(S.most_common(2))  # [('b', 5), ('c', 4)]\n# print(S.keys())  # dict_keys(['a', 'b', 'c'])\n# print(S.values())  # dict_values([3, 5, 4])\n# print(S.items())  # dict_items([('a', 3), ('b', 5), ('c', 4)])\nfrom collections import Counter, defaultdict\nimport math\nfrom functools import reduce\n# input\u95a2\u4fc2\u306e\u5b9a\u7fa9\n# fin = open('in_3.txt', 'r')\n# sys.stdin = fin\n#\ninput = sys.stdin.readline\ndef ii(): return int(input())\ndef mi(): return map(int, input().rstrip().split())\ndef lmi(): return list(map(int, input().rstrip().split()))\ndef li(): return list(input().rstrip())\n# template\n\n\nMOD = 1000000007  # type: int\n\n\ndef solve(N: int, K: int):\n    d = defaultdict(int)\n    for i in range(1, int(math.sqrt(N)) + 1):\n        d[i] = N \/\/ i - N \/\/ (i + 1)\n    for i in range(1, int(math.sqrt(N)) + 1):\n        d[N \/\/ i] = 1\n    # print(d)\n    ans = 0\n    for num, value in d.items():\n        ans += value * pow(num, K - 1, MOD)\n    print(ans % MOD)\n\n\ndef main():\n\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    N = int(next(tokens))  # type: int\n    K = int(next(tokens))  # type: int\n    solve(N, K)\n\n\nif __name__ == '__main__':\n    main()\n","N, K = [int(i) for i in input().split()]\nP = 10**9 + 7\n\nans = 0\nfor i in range(1, N+1):\n    a = N \/\/ i\n    ans += a**(K-1) % P\nprint(ans % P)\n","def hersCode(l, r, n, N):\n  ok = l\n  ng = r + 1\n  while abs(ok - ng) > 1:\n    mid = abs(ok + ng) \/\/ 2\n    if mid * n <= N:\n      ok = mid\n    else:\n      ng = mid\n  return ng\n\n\nN, K = list(map(int, input().split()))\nMOD = 10 ** 9 + 7\n\nL = []\nt = 1\nn = N\nwhile t < N:\n  L.append(t)\n  t = hersCode(t, N, N \/\/ t ,N)\n\nD = [0] * len(L)\nL.append(N + 1)\nfor i in range(len(L) - 1):\n  D[i] = (L[i + 1] - L[i]) % MOD\n\nDP = [[0] * (len(D)) for _ in range(K)]\nfor i in range(len(D)):\n  DP[0][i] = D[i]\n\nfor i in range(1, K):\n  S = [0] * len(D)\n  S[0] = DP[i - 1][0]\n  for j in range(1, len(D)):\n    S[j] = S[j - 1] + DP[i - 1][j]\n  for j in range(len(D)):\n    DP[i][j] = S[-1 -j] * D[j] % MOD\n\nprint(sum(DP[K - 1]) % MOD)\n    ","N, K = map(int, input().split())\nMOD = 10**9 + 7\n\nsq = 0\nwhile (sq + 1) * (sq + 1) <= N:\n    sq += 1\n\nnum = [0 for i in range(2 * sq + 1)]\nfor i in range(1, sq + 1):\n    num[i] = 1\nfor i in range(1, sq + 1):\n    lo = max(sq + 1, (N + i + 1) \/\/ (i + 1))\n    hi = N \/\/ i\n    num[2 * sq + 1 - i] = hi - lo + 1\n\ndp = [[0 for j in range(2 * sq + 2)] for i in range(K + 1)]\ndp[0][1] = 1\nfor i in range(K):\n    for j in range(1, 2 * sq + 1):\n        ways = dp[i][j] * num[j] % MOD\n        dp[i + 1][1] += ways\n        dp[i + 1][2 * sq + 2 - j] -= ways\n    for j in range(1, 2 * sq + 1):\n        dp[i + 1][j] += dp[i + 1][j - 1]\n\nans = 0\nfor j in range(1, 2 * sq + 1):\n    ans += dp[K][j] * num[j]\nprint(ans % MOD)\n","from collections import defaultdict, deque, Counter\nfrom heapq import heappush, heappop, heapify\nimport math\nfrom bisect import bisect_left, bisect_right\nimport random\nfrom itertools import permutations, accumulate, combinations\nimport sys\nimport string\n\n\n\nINF = float('inf')\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef I(): return int(sys.stdin.readline())\ndef LS(): return sys.stdin.readline().split()\ndef S(): return sys.stdin.readline().strip()\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef LSR(n): return [LS() for i in range(n)]\ndef SRL(n): return [list(S()) for i in range(n)]\ndef MSRL(n): return [[int(j) for j in list(S())] for i in range(n)]\nmod = 10 ** 9 + 7\n\n\nn, k = LI()\nsqt = int(n ** 0.5)\ndp_mul_num = [1] * sqt + [n \/\/ i - n \/\/ (i + 1) for i in range(1, sqt + 1)][::-1]\ngroup_num = len(dp_mul_num)\ndp = [[0] * group_num for _ in range(k)]\ndp[0] = dp_mul_num\n\n\n\n\n\nfor i in range(k - 1):\n    ret = 0\n    for j in range(group_num):\n        ret = (ret + dp[i][j]) % mod\n        dp[i + 1][group_num - j - 1] = ret * dp_mul_num[group_num - j - 1] % mod\n\n\n\n\nprint(sum(dp[-1]) % mod)\n","from math import sqrt\ninpl = lambda: list(map(int,input().split()))\nMOD = 10**9 + 7\nN, K = inpl()\nsqN = int(sqrt(N))\nbound = [0]*(sqN+2)\nfor i in range(1,sqN+2):\n    bound[i] = N\/\/i\nbound[sqN+1] = sqN\ngroup_size = [0]*(sqN+1)\nfor i in range(1,sqN+1):\n    group_size[i] = bound[i]-bound[i+1]\n\ncur_small = [1] * (sqN+1)\ncur_small[0] = 0\ncur_large = [ s for s in group_size ]\nfor k in range(K-1):\n    prev_small = cur_small\n    cur_small = [0] * (sqN+2)\n    prev_large = cur_large\n    cur_small = [0] * (sqN+2)\n    cur_small[sqN+1] = sum(prev_small[:sqN+1])\n    for n in range(sqN,0,-1):\n        cur_small[n] = (prev_large[n] + cur_small[n+1]) % MOD\n    acc_prev_small = 0\n    for n in range(1,sqN+1):\n        acc_prev_small += prev_small[n]\n        cur_large[n] = acc_prev_small*group_size[n] % MOD\n\nprint((sum(cur_small[:sqN+1])+sum(cur_large[:sqN+1]))%MOD)","import math\n\nmod = 10**9+7\n\nN, K = map(int, input().split())\n\nroot_n = int(math.sqrt(N))\n\nscale = [0 for _ in range(root_n * 2)]\nlast = N\nfor i in range(root_n+1):\n    div = N \/\/ (i+1)\n    if i <= div:\n        scale[i] = 1\n        if i != 0:\n            scale[-i] = last-div\n    last = div\n\n# print(scale)\ndp0 = scale[:]\ndp1 = [None for _ in range(root_n * 2)]\n\nfor _ in range(K-1):\n    sum_val = 0\n    for i in range(root_n * 2):\n        sum_val += dp0[i]\n        dp1[root_n*2 -i-1] = sum_val * scale[root_n*2 -i-1] % mod\n\n    dp0 = dp1[:]\n    # print(dp0)\n\nprint(sum(dp0) % mod)\n\n\n","N, K = (int(i) for i in input().split())\nN += 1\nl1 = []\nl2 = []\nn_ma = 0\nfor i in range(1, N):\n    j = (N-1)\/\/(i+1) + 1\n    if i > j:\n        break\n    elif i == j:\n        l1.append(i)\n        break\n    l1.append(i)\n    l2.append(j)\nl2.reverse()\nL = l1 + l2 + [N]\nM = len(L) - 1\nDP = [[0] * (M+1) for counter1 in range(K+1)]\n\ndef BIT_query(BIT, idx):\n    res_sum = 0\n    while idx > 0:\n        res_sum += BIT[idx]\n        idx -= idx&(-idx)\n    return res_sum\n\ndef BIT_update(BIT, idx, x):\n    while idx <= M:\n        BIT[idx] += x\n        idx += idx&(-idx)\n    return\n\ndef BIT_debug(BIT):\n    return [BIT_query(BIT, i) - BIT_query(BIT, i-1) for i in range(1, M+1)]\n\nMOD = 10**9 + 7\nfor i in range(M):\n    BIT_update(DP[1], i+1, L[i+1]-L[i])\nfor i in range(1, K):\n    for j in range(M):\n        x = BIT_query(DP[i], M-j)\n        x *= L[j+1]-L[j]\n        x %= MOD\n        BIT_update(DP[i+1], j+1, x)\n\nprint(K, M)\n\nprint(BIT_query(DP[K], M)%MOD)","import sys\nsys.setrecursionlimit(10**7) #\u518d\u5e30\u95a2\u6570\u306e\u4e0a\u9650,10**5\u4ee5\u4e0a\u306e\u5834\u5408python\nimport math\nfrom copy import copy, deepcopy\nfrom copy import deepcopy as dcp\nfrom operator import itemgetter\nfrom bisect import bisect_left, bisect, bisect_right#2\u5206\u63a2\u7d22\n#bisect_left(l,x), bisect(l,x)#a\u306f\u30bd\u30fc\u30c8\u6e08\u307f\u3067\u3042\u308b\u5fc5\u8981\u3042\u308a\u3002a\u306e\u4e2d\u304b\u3089x\u672a\u6e80\u306e\u8981\u7d20\u6570\u3092\u8fd4\u3059\u3002right\u3060\u3068\u4ee5\u4e0b\nfrom collections import deque\n#deque(l), pop(), append(x), popleft(), appendleft(x)\n#q.rotate(n)\u3067 \u2192 \u306bn\u56de\u30ed\u30fc\u30c6\u30fc\u30c8\nfrom collections import Counter#\u6587\u5b57\u5217\u3092\u500b\u6570\u30ab\u30a6\u30f3\u30c8\u8f9e\u66f8\u306b\u3001\n#S=Counter(l),S.most_common(x),S.keys(),S.values(),S.items()\nfrom itertools import accumulate,combinations,permutations#\u7d2f\u7a4d\u548c\n#list(accumulate(l))\nfrom heapq import heapify,heappop,heappush\n#heapify(q),heappush(q,a),heappop(q) #q=heapify(q)\u3068\u3057\u306a\u3044\u3053\u3068\u3001\u8fd4\u308a\u5024\u306fNone\n#import fractions#\u53e4\u3044atcoder\u30b3\u30f3\u30c6\u30b9\u30c8\u306e\u5834\u5408GCD\u306a\u3069\u306f\u3053\u3053\u304b\u3089import\u3059\u308b\nfrom functools import lru_cache#pypy\u3067\u3082\u3046\u3054\u304f\n#@lru_cache(maxsize = None)#maxsize\u306f\u4fdd\u5b58\u3059\u308b\u30c7\u30fc\u30bf\u6570\u306e\u6700\u5927\u5024\u30012**n\u304c\u6700\u3082\u9ad8\u52b9\u7387\nfrom decimal import Decimal\n\ndef input(): \n    x=sys.stdin.readline()\n    return x[:-1] if x[-1]==\"\\n\" else x\ndef printe(*x):print(\"## \",*x,file=sys.stderr)\ndef printl(li): _=print(*li, sep=\"\\n\") if li else None\ndef argsort(s, return_sorted=False): \n    inds=sorted(range(len(s)), key=lambda k: s[k])\n    if return_sorted: return inds, [s[i] for i in inds]\n    return inds\ndef alp2num(c,cap=False): return ord(c)-97 if not cap else ord(c)-65\ndef num2alp(i,cap=False): return chr(i+97) if not cap else chr(i+65)\ndef matmat(A,B):\n    K,N,M=len(B),len(A),len(B[0])\n    return [[sum([(A[i][k]*B[k][j]) for k in range(K)]) for j in range(M)] for i in range(N)]\ndef matvec(M,v):\n    N,size=len(v),len(M)\n    return [sum([M[i][j]*v[j] for j in range(N)]) for i in range(size)]\ndef T(M):\n    n,m=len(M),len(M[0])\n    return [[M[j][i] for j in range(n)] for i in range(m)]\ndef main():\n    mod = 1000000007\n    #w.sort(key=itemgetter(1),reversed=True)  #\u4e8c\u500b\u76ee\u306e\u8981\u7d20\u3067\u964d\u9806\u4e26\u3073\u66ff\u3048\n\n    #N = int(input())\n    N, K = map(int, input().split())\n    #A = tuple(map(int, input().split())) #1\u884c\u30d9\u30af\u30c8\u30eb\n    #L = tuple(int(input()) for i in range(N)) #\u6539\u884c\u30d9\u30af\u30c8\u30eb\n    #S = tuple(tuple(map(int, input().split())) for i in range(N)) #\u6539\u884c\u884c\u5217\n    l=1\n    from collections import defaultdict\n    dp=dict()\n    ndp=defaultdict\n    for i in range(K):\n        ndp=dict()\n        l=N\n        s=0\n        while l>0:\n            d=N\/\/l\n            r=N\/\/(d+1)\n            if i==0:\n                s=1\n            else:\n                s+=dp[d]\n            ndp[l]=(l-r)*s%mod\n            l=r\n        dp=ndp\n    ans=0\n    for v in dp.values():\n        ans=ans+v\n        ans%=mod \n    print(ans)\n\n\n\n\n\nif __name__ == \"__main__\":\n    main()","from itertools import accumulate\nN, K = map(int, input().split())\nmod = 10 ** 9 + 7\nsqrt = int(N**(1\/2))\ncount = [N\/\/i - N\/\/(i+1) for i in range(1, N\/\/sqrt)] + [1] * sqrt\nansList = count\nfor _ in range(K):\n    ansList = [(i * j) % mod for i, j in zip(accumulate(reversed(ansList)), count)]\n\nprint(ansList[-1])","# coding: utf-8\n# Your code here!\nMOD = 10**9+7\n\nfrom math import sqrt, floor\n\nn,k = [int(i) for i in input().split()]\nsn = floor(sqrt(n))+1\n\npre = [0]*sn\npre[1] = 1\n\ncur = [1]*(sn)\ncur[0] = 0\n\n#big = n-sn+1\n\nfor _ in range(k-1):\n#    print(cur)\n    new = [sum(cur)%MOD]*(sn); new[0] = 0\n    s = sum(pre)%MOD\n    b=0\n    res=0\n    for j in range(sn-1,0,-1):\n        a = n\/\/j - (sn-1) #ok\u306a\u500b\u6570\n        res += (a-b)*s\n        res %=MOD\n        new[j] += res\n        if new[j] > MOD: new[j] -= MOD\n        s -= pre[j]\n        b=a\n        \n    pre,cur = cur,new\n\n\n#print(pre,cur)\nans =0\nfor j in range(sn-1,0,-1):\n    ans += pre[j]*(n\/\/j - (sn-1))\n    ans %=MOD\n\n\nprint((sum(cur)+ans)%MOD)\n\n\n\n","from heapq import heappush,heappop,heapify\nfrom collections import deque,defaultdict,Counter\nimport itertools\nfrom itertools import permutations,combinations,groupby\nimport sys\nimport bisect\nimport string\nimport math\nimport time\nimport random\ndef S_():\n    return input()\ndef LS():\n    return [i for i in input().split()]\ndef I():\n    return int(input())\ndef MI():\n    return map(int,input().split())\ndef LI():\n    return [int(i) for i in input().split()]\ndef LI_():\n    return [int(i)-1 for i in input().split()]\ndef NI(n):\n    return [int(input()) for i in range(n)]\ndef NI_(n):\n    return [int(input())-1 for i in range(n)]\ndef StoI():\n    return [ord(i)-97 for i in input()]\ndef ItoS(nn):\n    return chr(nn+97)\ndef LtoS(ls):\n    return ''.join([chr(i+97) for i in ls])\ndef GI(V,E,Directed=False,index=0):\n    org_inp=[]\n    g=[[] for i in range(n)]\n    for i in range(E):\n        inp=LI()\n        org_inp.append(inp)\n        if index==0:\n            inp[0]-=1\n            inp[1]-=1\n        if len(inp)==2:\n            a,b=inp\n            g[a].append(b)\n            if not Directed:\n                g[b].append(a)\n        elif len(inp)==3:\n            a,b,c=inp\n            aa=(inp[0],inp[2])\n            bb=(inp[1],inp[2])\n            g[a].append(bb)\n            if not Directed:\n                g[b].append(aa)\n    return g,org_inp\ndef bit_combination(k,n=2):\n    rt=[]\n    for tb in range(n**k):\n        s=[tb\/\/(n**bt)%n for bt in range(k)]\n        rt+=[s]\n    return rt\ndef show(*inp,end='\\n'):\n    if show_flg:\n        print(*inp,end=end)\nYN=['Yes','No']\nmo=10**9+7\ninf=float('inf')\nl_alp=string.ascii_lowercase\nu_alp=string.ascii_uppercase\nts=time.time()\nsys.setrecursionlimit(10**5)\ninput=lambda: sys.stdin.readline().rstrip()\n\ndef ran_input():\n    import random\n    n=random.randint(4,16)\n    rmin,rmax=1,10\n    a=[random.randint(rmin,rmax) for _ in range(n)]\n    return n,a\n\nshow_flg=False\nshow_flg=True\n\n\nans=0\n\nn,k=LI()\nb=[]\n\nfor i in range(1,int(n**0.5)+1):\n    b+=[n\/\/i]\n    b+=[n\/\/(n\/\/i)]\n\nb=sorted(set(b))\nd=[i-j for i,j in zip(b,[0]+b)]\nk+=1\n\nm=len(b)\ndp=[[0]*(m) for j in range(1+k)]\ndp[0][0]=1\n\nfor i in range(k):\n    sdp=[0]\n    #show('dp',dp[i])\n    for j in range(m):\n        sdp.append((sdp[-1]+dp[i][j]*d[j])%mo)\n    sdp=sdp[::-1]\n    #show('sdp',sdp)\n    for j in range(m):\n        dp[i+1][j]=sdp[j]\n\nprint(sdp[0])\n","MOD = 10**9 + 7\nclass mint:\n    def __init__(self, i):\n        self.i = i\n    def __add__(self, m):\n        t = self.i + (m.i if isinstance(m, mint) else m)\n        if t > MOD:\n            t -= MOD\n        return mint(t)\n    def __radd__(self, m):\n        t = self.i + (m.i if isinstance(m, mint) else m)\n        if t > MOD:\n            t -= MOD\n        return mint(t)\n    def __mul__(self, m):\n        return mint(self.i * (m.i if isinstance(m, mint) else m) % MOD)\n    def __sub__(self, m):\n        t = self.i - (m.i if isinstance(m, mint) else (m % MOD))\n        if t < 0:\n            t += MOD\n        return mint(t)\n    def __pow__(self, m):\n        i = self.i\n        return mint(pow(i, m, MOD))\n    def __truediv__(self, m):\n        return mint(self.i * pow(m, MOD - 2, MOD) % MOD)\n    def __repr__(self):\n        return repr(self.i)\n\n\nn, k = map(int, input().split())\n\nl, r = 1, n + 1\nwhile r - l > 1:\n    c = (l + r) \/\/ 2\n    if c ** 2 <= n:\n        l = c\n    else:\n        r = c\nr = l # less than or equal to sqrt(n)\n# 1 ... r - 1, r, (r, n\/r], ... (n\/3, n\/2], (n\/2, n]\n# (a, b] ... count for each elem in (a, b], not sum\n# (r, n\/r] is ignored if r*r == n\ndp = [mint(0) for _ in range(2 * r)]\ndp[0] = mint(1)\nfor _ in range(k):\n    ndp = [mint(0) for _ in range(2 * r)]\n    for i in range(1, r + 1):\n        pre_cnt = dp[i - 1]\n        if i == r and r ** 2 == n:\n            ndp[r - 1] += pre_cnt\n        else:\n            ndp[-i] += pre_cnt\n    for i in range(1, r + 1):\n        if i == r and r ** 2 == n:\n            continue\n        pre_cnt = dp[-i]\n        upper = n \/\/ i\n        lower = r + 1 if i == r else 1 + n \/\/ (i + 1)\n        ndp[i - 1] += pre_cnt * (upper - lower + 1)\n    acc = mint(0)\n    for i in range(r * 2 - 1, -1, -1):\n        if i == r and r ** 2 == n:\n            continue\n        acc += ndp[i]\n        dp[i] = acc\n\nans = mint(0)\nfor i in range(1, r + 1):\n    ans += dp[i - 1]\nfor i in range(1, r + 1):\n    upper = n \/\/ i\n    lower = r + 1 if i == r else 1 + n \/\/ (i + 1)\n    ans += dp[-i] * (upper - lower + 1)\nprint(ans)\n","n,k = [int(x) for x in input().split()]\nmod = 1000000007\nif n == 1:\n    print(1)\n    quit()\nf = [0,n]\ni = 1\nwhile f[i] >= i:\n    i += 1\n    f.append(n\/\/i)\ns = [0]*len(f)\nfor i in range(1,len(f)):\n    s[i] = 1\nfor i in range(2,len(f))[::-1]:\n    if f[i] <= i:\n        s[-1] = f[i-1]-f[i]\n    else:\n        s.append(f[i-1]-f[i])\nMA = len(s)\ndp = [[0]*MA for i in range(k)]\ndp[0] = [s[i] for i in range(MA)]\nfor i in range(MA-1):\n    dp[0][i+1] += dp[0][i]\n    dp[0][i+1] %= mod\nfor l in range(k-1):\n    for i in range(1,MA):\n        j = MA-i\n        dp[l+1][i] += dp[l][j]*s[i]\n        dp[l+1][i] %= mod\n        dp[l+1][i] += dp[l+1][i-1]\n        dp[l+1][i] %= mod\nprint(dp[-1][-1])\n","n,m=map(int,input().split(' '))\nMod=1000000007\nspl=int(n**0.5)+1\nf,k=[i for i in range(spl)]+[n\/\/i for i in range(1,spl)][::-1],2*spl-1\ndp=[0]+[1]*(k-1)\nfor i in range(m):\n\tdp2=[0]*k\n\tfor j in range(1,k):\n\t\tdp2[j]=(dp2[j-1]+dp[k-j]*(f[j]-f[j-1]))%Mod\n\tdp=dp2\nprint(dp[k-1])","N,K = map(int,input().split())\nMOD = 10**9+7\n\nm = 1\na,b = [],[]\nwhile m*m <= N:\n    a.append(m)\n    b.append(N\/\/m)\n    m += 1\nif a[-1] == b[-1]:\n    b.pop()\na += b[::-1]\nw = [b-a for a,b in zip([0]+a, a)]\n\nL = len(a)\ndp = [1]*L\nfor _ in range(K-1):\n    dp2 = [0]*L\n    c = 0\n    for i,v in enumerate(w):\n        c += dp[i] * v\n        dp2[L-1-i] += c\n        dp2[L-1-i] %= MOD\n    dp = dp2\nans = sum(a*b for a,b in zip(w,dp))\nprint(ans%MOD)","import sys\nimport numpy as np\n\nsr = lambda: sys.stdin.readline().rstrip()\nir = lambda: int(sr())\nlr = lambda: list(map(int, sr().split()))\n\nMOD = 10 ** 9 + 7\nN, K = lr()\nM = int(N**.5)\n\n# M+1\u4ee5\u4e0a\u3067\u3001N\u3092\u5272\u308b\u3068x\u306b\u306a\u308b\u3082\u306e\nupper_cnt = np.zeros(M+1, dtype=np.int64) # 1-indexed\nA = np.arange(M+1, dtype=np.int64)\nupper_cnt[1:] = N \/\/ A[1:] - np.maximum(M, N \/\/ (A[1:]+1)) # M\u306e\u6642\u306flower\u3067\u6570\u3048\u308b\u306e\u30670\u306b\n\n# \u6841DP\nlower = np.zeros(M+1, dtype=np.int64) # 1-indexed\nupper = np.zeros(M+1, dtype=np.int64)\n#\u6700\u521d\u306f\u5236\u9650\u306a\u3057\u306a\u306e\u30671\u3092\u7f6e\u3044\u3066\u304a\u304f\nlower[1] = 1\nfor i in range(K):\n    prev_lower = lower.copy()\n    prev_upper = upper.copy()\n    lower_cum = prev_lower.cumsum() % MOD\n    upper_cum = prev_upper.cumsum() % MOD\n    # lower \u3068 upper \u304b\u3089 lower \u3078\n    lower = np.zeros(M+1, dtype=np.int64)\n    lower[1:] += (lower_cum[-1] + upper_cum[-1])\n    lower[1:] -= upper_cum[:-1] # \u5927\u304d\u3059\u304e\u308b\u5024\u3092\u5f15\u304f\n    # upper \u304b\u3089 upper \u306f\u306a\u3057\n    # lower \u304b\u3089 upper \u3078\n    upper = lower_cum * upper_cnt\n    lower %= MOD; upper %= MOD\n\nanswer = (lower[1:].sum() + upper[1:].sum()) % MOD\nprint(answer)\n","from itertools import accumulate as r;n,k=map(int,input().split());m=10**9+7;j=int(n**0.5);c=[n\/\/(i+1)-n\/\/(i+2) for i in range(n\/\/(j+1))]+[1]*j;x=c;exec(\"x=[(y*d)%m for y,d in zip(r(x[::-1]),c)];\"*k);print(x[-1])","#!\/usr\/bin\/python3\n# -*- coding: utf-8 -*-\nimport math\n\nMOD = 1000000007\n\n\n\ndef fact(n):\n  ans = {0}\n  for i in range(1,math.ceil(n**0.5)+1):\n      ans.add(i)\n      ans.add(n\/\/i)\n  return sorted(list(ans))\n\ndef main():\n  N,K = map(int, input().split())\n  dp = [{} for _ in range(K+1)]\n  keys = fact(N)\n  dp[1] = {f:f for f in keys}\n\n  for i in range(1,K):\n    j_prev = 0\n    dp[i+1][0] = 0\n    for j in keys[1:]:\n      dp[i+1][j] = (dp[i+1][j_prev] + (j-j_prev)*dp[i][N\/\/j]) % MOD\n      j_prev = j\n  print(dp[K][N])\n\n\nif __name__ == \"__main__\":\n  main()","import math\nprintn = lambda x: sys.stdout.write(x)\ninn = lambda : int(input())\ninl   = lambda: list(map(int, input().split()))\ninm   = lambda:      map(int, input().split())\nDBG = True  and False\ndef ddprint(x):\n  if DBG:\n    print(x)\n\nR = 10**9+7\nn,k = inm()\nq = int(math.sqrt(n))\na = [ [0]*(q+1) for j in range(k) ]\nb = [ [0]*(q+1) for j in range(k) ]\nc = [0]*(q+1)\nc[1] = n - n\/\/2\nfor i in range(2,q):\n    c[i] = n\/\/i - n\/\/(i+1)\nc[q] = n\/\/q - q\nfor i in range(1,q+1):\n    a[0][i] = 1\n    b[0][i] = c[i]\n\n\nfor j in range(1,k):\n    aacc = [0]*(q+2)\n    bacc = [0]*(q+2)\n    for i in range(1,q+1):\n        aacc[i] = (aacc[i-1] + a[j-1][i])%R\n    for i in range(q,0,-1):\n        bacc[i] = (bacc[i+1] + b[j-1][i])%R\n    for i in range(1,q+1):\n        a[j][i] = (aacc[q]+bacc[i])%R\n        b[j][i] = (aacc[i]*c[i])%R\n\nprint( (sum(a[k-1]) + sum(b[k-1])) % R )\n","import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(1000000)\nfrom collections import deque, Counter, defaultdict\ndef getN():\n    return int(input())\ndef getList():\n    return list(map(int, input().split()))\nimport math\nimport copy\nimport bisect\nMOD = 10**9 + 7\nfrom logging import getLogger, StreamHandler, DEBUG, WARNING\nlogger = getLogger(__name__)\nhandler = StreamHandler()\nhandler.setLevel(DEBUG)\nlogger.setLevel(DEBUG)\n# handler.setLevel(WARNING)\n# logger.setLevel(WARNING)\nlogger.addHandler(handler)\ndef main():\n    n,k = getList()\n\n    # =================\u7d04\u6570\u5217\u6319=================\n    divisors = []\n    tmp_div = n + 1\n    for i in range(1, int(math.sqrt(n)) + 3):\n        if tmp_div * i > n:\n            other = n \/\/ i\n            if i > other:\n                break\n            elif i == other:\n                divisors.append(i)\n                break\n            else:\n                divisors.append(i)\n                divisors.append(other)\n\n    divisors.sort()\n    n_div = len(divisors)\n    # =================\u7d04\u6570\u5217\u6319=================\n\n    # =================dp[0]\u306e\u4f5c\u6210=============\n    diff = [divisors[0]]\n    for i, j in zip(divisors, divisors[1:]):\n        diff.append(j - i)\n    dp = copy.copy(diff)\n    # print(dp)\n    # =================dp[0]\u306e\u4f5c\u6210=============\n\n    for iteration in range(k-1):\n        dp_copy = []\n        tmp = sum(dp) % MOD\n        dp_copy.append((tmp * diff[0]) % MOD)\n        for cid, dp_content in enumerate(range(n_div - 1)):\n            tmp -= dp[n_div - dp_content - 1]\n            dp_copy.append((tmp * diff[cid+1]) % MOD)\n\n        dp = copy.copy(dp_copy)\n\n        # print(dp)\n    print(sum(dp) % MOD)\n    # print(acc)\n    # print(n_div)\nif __name__ == \"__main__\":\n    main()","n, k = list(map(int, input().split()))\nmod = 10 ** 9 + 7\n\nm = n ** 0.5\ncnt = [n \/\/ i - n \/\/ (i + 1) for i in range(1, int(m) + 1)] \ncnt = (cnt + [1 for _ in range(n - sum(cnt))])[::-1]\nnxt = cnt[:]\n\nfor _ in range(k - 1):\n\tcnt = [sum([x * nxt[i] % mod for x in cnt[:(len(cnt) - i)]])  for i in range(len(cnt))]\nprint(sum(cnt) % mod)\n","n,k = map(int,input().split())\nmod = 10**+7\nsub = int(n**0.5)\np = [1]*(sub)\nps = [i for i in range(1,sub+1)]\nl = [i for i in range(1,sub+1)]\nsub = n\/\/l[-1]\nwhile sub > 1:\n    sub -= 1\n    nex = n\/\/sub\n    if nex <= l[-1]:\n        sub -=1\n        nex = n\/\/sub\n    dis = nex-l[-1]\n    l.append(nex)\n    p.append(dis)\n    ps.append(ps[-1]+dis)\nx = len(p)\ndp = [[0]*x for i in range(k)]\ndps = [[0]*x for i in range(k)]\ndp[0] = p\ndps[0] = ps\nfor i in range(1,k):\n    for j in range(x):\n        dp[i][j] += dps[i-1][-1-j]*dp[0][j]\n        dp[i][j] %= mod\n        dps[i][j] = dps[i][j-1]+dp[i][j]\n        dps[i][j] %= mod\n\nprint(sum(dp[-1])%mod)\n","import sys\n\ndef solve():\n    input = sys.stdin.readline\n    N, K = map(int, input().split())\n    mod = 7 + 10 ** 9\n    S = 1\n    while S ** 2 <= N:\n        S += 1\n    DP = [[[0, 0] for _ in range(S)] for _ in range(K)]\n    Rev = [0] * S\n    S -= 1\n    Rev[S] = (N \/\/ S - S) % mod\n    for i in reversed(range(1, S)):\n        Rev[i] = ((N \/\/ i) - (N \/\/ (i + 1))) % mod\n    for i in range(1, S + 1):\n        DP[0][i][0] = 1\n        DP[0][i][1] = Rev[i]\n    for i in range(2, S + 1):\n        DP[0][i][0] += DP[0][i-1][0]\n        DP[0][i][0] %= mod\n    DP[0][S][1] += DP[0][S][0]\n    DP[0][S][1] %= mod\n    for i in reversed(range(1, S)):\n        DP[0][i][1] += DP[0][i+1][1]\n        DP[0][i][1] %= mod\n\n    for i in range(1, K):\n        for j in range(1, S + 1):\n            DP[i][j][0] += DP[i-1][j][1]\n            DP[i][j][1] += (DP[i-1][j][0] * Rev[j]) % mod\n            DP[i][j][1] %= mod\n            DP[i][j][0] += DP[i][j-1][0]\n            DP[i][j][0] %= mod\n        DP[i][S][1] = DP[i][S][0]\n        for j in reversed(range(1, S)):\n            DP[i][j][1] += DP[i][j+1][1]\n            DP[i][j][1] %= mod\n\n    print(DP[K-1][1][1])\n    #print(DP)\n\n    return 0\n\nif __name__ == \"__main__\":\n    solve()","import numpy as np\n\nn, k = list(map(int, input().split()))\nMOD = 10 ** 9 + 7\nl = int(n ** 0.5)\ncoe = [n \/\/ i - l for i in range(l, 0, -1)]\ncoe.append(0)\ncoe.reverse()\ncoe = np.array(coe, dtype=np.int64)\n\ndp1 = np.ones(l + 1, dtype=np.int64)\ndp2 = coe.copy()\ndp1[0] = 0\nfor i in range(k - 1):\n    dp1acc_f = np.add.accumulate(dp1) % MOD\n    dp1acc_b = np.add.accumulate((dp1 * coe % MOD)[::-1])[::-1] % MOD\n    s = dp1acc_f[-1]\n    dp1acc_f = np.roll(dp1acc_f, 1)\n    dp1[1:] = (s + dp2[1:]) % MOD\n    dp2[1:] = (dp1acc_b + dp1acc_f * coe)[1:] % MOD\nans = (dp1.sum() + dp2[1]) % MOD\nprint(ans)\n","from itertools import accumulate\n\nN, K = map(int, input().split())\nmod = 10**9 + 7\n\nxs = []\nx = 1\nwhile x * x <= N:\n    xs.append(N \/\/ x)\n    x += 1\ns = x - 1\ny = 1\nwhile y < N \/\/ y:\n    xs.append(y)\n    y += 1\nxs = list(set(xs))\nxs.sort()\ncompress = {x : i for i, x in enumerate(xs)}\n\ndp = [[0] * len(compress) for _ in range(K)]\nfor x, i in compress.items():\n    dp[-1][i] = x\n\nfor k in range(K-1)[::-1]:\n    cum = list(accumulate([0] + dp[k+1]))\n    for x, i in compress.items():\n        a = max(compress[N \/\/ x], compress[N \/\/ s])\n        dp[k][i] = (cum[-1] - cum[a]) % mod\n\n    b = 1\n    cum = [0] * len(compress)\n    while b < N \/\/ b:\n        cnt = N \/\/ b - N \/\/ (b + 1)\n        cum[compress[b]] = (cum[compress[b]] + cnt * dp[k+1][compress[b]]) % mod\n        b += 1\n    cum = list(accumulate([0] + cum))\n    for x, i in compress.items():\n        b = N \/\/ x\n        if x <= b:\n            continue\n        dp[k][i] += cum[-1] - cum[compress[b]+1]\n        dp[k][i] += (x - N \/\/ (b + 1)) * dp[k+1][compress[b]]\n        dp[k][i] %= mod\nprint(dp[0][-1])","import math\nfrom bisect import bisect_left\n\nMOD = 10**9 + 7\n\n\ndef main():\n    N, K = map(int, input().split())\n    R = int(math.sqrt(N))\n    if N \/\/ R == R:\n        M = R * 2 - 1\n    else:\n        M = R * 2\n    mapping = [0] * (M+1)\n    for i in range(1, R+1):\n        mapping[i] = i\n        mapping[-i] = N\/\/i\n    cnt = [0] * (M+1)\n    for i in range(1, M+1):\n        cnt[i] = mapping[i] - mapping[i-1]\n    dp = [[0] * (M+1) for _ in range(K+1)]\n    dp[0] = list(cnt)\n    for i in range(M):\n        dp[0][i+1] += dp[0][i]\n\n    for i in range(K-1):\n        for j in range(1, M+1):\n            v = N \/\/ mapping[j]\n            idx = bisect_left(mapping, v)\n            dp[i+1][j] = dp[i][idx]\n        for j in range(M):\n            dp[i+1][j+1] = (dp[i+1][j] + dp[i+1][j+1] * cnt[j+1]) % MOD\n    print(dp[K-1][M])\n\n\nif __name__ == \"__main__\":\n    main()\n","N, K = map(int, input().split())\nL = 10**9+7\n\nparts = []\ni = 1\nwhile i<=N:\n    a = N \/\/ i\n    j = N \/\/ a\n    parts.append(j-i+1)\n    i = j+1\n\nC = parts\nfor _ in range(K-1):\n    C_new = []\n    c = 0\n    for i,p in enumerate(parts[::-1]):\n        num_dual = i\n        c += C[i]\n        C_new.append(p * c % L)\n    C = C_new[::-1]\nprint(sum(C) % L)\n","import numpy as np\nN,K = map(int,input().split())\nMOD = 10 ** 9 + 7\nM = int(N**.5)\n\n# M+1\u4ee5\u4e0a\u3067\u3001\u5546\u304c\u3062\u3087\u3046\u3068x\u306b\u306a\u308b\u3084\u3064\nupper_cnt = np.zeros(M+1, dtype=np.int64)\na = np.arange(M+1, dtype=np.int64)\nupper_cnt[1:] = N \/\/ a[1:] - np.maximum(M, N \/\/ (a[1:]+1))\n\n# \u6570\u5217\u306e\u672b\u7aef\u3054\u3068\u306e\u500b\u6570\n# upper\u306b\u3064\u3044\u3066\u306f\u3001\u500b\u6570\u306b\u308f\u305f\u3063\u3066\u5408\u8a08\u3092\u3068\u308b\nlower = np.zeros(M+1, dtype=np.int64)\nupper = np.zeros(M+1, dtype=np.int64)\n# 0\u9805\u76ee\u306b1\u3092\u7f6e\u3044\u3066\u304a\u304f\u3068\u3059\u308b\nlower[1] = 1\nfor k in range(1,K+1):\n    prev_lower = lower\n    prev_upper = upper\n    np.cumsum(prev_lower, out = prev_lower)\n    np.cumsum(prev_upper, out = prev_upper)\n    prev_lower %= MOD\n    prev_upper %= MOD\n    # \u4e0b\u5074 to \u4e0b\u5074\n    lower = np.zeros(M+1, dtype=np.int64)\n    lower += (prev_lower[-1] + prev_upper[-1])\n    lower[1:] -= prev_upper[:-1] # \u5546\u304cn-1\u4ee5\u4e0b\u3060\u3068\u53d7\u3051\u4ed8\u3051\u306a\u3044\n    lower[0] = 0\n    # \u4e0a\u5074 to \u4e0a\u5074\uff1a\u306a\u3044\u306f\u305a\n    # \u4e0b\u5074 to \u4e0a\u5074\uff1a\n    upper = prev_lower * upper_cnt\n    lower %= MOD\n    upper %= MOD\n    \nanswer = (lower.sum() + upper.sum()) % MOD\nprint(answer)\n","MOD = pow(10, 9) + 7\n\ndef main():\n  n, k = map(int, input().split())\n  dyaku = set([1, n])\n  i = 2\n  while i*i<=n:\n    if n \/\/ i not in dyaku:\n      dyaku.add(i)\n      dyaku.add(n\/\/i)\n    i += 1\n  reyaku = [0] + list(sorted(dyaku))\n  ddyaku = {s: i+1 for i, s in enumerate(sorted(dyaku))}\n  dp = [[0 for _ in range(k)] for _ in range(len(dyaku) + 1)]\n  for i in range(1, len(dyaku)+1):\n    dp[i][1] = (((reyaku[i] - reyaku[i-1]) * (n \/\/ reyaku[i])) % MOD + dp[i-1][1]) % MOD\n  for i in range(2, k):\n    for j in range(1, len(dyaku)+1):\n      dp[j][i] = (((reyaku[j] - reyaku[j-1]) * dp[ddyaku[n\/\/reyaku[j]]][i-1]) % MOD + dp[j-1][i]) % MOD\n  print(dp[-1][-1])\n\n\nif __name__ == '__main__':\n  main()","import math\nfrom itertools import chain\n\nN, K = map(int, input().split())\n\nmodulo = 10 ** 9 + 7\nsqrtN  = int(math.sqrt(N))\n\nP = [N \/\/ d for d in range(1, sqrtN + 1)]\n\n# M[i] - \u6b63\u306e\u6574\u6570k\u500b\u3092\u4e26\u3079\u305f\u3082\u306e\u306e\u3046\u3061, \u5148\u982d\u304ci\u3067,\n#        \u96a3\u63a5\u3059\u308b\u6574\u6570\u306e\u7a4d\u304cN\u4ee5\u4e0b\u306e\u3082\u306e\u306e\u500b\u6570 (mod modulo).\n\n# k == 1 \u306e\u3068\u304d\u306f M[i] == 1\nM = {i: 1 for i in chain(P, range(1, P[-1]))}\n\n# M2[i] - M[i] at k\n# M2[i] = sum(M[j] for j such that 1 <= j <= N \/\/ i)\n#       = M2[m] + sum(M[j] for j such that N\/\/m < j <= N\/\/i) (some m > i)\nfor k in range(2, K + 2):\n    M2 = {}\n    M2[N] = M[1]\n    for m, i in zip(P, P[1:]):\n        M2[i]  = M2[m] + sum(M[j] for j in range(N \/\/ m + 1, N \/\/ i + 1))\n        M2[i] %= modulo\n    for i in range(P[-1] - 1, 0, -1):\n        M2[i]  = M2[i + 1] + M[N \/\/ i] * (N \/\/ i - N \/\/ (i + 1))\n        M2[i] %= modulo\n    M = M2\n\nprint(M[1])\n","n,k = map(int, input().split())\nmod = 10**9 + 7\n\nnums = set()\nd = {}\nfor i in range(1,10**6):\n    a = n\/\/i\n    b = 1 + n\/\/(i+1)\n    d[i] = a\n    nums.add(i)\n    nums.add(a)\n    if(i >= b):\n        break\n    d[b] = i\n    nums.add(b)\n\nd = sorted(d.items())\n\ndic_en = {}\ndic_de = {}\nnums = sorted(list(nums))\ncnt = [0] * len(nums)\ndone = 0\nfor i,num in enumerate(nums):\n    dic_en[num] = i\n    dic_de[i] = num\n    cnt[i] = num - done\n    done = num\n\nd = []\nfor num in nums:\n    d.append((dic_en[num],  dic_en[n\/\/num]))\n\nop = cnt[::]\n\ndef update(op):\n    n = len(nums)\n    res = [0] * (n+1)\n    for a,b in d:\n        res[0] += op[a]\n        res[b+1] -= op[a]\n    res[0] %= mod\n    for i in range(1,n):\n        res[i] += res[i-1]\n        res[i] %= mod\n    for i in range(n):\n        res[i] *= cnt[i]\n        res[i] %= mod\n    return res[:-1]\n\nfor i in range(k-1):\n    op = update(op)\n\nans = sum(op) % mod\n\nprint(ans)","import math\nN, K = map(int, (input().split()))\n\nmod = 10**9 + 7\n\nans_array = []\ndivide_max = N\ndivide_count = []\n\nfor i in range(2, math.floor(math.sqrt(N)) + 2):\n    divide = math.floor(N \/ i)\n    ans_array.append(divide_max - divide)\n    divide_count.append(divide_max - divide)\n    divide_max = divide\n\nfor i in range(divide):\n    ans_array.append(1)\nans_array = ans_array[::-1]\n# print(ans_count)\nans_length = len(ans_array)\nans_acc = [0] * ans_length\n\nfor k in range(2, K + 1):\n    ans_acc[0] = ans_array[0]\n    for i in range(1, ans_length):\n        ans_acc[i] = (ans_acc[i - 1] + ans_array[i]) % mod\n    # print(ans_array)\n    # print(ans_acc)\n    for i in range(divide):\n        ans_array[i] = ans_acc[ans_length - i - 1]\n    for i in range(divide, ans_length):\n        ans_array[i] = ans_acc[ans_length - i - 1] * divide_count[\n            ans_length - 1 - i] % mod\n\nans_acc[0] = ans_array[0]\nfor i in range(1, ans_length):\n    ans_acc[i] = (ans_acc[i - 1] + ans_array[i]) % mod\n\nprint(ans_acc[-1])","import sys\ndef MI(): return map(int,sys.stdin.readline().rstrip().split())\n\nN,K = MI()\nmod = 10**9+7\n\nB = [i for i in range(int(N**.5)+1)]\nC = [N\/\/i for i in range(1,int(N**.5)+1)]\nC.reverse()\n\nif B[-1] == C[0]:\n    del C[0]\n\nD = B+C\nA = [D[i+1]-D[i] for i in range(len(D)-1)]\na = len(A)\ndp = [[0]*a for _ in range(K)]\nfor i in range(K):\n    if i == 0:\n        for j in range(a):\n            if j == 0:\n                dp[i][j] = A[j]\n            else:\n                dp[i][j] = dp[i][j-1] + A[j]\n                dp[i][j] %= mod\n    else:\n        for j in range(a):\n            if j == 0:\n                dp[i][j] = dp[i-1][a-j-1]\n            else:\n                dp[i][j] = dp[i][j-1] + dp[i-1][a-j-1]*A[j]\n                dp[i][j] %= mod\n\nprint(dp[-1][-1])\n","N,K=map(int,input().split())\nif N==1:\n    print(1)\n    exit()\nmod=10**9+7\nLayer=[]\na=1\nb=1\nwhile(b<N):\n    a=b\n    b=N\/\/(N\/\/a)+1\n    Layer.append((a,b))\n#print(Layer)\nnum=[x[1]-x[0] for x in Layer]\nM=len(Layer)\n#print(num)\ndp=[[0 for j in range(M+1)] for i in range(K+1)]\ndp[0][0]=1\nsdp=[0 for i in range(M+2)]\nfor k in range(K):\n    for j in range(M+1):\n        sdp[j+1]=(dp[k][j]+sdp[j])%mod\n    for j in range(M):\n        dp[k+1][j]=(sdp[M-j]*num[j])%mod\nans=0\nfor j in range(M+1):\n    ans+=dp[K][j]\n    ans%=mod\nprint(ans)\n","MOD=10**9+7\nn,k=map(int,input().split())\nt=[]#\uff54\uff1dn\/\/j\u306e\u7a2e\u985e\u3092\u6570\u3048\u308b\u306e\u306b\u4f7f\u3046\nt_cnt=[]#t\u3068\u306a\u308bj\u306e\u500b\u6570\n\nfor i in range(1,n+1):\n  tmp=n\/\/i\n  if tmp not in t:\n    t.append(tmp)\n    t_cnt.append(1)\n  else:\n    t_cnt[-1]+=1\n#print(t,t_cnt)\n\nm = len(t)\nans = [[0]*m for i in range(k)]\ns_ans = [0]*m #\u7d2f\u7a4d\u548c\u7528\n\nfor i in range(m):\n  ans[0][i] = t_cnt[i]\nfor i in range(1,k):\n  s_ans[0] = ans[i-1][0]\n  for j in range(1,m):\n    s_ans[j] = s_ans[j-1] + ans[i-1][j]\n  #print(s_ans)\n  for j in range(m):\n    ans[i][j] = s_ans[-1-j] * t_cnt[j]\n#print(ans)\n\nx = 0\nfor i in range(m):\n  x += ans[-1][i]%MOD\nprint(x)","def examA():\n    N = DI()\/dec(7)\n    ans = N\n    print(N)\n    return\n\ndef examB():\n    ans = 0\n    print(ans)\n    return\n\ndef examC():\n    ans = 0\n    print(ans)\n    return\n\ndef examD():\n    ans = 0\n    print(ans)\n    return\n\ndef examE():\n    ans = 0\n    print(ans)\n    return\n\ndef examF():\n    N, K = LI()\n    n = int(N**0.5)\n    C = [] # N\/\/j=index\u3068\u306a\u308bj\u306e\u500b\u6570\n    L = [0]*(2*int(n)) # N\/\/index\u306e\u89e3 =>\u8981\u308a\u307e\u305b\u3093\u3002\u3002\n    for i in range(1,n+1):\n        now = N\/\/i - N\/\/(i+1)\n        C.append(now)\n    for i in range(1,n+1):\n        if N\/\/i==i:\n            continue\n        C.append(1)\n    C.reverse()\n    #print(C)\n    n = len(C)\n    #for i in range(1,n+1):\n    #    L[i-1] = N\/\/i\n    #for i in range(n):\n    #    L[i+n] = n - i\n    #L.reverse()\n    #print(L)\n    dp = [[0]*(n) for _ in range(K)]\n\n    for i in range(n):\n        dp[0][i] = C[i]\n    #print(dp[0])\n    for i in range(K-1):\n        S = 0\n        for j in range(n):\n            S += dp[i][j]\n            S %= mod\n            dp[i+1][n-j-1] = S*C[n-j-1] %mod\n    #print(dp)\n    ans = 0\n    for s in dp[-1]:\n        ans += s\n        ans %= mod\n    print(ans)\n    return\n\nfrom decimal import getcontext,Decimal as dec\nimport sys,bisect,itertools,heapq,math,random\nfrom copy import deepcopy\nfrom heapq import heappop,heappush,heapify\nfrom collections import Counter,defaultdict,deque\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\ndef I(): return int(input())\ndef LI(): return list(map(int,sys.stdin.readline().split()))\ndef DI(): return dec(input())\ndef LDI(): return list(map(dec,sys.stdin.readline().split()))\ndef LSI(): return list(map(str,sys.stdin.readline().split()))\ndef LS(): return sys.stdin.readline().split()\ndef SI(): return sys.stdin.readline().strip()\nglobal mod,mod2,inf,alphabet,_ep\nmod = 10**9 + 7\nmod2 = 998244353\ninf = 10**18\n_ep = dec(\"0.000000000001\")\nalphabet = [chr(ord('a') + i) for i in range(26)]\nalphabet_convert = {chr(ord('a') + i): i for i in range(26)}\n\ngetcontext().prec = 28\n\nsys.setrecursionlimit(10**7)\n\nif __name__ == '__main__':\n    examF()\n\n\"\"\"\n142\n12 9 1445 0 1\nasd dfg hj o o\naidn\n\"\"\"","\nimport sys\ndef input():\n\treturn sys.stdin.readline().strip()\n\nN, K = list(map(int, input().split()))\n\nrootN = int(N**0.5)\nnum_list = [1]*rootN\n\nnow = rootN\nfor num in range(rootN, 0, -1):\n\tx = N\/\/num\n\tnum_list.append(x - now)\n\tnow = x\n\ndp = [[0]*len(num_list) for i in range(K)]\nfor i in range(len(num_list)):\n\tdp[0][i] = num_list[i]\n\n\nmod = 10**9 + 7\nfor k in range(1, K):\n\tsum_before = [dp[k - 1][0]]\n\tfor i in range(1, len(num_list)):\n\t\tsum_before.append(sum_before[-1]+dp[k - 1][i])\n\tfor i in range(len(num_list)):\n\t\tdp[k][i] = (num_list[i]*sum_before[len(num_list) - 1 - i])%mod\n\nprint(sum(dp[-1])%mod)","from math import sqrt\nn, k = map(int, input().split())\nMOD = 10**9 + 7\nmax1 = int(sqrt(n))\ndp1 = [[0 for _ in range(max1+1)] for _ in range(k)]\nfor j in range(1, max1+1):\n\tdp1[0][j] = 1\nmax2 = int(n\/(max1+1))\ndp2 = [[0 for _ in range(max2+1)] for _ in range(k)]\nfor j in range(1, max2+1):\n\tdp2[0][j] = int(n\/j) - int(n\/(j+1))\n\nfor i in range(k-1):\n\tcsum1 = (sum(dp1[i])+sum(dp2[i])) % MOD\n\tdp1[i+1][1] = csum1\n\tfor j in range(2, max1+1):\n\t\tdp1[i+1][j] = (dp1[i+1][j-1] - dp2[i][j-1]) % MOD\n\tcsum2 = sum(dp1[i][:max2+1]) % MOD\n\tdp2[i+1][max2] = (csum2*dp2[0][max2]) % MOD\n\tfor j in range(max2-1, 0, -1):\n\t\tcsum2 -= dp1[i][j+1]\n\t\tcsum2 %= MOD\n\t\tdp2[i+1][j] = (csum2*dp2[0][j]) % MOD\n\nprint((sum(dp1[k-1])+sum(dp2[k-1]))%MOD)","hoge = input().split()\nN = int(hoge[0])\nK = int(hoge[1])\n\nif K == 2:\n  print(int((N*K-1) % (1e9 + 7)))\nelse:\n  hage = round(N \/ 2 - 0.5 + 0.01)\n  print(int((pow(K,K) * hage + (hage-1)*K) % (1e9 + 7)))","\n\"\"\"\n\u53f3\u306b\u304a\u3051\u308b\u306e\u304c\u540c\u3058\u3084\u3064\u306a\u3089\u540c\u4e00\u3067\u6271\u3046\n\u666e\u901a\u306a\u3089\u221aN * \u221aN\u306b\u306a\u3063\u3061\u3083\u3046\n\n\n\"\"\"\n\nN,K = map(int,input().split())\nmod = 10 ** 9 + 7\n\nlis = []\nlis2 = []\n\ni = 1\nwhile i ** 2 <= N:\n\n    if N \/\/ i != i:\n        lis.append(i)\n        lis2.append(N \/\/ i)\n    else:\n        lis.append(i)\n\n    i += 1\n\nlis2.reverse()\nlis += lis2\n\n\ndp = [0] * len(lis)\n\nfor i in range(len(lis)):\n    if i == 0:\n        dp[i] = 1\n    else:\n        dp[i] = lis[i]-lis[i-1]\n\n#print (dp)\n\nfor loop in range(K):\n\n    ndp = [0] * len(lis)\n    nsum = 0\n    \n    for i in range((len(lis))):\n\n        nsum += dp[i]\n        nsum %= mod\n\n        if i != len(lis)-1:\n            ndp[-1-i] += ((lis[-1-i] - lis[-2-i]) * nsum) % mod\n        else:\n            ndp[-1-i] += nsum % mod\n\n    dp = ndp\n\nprint (dp[0])","N, K = map(int, input().split())\nmod = 10**9+7\nn = int(N**0.5)\ndp1 = [[0]*(n+1) for _ in range(K)]\ndp2 = [[0]*(n+1) for _ in range(K)]\nfor i in range(1, n+1):\n    dp1[0][i] = 1\ndp2[0][n] = N\/\/n-n\nfor i in range(1, n):\n    dp2[0][i] = (N\/\/i-N\/\/(i+1))%mod\nfor i in range(1, K):\n    cum = 0\n    for j in range(1, n+1):\n        dp2[i][j] = ((dp1[i-1][j]+cum)%mod*dp2[0][j])%mod\n        cum+=dp1[i-1][j]\n        cum%=mod\n    for j in range(1, n+1)[::-1]:\n        dp1[i][j] = (cum+dp2[i-1][j])%mod\n        cum+=dp2[i-1][j]\n        cum%=mod\nprint((sum(dp1[-1])%mod+sum(dp2[-1])%mod)%mod)","N,K = map(int, input().split())\n# As = [N\/\/i for i in range(1,int(N**0.5)+1)]\n# Bs = [As[i]-As[i+1] for i in range(len(As)-1)]\n# Bs[0] -= 1\n# Bs = sorted(Bs) + [1]\nAs = [] \nfor i in range(1,int(N**0.5)+1):\n    As.append(i)\n    if N\/\/i != i:\n        As.append(N\/\/i)\nAs = sorted(As,reverse=False)\nnums = []\nfor i in range(len(As)-1):\n    nums.append(As[i+1]-As[i])\nnums = [1] + nums\nnums.reverse()\nmod = 10**9 + 7\nans = 0\ndp = [[0] * len(As) for i in range(K+1)]\n\n\nfrom itertools import accumulate\n# print(As,nums)\ndp[0][0] = 1\nfor i in range(K):\n    # 1\u3060\u3068\u5168\u901a\u308a\u5206\u304c\u6210\u308a\u7acb\u3064\u3057\u3001N\u3060\u30681\u901a\u308a\u3002\n    # \u305d\u308c\u305e\u308c\u7a2e\u5225\u306b\u307e\u3068\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3089\u3092\u304b\u3051\u308b\n    acc = list(accumulate(dp[i]))\n    for j in range(len(As)):\n        dp[i+1][len(As)-j-1] = acc[j]*nums[j]%mod\nprint(sum(dp[K])%mod)\n","from itertools import accumulate\nn,k = map(int,input().split())\nx = int(n**0.5)\nmod = 10**9+7\nif x*(x+1)<=n:\n  flg = 1\nelse:\n  flg = 0\nt = 2*x+flg\ndp = [[0 for i in range(t)] for j in range(2)]\nfor i in range(1,t):\n  if i<=x:\n    dp[0][i] = 1\n    dp[1][i] = 1\n  else:\n    p = t-i\n    dp[0][i] = n\/\/p-n\/\/(p+1)\n    dp[1][i] = n\/\/p-n\/\/(p+1)\ndp[1] = list(accumulate(dp[1]))\nfor i in range(2,k+1):\n  dp[1][1:] = dp[1][t:0:-1]\n  for j in range(1,t):\n    dp[1][j] = dp[1][j]*dp[0][j]%mod\n  for j in range(1,t):\n    dp[1][j] = (dp[1][j]+dp[1][j-1])%mod\nprint(dp[1][t-1])","from itertools import accumulate\n\nMOD = 10**9 + 7\n\nN, K = map(int, input().split())\n\ndef N2sqrtN(N):\n    M = int(N**0.5)\n    As = list(range(1, M+1))\n    Bs = [N\/\/A for A in reversed(As)]\n    if As[-1] == Bs[0]:\n        return As + Bs[1:]\n    else:\n        return As + Bs\n\nBs = N2sqrtN(N)\nlenB = len(Bs)\n\nnums = [1]\nfor i in range(lenB-1):\n    nums.append(Bs[i+1]-Bs[i])\n\ndp = [0] * lenB\ndp[0] = 1\nfor i in range(1, K+1):\n    dp = list(accumulate(dp))\n    dp = [dpi*num%MOD for dpi, num in zip(reversed(dp), nums)]\n\nprint(sum(dp) % MOD)\n","n,k=map(int,input().split())\na=int(n**0.5)\nmod=10**9+7\nl=[0]*(a+1)\nfor i in range(a,0,-1):\n    l[i]=i\n    l.append(n\/\/i)\nfor i in range(1,2*a+1):\n    l[-i]=l[-i]-l[-i-1]\ndp=[l]+[[0]*(2*a+1) for i in range(k-1)]\nfor i in range(1,k):\n    t=0\n    for j in range(1,2*a+1):\n        t+=dp[i-1][j]\n        t%=mod\n        dp[i][-j]=t*l[-j]%mod\nans=0\nfor i in dp[-1][1:]:\n    ans+=i\n    ans%=mod\nprint(ans)","def calc_floors(N):\n    # floor(N \/ n) (n = 1, ..., N) \u306e\u3068\u308a\u3046\u308b\u5024\u3068\n    # \u5404floor\u306e\u5024\u3092\u4e0e\u3048\u308bn\u306e\u7bc4\u56f2\uff08\u9589\u533a\u9593\uff09\u3092\u8fd4\u3059\n    n_values = list()\n    n_ranges = list()\n    k = 1\n    while k <= N:\n        # k = floor(N \/ n)  <-->  N\/(k+1) < n <= N\/k\n        # N\/(k+1)\u3088\u308a\u5927\u304d\u3044\u6700\u5c0f\u306e\u6574\u6570\u306f(N + k + 1) \/\/ (k + 1)\n        left, right = (N + k + 1) \/\/ (k + 1), N \/\/ k\n        n_values.append(k)\n        n_ranges.append((left, right))\n        if left == 1:\n            break\n        k = N \/\/ (left - 1)\n    return n_values, n_ranges\n\n\ndef main():\n    MOD = 10 ** 9 + 7\n    N, K = list(map(int, input().split()))\n    n_values, n_ranges = calc_floors(N)\n    # dp[k][i]: k\u500b\u76ee\u307e\u3067\u3067\u984c\u610f\u3092\u6e80\u305f\u3059\uff06\u4e00\u756a\u53f3\u306e\u6570\u304c\u533a\u5206i\u306e\u7bc4\u56f2\u306b\u5165\u308b\u3088\u3046\u306a\u6574\u6570\u306e\u7d44\u306e\u500b\u6570\n    dp = [[0 for _ in range(len(n_values))] for _ in range(K)]\n    dp[0][0] = n_values[0]\n    for i in range(1, len(n_values)):\n        dp[0][i] = n_values[i] - n_values[i - 1]\n    dp[0].reverse()\n    for k in range(1, K):\n        # dp\u306e\u7d2f\u7a4d\u548c\uff08\u5f8c\u308d\u304b\u3089\u9806\u306b\uff09\n        csdp = [0 for _ in range(len(n_values))]\n        csdp[len(n_values) - 1] = dp[k - 1][len(n_values) - 1]\n        for i in range(len(n_values) - 2, -1, -1):\n            csdp[i] = csdp[i + 1] + dp[k - 1][i]\n        # dp\u306e\u66f4\u65b0\n        for i in range(len(n_values)):\n            v = csdp[len(n_values) - i - 1] * (n_ranges[i][1] - n_ranges[i][0] + 1)\n            dp[k][i] = v % MOD\n    ans = 0\n    for i in range(len(n_values)):\n        ans += dp[K - 1][i]\n        ans %= MOD\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()","# using main() makes code faster from the point of view of \"access to variables in global name-space\"\n# def main():\n\n\"\"\" convenient functions\n# for i, a in enumerate(iterable)\n# q, mod = divmod(a, b)\n# divmod(x, y) returns the tuple (x\/\/y, x%y)\n# manage median(s) using two heapq https:\/\/atcoder.jp\/contests\/abc127\/tasks\/abc127_f\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(10**7)\nfrom itertools import accumulate, combinations, permutations, product # https:\/\/docs.python.org\/ja\/3\/library\/itertools.html\n# accumulate() returns iterator! to get list: list(accumulate())\nfrom math import factorial, ceil, floor\ndef factorize(n):\n    \"\"\"return the factors of the Arg and count of each factor\n    \n    Args:\n        n (long): number to be resolved into factors\n    \n    Returns:\n        list of tuples: factorize(220) returns [(2, 2), (5, 1), (11, 1)]\n    \"\"\"\n    fct = []  # prime factor\n    b, e = 2, 0  # base, exponent\n    while b * b <= n:\n        while n % b == 0:\n            n = n \/\/ b\n            e = e + 1\n        if e > 0:\n            fct.append((b, e))\n        b, e = b + 1, 0\n    if n > 1:\n        fct.append((n, 1))\n    return fct\ndef combinations_count(n, r):\n    \"\"\"Return the number of selecting r pieces of items from n kinds of items.\n    \n    Args:\n        n (long): number\n        r (long): number\n    \n    Raises:\n        Exception: not defined when n or r is negative\n    \n    Returns:\n        long: number\n    \"\"\"\n    # TODO: How should I do when n - r is negative?\n    if n < 0 or r < 0:\n        raise Exception('combinations_count(n, r) not defined when n or r is negative')\n    if n - r < r: r = n - r\n    if r < 0: return 0\n    if r == 0: return 1\n    if r == 1: return n\n    numerator = [n - r + k + 1 for k in range(r)]\n    denominator = [k + 1 for k in range(r)]\n    for p in range(2,r+1):\n        pivot = denominator[p - 1]\n        if pivot > 1:\n            offset = (n - r) % p\n            for k in range(p-1,r,p):\n                numerator[k - offset] \/= pivot\n                denominator[k] \/= pivot\n    result = 1\n    for k in range(r):\n        if numerator[k] > 1:\n            result *= int(numerator[k])\n    return result\ndef combinations_with_replacement_count(n, r):\n    \"\"\"Return the number of selecting r pieces of items from n kinds of items allowing individual elements to be repeated more than once.\n    \n    Args:\n        n (long): number\n        r (long): number\n    \n    Raises:\n        Exception: not defined when n or r is negative\n    \n    Returns:\n        long: number\n    \"\"\"\n    if n < 0 or r < 0:\n        raise Exception('combinations_with_replacement_count(n, r) not defined when n or r is negative')\n    elif n == 0:\n        return 1\n    else:\n        return combinations_count(n + r - 1, r)\nfrom bisect import bisect_left, bisect_right\nfrom collections import deque, Counter, defaultdict # https:\/\/docs.python.org\/ja\/3\/library\/collections.html#collections.deque\nfrom heapq import heapify, heappop, heappush, heappushpop, heapreplace,nlargest,nsmallest # https:\/\/docs.python.org\/ja\/3\/library\/heapq.html\nfrom copy import deepcopy, copy # https:\/\/docs.python.org\/ja\/3\/library\/copy.html\nfrom operator import itemgetter\n# ex1: List.sort(key=itemgetter(1))\n# ex2: sorted(tuples, key=itemgetter(1,2))\nfrom functools import reduce\ndef chmin(x, y):\n    \"\"\"change minimum\n    if x > y, x = y and return (x, True).\n    convenient when solving problems of dp[i]\n    \n    Args:\n        x (long): current minimum value\n        y (long): potential minimum value\n    \n    Returns:\n        (x, bool): (x, True) when updated, else (x, False)\n    \"\"\"\n    if x > y:\n        x = y\n        return (x, True)\n    else:\n        return (x, False)\ndef chmax(x, y):\n    \"\"\"change maximum\n    if x < y, x = y and return (x, True).\n    convenient when solving problems of dp[i]\n    \n    Args:\n        x (long): current maximum value\n        y (long): potential maximum value\n    \n    Returns:\n        (x, bool): (x, True) when updated, else (x, False)\n    \"\"\"\n    if x < y:\n        x = y\n        return (x, True)\n    else:\n        return (x, False)\n\nfrom fractions import gcd # Deprecated since version 3.5: Use math.gcd() instead.\ndef gcds(numbers):\n    return reduce(gcd, numbers)\ndef lcm(x, y):\n    return (x * y) \/\/ gcd(x, y)\ndef lcms(numbers):\n    return reduce(lcm, numbers, 1)\n\n# first create factorial_list\n# fac_list = mod_factorial_list(n)\nINF = 10 ** 18\nMOD = 10 ** 9 + 7\nmodpow = lambda a, n, p = MOD: pow(a, n, p) # Recursive function in python is slow!\ndef modinv(a, p = MOD):\n    # evaluate reciprocal using Fermat's little theorem:\n    # a**(p-1) is identical to 1 (mod p) when a and p is coprime\n    return modpow(a, p-2, p)\ndef modinv_list(n, p = MOD):\n    if n <= 1:\n        return [0,1][:n+1]\n    else:\n        inv_t = [0,1]\n        for i in range(2, n+1):\n            inv_t += [inv_t[p % i] * (p - int(p \/ i)) % p]\n        return inv_t\ndef modfactorial_list(n, p = MOD):\n    if n == 0:\n        return [1]\n    else:\n        l = [0] * (n+1)\n        tmp = 1\n        for i in range(1, n+1):\n            tmp = tmp * i % p\n            l[i] = tmp\n        return l\ndef modcomb(n, k, fac_list = [], p = MOD):\n    # fac_list = modfactorial_list(100)\n    # print(modcomb(100, 5, modfactorial_list(100)))\n    from math import factorial\n    if n < 0 or k < 0 or n < k: return 0\n    if n == 0 or k == 0: return 1\n    if len(fac_list) <= n:\n        a = factorial(n) % p\n        b = factorial(k) % p\n        c = factorial(n-k) % p\n    else:\n        a = fac_list[n]\n        b = fac_list[k]\n        c = fac_list[n-k]\n    return (a * modpow(b, p-2, p) * modpow(c, p-2, p)) % p\ndef modadd(a, b, p = MOD):\n    return (a + b) % MOD\ndef modsub(a, b, p = MOD):\n    return (a - b) % p\ndef modmul(a, b, p = MOD):\n    return ((a % p) * (b % p)) % p\ndef moddiv(a, b, p = MOD):\n    return modmul(a, modpow(b, p-2, p))\n\n\"\"\" initialize variables and set inputs\n# initialize variables\n    # to initialize list, use [0] * n\n    # to initialize two dimentional array, use [[0] * N for _ in range(N)]\n# set inputs\n    # open(0).read() is a convenient method:\n    # ex) n, m, *x = map(int, open(0).read().split())\n    #     min(x[::2]) - max(x[1::2])\n    # ex2) *x, = map(int, open(0).read().split())\n    #     don't forget to add comma after *x if only one variable is used\n# preprocessing\n    # transpose = [x for x in zip(*data)]\n    # ex) [[1, 2, 3], [4, 5, 6], [7, 8, 9]] => [(1, 4, 7), (2, 5, 8), (3, 6, 9)]\n    # flat = [flatten for inner in data for flatten in inner]\n    # ex) [[1, 2, 3], [4, 5, 6], [7, 8, 9]] => [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# calculate and output\n    # output pattern\n    # ex1) print(*l) => when l = [2, 5, 6], printed 2 5 6\n\"\"\"\n\n# functions used\nr = lambda: sys.stdin.readline().strip()\nr_int = lambda: int(r())\nR = lambda: list(map(int, r().split()))\nRfloat = lambda: list(map(float, r().split()))\nRtuple = lambda: tuple(map(int, r().split()))\nRmap = lambda: map(int, r().split())\n\n\"\"\" how to treat input\n# single int: int(r())\n# single string: r()\n# single float: float(r())\n# line int: R()\n# line string: r().split()\n# line (str, int, int): [j if i == 0 else int(j) for i, j in enumerate(r().split())]\n# lines int: [R() for _ in range(n)]\n\"\"\"\n\n# for test\n# sys.stdin = open('sample.txt') \n\n# ----------------------------------\n# main\nN, K = R()\n\ndvd = [0] * N\ndvd_cnt = [0] * N\ncount = -1\n# define group\nfor i in range(1, N+1):\n    if dvd[count] != N \/\/ i:\n        count += 1\n        dvd[count] = N \/\/ i        \n    dvd_cnt[count] += 1\nelse:\n    dvd = dvd[:count+1]\n    dvd_cnt = dvd_cnt[:count+1]\n    acc_cnt = list(accumulate(dvd_cnt))\n    dvdlen = count+1\n    dvd_prod = [0] * dvdlen\n\nfor i in range(dvdlen):\n    count = 0\n    target = dvd[i]\n    for j in range(dvdlen):\n        if target * dvd[dvdlen-1-j] <= N:\n            count += 1\n        else:\n            dvd_prod[i] = count\n            break\n    else:\n        dvd_prod[i] = count\n\ndp = [[0] * K for _ in range(dvdlen)]\nfor j in range(dvdlen):\n    dp[j][0] = dvd_cnt[j]\n    \nfor j in range(1, K):\n    for i in range(dvdlen):\n        for k in range(dvd_prod[dvdlen-1-i]):\n            dp[i][j] += dp[k][j-1]\n        else:\n            dp[i][j] *= dvd_cnt[i]\n            dp[i][j] %= MOD\nprint(sum([dp[i][K-1] for i in range(dvdlen)]) % MOD)\n\n# end of main\n# ----------------------------------\n\n\"\"\"memo: how to use defaultdict of list\n# initialize\nDic = defaultdict(list)\n# append \/ extend\nDic[x].append(y)\n# for\nfor k, v in Dic.items():\n\"\"\"\n\n# if __name__ == '__main__':\n#     main()","N,K = map(int, input().split())\n\nL = [N]\nc = 2\nwhile c < N**0.5:\n    if L[-1] != N\/\/c:\n        L.append(N\/\/c)\n    c += 1\nif c > N**0.5:\n    c -= 1\n    L.append(c)\nelse:\n    L.append(c)\n\n\nL.reverse()\ndp = [[0 for j in range(c+len(L))] for i in range(K+1)]\n\nfor j in range(1, c+1):\n    dp[2][j] = N\/\/j\nfor j in range(1, len(L)):\n    dp[2][j+c] = N\/\/L[j]*(L[j]-L[j-1])\n\nfor i in range(2, K):\n    dp[i+1][1] = sum(dp[i])\n    for j in range(2, c+len(L)):\n        dp[i+1][j] = dp[i+1][j-1]-dp[i][len(dp[0])+1-j]\n        if j > c:\n            dp[i+1][j] *= (L[j-c]-L[j-c-1])\n#    for j in range(1, len(L)):\n#        dp[i+1][j+c] *= (L[j]-L[j-1])\n        \n\nprint(sum(dp[K])%(10**9+7))","import sys\ninput = sys.stdin.readline\nN, K = map(int, input().split())\nP = 110000\nMOD = 10 ** 9 + 7\nS = [0] * P\ndp = [[0] * P for i in range(110)]\nnum = [0] * P\ni = 1\nt = 0\nwhile i <= N:\n    j = N \/\/ i\n    if i <= j:\n        num[t] = 1\n        t += 1\n        i += 1\n    else:\n        num[t] = N \/\/ j - i + 1\n        i = N \/\/ j + 1\n        t += 1\n\n\ndp[0][0] = 1\nfor k in range(K):\n    S = [0] * P\n    for j in range(t + 1):\n        S[j + 1] = S[j] + dp[k][j]\n        S[j + 1] %= MOD\n    for j in range(t):\n        dp[k + 1][j] = S[t - j] * num[j]\n        dp[k + 1][j] %= MOD\n\nans = 0\nfor i in range(t + 1):\n    ans += dp[K][i]\n    ans %= MOD\nprint(ans)\n\n","mod=1000000007\nn,k=map(int,input().split())\ns=int(n**0.5)\nNum=[0]*(s+1)\nfor i in range(s,0,-1):\n    Num[i]=i\n    Num.append(n\/\/i)\nl=len(Num)\nfor i in range(1,l):\n    Num[-i]=Num[-i]-Num[-i-1]\nDP=[[0]*l for _ in range(k)]\nDP[0]=Num[:]\nfor i in range(1,k):\n    tmp=0\n    for j in range(1,l):\n        tmp+=DP[i-1][j]\n        tmp%=mod\n        DP[i][-j]=(tmp*Num[-j])%mod\nans=0\nfor i in DP[-1][1:]:\n    ans+=i\n    ans%=mod\nprint(ans)","# from https:\/\/atcoder.jp\/contests\/abc132\/submissions\/6187293\n\ndef main():\n    N, K = map(int, input().split())\n\n    MOD = 10 ** 9 + 7\n    r = int(N ** 0.5 + 1)\n    z = [i for i in range(r)] + [N \/\/ i for i in range(1, r)][::-1]\n    m = len(z)\n    pre = [0] + [1] * (m - 1)\n    for _ in range(1, K+1):\n        dp = [0] * m\n        for i in range(1, m):\n            dp[i] = (dp[i-1] + pre[m-i] * (z[i] - z[i-1])) % MOD\n        pre = dp\n    print(dp[-1])\n\n\nmain()","N, K = list(map(int, input().split()))\n\nimport collections\npairs = collections.Counter()\nfor n in range(1, N +1):\n    pairs[n] = N \/\/ n\n\nans = 0\nfor n in range(1, N+1):\n    candidates = [pairs[n]]\n    for _ in range(K-1):\n        new_candidates  = []\n        for c in candidates:\n            for k in range(1, c+1):\n                new_candidates.append(pairs[k])\n        candidates = new_candidates\n    ans += len(candidates)\nprint(ans)","N, K = map(int, input().split())\nConst = []\npc = N\nfor i in range(1, 3200):\n    c = N\/\/i\n    if pc>i-1:\n        Const.append(pc - c)\n    if i*i>N:\n        sqrtN = i-1\n        break\n    pc = c\n#if sqrtN*sqrtN!=N:\n#    Const[-1] -= 1\n\nlen_dp = sqrtN + len(Const)\ndp = [[0]*(len_dp) for _ in range(K)]\ndp0 = dp[0]\n\n\nfor i in range(1, sqrtN+1):\n    dp0[i] = 1\n    if i<len(Const):\n        dp0[-i] = Const[i]\n\ncum_dp0 = []\nc = 0\nfor v in dp0:\n    c += v\n    cum_dp0.append(c)\nmod = 10**9+7\ndp_old = cum_dp0\nfor _ in range(K-1):\n    print(dp_old)\n    dp = [0]*(2*sqrtN+2)\n    for i in range(1,len_dp):\n        dp[i] = dp_old[-i] + dp[i-1] % mod\n        if i > sqrtN:\n            dp[i] *= Const[-(i-sqrtN)]\n            print(Const[-(i-sqrtN)])\n            dp[i] %= mod\n    dp_old = dp\nprint(dp)\n","N, K = map(int, input().split())\n\ndp = [[0]*(N+1) for _ in range(K+1)]\ndp[1] = [1]*(N+1)\n\nfor i in range(K):\n    for j in range(1, N+1):\n        for k in range(1, (N\/\/j)+1):\n            dp[i+1][k] += dp[i][j]\n\nprint(sum(dp[-1]))\n","import sys\ninput = sys.stdin.readline\nimport numpy as np\nMOD = 10**9+7\n  \nn, k = map(int, input().split())\nS = set()\ni = 1\nwhile i * i <= n:\n  S.add(i)\n  S.add(n\/\/i)\n  i += 1\nL = np.array([0] + sorted(S), dtype=np.int64)\nl = len(L) - 1\nnum = np.diff(L)\ndp = np.zeros(l, dtype=np.int64)\ndp[0] = 1\nfor _ in range(k):\n  A = np.cumsum(dp)\n  dp = A[::-1] * num\n  dp %= MOD\nans = dp.sum() % MOD\nprint(ans)","import bisect\nimport heapq\nimport sys\nimport itertools\nimport queue\n\n\ninput = sys.stdin.readline\nsys.setrecursionlimit(100000)\nmod = 10 ** 9 + 7\n\n\nclass V:\n    def __init__(self, f):\n        self.f = f\n        self.v = None\n\n    def __str__(self):\n        return str(self.v)\n\n    def ud(self, n):\n        if self.v is None:\n            self.v = n\n        else:\n            self.v = self.f(self.v, n)\n\n    def get(self):\n        return self.v\n\n\ndef read_values():\n    return map(int, input().split())\n\n\ndef read_list():\n    return list(read_values())\n\n\ndef P(N):\n    D = []\n    for n in range(1, int(N ** 0.5) + 1):\n        D.append(n)\n        if N \/\/ n != n:\n            D.append(N \/\/ n)\n    D.sort()\n    return D\n\n\ndef main():\n    N, K = read_values()\n    D = P(N)\n    C = [(D[i] - D[i - 1]) % mod if i != 0 else D[i] for i, d in enumerate(D)]\n    dp = [0] * len(D)\n    S = [D] + [[0] * len(D) for k in range(K - 1)]\n    I = [bisect.bisect_left(D, N \/\/ d) for d in D]\n\n    for k in range(1, K):\n        for i in range(len(D)):\n            j = I[i]\n            dp[i] = (S[k - 1][j] * C[i]) % mod\n            S[k][i] = (S[k][i - 1] + dp[i]) % mod\n    print(S[-1][-1] % mod)\n\n\nif __name__ == \"__main__\":\n    main()\n","from math import sqrt\n\nN,K=map(int,input().split())\nmod=10**9+7\n\nm=int(sqrt(N))\nif N\/\/(m+1)==m:\n    dp=[[[0  for i in range(0,2)] for j in range(0,int(sqrt(N)))] for k in range(0,K+1)]\n\n    for i in range(0,int(sqrt(N))):\n        dp[1][i][1]=1\n        dp[1][i][0]=(N\/\/(i+1)-N\/\/(i+2))\n\n    for k in range(2,K+1):\n        s=0\n        for i in range(0,int(sqrt(N))):\n            s=(s+dp[k-1][i][1])%mod\n            dp[k][i][0]=(s*(N\/\/(i+1)-N\/\/(i+2)))%mod\n\n        for j in range(0,int(sqrt(N))):\n            i=int(sqrt(N))-j-1\n            s=(s+dp[k-1][i][0])%mod\n            dp[k][i][1]=s\n\n    ans=sum(dp[K][i][0]+dp[k][i][1] for i in range(0,int(sqrt(N))))%mod\n    print(ans)\n\nelse:\n    dp0=[[0 for i in range(0,int(sqrt(N))-1)] for k in range(0,K+1)]\n    dp1=[[0 for i in range(0,int(sqrt(N)))] for k in range(0,K+1)]\n\n    for i in range(0,int(sqrt(N))-1):\n        dp0[1][i]=(N\/\/(i+1)-N\/\/(i+2))\n        dp1[1][i]=1\n\n    dp1[1][-1]=1\n\n    for k in range(2,K+1):\n        s=0\n        for i in range(0,int(sqrt(N))-1):\n            s=(s+dp1[k-1][i])%mod\n            dp0[k][i]=(s*(N\/\/(i+1)-N\/\/(i+2)))%mod\n\n        s=(s+dp1[k-1][int(sqrt(N))-1])%mod\n        dp1[k][int(sqrt(N))-1]=s%mod\n        for j in range(1,int(sqrt(N))):\n            i=int(sqrt(N))-j-1\n            s=(s+dp0[k-1][i])%mod\n            dp1[k][i]=s\n\n    ans=sum(dp0[K][i]+dp1[K][i] for i in range(0,int(sqrt(N))-1))%mod\n    ans=(ans+dp1[K][-1])%mod\n\n    print(ans)\n","#include <bits\/stdc++.h>\n#define N 32768\n#define M 0x3B9ACA07LL\nlong long a[N]={},b[N],c[N]={},d[N];\n#define REP(i,n)for(int i=0;i<n;i++)\nint main(){\nint n,k; std::cin>>n>>k;\nfor(int i=1;i<N;i++)a[i]=std::min(i,n),b[i]=n\/i;\nREP(j,k-1){\nfor(int i=1;i<N;i++)c[i]=(c[i-1]+b[i])%M;\nd[N-1]=c[n\/(N-1)];\nfor(int i=N-2;i>=1;i--)d[i]=(d[i+1]+a[i]*(n\/i-n\/(i+1)))%M;\nstd::swap(a,c);\nstd::swap(b,d);\n}\nstd::cout<<b[1];\n}\n","import sys\ninput = sys.stdin.readline\nimport math\n\nmod = 10**9+7\nN, K = map(int, input().split())\nK -= 1\n\nP = set()\ninv = {}\nfor i in range(1, int(math.sqrt(N)+2)):\n    P.add(i)\n    P.add(N\/\/i)\n    if i not in inv:\n        inv[i] = N\/\/i\n    if N\/\/i not in inv:\n        inv[N\/\/i] = i\n\nP1 = sorted(list(P))\n\nT = len(P1)\n\nM = [1]\nfor i in range(T-1):\n    M.append(P1[i+1]-P1[i])\n\n\nco_to_ind = {}\nfor i, p in enumerate(P1):\n    co_to_ind[p] = i\n\nInv = []\nfor p in P1:\n    Inv.append(co_to_ind[inv[p]])\n\ndp = [[0]*T for _ in range(K+1)]\n\ndp[0] = M\n\nfor i in range(K):\n    tosum = [0]*T\n    for ik in range(T):\n        j = Inv[ik]\n        tosum[j] = (tosum[j] + dp[i][ik]) % mod\n\n    sumup = 0\n    for ik in reversed(range(T)):\n        sumup = (sumup + tosum[ik]) % mod\n        dp[i+1][ik] = sumup * M[ik] % mod\n\nans = 0\nfor t in range(T):\n    ans = (ans + dp[K][t]) % mod\n\nprint(ans)","n,k=map(int,input().split())\nmd=10**9+7\na=[]\npre=n\ncnt=0\nfor i in range(1,n+1):\n    j=n\/\/i\n    if j==pre:\n        cnt+=1\n    elif j==1:\n        a.append([pre,cnt])\n        a.append([1,n+1-i])\n        break\n    else:\n        a.append([pre,cnt])\n        cnt=1\n        pre=j\nm=len(a)\na=a[::-1]\ndp0=[a0*a1 for a0,a1 in a]\nfor _ in range(k-2):\n    s=0\n    dp1=[0]*m\n    for i,(a0,a1) in enumerate(a):\n       s+=dp0[m-1-i]\n       dp1[i]=s*a1\n    dp0=dp1\nprint(sum(dp0))\n","def limit(last,N):\n  return(int(N\/last))\n\ndef loop(last,remain,N):\n  su=0\n  if remain==0:\n    return(1)\n  else:\n    for i in range(int(N\/last)):\n      times=1\n      times=times*loop(i+1,remain-1,N)\n      su+=times\n  return(su)\n\n\nN,K=map(int,input().split())\nssu=loop(1,K,N)\nprint(ssu%1000000007)","import numpy as np\nN, K = map(int,input().split())\nMOD = 10**9+7\ndiv = list(range(1, int(np.sqrt(N))+1))\nL1 = len(div)\ndiv2 = [N\/\/val for val in div]\ndiv2.sort()\nif div[-1] == div2[0]:\n    div2.remove(div2[0])\nL2 = len(div2)\nL = L1+L2\nls = [1]*L1 + [0]*L2\ntmp = div[-1]\nfor i,val in enumerate(div2):\n    ls[i+L1] = val-tmp\n    tmp = val\ndp = [0]*L\ndp = np.zeros((L), dtype='int64')\nls = np.array(ls, dtype='int64')\ndp[:] = ls\nr = np.zeros(L+1, dtype='int64')\nr[:-1] = np.cumsum(dp, dtype='int64')[::-1]\nfor i in range(K-1):\n    dp = (r[:-1]*ls)%MOD\n    r[:-1] = np.cumsum(dp, dtype='int64')[::-1]\nprint(r[0]%MOD)\n"],"formatted_programs":["# N\u304c100\u4ee5\u4e0b\u306e\u6642\u306f\u5168\u90e8\u308c\u3063\u304d\u3087\n\nimport math\nN, K = map(int, input().split())\nmod = 10**9+7\n\n\ndef rev(X):\n    return pow(X, mod-2, mod)\n\n\nif N <= 100:\n    dp = [[0 for i in range(N+2)] for i in range(K+1)]\n    for i in range(1, N+1):\n        dp[1][i] += 1\n    for i in range(2, K+1):\n        for j in range(1, N+1):\n            dp[i][1] += dp[i-1][j]\n            dp[i][N\/\/j+1] -= dp[i-1][j]\n        for j in range(1, N+2):\n            dp[i][j] += dp[i][j-1]\n    ans = 0\n    for i in range(1, N+1):\n        ans += dp[K][i]\n    print(ans % mod)\n    exit()\n\n\nelse:\n    # N>100\n    ans = 0\n    L = math.floor(math.sqrt(N))\n    B = math.floor(N\/L)\n    dp = [[0 for i in range(L+B)] for i in range(K+1)]\n    cnt = [0 for i in range(L+B)]\n    for i in range(1, B+1):\n        dp[1][i] += 1\n        cnt[i] = 1\n    for i in range(B+1, B+L):\n        x = B+L-i\n        dp[1][i] += N\/\/x-N\/\/(x+1)\n        cnt[i] = N\/\/x-N\/\/(x+1)\n    for i in range(2, K+1):\n        S = sum(dp[i-1])%mod\n        for j in range(1, L+B-1):\n            dp[i][j] = (S*cnt[j]) % mod\n            S -= dp[i-1][-j]\n        dp[i][L+B-1] = (S*cnt[L+B-1]) % mod\n    for i in range(1, L+B):\n        ans += dp[K][i]\n        ans %= mod\n    print(ans%mod)\n    exit()","import sys\nsys.setrecursionlimit(2147483647)\nINF=float(\"inf\")\nMOD=10**9+7\ninput=lambda :sys.stdin.readline().rstrip()\ndef resolve():\n    n,k=map(int,input().split())\n    s=set()\n    for i in range(1,1+int(n**.5)):\n        s.add(i)\n        s.add(n\/\/i)\n    A=sorted(s)\n    m=len(A)\n    coef=[0]*m\n    coef[0]=1\n    for i in range(1,m):\n        coef[i]=A[i]-A[i-1]\n    dp=[0]*m\n    dp[0]=1\n    for i in range(k):\n        for j in range(m-1):\n            dp[j+1]+=dp[j]\n            dp[j+1]%=MOD\n        ndp=[0]*m\n        for j in range(m):\n            ndp[j]=dp[m-j-1]*coef[j]\n            ndp[j]%=MOD\n        dp=ndp\n    print(sum(dp)%MOD)\nresolve()","import math\nimport os\nimport sys\nfrom functools import lru_cache\n\nif os.getenv(\"LOCAL\"):\n    sys.stdin = open(\"_in.txt\", \"r\")\n\nsys.setrecursionlimit(2147483647)\nINF = float(\"inf\")\nIINF = 10 ** 18\n\nMOD = 10 ** 9 + 7\nN, K = list(map(int, sys.stdin.readline().split()))\n\n\n@lru_cache(maxsize=None)\ndef next_max(n):\n    # \u3042\u308b\u6570\u3068\u96a3\u308a\u5408\u308f\u305b\u306b\u306a\u308c\u308b\u6570\n    return int(N \/\/ n)\n\n\nNM = []\nprev = 0\nfor i in range(1, int(math.sqrt(N)) + 2):\n    NM.append(N - next_max(i) - prev)\n    prev = (N - next_max(i))\n\n\n# @lru_cache(maxsize=None)\n# @debug\n# def rec1(n, k):\n#     if k <= 1:\n#         return n\n#\n#     ret = 0\n#     cnt = n\n#     while cnt > 0:\n#         i = next_max(cnt)\n#         p = NM[i] if i < len(NM) else 1\n#         ret = (ret + rec1(i, k - 1) * p) % MOD\n#         cnt -= p\n#     return ret\n#\n#\n# #\n# # ans = rec1(N, K)\n# # print(ans % MOD)\n\n\n@lru_cache(maxsize=None)\ndef rec(n, k):\n    if n <= 0:\n        return 0\n    if k <= 1:\n        return n\n\n    i = next_max(n)\n    p = NM[i] if i < len(NM) else 1\n    ret = rec(i, k - 1)\n    cum = rec(n - p, k)\n    ret = ret * p % MOD\n    return (cum + ret) % MOD\n\n\nans = rec(N, K)\nprint(ans % MOD)\n","N, K = map(int, input().split())\nMOD = 10**9 + 7\n\nnum = []\nnow = N + 1\ni = 1\nwhile True:\n  r = N \/\/ (i+1) + 1\n  if r == now:\n    break\n  num.append(now - r)\n  now = r\n  i += 1\n  \nnum += [1] * (N - sum(num))\nn = len(num)\ndp = [[0]*n for i in range(K)]\nfor _n in range(n):\n  dp[0][_n] = num[_n]\n\nfor i in range(1, K):\n  s = 0\n  for _n in range(n):\n    j = n - 1 - _n\n    s += dp[i-1][j] % MOD\n    s %= MOD\n    dp[i][_n] = s * num[_n] % MOD\n\nans = sum(dp[-1])\nprint(ans % MOD)","#!\/usr\/bin\/env python3\n# -*- coding: utf-8 -*-\nN, K = list(map(int, input().split()))\nmax_i = min(K, N - K + 1)\n\nMAX = max_i * 2\nPRIME = 10 ** 9 + 7\n\nfac = [0] * MAX\nfinv = [0] * MAX\n\n\ndef invMod(a, m):\n    a %= m\n    b, x, y = m, 1, 0\n    while b:\n        t = a \/\/ b\n        a -= t * b\n        a, b = b, a\n        x -= t * y\n        x, y = y, x\n    return x % m\n\n\ndef binomInit():\n    fac[0] = fac[1] = 1\n    finv[0] = finv[1] = 1\n    for i in range(2, MAX):\n        fac[i] = (fac[i - 1] * i) % PRIME\n        finv[i] = (finv[i - 1] * invMod(i, PRIME)) % PRIME\n        \n\ndef binom(n, k):\n    if n < 0 or k < 0 or n < k:\n        return 0\n    return (fac[n] * finv[k] * finv[n - k]) % PRIME\n\n\nbinomInit()\n    \n\nfor i in range(1, max_i + 1):\n    blue_part = binom(K - 1, i - 1)\n    red_part = binom(N - K + 1, i)\n    print((blue_part * red_part) % PRIME)\n","from numpy import int_\n\nmod = 10 ** 9 + 7\n\nN, K = map(int, input().split())\n\nM = int(N ** 0.5)\n\nT = [N \/\/ i - N \/\/ (i + 1) for i in range(1, M + 1)]\nA = int_([1] * (N - sum(T)) + T[::-1])\n\ndp = A[:]\nfor _ in range(K - 1):\n    dp = A * dp.cumsum()[::-1] % mod\n\nprint(sum(dp) % mod)","# -*- coding: utf-8 -*-\n\nN, K = map(int, input().split())\nmod = 10**9 + 7\n\n\ndef re_count(n, i):\n    # n \u306f\u524d\u306e\u6570\u5024\n    # i \u306f\u5f8c\u308d\u304b\u3089\u30ab\u30a6\u30f3\u30c8\n    ans = 0\n    if i == 1:\n        return N \/\/ n\n    for x in range(1, N \/\/ n+1):\n        ans += re_count(x, i-1)\n    return ans % mod\n\nprint(re_count(1, K))\n","N, K = map(int, input().split())\nMOD = 10**9 + 7\n\n# dp[i][x] := i\u6587\u5b57\u76ee\u307e\u3067\u3002\u6700\u5f8c\u304cx\u3068\u306a\u308b\u3082\u306e\n# \u2192 O(10**11) \u3067\u5165\u3089\u306a\u3044\u306e\u3067 \u30eb\u30fc\u30c8N \u306b\u5727\u7e2e\u3059\u308b\nrN = int(N ** 0.5)\nT = {N\/\/x for x in range(1, rN+1)}\nT |= {x for x in range(1, rN+1)}\nT = [0,] + sorted(list(T))\t# 1-indexed\n\n# 1-indexed\ndp = []\ndp.append([0,] + [T[i]-T[i-1] for i in range(1, len(T))])\n\nfor k in range(K-1):\n\tdp.append([0,] * len(T))\n\tdp[-1][-1] = dp[-2][1]\n\tfor t in range(2, len(T)):\n\t\tdp[-1][-t] = (dp[-2][t] + dp[-1][-t+1]) % MOD\n\tfor t in range(len(T)):\n\t\tdp[-1][t] = (dp[-1][t] * dp[0][t]) % MOD\n\nprint(sum(dp[-1]) % MOD)\n","n, k = map(int, input().split())\nmod = 1000000007\na = []\n\ni = 1\nwhile i * i <= n:\n    a.append(i)\n    a.append(n \/\/ i)\n    i += 1\nm = len(a)\na.append(0)\na.sort()\n\ndp = [0] * m\ndp[0] = 1\nacc = [0]  * m\nfor _ in range(k):\n    acc[0] = dp[0]\n    for j in range(1, m):\n        acc[j] = (acc[j-1] + dp[j]) % mod # \u7d2f\u7a4d\u548c\n    for j in range(m):\n        dp[j] = acc[m-j-1] * (a[j+1] - a[j]) % mod\nans = 0\nfor x in dp:\n    ans = (ans + x) % mod\nprint(ans)\n","n, k = map(int, input().split())\n\nMOD = 10 ** 9 + 7\np = int(n**0.5)\n\n\na = [i for i in range(1, p+1)]\n\nfor x in range(p, 0, -1):\n    if n \/\/ x != p:\n        a.append(n \/\/ x)\n\ndp = [[0 for _ in range(len(a))] for _ in range(k)]\n\nm = len(a)\n\ntemp = 0\nb = [0] * m\nfor i, x in enumerate(a):\n    b[i] = x - temp\n    temp = x\n\nfor i in range(m):\n    dp[0][i] = b[i]\n\nfor i in range(k-1):\n    temp = 0\n    for j in range(m-1, -1, -1):\n        temp = (temp + dp[i][m-1-j]) % MOD\n        dp[i+1][j] = temp * b[j] % MOD\n\n#print(dp)\n\nprint(sum(dp[-1]) % MOD)\n","N,K=map(int,input().split())\n\nmod=10**9+7\n\nans=0\nL=[[0,0]]\nfor i in range(1,N+1):\n    if i*i==N:\n        L.append([i,i])\n        break\n    elif i*i>N:\n        break\n    else:\n        L.append([N\/\/i,i])\nR=[]\nfor i in range(len(L)):\n    if L[-1-i][0]==L[-1-i][1]:\n        continue\n    else:\n        R.append([L[-1-i][1],L[-1-i][0]])\nArr=L+R\n#print(Arr)\n\nfor i in range(1,len(Arr)):\n    ans+=pow(Arr[i][0],K-1,mod)*(Arr[i][1]-Arr[i-1][1])\n#print(ans%mod)\nDP=[[1 for i in range(len(Arr)-1)]for j in range(K)]\nfor j in range(len(Arr)-1):\n    DP[0][j]=(Arr[j+1][1]-Arr[j][1])\n#print(DP)\nfor i in range(1,K):\n    Rui=[DP[i-1][0]]\n    for j in range(1,len(Arr)-1):\n        Rui.append(Rui[-1]+DP[i-1][j])\n    #print(Rui)\n    for j in range(len(Rui)):\n        DP[i][j]=(Rui[-1-j]*(Arr[j+1][1]-Arr[j][1]))%mod\nprint(sum(DP[-1])%mod)","N, K = map(int, input().split())\nLARGE = 10 ** 9 + 7\n\n# SQRT\nR = 1\nwhile (R + 1) ** 2 < N:\n    R += 1\n\nsquare = False\nif (R + 1) ** 2 == N:\n    square = True\n\n\nDP_S = [1] * R\nDP_L = [1] * R\nN_L = [1] * R\nDP_M = 0\nL = R\nif square:\n    DP_M = 1\n    L += 1\n\n\nfor i in range(R, -1, 0):\n    Q = N \/\/ i\n    DP_L[i - 1] = Q - L\n    N_L[i - 1] = Q - L\n    L = Q\n\nfor _ in range(K - 1):\n    S = 0\n    L = sum(DP_L) + DP_M\n    SS = sum(DP_S)\n    for i in range(R):\n        DP_L[i] = S * N_L[i] % LARGE\n        DP_S[i] = L + SS % LARGE\n        S = (S + DP_S[i]) % LARGE\n        L = (L - DP_L[i]) % LARGE\n\n        if square:\n            DP_M = (DP_M + SS) % LARGE\n\nprint((sum(DP_L) + sum(DP_S) + DP_M) % LARGE)\n","import itertools\nn, k = [int(i) for i in input().split()]\ntemp = [i for i in range(1, 101)]\ntemp2 = list(itertools.product(temp, repeat=2))\ncount = 0\nprint(len(temp2))\nfor i in range(len(temp2)):\n\tif temp2[i][0]*temp2[i][1] <= n:\n\t\tcount += 1\nprint(count % (10**9+7))","import bisect\n\nn,k = map(int,input().split())\nmod = 10**9+7\n\n\nm = int(n**0.5)\nif m**2 < n:\n    m += 1\n\n\ndp = [[0]*(m+1) for i in range(k+1)]\n\nfor i in range(1,m):\n    dp[1][i] = 1\ndp[1][m] = n-m+1\n\n\nfor i in range(1,k):\n    for j in range(1,m+1):\n        r = n\/\/j\n        for p in range(1,r+1):\n            p = min(p,m)\n            dp[i+1][p] += dp[i][j]\n            dp[i+1][p] %= mod\n\nres = 0\nfor i in range(1,m+1):\n    res = (res+dp[k][i])%mod\nprint(res)","def main():\n    N, K = map(int, input().split())\n    def r(C, D):\n        newD = {}\n        for key in D.keys():\n            for n in range(1, N + 1):\n                if int(key) * n <= N:\n                    if key in newD:\n                        newD[key] = D[key]\n                    else:\n                        newD[key] = newD[key] + D[key]\n        if C == 10:\n            return newD\n        else:\n            r(C + 1, D)\n    C, D = 1, {} # count, dict\n    for n in range(1, N + 1):\n        D[str(n)] = 1\n    newD = r(C, D)\n    return sum(newD.values()) % (10 ** 9 + 7)\n\nprint(main())\n","# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Sat Jun 29 22:14:02 2019\n\n@author: Yamazaki Kenichi\n\"\"\"\n\nN, K = map(int,input().split())\nmod = 10**9+7\n\nr = int(pow(N,1\/2))\n\nconst = []\nif N \/\/ r == r:\n    s = r - 1\nelse:\n    s = r\n\nfor i in range(1,r+1):\n    const.append(N\/\/i - N\/\/(i+1))\n#if r == int(pow(N,1\/2)) :\n#    const += [1]\nconst.reverse()\nconst = [1 for i in range(s)] + const\n\ndp = [[]]\nfor c in const:\n    try:\n        dp[0].append(dp[0][-1] +c)\n    except:\n        dp[0].append(c)\ndp += [[0 for i in range(len(const))] for k in range(K-1)]\n\nfor k in range(1,K):\n    for i in range(len(const)):\n        dp[k][i] = (dp[k][i-1] + dp[k-1][len(const)-i-1]%mod\n                      * const[i])%mod\nprint(dp[-1][-1]%mod)\n","from bisect import bisect_left\nn,k=map(int,input().split())\nif n==1:exit(print(1))\nd=[1]\nt=[1]\nfor i in range(2,int(n**0.5)+2):\n  if n\/\/d[-1]!=n\/\/i:\n    d.append(i)\n    t.append(1)\n  else:\n    t[-1]+=1\ndd=[]\nfor i in range(d[-1],0,-1):\n  if n\/\/i<=d[-1]:continue\n  dd.append(n\/\/i)\nx=d+dd\nfor i in range(len(t),len(x)):\n  t.append(x[i]-x[i-1])\ndi=[0]*len(x)\nmod=10**9+7\nfor i in range(len(x)):di[i]=bisect_left(x,n\/\/x[i])\nn=len(x)\ndp=[n*[0]for _ in range(k)]\ndp[0]=t[:]\nfor i in range(1,k):\n  for j in range(1,n):\n    dp[i-1][j]+=dp[i-1][j-1]\n    dp[i-1][j]%=mod\n  for j in range(n):dp[i][j]=dp[i-1][di[j]]*t[j]%mod\nprint(sum(dp[-1])%mod)","def f_small_products(N, K, MOD=10**9 + 7):\n    # \u53c2\u8003: https:\/\/atcoder.jp\/contests\/abc132\/submissions\/6187073\n    sqrt_n = int(N**0.5)\n\n    # num: 0 <= i <= N\u306b\u3064\u3044\u3066\u3001N \/\/ i \u306e\u5024\u3067\u540c\u4e00\u8996\u3067\u304d\u308b\u3082\u306e\u306e\u500b\u6570\u304c\u524d\u304b\u3089\u683c\u7d0d\u3055\u308c\u308b\n    num = [0 for i in range(2 * sqrt_n + 1)]\n    # 1\u304b\u3089\u221aN \u307e\u3067\u306f\u3001\u540c\u4e00\u8996\u3067\u304d\u308b\u3082\u306e\u306e\u500b\u6570\u306f1\u3064\n    for i in range(1, sqrt_n + 1):\n        num[i] = 1\n    # \u221aN\u304b\u3089N \u307e\u3067\u306f\u3001\u8907\u6570\u306e\u6574\u6570\u304c\u540c\u4e00\u8996\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308b\n    for i in range(1, sqrt_n + 1):\n        lo = max(sqrt_n + 1, (N + i + 1) \/\/ (i + 1))\n        hi = N \/\/ i\n        num[2 * sqrt_n + 1 - i] = hi - lo + 1\n\n    # dp[n][m]: \u6700\u5f8c\u306e\u6574\u6570\u304c m \u3067\u3042\u308b\u3088\u3046\u306a n \u500b\u306e\u6574\u6570\u3092\n    # \u4e26\u3079\u3066\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3088\u3046\u306b\u3059\u308b\u5834\u5408\u306e\u6570\n    dp = [[0 for j in range(2 * sqrt_n + 2)] for i in range(K + 1)]\n    dp[0][1] = 1  # \u6570\u5217\u306e\u5148\u982d\u306e\u3055\u3089\u306b1\u500b\u524d\u306b1\u304c\u3042\u308b\u3068\u307f\u306a\u3059(\u7f6e\u304d\u65b91\u901a\u308a)\n    for i in range(K):\n        # \u7d2f\u7a4d\u548c\u3092\u7528\u3044\u305fdp\u30c6\u30fc\u30d6\u30eb\u306e\u66f4\u65b0(imos\u6cd5)\n        for j in range(1, 2 * sqrt_n + 1):\n            ways = (dp[i][j] * num[j]) % MOD\n            dp[i + 1][1] += ways\n            dp[i + 1][2 * sqrt_n + 2 - j] -= ways\n        for j in range(1, 2 * sqrt_n + 1):\n            dp[i + 1][j] += dp[i + 1][j - 1]\n\n    return sum(a * b for a, b in zip(dp[K], num)) % MOD\n\nN, K = [int(i) for i in input().split()]\nprint(f_small_products(N, K))","import copy\nn,k=map(int,input().split())\nmod=10**9+7\ndef f(i):\n  return n\/\/i\nans=[1]*n\nans_c=[1]*n\nfor _ in range(k-1):\n  for i in range(1,n+1):\n    for j in range(1,f(i)+1):\n      ans_c[j-1]+=ans[i-1]*f(i)\n  ans=copy.copy(ans)\n      \nprint(sum(ans)%mod)","import numpy as np\nN, K = map(int, input().split())\nmod = 1000000007\n\nm = N ** 0.5\ncnt = [N \/\/ i - N \/\/ (i + 1) for i in range(1, int(m) + 1)] \ncnt = np.array((cnt + [1 for _ in range(N - sum(cnt))])[::-1])\nnxt = cnt[:]\nfor _ in range(K - 1):\n    cnt = nxt * np.cumsum(cnt)[::-1] % mod\n\nprint(sum(cnt) % mod)\n","n,k = list(map(int,input().split(\" \")))\n\ndef check(l,n):\n    global k\n    if len(l) > k:\n        return False\n    for i in range(len(l)):\n        if i+1 == len(l):\n            break\n        if l[i] * l[i+1] > n:\n            return False\n    return True\na = 0\nold_l = [1 for i in range(k)]\nfor i in range(0,k-1):\n    for j in range(0,k):\n        l = None\n        l = old_l.copy()\n        try:\n            while check(l,n):\n                l[i+j] += 1\n                a += 1\n                print(l)\n        except:\n            pass\nprint(a)","from collections import deque\nN, K = map(int, input().split())\nMOD = 10 ** 9 + 7\n\n# guchoku case\n\n# dp = [[0 for _ in range(N+1)] for _ in range(K+1)]\n\n# for i in range(N+1):\n#     dp[1][i] = 1\n# for i in range(K):\n#     for j in range(1,N+1):\n#         for k in range(1, N \/\/ j + 1):\n#             dp[i+1][j] += dp[i][k]\n#             dp[i+1][j] %= MOD\n\nJN = deque()  # N\/\/j table\nSQN = int(N**0.5)\nJN.append(SQN)\n\nif SQN**2 != N:\n    JN.append(N\/\/SQN)\nfor j in range(SQN-1, 0, -1):\n    JN.appendleft(j)\n    JN.append(N\/\/j)\nJN.appendleft(0)\n\n# JN.sort()\n# PJN = {JN[i]: JN[i-1] for i in range(1, len(JN))}  # prev jn\nLJN = len(JN)\n\ndp = [[0 for _ in range(LJN)] for _ in range(K)]\ncdp = [[0 for _ in range(LJN)] for _ in range(K)]\nw = [0 for _ in range(LJN)]\n\n# init dp\nprv = 0\nfor i in range(1,LJN):\n    jn = JN[i]\n    dp[0][i] = 1\n    w[i] = jn - prv\n    cdp[0][i] = jn\n    prv = JN[i]\n\nfor i in range(K-1):\n    for j in range(1,LJN):\n        dp[i+1][j] = cdp[i][LJN-j]\n        dp[i+1][j] %= MOD\n        cdp[i+1][j] = cdp[i+1][j-1] + dp[i+1][j] * w[j]\n        cdp[i+1][j] %= MOD\n\nprint(cdp[-1][-1])\n","import sys\nN, K = map(int, input().split())\nMOD = 1000000007\ni, A, B = 1, [], []\nwhile i * i <= N:\n  A.append(1)\n  B.append(N \/\/ i - N \/\/ (i + 1))\n  i += 1\nB = list(reversed(B))\nif sum(A) + sum(B) == N:\n  C = list(reversed(A + B))\nelse:\n  C = list(reversed(A + B[1:]))\nDP = C\nL = len(C)\nfor k in range(K-1):\n  DP = list(reversed(DP))\n  DP[0] %= MOD\n  for i in range(L-1):\n    DP[i+1] += DP[i]\n    DP[i+1] %= MOD\n  for i in range(L):\n    DP[i] = DP[i] * C[i] % MOD\nprint(sum(DP) % MOD)","n,k=map(int,input().split())\nmod=10**9+7\n\ndata=[i for i in range(1,int(n**.5)+1)]+[n\/\/i for i in range(int(n**.5),0,-1)]\n\nL=len(data)\ndp=[1]*L\nfor i in range(1,L):\n    dp[i]=data[i]-data[i-1]\n\nfor i in range(k-1):\n    h=dp[:]\n    for i in range(1,L):\n        h[i]=(h[i]+h[i-1])%mod\n    h=h[::-1]\n    for i in range(1,L):\n        h[i]=h[i]*(data[i]-data[i-1])%mod\n    dp=h\n\nans=0\nfor u in dp:\n    ans=(ans+u)%mod\nprint(ans)","#!\/usr\/bin\/env python3\nfrom collections import defaultdict\nfrom collections import deque\nfrom heapq import heappush, heappop\nimport sys\nimport math\nimport bisect\nimport random\nimport itertools\nsys.setrecursionlimit(10**5)\nstdin = sys.stdin\nsqrt = math.sqrt\nbisect_left = bisect.bisect_left\nbisect_right = bisect.bisect_right\ndef LI(): return list(map(int, stdin.readline().split()))\ndef LF(): return list(map(float, stdin.readline().split()))\ndef LI_(): return list(map(lambda x: int(x)-1, stdin.readline().split()))\ndef II(): return int(stdin.readline())\ndef IF(): return float(stdin.readline())\ndef LS(): return list(map(list, stdin.readline().split()))\ndef S(): return list(stdin.readline().rstrip())\ndef IR(n): return [II() for _ in range(n)]\ndef LIR(n): return [LI() for _ in range(n)]\ndef FR(n): return [IF() for _ in range(n)]\ndef LFR(n): return [LI() for _ in range(n)]\ndef LIR_(n): return [LI_() for _ in range(n)]\ndef SR(n): return [S() for _ in range(n)]\ndef LSR(n): return [LS() for _ in range(n)]\nmod = 1000000007\ninf = float('INF')\n\n#A\ndef A():\n    s = S()\n    b = list(set(s))\n    a = len(list(set(s)))\n    if a == 2 and s.count(b[0]) == s.count(b[1]) == 2:\n        print(\"Yes\")\n    else:\n        print(\"No\")\n    return\n\n#B\ndef B():\n    n = II()\n    p = LI()\n    ans = 0\n    for i in range(1,n-1):\n        if (p[i - 1] < p[i] and p[i] < p[i + 1]) or (p[i + 1] < p[i] and p[i] < p[i - 1]):\n            ans += 1\n    print(ans)\n    return\n\n#C\ndef C():\n    n = II()\n    d = LI()\n    d.sort()\n    ans = 0\n    for i in range(10**5+1):\n        if n \/\/ 2 == bisect_left(d, i):\n            ans += 1\n    print(ans)\n    return\n\n\ndef combination_mod(n, k, mod):\n    # power_func\u3092\u7528\u3044\u3066(nCk) mod p \u3092\u6c42\u3081\u308b \n    # nCk = n!\/((n-k)!k!)\u3092\u4f7f\u7528\n\n    from math import factorial\n    if n < 0 or k < 0 or n < k: return 0\n    if n == 0 or k == 0: return 1\n    a = factorial(n) % mod\n    b = factorial(k) % mod\n    c = factorial(n - k) % mod\n    return (a * power_func(b, mod - 2, mod) * power_func(c, mod - 2, mod)) % mod\n    \ndef power_func(a, b, mod):\n    # a^b mod p \u3092\u6c42\u3081\u308b\n    # b\u30922\u9032\u6570\u5206\u89e3\u3057\u3066\u9ad8\u901f\u7d2f\u4e57\n\n    if b == 0: return 1\n    if b % 2 == 0:\n        d = power_func(a, b \/\/ 2, mod)\n        return d * d % mod\n    if b % 2 == 1:\n        return (a * power_func(a, b - 1, mod)) % mod\n\n#D\ndef D():\n    n, k = LI()\n    ans = 0\n    for i in range(1,k+1):\n        a = combination_mod(n - k + 1, i, mod)\n        b = combination_mod(k - 1, i - 1, mod)\n        print((a*b)%mod)\n    return\n\ndef dijkstra(num, start, edge, g):\n\n    dist = defaultdict(lambda: inf)\n    dist[(start,0)] = 0\n    q = [(dist[(start,0)], start, 0)]\n    while q:\n        du, u, t = heappop(q)\n        for j in edge[u]:\n            if t == 2:\n                t = -1\n            if dist[(j, t + 1)] > du + 1:\n                dist[(j, t + 1)] = du + 1\n                heappush(q, [dist[(j, t + 1)], j, t + 1])\n    return dist\n#E\ndef E():\n    n, m = LI()\n    v = LIR_(m)\n    s, t = LI_()\n    edge = defaultdict(list)\n    for x,y in v:\n        edge[x].append(y)\n    d = dijkstra(n, s, edge, t)\n    if d[(t,0)] == inf:\n        print(-1)\n    else:\n        print(d[(t,0)]\/\/3)\n    return\n\n# F\n# \u89e3\u8aacAC\n# \u221an\u307e\u3067\u3067\u7d04\u6570\u306e\u5168\u5217\u6319\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u306f\n# n <= a * b (a <= b\u3068\u3057\u305f\u3068\u304d\u306b)\n# \u5404 a \u306f \u221an\u307e\u3067\u3057\u304b\u306a\u3044\u3053\u3068\u306f\u308f\u304b\u308b\n# ( a > \u221an \u306a\u3089 b < \u221an \u3060\u304b\u3089\u306d)\n# \u3059\u308b\u3068\u5404a\u306b\u5bfe\u3057\u3066\u5bfe\u5fdc\u3059\u308bb\u306e\u6700\u5927\u5024\u304c\u5b58\u5728\u3059\u308b\u305f\u3081\n# b \u306e\u500b\u6570\u306f\u9ad8\u3005 \u221an \u500b\u3057\u304b\u7121\u3044\u3053\u3068\u304c\u308f\u304b\u308b\n# \u5f8c\u306fDP\u3067\u3069\u3046\u305e \ndef F():\n    n, k = LI()\n    f = defaultdict(int)\n    Range = int(sqrt(n))\n    dp = [0] * (2 * Range)\n    m = 0\n    l = 0\n    for i in range(Range, 0, -1):\n        dp[i - 1] = 1\n        f[i - 1] = 1\n        if n \/\/ i == i:\n            l = 1\n            continue\n        dp[Range + m] = n \/\/ i - n \/\/ (i + 1)\n        f[Range + m] = n \/\/ i - n \/\/ (i + 1)\n        m += 1\n    R = 2 * Range - l\n    for _ in range(k - 1):\n        ndp = [0] * (2 * Range)\n        for j in range(R):\n            ndp[R - j - 1] = dp[j]\n        ndp = list(itertools.accumulate(ndp[::-1]))[::-1]\n        dp = [(d * f[num]) % mod for num,d in enumerate(ndp)]\n    ans = sum(dp)%mod\n    print(ans)\n    return\n\n\n\n#Solve\nif __name__ == '__main__':\n    F()\n","import sys\ninput = sys.stdin.readline\n\ndef I(): return int(input())\ndef MI(): return map(int, input().split())\ndef LI(): return list(map(int, input().split()))\n\ndef main():\n    mod=10**9+7\n    \"\"\"\n    \u672b\u5c3e\u3060\u3051\u304c\u91cd\u8981\uff0cdp[i][j]\u3067i\u679a\u76ee\u307e\u3067\u898b\u3066\u672b\u5c3e\u304cj\uff0cO(NK)\n    N\u304c\u5c0f\u3055\u3051\u308c\u3070\u554f\u984c\u306a\u3044\uff0cj\u306e\u90e8\u5206\u306f(N\/j)\u306e\u5207\u308a\u6368\u3066\u3067\u307e\u3068\u3081\u3089\u308c\u308b\uff0e\n    \u524d\u534a\u90e8\u5206\u306f1~sqrt(N)\u3067\uff0c\u5404\u7d441\u3053\u305a\u3064\uff0e\u5f8c\u534a\u306fN\/i (i<=sqrt(N))\n    \n    \"\"\"\n    N,K=MI()\n    M=int(N**0.5)\n    cnt=[]\n    \n    i=1\n    while i<=N:\n        if i<=M:\n            cnt.append(1)\n            i+=1\n        else:\n            temp=int(N\/i)\n            cnt.append(int(N\/temp-i+1))\n            i=int(N\/temp +1)\n            \n    N2=len(cnt)\n            \n\n    \n    dp=[[0]*N2 for _ in range(K)]\n    #dp[i][j]\u306fi\u500b\u898b\u3066\uff0c\u6700\u5f8c\u5c3e\u304c\u30b0\u30eb\u30fc\u30d7L[j]\u306b\u5c5e\u3059\u5834\u5408\u306e\u6570\n    #j\u756a\u76ee\u306e\u30b0\u30eb\u30fc\u30d7\u306fM\u30fcj\u756a\u76ee\u307e\u3067\u306e\u30b0\u30eb\u30fc\u30d7\u3068\u7d44\u3081\u308b\n    \n    for j in range(N2):\n        dp[0][j]=cnt[j]\n        \n    for i in range(K-1):\n        S=[0]*(N2+1)\n        for j in range(N2):\n            S[j+1]=(S[j]+dp[i][j])%mod\n        \n        for j in range(N2):\n            dp[i+1][j]=(S[N2-j]*cnt[j])%mod\n            \n    ans=0\n    for j in range(N2):\n        ans=(ans+dp[-1][j])%mod\n        \n    print(ans)\n\n\n    \n    \n\nmain()\n","import sys\nfrom bisect import bisect_left as bl\ninput = sys.stdin.readline\nN, K = map(int, input().split())\nmod = 10 ** 9 + 7\nh = 1\nt = set()\nwhile h * h <= N:\n  t.add(N \/\/ h)\n  t.add(h)\n  h += 1\nt = sorted(t)\n#print(t)\ntt = []\nfor x in t:\n  tt.append(N \/\/ x)\n\ndp = [[0] * len(t) for _ in range(K + 1)]\ndp[0][0] = 1\nfor i in range(K):\n  for j in range(len(t)):\n    k = bl(t, tt[j])\n    dp[i + 1][k] += dp[i][j]\n    dp[i + 1][k] %= mod\n  #print(dp)\n  for k in range(len(t) - 1, 0, -1):\n    dp[i + 1][k - 1] += dp[i + 1][k]\n    dp[i + 1][k - 1] %= mod\n  for k in range(1, len(t)):\n    rng = (t[k] - t[k - 1]) % mod\n    dp[i + 1][k] *= rng\n    dp[i + 1][k] %= mod\n  #print(dp)\nres = 0\n#print(dp)\nfor j in range(len(t)):\n  res += dp[-1][j]\n  res %= mod\nprint(res)","import sys\n\ninput = sys.stdin.readline\n\nN, K = map(int, input().strip().split(' '))\ndiv = 1000000000 + 7\n\ncoefficients = [1] * N\nnums = [N \/\/ i for i in range(1, N+1)]\nfor i in range(1, K - 1):\n    mirror = [c for c in coefficients][::-1]\n    for index in range(N):\n        coefficients[index] += sum(e for e in mirror[index:-1])\nprint(sum(c * n for c, n in zip(coefficients, nums)))\n","def f(tail, left):\n  m = (tail, left)\n  if m in memo:\n    return memo[m]\n  \n  if left == 1:\n    ret = n \/\/ tail\n    memo[m] = n \/\/ tail\n    return ret\n  #if left == 0:\n  #  return 1\n\n  count = 0\n  for i in range(n \/\/ tail):\n    t = i + 1\n    count += f(t, left - 1)\n    #print(\"f({}, {})\".format(t, left - 1))\n  memo[m] = count\n  return count\n\nmemo = {}\n\nn, k = [int(v) for v in input().split()]\nprint(f(1, k))","from math import floor\n\nN, K = map(int, input().split())\n\nMOD = 10**9 + 7\n\n\nclass ModInt:\n    def __init__(self, x):\n        self.x = x % MOD\n\n    def __str__(self):\n        return str(self.x)\n\n    __repr__ = __str__\n\n    def __add__(self, other):\n        return (\n            ModInt(self.x + other.x) if isinstance(other, ModInt) else\n            ModInt(self.x + other)\n        )\n\n    def __sub__(self, other):\n        return (\n            ModInt(self.x - other.x) if isinstance(other, ModInt) else\n            ModInt(self.x - other)\n        )\n\n    def __mul__(self, other):\n        return (\n            ModInt(self.x * other.x) if isinstance(other, ModInt) else\n            ModInt(self.x * other)\n        )\n\n    def __truediv__(self, other):\n        return (\n            ModInt(\n                self.x * pow(other.x, MOD - 2, MOD)\n            ) if isinstance(other, ModInt) else\n            ModInt(self.x * pow(other, MOD - 2, MOD))\n        )\n\n    def __pow__(self, other):\n        return (\n            ModInt(\n                pow(self.x, other.x, MOD)\n            ) if isinstance(other, ModInt) else\n            ModInt(pow(self.x, other, MOD))\n        )\n\n    def __radd__(self, other):\n        return ModInt(other + self.x)\n\n    def __rsub__(self, other):\n        return ModInt(other - self.x)\n\n    def __rmul__(self, other):\n        return ModInt(other * self.x)\n\n    def __rtruediv__(self, other):\n        return ModInt(other * pow(self.x, MOD - 2, MOD))\n\n    def __rpow__(self, other):\n        return ModInt(pow(other, self.x, MOD))\n\n\n# floor(N \/ i) \u306e\u5024\u306b\u5fdc\u3058\u3066\u30b0\u30eb\u30fc\u30d7\u5206\u3051\u3057\u3001\n# \u30b0\u30eb\u30fc\u30d7\u5358\u4f4d\u3067\u6761\u4ef6\u3092\u6e80\u305f\u3059\u5217\u306e\u500b\u6570\u3092\u52d5\u7684\u8a08\u753b\u6cd5\u3067\u6c42\u3081\u308b\nP = floor(N**0.5)\nQ = N \/\/ P\n\nC = (\n    [ModInt(1) for _ in range(P + 1)] +\n    [\n        ModInt(N \/\/ (Q - i) - N \/\/ (Q - i + 1))\n        for i in range(1, Q)\n    ]\n)\n\ndp = [[0 for _ in range(P + Q)] for _ in range(K)]\ndp[0] = [C[i] for i in range(P + Q)]\nfor j in range(1, K):\n    acc = 0\n    for i in range(P + Q - 1, 0, -1):\n        acc += dp[j - 1][P + Q - i]\n        dp[j][i] = C[i] * acc\n\nans = sum(dp[K - 1])\n\nprint(ans)\n","def main():\n\tN, K = map(int, input().split())\n\tDIV = 10**9+7\n\tsqrtn = int(N**0.5)\n\tans = 1\n\ts = []\n\tfor i in range(1, sqrtn+1):\n\t\ts.append(i)\n\t\tif i < N\/\/i:\n\t\t\ts.append(N\/\/i)\n\ts.sort()\n\n\tr = []\n\tfor i in range(len(s)-1):\n\t\tleft = N\/\/s[i+1]\n\t\tright = N\/\/s[i]\n\t\tr.append(right-left)\n\tr.append(1)\n\n\tm = len(s)\n\tmp = {}\n\tfor i in range(m):\n\t\tmp[s[i]] = i\n\n\tdp = [[0 for _ in range(m)] for _ in range(K+1)]\n\tdp[0][mp[N]] = 1\n\tfor i in range(K):\n\t\tfor j in range(m-2, -1, -1):\n\t\t\tdp[i][j] += dp[i][j+1]\n\t\t\tdp[i][j] %= DIV\n\t\tfor j in range(m):\n\t\t\tnj = mp[N\/\/s[j]]\n\t\t\tdp[i+1][j] += dp[i][nj]*r[j]%DIV\n\t\t\tdp[i+1][j] %= DIV\n\n\tans = 0\n\tfor j in range(m):\n\t\tans += dp[K][j]\n\t\tans %= DIV\n\tprint(ans)\n\n\nif __name__ == '__main__':\n\tmain()","N, K = map(int,input().split())\nMOD = 10**9 + 7\n\nstate= [] # \u540c\u3058\u72b6\u614b\u3068\u307f\u306a\u3057\u3066\u3088\u3044\u3082\u306e\u306e\u500b\u6570\u306e\u914d\u5217\ni = 1\nwhile i <= N:\n    if i*i <= N:\n        state.append(1)\n        i += 1\n    else:\n        j = N \/\/ i # i\u306e\u5f8c\u306b\u304a\u3051\u308b\u6700\u5927\u306e\u6570\n        state.append(N\/\/j-i+1) \n        i = N\/\/j + 1\n\nL = len(state)\n#print(state)\n\n# dp[k][x] : \u6700\u5f8c\u304c\u72b6\u614bx\u3067\u3042\u308b\u3088\u3046\u306ak\u500b\u306e\u6574\u6570\u3092\u4e26\u3079\u308b\u5834\u5408\u306e\u6570\ndp = [[0]*L for _ in range(K+1)]\ndp[0][0] = 1\n\n#dp[k+1][x] = sum_{y: x\u3092\u5f8c\u308d\u306b\u304a\u3051\u308b\u72b6\u614b} dp[k][y]\nfor k in range(K):\n    cum_sum = [0] * (L+1)\n    for y in range(L): \n        cum_sum[y+1] = (cum_sum[y] + dp[k][y]) % MOD\n\n    for x in range(L):\n        # x\u3092\u5f8c\u308d\u306b\u304a\u3051\u308b\u3088\u3046\u306a\u6700\u5927\u306e\u72b6\u614b\u306fL-x-1\n        dp[k+1][x] += cum_sum[L-x]\n        dp[k+1][x] *= state[x]\n        dp[k+1][x] %= MOD\n\n#print(dp)\nprint(sum(dp[K]) % MOD)","N,K=map(int,input().split())\nmod=10**9+7\n\nimport math\nSQ=int(math.sqrt(N))\n\nDP1=[1]*(SQ+1)\nDP1[0]=0\n\n\nDP2=[]\n\nk=SQ\n\nfor i in range(SQ,0,-1):\n    DP2.append(N\/\/i-k)\n    k=N\/\/i\n\nKOSUU2=[v for v in DP2]\n\nfor j in range(K-1):\n    NDP1=[0]*(SQ+2)\n    NDP2=[0]*(SQ+1)\n\n    for j in range(1,SQ+1):\n        NDP2[-j]-=DP1[j]\n        NDP1[1]+=DP1[j]\n\n\n    for j in range(-1,-SQ-1,-1):\n        NDP1[-j+1]-=DP2[j]\n        NDP1[1]+=DP2[j]\n\n    for j in range(1,SQ+2):\n        NDP1[j]+=NDP1[j-1]\n\n    NDP2[0]+=NDP1[-1]\n\n    for j in range(1,SQ+1):\n        NDP2[j]+=NDP2[j-1]\n\n\n    for j in range(SQ):\n        NDP2[j]=NDP2[j]*KOSUU2[j]%mod\n\n    DP1=NDP1\n    DP2=NDP2\n    DP1.pop()\n    DP2.pop()\n\nprint((sum(DP1)+sum(DP2))%mod)","N, K = map(int, input().split())\nP = 10**9+7\nR = int(N**0.5)+1\nA = [i for i in range(R)] + [N\/\/i for i in range(1, R)][::-1]\nM = len(A)\nX = [0] + [1] * (M-1)\nfor i in range(1, K+1):\n    NX = [0] * M\n    for j in range(1, M):\n        NX[j] = (NX[j-1] + X[M-j]*(A[j]-A[j-1])) % P\n    X = NX\nprint(X[-1])","N, K = map(int, input().split())\nMOD = 10 ** 9 + 7\n\ni = 1\nn = []\nwhile i <= N :\n    j = N \/\/ i\n    if i <= j :\n        n.append(1)\n        i += 1\n    else :\n        n.append(N\/\/j-i+1)\n        i = N \/\/ j + 1\n\nM = len(n)\n\ndp = [[0] * M for _ in range(K)]\ndp[0] = n\n\nfor k in range(1, K) :\n    sdp = [0] * M\n    sdp[0] = dp[k-1][0]\n    for i in range(1, M) :\n        sdp[i] = (sdp[i-1] + dp[k-1][i]) % MOD\n    for i in range(M) :\n        dp[k][i] = sdp[M-i-1] * n[i] % MOD\n\nret = 0\n\nfor j in range(M) :\n    ret += dp[K-1][j]\n    ret %= MOD\n    \nprint(ret)","import math\n\nfrom itertools import accumulate\n\ndef cumsum(a):\n    return list(accumulate(a))\n\nn,k = map(int, input().split())\nif n == 1:\n    print(1)\n    exit()\nmod = 10 ** 9 + 7\nnow = n\nbig = []\nfor i in range(2,int(math.sqrt(n)+2)):\n    d = n \/\/ i\n    big.append(now - d)\n    now = d\nbig.reverse()\nl = [1] * d + big\nl2 = [1] * d + big\nfor i in range(k-1):\n    a = cumsum(l)\n    a.reverse()\n    count = 0\n    for i,j in zip(a,l2):\n        l[count] = (i * j) % mod\n        count += 1\nl = cumsum(l)\nans = l[-1] % mod\nprint(ans)\n    ","import sys\ntry: fin = open('in')\nexcept: fin = sys.stdin\ninput = lambda: fin.readline().strip()\n\nmod = 10 ** 9 + 7\n\nn, k = map(int, input().split())\nparts = [[n + 1, n + 1]]\ni = 1\ns = 0\nl = n + 1\nfor i in range(1, n + 1):\n\tr = n \/\/ i - n \/\/ (i + 1)\n\tparts.append([l - 1, l - r])\n\tl -= r\n\tif r == 1:\n\t\tfor i in range(l - 1, 0, -1): parts.append([i, i])\n\t\tbreak\nparts = [j for j, i in parts]\nnparts = [n \/\/ parts[i] - n \/\/ parts[i - 1] for i in range(1, len(parts))]\n\nrow = nparts\nfor r in range(1, k):\n\ttmp = []\n\ts = 0\n\tfor i in range(len(nparts) - 1, -1, -1): # go backwards\n\t\ts += row[-(i + 1)] # prefix sum thingy\n\t\ttmp.append(s * nparts[i] % mod)\n\ttmp.reverse()\n\trow = tmp\n\nprint (sum(row))","# -*- coding: utf-8 -*-\nimport sys\nfrom operator import itemgetter\n# gcd\nfrom fractions import gcd\n# \u5207\u308a\u4e0a\u3052\uff0c\u5207\u308a\u6368\u3066\nfrom math import ceil, floor\n# \u30ea\u30b9\u30c8\u306e\u771f\u306e\u30b3\u30d4\u30fc\uff08\u5909\u66f4\u304c\u4f1d\u64ad\u3057\u306a\u3044\uff09\nfrom copy import deepcopy\n# \u7d2f\u7a4d\u548c\u3002list(accumulate(A))\u3068\u3057\u3066A\u306e\u7d2f\u7a4d\u548c\nfrom itertools import accumulate\n# l = ['a', 'b', 'b', 'c', 'b', 'a', 'c', 'c', 'b', 'c', 'b', 'a']\n# S = Counter(l)  # \u30ab\u30a6\u30f3\u30bf\u30fc\u30af\u30e9\u30b9\u304c\u4f5c\u3089\u308c\u308b\u3002S=Counter({'b': 5, 'c': 4, 'a': 3})\n# print(S.most_common(2))  # [('b', 5), ('c', 4)]\n# print(S.keys())  # dict_keys(['a', 'b', 'c'])\n# print(S.values())  # dict_values([3, 5, 4])\n# print(S.items())  # dict_items([('a', 3), ('b', 5), ('c', 4)])\nfrom collections import Counter, defaultdict\nimport math\nfrom functools import reduce\n# input\u95a2\u4fc2\u306e\u5b9a\u7fa9\n# fin = open('in_3.txt', 'r')\n# sys.stdin = fin\n#\ninput = sys.stdin.readline\ndef ii(): return int(input())\ndef mi(): return map(int, input().rstrip().split())\ndef lmi(): return list(map(int, input().rstrip().split()))\ndef li(): return list(input().rstrip())\n# template\n\n\nMOD = 1000000007  # type: int\n\n\ndef solve(N: int, K: int):\n    d = defaultdict(int)\n    for i in range(1, int(math.sqrt(N)) + 1):\n        d[i] = N \/\/ i - N \/\/ (i + 1)\n    for i in range(1, int(math.sqrt(N)) + 1):\n        d[N \/\/ i] = 1\n    # print(d)\n    ans = 0\n    for num, value in d.items():\n        ans += value * pow(num, K - 1, MOD)\n    print(ans % MOD)\n\n\ndef main():\n\n    def iterate_tokens():\n        for line in sys.stdin:\n            for word in line.split():\n                yield word\n    tokens = iterate_tokens()\n    N = int(next(tokens))  # type: int\n    K = int(next(tokens))  # type: int\n    solve(N, K)\n\n\nif __name__ == '__main__':\n    main()\n","N, K = [int(i) for i in input().split()]\nP = 10**9 + 7\n\nans = 0\nfor i in range(1, N+1):\n    a = N \/\/ i\n    ans += a**(K-1) % P\nprint(ans % P)\n","def hersCode(l, r, n, N):\n  ok = l\n  ng = r + 1\n  while abs(ok - ng) > 1:\n    mid = abs(ok + ng) \/\/ 2\n    if mid * n <= N:\n      ok = mid\n    else:\n      ng = mid\n  return ng\n\n\nN, K = list(map(int, input().split()))\nMOD = 10 ** 9 + 7\n\nL = []\nt = 1\nn = N\nwhile t < N:\n  L.append(t)\n  t = hersCode(t, N, N \/\/ t ,N)\n\nD = [0] * len(L)\nL.append(N + 1)\nfor i in range(len(L) - 1):\n  D[i] = (L[i + 1] - L[i]) % MOD\n\nDP = [[0] * (len(D)) for _ in range(K)]\nfor i in range(len(D)):\n  DP[0][i] = D[i]\n\nfor i in range(1, K):\n  S = [0] * len(D)\n  S[0] = DP[i - 1][0]\n  for j in range(1, len(D)):\n    S[j] = S[j - 1] + DP[i - 1][j]\n  for j in range(len(D)):\n    DP[i][j] = S[-1 -j] * D[j] % MOD\n\nprint(sum(DP[K - 1]) % MOD)\n    ","N, K = map(int, input().split())\nMOD = 10**9 + 7\n\nsq = 0\nwhile (sq + 1) * (sq + 1) <= N:\n    sq += 1\n\nnum = [0 for i in range(2 * sq + 1)]\nfor i in range(1, sq + 1):\n    num[i] = 1\nfor i in range(1, sq + 1):\n    lo = max(sq + 1, (N + i + 1) \/\/ (i + 1))\n    hi = N \/\/ i\n    num[2 * sq + 1 - i] = hi - lo + 1\n\ndp = [[0 for j in range(2 * sq + 2)] for i in range(K + 1)]\ndp[0][1] = 1\nfor i in range(K):\n    for j in range(1, 2 * sq + 1):\n        ways = dp[i][j] * num[j] % MOD\n        dp[i + 1][1] += ways\n        dp[i + 1][2 * sq + 2 - j] -= ways\n    for j in range(1, 2 * sq + 1):\n        dp[i + 1][j] += dp[i + 1][j - 1]\n\nans = 0\nfor j in range(1, 2 * sq + 1):\n    ans += dp[K][j] * num[j]\nprint(ans % MOD)\n","from collections import defaultdict, deque, Counter\nfrom heapq import heappush, heappop, heapify\nimport math\nfrom bisect import bisect_left, bisect_right\nimport random\nfrom itertools import permutations, accumulate, combinations\nimport sys\nimport string\n\n\n\nINF = float('inf')\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef I(): return int(sys.stdin.readline())\ndef LS(): return sys.stdin.readline().split()\ndef S(): return sys.stdin.readline().strip()\ndef IR(n): return [I() for i in range(n)]\ndef LIR(n): return [LI() for i in range(n)]\ndef SR(n): return [S() for i in range(n)]\ndef LSR(n): return [LS() for i in range(n)]\ndef SRL(n): return [list(S()) for i in range(n)]\ndef MSRL(n): return [[int(j) for j in list(S())] for i in range(n)]\nmod = 10 ** 9 + 7\n\n\nn, k = LI()\nsqt = int(n ** 0.5)\ndp_mul_num = [1] * sqt + [n \/\/ i - n \/\/ (i + 1) for i in range(1, sqt + 1)][::-1]\ngroup_num = len(dp_mul_num)\ndp = [[0] * group_num for _ in range(k)]\ndp[0] = dp_mul_num\n\n\n\n\n\nfor i in range(k - 1):\n    ret = 0\n    for j in range(group_num):\n        ret = (ret + dp[i][j]) % mod\n        dp[i + 1][group_num - j - 1] = ret * dp_mul_num[group_num - j - 1] % mod\n\n\n\n\nprint(sum(dp[-1]) % mod)\n","from math import sqrt\ninpl = lambda: list(map(int,input().split()))\nMOD = 10**9 + 7\nN, K = inpl()\nsqN = int(sqrt(N))\nbound = [0]*(sqN+2)\nfor i in range(1,sqN+2):\n    bound[i] = N\/\/i\nbound[sqN+1] = sqN\ngroup_size = [0]*(sqN+1)\nfor i in range(1,sqN+1):\n    group_size[i] = bound[i]-bound[i+1]\n\ncur_small = [1] * (sqN+1)\ncur_small[0] = 0\ncur_large = [ s for s in group_size ]\nfor k in range(K-1):\n    prev_small = cur_small\n    cur_small = [0] * (sqN+2)\n    prev_large = cur_large\n    cur_small = [0] * (sqN+2)\n    cur_small[sqN+1] = sum(prev_small[:sqN+1])\n    for n in range(sqN,0,-1):\n        cur_small[n] = (prev_large[n] + cur_small[n+1]) % MOD\n    acc_prev_small = 0\n    for n in range(1,sqN+1):\n        acc_prev_small += prev_small[n]\n        cur_large[n] = acc_prev_small*group_size[n] % MOD\n\nprint((sum(cur_small[:sqN+1])+sum(cur_large[:sqN+1]))%MOD)","import math\n\nmod = 10**9+7\n\nN, K = map(int, input().split())\n\nroot_n = int(math.sqrt(N))\n\nscale = [0 for _ in range(root_n * 2)]\nlast = N\nfor i in range(root_n+1):\n    div = N \/\/ (i+1)\n    if i <= div:\n        scale[i] = 1\n        if i != 0:\n            scale[-i] = last-div\n    last = div\n\n# print(scale)\ndp0 = scale[:]\ndp1 = [None for _ in range(root_n * 2)]\n\nfor _ in range(K-1):\n    sum_val = 0\n    for i in range(root_n * 2):\n        sum_val += dp0[i]\n        dp1[root_n*2 -i-1] = sum_val * scale[root_n*2 -i-1] % mod\n\n    dp0 = dp1[:]\n    # print(dp0)\n\nprint(sum(dp0) % mod)\n\n\n","N, K = (int(i) for i in input().split())\nN += 1\nl1 = []\nl2 = []\nn_ma = 0\nfor i in range(1, N):\n    j = (N-1)\/\/(i+1) + 1\n    if i > j:\n        break\n    elif i == j:\n        l1.append(i)\n        break\n    l1.append(i)\n    l2.append(j)\nl2.reverse()\nL = l1 + l2 + [N]\nM = len(L) - 1\nDP = [[0] * (M+1) for counter1 in range(K+1)]\n\ndef BIT_query(BIT, idx):\n    res_sum = 0\n    while idx > 0:\n        res_sum += BIT[idx]\n        idx -= idx&(-idx)\n    return res_sum\n\ndef BIT_update(BIT, idx, x):\n    while idx <= M:\n        BIT[idx] += x\n        idx += idx&(-idx)\n    return\n\ndef BIT_debug(BIT):\n    return [BIT_query(BIT, i) - BIT_query(BIT, i-1) for i in range(1, M+1)]\n\nMOD = 10**9 + 7\nfor i in range(M):\n    BIT_update(DP[1], i+1, L[i+1]-L[i])\nfor i in range(1, K):\n    for j in range(M):\n        x = BIT_query(DP[i], M-j)\n        x *= L[j+1]-L[j]\n        x %= MOD\n        BIT_update(DP[i+1], j+1, x)\n\nprint(K, M)\n\nprint(BIT_query(DP[K], M)%MOD)","import sys\nsys.setrecursionlimit(10**7) #\u518d\u5e30\u95a2\u6570\u306e\u4e0a\u9650,10**5\u4ee5\u4e0a\u306e\u5834\u5408python\nimport math\nfrom copy import copy, deepcopy\nfrom copy import deepcopy as dcp\nfrom operator import itemgetter\nfrom bisect import bisect_left, bisect, bisect_right#2\u5206\u63a2\u7d22\n#bisect_left(l,x), bisect(l,x)#a\u306f\u30bd\u30fc\u30c8\u6e08\u307f\u3067\u3042\u308b\u5fc5\u8981\u3042\u308a\u3002a\u306e\u4e2d\u304b\u3089x\u672a\u6e80\u306e\u8981\u7d20\u6570\u3092\u8fd4\u3059\u3002right\u3060\u3068\u4ee5\u4e0b\nfrom collections import deque\n#deque(l), pop(), append(x), popleft(), appendleft(x)\n#q.rotate(n)\u3067 \u2192 \u306bn\u56de\u30ed\u30fc\u30c6\u30fc\u30c8\nfrom collections import Counter#\u6587\u5b57\u5217\u3092\u500b\u6570\u30ab\u30a6\u30f3\u30c8\u8f9e\u66f8\u306b\u3001\n#S=Counter(l),S.most_common(x),S.keys(),S.values(),S.items()\nfrom itertools import accumulate,combinations,permutations#\u7d2f\u7a4d\u548c\n#list(accumulate(l))\nfrom heapq import heapify,heappop,heappush\n#heapify(q),heappush(q,a),heappop(q) #q=heapify(q)\u3068\u3057\u306a\u3044\u3053\u3068\u3001\u8fd4\u308a\u5024\u306fNone\n#import fractions#\u53e4\u3044atcoder\u30b3\u30f3\u30c6\u30b9\u30c8\u306e\u5834\u5408GCD\u306a\u3069\u306f\u3053\u3053\u304b\u3089import\u3059\u308b\nfrom functools import lru_cache#pypy\u3067\u3082\u3046\u3054\u304f\n#@lru_cache(maxsize = None)#maxsize\u306f\u4fdd\u5b58\u3059\u308b\u30c7\u30fc\u30bf\u6570\u306e\u6700\u5927\u5024\u30012**n\u304c\u6700\u3082\u9ad8\u52b9\u7387\nfrom decimal import Decimal\n\ndef input(): \n    x=sys.stdin.readline()\n    return x[:-1] if x[-1]==\"\\n\" else x\ndef printe(*x):print(\"## \",*x,file=sys.stderr)\ndef printl(li): _=print(*li, sep=\"\\n\") if li else None\ndef argsort(s, return_sorted=False): \n    inds=sorted(range(len(s)), key=lambda k: s[k])\n    if return_sorted: return inds, [s[i] for i in inds]\n    return inds\ndef alp2num(c,cap=False): return ord(c)-97 if not cap else ord(c)-65\ndef num2alp(i,cap=False): return chr(i+97) if not cap else chr(i+65)\ndef matmat(A,B):\n    K,N,M=len(B),len(A),len(B[0])\n    return [[sum([(A[i][k]*B[k][j]) for k in range(K)]) for j in range(M)] for i in range(N)]\ndef matvec(M,v):\n    N,size=len(v),len(M)\n    return [sum([M[i][j]*v[j] for j in range(N)]) for i in range(size)]\ndef T(M):\n    n,m=len(M),len(M[0])\n    return [[M[j][i] for j in range(n)] for i in range(m)]\ndef main():\n    mod = 1000000007\n    #w.sort(key=itemgetter(1),reversed=True)  #\u4e8c\u500b\u76ee\u306e\u8981\u7d20\u3067\u964d\u9806\u4e26\u3073\u66ff\u3048\n\n    #N = int(input())\n    N, K = map(int, input().split())\n    #A = tuple(map(int, input().split())) #1\u884c\u30d9\u30af\u30c8\u30eb\n    #L = tuple(int(input()) for i in range(N)) #\u6539\u884c\u30d9\u30af\u30c8\u30eb\n    #S = tuple(tuple(map(int, input().split())) for i in range(N)) #\u6539\u884c\u884c\u5217\n    l=1\n    from collections import defaultdict\n    dp=dict()\n    ndp=defaultdict\n    for i in range(K):\n        ndp=dict()\n        l=N\n        s=0\n        while l>0:\n            d=N\/\/l\n            r=N\/\/(d+1)\n            if i==0:\n                s=1\n            else:\n                s+=dp[d]\n            ndp[l]=(l-r)*s%mod\n            l=r\n        dp=ndp\n    ans=0\n    for v in dp.values():\n        ans=ans+v\n        ans%=mod \n    print(ans)\n\n\n\n\n\nif __name__ == \"__main__\":\n    main()","from itertools import accumulate\nN, K = map(int, input().split())\nmod = 10 ** 9 + 7\nsqrt = int(N**(1\/2))\ncount = [N\/\/i - N\/\/(i+1) for i in range(1, N\/\/sqrt)] + [1] * sqrt\nansList = count\nfor _ in range(K):\n    ansList = [(i * j) % mod for i, j in zip(accumulate(reversed(ansList)), count)]\n\nprint(ansList[-1])","# coding: utf-8\n# Your code here!\nMOD = 10**9+7\n\nfrom math import sqrt, floor\n\nn,k = [int(i) for i in input().split()]\nsn = floor(sqrt(n))+1\n\npre = [0]*sn\npre[1] = 1\n\ncur = [1]*(sn)\ncur[0] = 0\n\n#big = n-sn+1\n\nfor _ in range(k-1):\n#    print(cur)\n    new = [sum(cur)%MOD]*(sn); new[0] = 0\n    s = sum(pre)%MOD\n    b=0\n    res=0\n    for j in range(sn-1,0,-1):\n        a = n\/\/j - (sn-1) #ok\u306a\u500b\u6570\n        res += (a-b)*s\n        res %=MOD\n        new[j] += res\n        if new[j] > MOD: new[j] -= MOD\n        s -= pre[j]\n        b=a\n        \n    pre,cur = cur,new\n\n\n#print(pre,cur)\nans =0\nfor j in range(sn-1,0,-1):\n    ans += pre[j]*(n\/\/j - (sn-1))\n    ans %=MOD\n\n\nprint((sum(cur)+ans)%MOD)\n\n\n\n","from heapq import heappush,heappop,heapify\nfrom collections import deque,defaultdict,Counter\nimport itertools\nfrom itertools import permutations,combinations,groupby\nimport sys\nimport bisect\nimport string\nimport math\nimport time\nimport random\ndef S_():\n    return input()\ndef LS():\n    return [i for i in input().split()]\ndef I():\n    return int(input())\ndef MI():\n    return map(int,input().split())\ndef LI():\n    return [int(i) for i in input().split()]\ndef LI_():\n    return [int(i)-1 for i in input().split()]\ndef NI(n):\n    return [int(input()) for i in range(n)]\ndef NI_(n):\n    return [int(input())-1 for i in range(n)]\ndef StoI():\n    return [ord(i)-97 for i in input()]\ndef ItoS(nn):\n    return chr(nn+97)\ndef LtoS(ls):\n    return ''.join([chr(i+97) for i in ls])\ndef GI(V,E,Directed=False,index=0):\n    org_inp=[]\n    g=[[] for i in range(n)]\n    for i in range(E):\n        inp=LI()\n        org_inp.append(inp)\n        if index==0:\n            inp[0]-=1\n            inp[1]-=1\n        if len(inp)==2:\n            a,b=inp\n            g[a].append(b)\n            if not Directed:\n                g[b].append(a)\n        elif len(inp)==3:\n            a,b,c=inp\n            aa=(inp[0],inp[2])\n            bb=(inp[1],inp[2])\n            g[a].append(bb)\n            if not Directed:\n                g[b].append(aa)\n    return g,org_inp\ndef bit_combination(k,n=2):\n    rt=[]\n    for tb in range(n**k):\n        s=[tb\/\/(n**bt)%n for bt in range(k)]\n        rt+=[s]\n    return rt\ndef show(*inp,end='\\n'):\n    if show_flg:\n        print(*inp,end=end)\nYN=['Yes','No']\nmo=10**9+7\ninf=float('inf')\nl_alp=string.ascii_lowercase\nu_alp=string.ascii_uppercase\nts=time.time()\nsys.setrecursionlimit(10**5)\ninput=lambda: sys.stdin.readline().rstrip()\n\ndef ran_input():\n    import random\n    n=random.randint(4,16)\n    rmin,rmax=1,10\n    a=[random.randint(rmin,rmax) for _ in range(n)]\n    return n,a\n\nshow_flg=False\nshow_flg=True\n\n\nans=0\n\nn,k=LI()\nb=[]\n\nfor i in range(1,int(n**0.5)+1):\n    b+=[n\/\/i]\n    b+=[n\/\/(n\/\/i)]\n\nb=sorted(set(b))\nd=[i-j for i,j in zip(b,[0]+b)]\nk+=1\n\nm=len(b)\ndp=[[0]*(m) for j in range(1+k)]\ndp[0][0]=1\n\nfor i in range(k):\n    sdp=[0]\n    #show('dp',dp[i])\n    for j in range(m):\n        sdp.append((sdp[-1]+dp[i][j]*d[j])%mo)\n    sdp=sdp[::-1]\n    #show('sdp',sdp)\n    for j in range(m):\n        dp[i+1][j]=sdp[j]\n\nprint(sdp[0])\n","MOD = 10**9 + 7\nclass mint:\n    def __init__(self, i):\n        self.i = i\n    def __add__(self, m):\n        t = self.i + (m.i if isinstance(m, mint) else m)\n        if t > MOD:\n            t -= MOD\n        return mint(t)\n    def __radd__(self, m):\n        t = self.i + (m.i if isinstance(m, mint) else m)\n        if t > MOD:\n            t -= MOD\n        return mint(t)\n    def __mul__(self, m):\n        return mint(self.i * (m.i if isinstance(m, mint) else m) % MOD)\n    def __sub__(self, m):\n        t = self.i - (m.i if isinstance(m, mint) else (m % MOD))\n        if t < 0:\n            t += MOD\n        return mint(t)\n    def __pow__(self, m):\n        i = self.i\n        return mint(pow(i, m, MOD))\n    def __truediv__(self, m):\n        return mint(self.i * pow(m, MOD - 2, MOD) % MOD)\n    def __repr__(self):\n        return repr(self.i)\n\n\nn, k = map(int, input().split())\n\nl, r = 1, n + 1\nwhile r - l > 1:\n    c = (l + r) \/\/ 2\n    if c ** 2 <= n:\n        l = c\n    else:\n        r = c\nr = l # less than or equal to sqrt(n)\n# 1 ... r - 1, r, (r, n\/r], ... (n\/3, n\/2], (n\/2, n]\n# (a, b] ... count for each elem in (a, b], not sum\n# (r, n\/r] is ignored if r*r == n\ndp = [mint(0) for _ in range(2 * r)]\ndp[0] = mint(1)\nfor _ in range(k):\n    ndp = [mint(0) for _ in range(2 * r)]\n    for i in range(1, r + 1):\n        pre_cnt = dp[i - 1]\n        if i == r and r ** 2 == n:\n            ndp[r - 1] += pre_cnt\n        else:\n            ndp[-i] += pre_cnt\n    for i in range(1, r + 1):\n        if i == r and r ** 2 == n:\n            continue\n        pre_cnt = dp[-i]\n        upper = n \/\/ i\n        lower = r + 1 if i == r else 1 + n \/\/ (i + 1)\n        ndp[i - 1] += pre_cnt * (upper - lower + 1)\n    acc = mint(0)\n    for i in range(r * 2 - 1, -1, -1):\n        if i == r and r ** 2 == n:\n            continue\n        acc += ndp[i]\n        dp[i] = acc\n\nans = mint(0)\nfor i in range(1, r + 1):\n    ans += dp[i - 1]\nfor i in range(1, r + 1):\n    upper = n \/\/ i\n    lower = r + 1 if i == r else 1 + n \/\/ (i + 1)\n    ans += dp[-i] * (upper - lower + 1)\nprint(ans)\n","n,k = [int(x) for x in input().split()]\nmod = 1000000007\nif n == 1:\n    print(1)\n    quit()\nf = [0,n]\ni = 1\nwhile f[i] >= i:\n    i += 1\n    f.append(n\/\/i)\ns = [0]*len(f)\nfor i in range(1,len(f)):\n    s[i] = 1\nfor i in range(2,len(f))[::-1]:\n    if f[i] <= i:\n        s[-1] = f[i-1]-f[i]\n    else:\n        s.append(f[i-1]-f[i])\nMA = len(s)\ndp = [[0]*MA for i in range(k)]\ndp[0] = [s[i] for i in range(MA)]\nfor i in range(MA-1):\n    dp[0][i+1] += dp[0][i]\n    dp[0][i+1] %= mod\nfor l in range(k-1):\n    for i in range(1,MA):\n        j = MA-i\n        dp[l+1][i] += dp[l][j]*s[i]\n        dp[l+1][i] %= mod\n        dp[l+1][i] += dp[l+1][i-1]\n        dp[l+1][i] %= mod\nprint(dp[-1][-1])\n","n,m=map(int,input().split(' '))\nMod=1000000007\nspl=int(n**0.5)+1\nf,k=[i for i in range(spl)]+[n\/\/i for i in range(1,spl)][::-1],2*spl-1\ndp=[0]+[1]*(k-1)\nfor i in range(m):\n\tdp2=[0]*k\n\tfor j in range(1,k):\n\t\tdp2[j]=(dp2[j-1]+dp[k-j]*(f[j]-f[j-1]))%Mod\n\tdp=dp2\nprint(dp[k-1])","N,K = map(int,input().split())\nMOD = 10**9+7\n\nm = 1\na,b = [],[]\nwhile m*m <= N:\n    a.append(m)\n    b.append(N\/\/m)\n    m += 1\nif a[-1] == b[-1]:\n    b.pop()\na += b[::-1]\nw = [b-a for a,b in zip([0]+a, a)]\n\nL = len(a)\ndp = [1]*L\nfor _ in range(K-1):\n    dp2 = [0]*L\n    c = 0\n    for i,v in enumerate(w):\n        c += dp[i] * v\n        dp2[L-1-i] += c\n        dp2[L-1-i] %= MOD\n    dp = dp2\nans = sum(a*b for a,b in zip(w,dp))\nprint(ans%MOD)","import sys\nimport numpy as np\n\nsr = lambda: sys.stdin.readline().rstrip()\nir = lambda: int(sr())\nlr = lambda: list(map(int, sr().split()))\n\nMOD = 10 ** 9 + 7\nN, K = lr()\nM = int(N**.5)\n\n# M+1\u4ee5\u4e0a\u3067\u3001N\u3092\u5272\u308b\u3068x\u306b\u306a\u308b\u3082\u306e\nupper_cnt = np.zeros(M+1, dtype=np.int64) # 1-indexed\nA = np.arange(M+1, dtype=np.int64)\nupper_cnt[1:] = N \/\/ A[1:] - np.maximum(M, N \/\/ (A[1:]+1)) # M\u306e\u6642\u306flower\u3067\u6570\u3048\u308b\u306e\u30670\u306b\n\n# \u6841DP\nlower = np.zeros(M+1, dtype=np.int64) # 1-indexed\nupper = np.zeros(M+1, dtype=np.int64)\n#\u6700\u521d\u306f\u5236\u9650\u306a\u3057\u306a\u306e\u30671\u3092\u7f6e\u3044\u3066\u304a\u304f\nlower[1] = 1\nfor i in range(K):\n    prev_lower = lower.copy()\n    prev_upper = upper.copy()\n    lower_cum = prev_lower.cumsum() % MOD\n    upper_cum = prev_upper.cumsum() % MOD\n    # lower \u3068 upper \u304b\u3089 lower \u3078\n    lower = np.zeros(M+1, dtype=np.int64)\n    lower[1:] += (lower_cum[-1] + upper_cum[-1])\n    lower[1:] -= upper_cum[:-1] # \u5927\u304d\u3059\u304e\u308b\u5024\u3092\u5f15\u304f\n    # upper \u304b\u3089 upper \u306f\u306a\u3057\n    # lower \u304b\u3089 upper \u3078\n    upper = lower_cum * upper_cnt\n    lower %= MOD; upper %= MOD\n\nanswer = (lower[1:].sum() + upper[1:].sum()) % MOD\nprint(answer)\n","from itertools import accumulate as r;n,k=map(int,input().split());m=10**9+7;j=int(n**0.5);c=[n\/\/(i+1)-n\/\/(i+2) for i in range(n\/\/(j+1))]+[1]*j;x=c;exec(\"x=[(y*d)%m for y,d in zip(r(x[::-1]),c)];\"*k);print(x[-1])","#!\/usr\/bin\/python3\n# -*- coding: utf-8 -*-\nimport math\n\nMOD = 1000000007\n\n\n\ndef fact(n):\n  ans = {0}\n  for i in range(1,math.ceil(n**0.5)+1):\n      ans.add(i)\n      ans.add(n\/\/i)\n  return sorted(list(ans))\n\ndef main():\n  N,K = map(int, input().split())\n  dp = [{} for _ in range(K+1)]\n  keys = fact(N)\n  dp[1] = {f:f for f in keys}\n\n  for i in range(1,K):\n    j_prev = 0\n    dp[i+1][0] = 0\n    for j in keys[1:]:\n      dp[i+1][j] = (dp[i+1][j_prev] + (j-j_prev)*dp[i][N\/\/j]) % MOD\n      j_prev = j\n  print(dp[K][N])\n\n\nif __name__ == \"__main__\":\n  main()","import math\nprintn = lambda x: sys.stdout.write(x)\ninn = lambda : int(input())\ninl   = lambda: list(map(int, input().split()))\ninm   = lambda:      map(int, input().split())\nDBG = True  and False\ndef ddprint(x):\n  if DBG:\n    print(x)\n\nR = 10**9+7\nn,k = inm()\nq = int(math.sqrt(n))\na = [ [0]*(q+1) for j in range(k) ]\nb = [ [0]*(q+1) for j in range(k) ]\nc = [0]*(q+1)\nc[1] = n - n\/\/2\nfor i in range(2,q):\n    c[i] = n\/\/i - n\/\/(i+1)\nc[q] = n\/\/q - q\nfor i in range(1,q+1):\n    a[0][i] = 1\n    b[0][i] = c[i]\n\n\nfor j in range(1,k):\n    aacc = [0]*(q+2)\n    bacc = [0]*(q+2)\n    for i in range(1,q+1):\n        aacc[i] = (aacc[i-1] + a[j-1][i])%R\n    for i in range(q,0,-1):\n        bacc[i] = (bacc[i+1] + b[j-1][i])%R\n    for i in range(1,q+1):\n        a[j][i] = (aacc[q]+bacc[i])%R\n        b[j][i] = (aacc[i]*c[i])%R\n\nprint( (sum(a[k-1]) + sum(b[k-1])) % R )\n","import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(1000000)\nfrom collections import deque, Counter, defaultdict\ndef getN():\n    return int(input())\ndef getList():\n    return list(map(int, input().split()))\nimport math\nimport copy\nimport bisect\nMOD = 10**9 + 7\nfrom logging import getLogger, StreamHandler, DEBUG, WARNING\nlogger = getLogger(__name__)\nhandler = StreamHandler()\nhandler.setLevel(DEBUG)\nlogger.setLevel(DEBUG)\n# handler.setLevel(WARNING)\n# logger.setLevel(WARNING)\nlogger.addHandler(handler)\ndef main():\n    n,k = getList()\n\n    # =================\u7d04\u6570\u5217\u6319=================\n    divisors = []\n    tmp_div = n + 1\n    for i in range(1, int(math.sqrt(n)) + 3):\n        if tmp_div * i > n:\n            other = n \/\/ i\n            if i > other:\n                break\n            elif i == other:\n                divisors.append(i)\n                break\n            else:\n                divisors.append(i)\n                divisors.append(other)\n\n    divisors.sort()\n    n_div = len(divisors)\n    # =================\u7d04\u6570\u5217\u6319=================\n\n    # =================dp[0]\u306e\u4f5c\u6210=============\n    diff = [divisors[0]]\n    for i, j in zip(divisors, divisors[1:]):\n        diff.append(j - i)\n    dp = copy.copy(diff)\n    # print(dp)\n    # =================dp[0]\u306e\u4f5c\u6210=============\n\n    for iteration in range(k-1):\n        dp_copy = []\n        tmp = sum(dp) % MOD\n        dp_copy.append((tmp * diff[0]) % MOD)\n        for cid, dp_content in enumerate(range(n_div - 1)):\n            tmp -= dp[n_div - dp_content - 1]\n            dp_copy.append((tmp * diff[cid+1]) % MOD)\n\n        dp = copy.copy(dp_copy)\n\n        # print(dp)\n    print(sum(dp) % MOD)\n    # print(acc)\n    # print(n_div)\nif __name__ == \"__main__\":\n    main()","n, k = list(map(int, input().split()))\nmod = 10 ** 9 + 7\n\nm = n ** 0.5\ncnt = [n \/\/ i - n \/\/ (i + 1) for i in range(1, int(m) + 1)] \ncnt = (cnt + [1 for _ in range(n - sum(cnt))])[::-1]\nnxt = cnt[:]\n\nfor _ in range(k - 1):\n\tcnt = [sum([x * nxt[i] % mod for x in cnt[:(len(cnt) - i)]])  for i in range(len(cnt))]\nprint(sum(cnt) % mod)\n","n,k = map(int,input().split())\nmod = 10**+7\nsub = int(n**0.5)\np = [1]*(sub)\nps = [i for i in range(1,sub+1)]\nl = [i for i in range(1,sub+1)]\nsub = n\/\/l[-1]\nwhile sub > 1:\n    sub -= 1\n    nex = n\/\/sub\n    if nex <= l[-1]:\n        sub -=1\n        nex = n\/\/sub\n    dis = nex-l[-1]\n    l.append(nex)\n    p.append(dis)\n    ps.append(ps[-1]+dis)\nx = len(p)\ndp = [[0]*x for i in range(k)]\ndps = [[0]*x for i in range(k)]\ndp[0] = p\ndps[0] = ps\nfor i in range(1,k):\n    for j in range(x):\n        dp[i][j] += dps[i-1][-1-j]*dp[0][j]\n        dp[i][j] %= mod\n        dps[i][j] = dps[i][j-1]+dp[i][j]\n        dps[i][j] %= mod\n\nprint(sum(dp[-1])%mod)\n","import sys\n\ndef solve():\n    input = sys.stdin.readline\n    N, K = map(int, input().split())\n    mod = 7 + 10 ** 9\n    S = 1\n    while S ** 2 <= N:\n        S += 1\n    DP = [[[0, 0] for _ in range(S)] for _ in range(K)]\n    Rev = [0] * S\n    S -= 1\n    Rev[S] = (N \/\/ S - S) % mod\n    for i in reversed(range(1, S)):\n        Rev[i] = ((N \/\/ i) - (N \/\/ (i + 1))) % mod\n    for i in range(1, S + 1):\n        DP[0][i][0] = 1\n        DP[0][i][1] = Rev[i]\n    for i in range(2, S + 1):\n        DP[0][i][0] += DP[0][i-1][0]\n        DP[0][i][0] %= mod\n    DP[0][S][1] += DP[0][S][0]\n    DP[0][S][1] %= mod\n    for i in reversed(range(1, S)):\n        DP[0][i][1] += DP[0][i+1][1]\n        DP[0][i][1] %= mod\n\n    for i in range(1, K):\n        for j in range(1, S + 1):\n            DP[i][j][0] += DP[i-1][j][1]\n            DP[i][j][1] += (DP[i-1][j][0] * Rev[j]) % mod\n            DP[i][j][1] %= mod\n            DP[i][j][0] += DP[i][j-1][0]\n            DP[i][j][0] %= mod\n        DP[i][S][1] = DP[i][S][0]\n        for j in reversed(range(1, S)):\n            DP[i][j][1] += DP[i][j+1][1]\n            DP[i][j][1] %= mod\n\n    print(DP[K-1][1][1])\n    #print(DP)\n\n    return 0\n\nif __name__ == \"__main__\":\n    solve()","import numpy as np\n\nn, k = list(map(int, input().split()))\nMOD = 10 ** 9 + 7\nl = int(n ** 0.5)\ncoe = [n \/\/ i - l for i in range(l, 0, -1)]\ncoe.append(0)\ncoe.reverse()\ncoe = np.array(coe, dtype=np.int64)\n\ndp1 = np.ones(l + 1, dtype=np.int64)\ndp2 = coe.copy()\ndp1[0] = 0\nfor i in range(k - 1):\n    dp1acc_f = np.add.accumulate(dp1) % MOD\n    dp1acc_b = np.add.accumulate((dp1 * coe % MOD)[::-1])[::-1] % MOD\n    s = dp1acc_f[-1]\n    dp1acc_f = np.roll(dp1acc_f, 1)\n    dp1[1:] = (s + dp2[1:]) % MOD\n    dp2[1:] = (dp1acc_b + dp1acc_f * coe)[1:] % MOD\nans = (dp1.sum() + dp2[1]) % MOD\nprint(ans)\n","from itertools import accumulate\n\nN, K = map(int, input().split())\nmod = 10**9 + 7\n\nxs = []\nx = 1\nwhile x * x <= N:\n    xs.append(N \/\/ x)\n    x += 1\ns = x - 1\ny = 1\nwhile y < N \/\/ y:\n    xs.append(y)\n    y += 1\nxs = list(set(xs))\nxs.sort()\ncompress = {x : i for i, x in enumerate(xs)}\n\ndp = [[0] * len(compress) for _ in range(K)]\nfor x, i in compress.items():\n    dp[-1][i] = x\n\nfor k in range(K-1)[::-1]:\n    cum = list(accumulate([0] + dp[k+1]))\n    for x, i in compress.items():\n        a = max(compress[N \/\/ x], compress[N \/\/ s])\n        dp[k][i] = (cum[-1] - cum[a]) % mod\n\n    b = 1\n    cum = [0] * len(compress)\n    while b < N \/\/ b:\n        cnt = N \/\/ b - N \/\/ (b + 1)\n        cum[compress[b]] = (cum[compress[b]] + cnt * dp[k+1][compress[b]]) % mod\n        b += 1\n    cum = list(accumulate([0] + cum))\n    for x, i in compress.items():\n        b = N \/\/ x\n        if x <= b:\n            continue\n        dp[k][i] += cum[-1] - cum[compress[b]+1]\n        dp[k][i] += (x - N \/\/ (b + 1)) * dp[k+1][compress[b]]\n        dp[k][i] %= mod\nprint(dp[0][-1])","import math\nfrom bisect import bisect_left\n\nMOD = 10**9 + 7\n\n\ndef main():\n    N, K = map(int, input().split())\n    R = int(math.sqrt(N))\n    if N \/\/ R == R:\n        M = R * 2 - 1\n    else:\n        M = R * 2\n    mapping = [0] * (M+1)\n    for i in range(1, R+1):\n        mapping[i] = i\n        mapping[-i] = N\/\/i\n    cnt = [0] * (M+1)\n    for i in range(1, M+1):\n        cnt[i] = mapping[i] - mapping[i-1]\n    dp = [[0] * (M+1) for _ in range(K+1)]\n    dp[0] = list(cnt)\n    for i in range(M):\n        dp[0][i+1] += dp[0][i]\n\n    for i in range(K-1):\n        for j in range(1, M+1):\n            v = N \/\/ mapping[j]\n            idx = bisect_left(mapping, v)\n            dp[i+1][j] = dp[i][idx]\n        for j in range(M):\n            dp[i+1][j+1] = (dp[i+1][j] + dp[i+1][j+1] * cnt[j+1]) % MOD\n    print(dp[K-1][M])\n\n\nif __name__ == \"__main__\":\n    main()\n","N, K = map(int, input().split())\nL = 10**9+7\n\nparts = []\ni = 1\nwhile i<=N:\n    a = N \/\/ i\n    j = N \/\/ a\n    parts.append(j-i+1)\n    i = j+1\n\nC = parts\nfor _ in range(K-1):\n    C_new = []\n    c = 0\n    for i,p in enumerate(parts[::-1]):\n        num_dual = i\n        c += C[i]\n        C_new.append(p * c % L)\n    C = C_new[::-1]\nprint(sum(C) % L)\n","import numpy as np\nN,K = map(int,input().split())\nMOD = 10 ** 9 + 7\nM = int(N**.5)\n\n# M+1\u4ee5\u4e0a\u3067\u3001\u5546\u304c\u3062\u3087\u3046\u3068x\u306b\u306a\u308b\u3084\u3064\nupper_cnt = np.zeros(M+1, dtype=np.int64)\na = np.arange(M+1, dtype=np.int64)\nupper_cnt[1:] = N \/\/ a[1:] - np.maximum(M, N \/\/ (a[1:]+1))\n\n# \u6570\u5217\u306e\u672b\u7aef\u3054\u3068\u306e\u500b\u6570\n# upper\u306b\u3064\u3044\u3066\u306f\u3001\u500b\u6570\u306b\u308f\u305f\u3063\u3066\u5408\u8a08\u3092\u3068\u308b\nlower = np.zeros(M+1, dtype=np.int64)\nupper = np.zeros(M+1, dtype=np.int64)\n# 0\u9805\u76ee\u306b1\u3092\u7f6e\u3044\u3066\u304a\u304f\u3068\u3059\u308b\nlower[1] = 1\nfor k in range(1,K+1):\n    prev_lower = lower\n    prev_upper = upper\n    np.cumsum(prev_lower, out = prev_lower)\n    np.cumsum(prev_upper, out = prev_upper)\n    prev_lower %= MOD\n    prev_upper %= MOD\n    # \u4e0b\u5074 to \u4e0b\u5074\n    lower = np.zeros(M+1, dtype=np.int64)\n    lower += (prev_lower[-1] + prev_upper[-1])\n    lower[1:] -= prev_upper[:-1] # \u5546\u304cn-1\u4ee5\u4e0b\u3060\u3068\u53d7\u3051\u4ed8\u3051\u306a\u3044\n    lower[0] = 0\n    # \u4e0a\u5074 to \u4e0a\u5074\uff1a\u306a\u3044\u306f\u305a\n    # \u4e0b\u5074 to \u4e0a\u5074\uff1a\n    upper = prev_lower * upper_cnt\n    lower %= MOD\n    upper %= MOD\n    \nanswer = (lower.sum() + upper.sum()) % MOD\nprint(answer)\n","MOD = pow(10, 9) + 7\n\ndef main():\n  n, k = map(int, input().split())\n  dyaku = set([1, n])\n  i = 2\n  while i*i<=n:\n    if n \/\/ i not in dyaku:\n      dyaku.add(i)\n      dyaku.add(n\/\/i)\n    i += 1\n  reyaku = [0] + list(sorted(dyaku))\n  ddyaku = {s: i+1 for i, s in enumerate(sorted(dyaku))}\n  dp = [[0 for _ in range(k)] for _ in range(len(dyaku) + 1)]\n  for i in range(1, len(dyaku)+1):\n    dp[i][1] = (((reyaku[i] - reyaku[i-1]) * (n \/\/ reyaku[i])) % MOD + dp[i-1][1]) % MOD\n  for i in range(2, k):\n    for j in range(1, len(dyaku)+1):\n      dp[j][i] = (((reyaku[j] - reyaku[j-1]) * dp[ddyaku[n\/\/reyaku[j]]][i-1]) % MOD + dp[j-1][i]) % MOD\n  print(dp[-1][-1])\n\n\nif __name__ == '__main__':\n  main()","import math\nfrom itertools import chain\n\nN, K = map(int, input().split())\n\nmodulo = 10 ** 9 + 7\nsqrtN  = int(math.sqrt(N))\n\nP = [N \/\/ d for d in range(1, sqrtN + 1)]\n\n# M[i] - \u6b63\u306e\u6574\u6570k\u500b\u3092\u4e26\u3079\u305f\u3082\u306e\u306e\u3046\u3061, \u5148\u982d\u304ci\u3067,\n#        \u96a3\u63a5\u3059\u308b\u6574\u6570\u306e\u7a4d\u304cN\u4ee5\u4e0b\u306e\u3082\u306e\u306e\u500b\u6570 (mod modulo).\n\n# k == 1 \u306e\u3068\u304d\u306f M[i] == 1\nM = {i: 1 for i in chain(P, range(1, P[-1]))}\n\n# M2[i] - M[i] at k\n# M2[i] = sum(M[j] for j such that 1 <= j <= N \/\/ i)\n#       = M2[m] + sum(M[j] for j such that N\/\/m < j <= N\/\/i) (some m > i)\nfor k in range(2, K + 2):\n    M2 = {}\n    M2[N] = M[1]\n    for m, i in zip(P, P[1:]):\n        M2[i]  = M2[m] + sum(M[j] for j in range(N \/\/ m + 1, N \/\/ i + 1))\n        M2[i] %= modulo\n    for i in range(P[-1] - 1, 0, -1):\n        M2[i]  = M2[i + 1] + M[N \/\/ i] * (N \/\/ i - N \/\/ (i + 1))\n        M2[i] %= modulo\n    M = M2\n\nprint(M[1])\n","n,k = map(int, input().split())\nmod = 10**9 + 7\n\nnums = set()\nd = {}\nfor i in range(1,10**6):\n    a = n\/\/i\n    b = 1 + n\/\/(i+1)\n    d[i] = a\n    nums.add(i)\n    nums.add(a)\n    if(i >= b):\n        break\n    d[b] = i\n    nums.add(b)\n\nd = sorted(d.items())\n\ndic_en = {}\ndic_de = {}\nnums = sorted(list(nums))\ncnt = [0] * len(nums)\ndone = 0\nfor i,num in enumerate(nums):\n    dic_en[num] = i\n    dic_de[i] = num\n    cnt[i] = num - done\n    done = num\n\nd = []\nfor num in nums:\n    d.append((dic_en[num],  dic_en[n\/\/num]))\n\nop = cnt[::]\n\ndef update(op):\n    n = len(nums)\n    res = [0] * (n+1)\n    for a,b in d:\n        res[0] += op[a]\n        res[b+1] -= op[a]\n    res[0] %= mod\n    for i in range(1,n):\n        res[i] += res[i-1]\n        res[i] %= mod\n    for i in range(n):\n        res[i] *= cnt[i]\n        res[i] %= mod\n    return res[:-1]\n\nfor i in range(k-1):\n    op = update(op)\n\nans = sum(op) % mod\n\nprint(ans)","import math\nN, K = map(int, (input().split()))\n\nmod = 10**9 + 7\n\nans_array = []\ndivide_max = N\ndivide_count = []\n\nfor i in range(2, math.floor(math.sqrt(N)) + 2):\n    divide = math.floor(N \/ i)\n    ans_array.append(divide_max - divide)\n    divide_count.append(divide_max - divide)\n    divide_max = divide\n\nfor i in range(divide):\n    ans_array.append(1)\nans_array = ans_array[::-1]\n# print(ans_count)\nans_length = len(ans_array)\nans_acc = [0] * ans_length\n\nfor k in range(2, K + 1):\n    ans_acc[0] = ans_array[0]\n    for i in range(1, ans_length):\n        ans_acc[i] = (ans_acc[i - 1] + ans_array[i]) % mod\n    # print(ans_array)\n    # print(ans_acc)\n    for i in range(divide):\n        ans_array[i] = ans_acc[ans_length - i - 1]\n    for i in range(divide, ans_length):\n        ans_array[i] = ans_acc[ans_length - i - 1] * divide_count[\n            ans_length - 1 - i] % mod\n\nans_acc[0] = ans_array[0]\nfor i in range(1, ans_length):\n    ans_acc[i] = (ans_acc[i - 1] + ans_array[i]) % mod\n\nprint(ans_acc[-1])","import sys\ndef MI(): return map(int,sys.stdin.readline().rstrip().split())\n\nN,K = MI()\nmod = 10**9+7\n\nB = [i for i in range(int(N**.5)+1)]\nC = [N\/\/i for i in range(1,int(N**.5)+1)]\nC.reverse()\n\nif B[-1] == C[0]:\n    del C[0]\n\nD = B+C\nA = [D[i+1]-D[i] for i in range(len(D)-1)]\na = len(A)\ndp = [[0]*a for _ in range(K)]\nfor i in range(K):\n    if i == 0:\n        for j in range(a):\n            if j == 0:\n                dp[i][j] = A[j]\n            else:\n                dp[i][j] = dp[i][j-1] + A[j]\n                dp[i][j] %= mod\n    else:\n        for j in range(a):\n            if j == 0:\n                dp[i][j] = dp[i-1][a-j-1]\n            else:\n                dp[i][j] = dp[i][j-1] + dp[i-1][a-j-1]*A[j]\n                dp[i][j] %= mod\n\nprint(dp[-1][-1])\n","N,K=map(int,input().split())\nif N==1:\n    print(1)\n    exit()\nmod=10**9+7\nLayer=[]\na=1\nb=1\nwhile(b<N):\n    a=b\n    b=N\/\/(N\/\/a)+1\n    Layer.append((a,b))\n#print(Layer)\nnum=[x[1]-x[0] for x in Layer]\nM=len(Layer)\n#print(num)\ndp=[[0 for j in range(M+1)] for i in range(K+1)]\ndp[0][0]=1\nsdp=[0 for i in range(M+2)]\nfor k in range(K):\n    for j in range(M+1):\n        sdp[j+1]=(dp[k][j]+sdp[j])%mod\n    for j in range(M):\n        dp[k+1][j]=(sdp[M-j]*num[j])%mod\nans=0\nfor j in range(M+1):\n    ans+=dp[K][j]\n    ans%=mod\nprint(ans)\n","MOD=10**9+7\nn,k=map(int,input().split())\nt=[]#\uff54\uff1dn\/\/j\u306e\u7a2e\u985e\u3092\u6570\u3048\u308b\u306e\u306b\u4f7f\u3046\nt_cnt=[]#t\u3068\u306a\u308bj\u306e\u500b\u6570\n\nfor i in range(1,n+1):\n  tmp=n\/\/i\n  if tmp not in t:\n    t.append(tmp)\n    t_cnt.append(1)\n  else:\n    t_cnt[-1]+=1\n#print(t,t_cnt)\n\nm = len(t)\nans = [[0]*m for i in range(k)]\ns_ans = [0]*m #\u7d2f\u7a4d\u548c\u7528\n\nfor i in range(m):\n  ans[0][i] = t_cnt[i]\nfor i in range(1,k):\n  s_ans[0] = ans[i-1][0]\n  for j in range(1,m):\n    s_ans[j] = s_ans[j-1] + ans[i-1][j]\n  #print(s_ans)\n  for j in range(m):\n    ans[i][j] = s_ans[-1-j] * t_cnt[j]\n#print(ans)\n\nx = 0\nfor i in range(m):\n  x += ans[-1][i]%MOD\nprint(x)","def examA():\n    N = DI()\/dec(7)\n    ans = N\n    print(N)\n    return\n\ndef examB():\n    ans = 0\n    print(ans)\n    return\n\ndef examC():\n    ans = 0\n    print(ans)\n    return\n\ndef examD():\n    ans = 0\n    print(ans)\n    return\n\ndef examE():\n    ans = 0\n    print(ans)\n    return\n\ndef examF():\n    N, K = LI()\n    n = int(N**0.5)\n    C = [] # N\/\/j=index\u3068\u306a\u308bj\u306e\u500b\u6570\n    L = [0]*(2*int(n)) # N\/\/index\u306e\u89e3 =>\u8981\u308a\u307e\u305b\u3093\u3002\u3002\n    for i in range(1,n+1):\n        now = N\/\/i - N\/\/(i+1)\n        C.append(now)\n    for i in range(1,n+1):\n        if N\/\/i==i:\n            continue\n        C.append(1)\n    C.reverse()\n    #print(C)\n    n = len(C)\n    #for i in range(1,n+1):\n    #    L[i-1] = N\/\/i\n    #for i in range(n):\n    #    L[i+n] = n - i\n    #L.reverse()\n    #print(L)\n    dp = [[0]*(n) for _ in range(K)]\n\n    for i in range(n):\n        dp[0][i] = C[i]\n    #print(dp[0])\n    for i in range(K-1):\n        S = 0\n        for j in range(n):\n            S += dp[i][j]\n            S %= mod\n            dp[i+1][n-j-1] = S*C[n-j-1] %mod\n    #print(dp)\n    ans = 0\n    for s in dp[-1]:\n        ans += s\n        ans %= mod\n    print(ans)\n    return\n\nfrom decimal import getcontext,Decimal as dec\nimport sys,bisect,itertools,heapq,math,random\nfrom copy import deepcopy\nfrom heapq import heappop,heappush,heapify\nfrom collections import Counter,defaultdict,deque\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\ndef I(): return int(input())\ndef LI(): return list(map(int,sys.stdin.readline().split()))\ndef DI(): return dec(input())\ndef LDI(): return list(map(dec,sys.stdin.readline().split()))\ndef LSI(): return list(map(str,sys.stdin.readline().split()))\ndef LS(): return sys.stdin.readline().split()\ndef SI(): return sys.stdin.readline().strip()\nglobal mod,mod2,inf,alphabet,_ep\nmod = 10**9 + 7\nmod2 = 998244353\ninf = 10**18\n_ep = dec(\"0.000000000001\")\nalphabet = [chr(ord('a') + i) for i in range(26)]\nalphabet_convert = {chr(ord('a') + i): i for i in range(26)}\n\ngetcontext().prec = 28\n\nsys.setrecursionlimit(10**7)\n\nif __name__ == '__main__':\n    examF()\n\n\"\"\"\n142\n12 9 1445 0 1\nasd dfg hj o o\naidn\n\"\"\"","\nimport sys\ndef input():\n\treturn sys.stdin.readline().strip()\n\nN, K = list(map(int, input().split()))\n\nrootN = int(N**0.5)\nnum_list = [1]*rootN\n\nnow = rootN\nfor num in range(rootN, 0, -1):\n\tx = N\/\/num\n\tnum_list.append(x - now)\n\tnow = x\n\ndp = [[0]*len(num_list) for i in range(K)]\nfor i in range(len(num_list)):\n\tdp[0][i] = num_list[i]\n\n\nmod = 10**9 + 7\nfor k in range(1, K):\n\tsum_before = [dp[k - 1][0]]\n\tfor i in range(1, len(num_list)):\n\t\tsum_before.append(sum_before[-1]+dp[k - 1][i])\n\tfor i in range(len(num_list)):\n\t\tdp[k][i] = (num_list[i]*sum_before[len(num_list) - 1 - i])%mod\n\nprint(sum(dp[-1])%mod)","from math import sqrt\nn, k = map(int, input().split())\nMOD = 10**9 + 7\nmax1 = int(sqrt(n))\ndp1 = [[0 for _ in range(max1+1)] for _ in range(k)]\nfor j in range(1, max1+1):\n\tdp1[0][j] = 1\nmax2 = int(n\/(max1+1))\ndp2 = [[0 for _ in range(max2+1)] for _ in range(k)]\nfor j in range(1, max2+1):\n\tdp2[0][j] = int(n\/j) - int(n\/(j+1))\n\nfor i in range(k-1):\n\tcsum1 = (sum(dp1[i])+sum(dp2[i])) % MOD\n\tdp1[i+1][1] = csum1\n\tfor j in range(2, max1+1):\n\t\tdp1[i+1][j] = (dp1[i+1][j-1] - dp2[i][j-1]) % MOD\n\tcsum2 = sum(dp1[i][:max2+1]) % MOD\n\tdp2[i+1][max2] = (csum2*dp2[0][max2]) % MOD\n\tfor j in range(max2-1, 0, -1):\n\t\tcsum2 -= dp1[i][j+1]\n\t\tcsum2 %= MOD\n\t\tdp2[i+1][j] = (csum2*dp2[0][j]) % MOD\n\nprint((sum(dp1[k-1])+sum(dp2[k-1]))%MOD)","hoge = input().split()\nN = int(hoge[0])\nK = int(hoge[1])\n\nif K == 2:\n  print(int((N*K-1) % (1e9 + 7)))\nelse:\n  hage = round(N \/ 2 - 0.5 + 0.01)\n  print(int((pow(K,K) * hage + (hage-1)*K) % (1e9 + 7)))","\n\"\"\"\n\u53f3\u306b\u304a\u3051\u308b\u306e\u304c\u540c\u3058\u3084\u3064\u306a\u3089\u540c\u4e00\u3067\u6271\u3046\n\u666e\u901a\u306a\u3089\u221aN * \u221aN\u306b\u306a\u3063\u3061\u3083\u3046\n\n\n\"\"\"\n\nN,K = map(int,input().split())\nmod = 10 ** 9 + 7\n\nlis = []\nlis2 = []\n\ni = 1\nwhile i ** 2 <= N:\n\n    if N \/\/ i != i:\n        lis.append(i)\n        lis2.append(N \/\/ i)\n    else:\n        lis.append(i)\n\n    i += 1\n\nlis2.reverse()\nlis += lis2\n\n\ndp = [0] * len(lis)\n\nfor i in range(len(lis)):\n    if i == 0:\n        dp[i] = 1\n    else:\n        dp[i] = lis[i]-lis[i-1]\n\n#print (dp)\n\nfor loop in range(K):\n\n    ndp = [0] * len(lis)\n    nsum = 0\n    \n    for i in range((len(lis))):\n\n        nsum += dp[i]\n        nsum %= mod\n\n        if i != len(lis)-1:\n            ndp[-1-i] += ((lis[-1-i] - lis[-2-i]) * nsum) % mod\n        else:\n            ndp[-1-i] += nsum % mod\n\n    dp = ndp\n\nprint (dp[0])","N, K = map(int, input().split())\nmod = 10**9+7\nn = int(N**0.5)\ndp1 = [[0]*(n+1) for _ in range(K)]\ndp2 = [[0]*(n+1) for _ in range(K)]\nfor i in range(1, n+1):\n    dp1[0][i] = 1\ndp2[0][n] = N\/\/n-n\nfor i in range(1, n):\n    dp2[0][i] = (N\/\/i-N\/\/(i+1))%mod\nfor i in range(1, K):\n    cum = 0\n    for j in range(1, n+1):\n        dp2[i][j] = ((dp1[i-1][j]+cum)%mod*dp2[0][j])%mod\n        cum+=dp1[i-1][j]\n        cum%=mod\n    for j in range(1, n+1)[::-1]:\n        dp1[i][j] = (cum+dp2[i-1][j])%mod\n        cum+=dp2[i-1][j]\n        cum%=mod\nprint((sum(dp1[-1])%mod+sum(dp2[-1])%mod)%mod)","N,K = map(int, input().split())\n# As = [N\/\/i for i in range(1,int(N**0.5)+1)]\n# Bs = [As[i]-As[i+1] for i in range(len(As)-1)]\n# Bs[0] -= 1\n# Bs = sorted(Bs) + [1]\nAs = [] \nfor i in range(1,int(N**0.5)+1):\n    As.append(i)\n    if N\/\/i != i:\n        As.append(N\/\/i)\nAs = sorted(As,reverse=False)\nnums = []\nfor i in range(len(As)-1):\n    nums.append(As[i+1]-As[i])\nnums = [1] + nums\nnums.reverse()\nmod = 10**9 + 7\nans = 0\ndp = [[0] * len(As) for i in range(K+1)]\n\n\nfrom itertools import accumulate\n# print(As,nums)\ndp[0][0] = 1\nfor i in range(K):\n    # 1\u3060\u3068\u5168\u901a\u308a\u5206\u304c\u6210\u308a\u7acb\u3064\u3057\u3001N\u3060\u30681\u901a\u308a\u3002\n    # \u305d\u308c\u305e\u308c\u7a2e\u5225\u306b\u307e\u3068\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3089\u3092\u304b\u3051\u308b\n    acc = list(accumulate(dp[i]))\n    for j in range(len(As)):\n        dp[i+1][len(As)-j-1] = acc[j]*nums[j]%mod\nprint(sum(dp[K])%mod)\n","from itertools import accumulate\nn,k = map(int,input().split())\nx = int(n**0.5)\nmod = 10**9+7\nif x*(x+1)<=n:\n  flg = 1\nelse:\n  flg = 0\nt = 2*x+flg\ndp = [[0 for i in range(t)] for j in range(2)]\nfor i in range(1,t):\n  if i<=x:\n    dp[0][i] = 1\n    dp[1][i] = 1\n  else:\n    p = t-i\n    dp[0][i] = n\/\/p-n\/\/(p+1)\n    dp[1][i] = n\/\/p-n\/\/(p+1)\ndp[1] = list(accumulate(dp[1]))\nfor i in range(2,k+1):\n  dp[1][1:] = dp[1][t:0:-1]\n  for j in range(1,t):\n    dp[1][j] = dp[1][j]*dp[0][j]%mod\n  for j in range(1,t):\n    dp[1][j] = (dp[1][j]+dp[1][j-1])%mod\nprint(dp[1][t-1])","from itertools import accumulate\n\nMOD = 10**9 + 7\n\nN, K = map(int, input().split())\n\ndef N2sqrtN(N):\n    M = int(N**0.5)\n    As = list(range(1, M+1))\n    Bs = [N\/\/A for A in reversed(As)]\n    if As[-1] == Bs[0]:\n        return As + Bs[1:]\n    else:\n        return As + Bs\n\nBs = N2sqrtN(N)\nlenB = len(Bs)\n\nnums = [1]\nfor i in range(lenB-1):\n    nums.append(Bs[i+1]-Bs[i])\n\ndp = [0] * lenB\ndp[0] = 1\nfor i in range(1, K+1):\n    dp = list(accumulate(dp))\n    dp = [dpi*num%MOD for dpi, num in zip(reversed(dp), nums)]\n\nprint(sum(dp) % MOD)\n","n,k=map(int,input().split())\na=int(n**0.5)\nmod=10**9+7\nl=[0]*(a+1)\nfor i in range(a,0,-1):\n    l[i]=i\n    l.append(n\/\/i)\nfor i in range(1,2*a+1):\n    l[-i]=l[-i]-l[-i-1]\ndp=[l]+[[0]*(2*a+1) for i in range(k-1)]\nfor i in range(1,k):\n    t=0\n    for j in range(1,2*a+1):\n        t+=dp[i-1][j]\n        t%=mod\n        dp[i][-j]=t*l[-j]%mod\nans=0\nfor i in dp[-1][1:]:\n    ans+=i\n    ans%=mod\nprint(ans)","def calc_floors(N):\n    # floor(N \/ n) (n = 1, ..., N) \u306e\u3068\u308a\u3046\u308b\u5024\u3068\n    # \u5404floor\u306e\u5024\u3092\u4e0e\u3048\u308bn\u306e\u7bc4\u56f2\uff08\u9589\u533a\u9593\uff09\u3092\u8fd4\u3059\n    n_values = list()\n    n_ranges = list()\n    k = 1\n    while k <= N:\n        # k = floor(N \/ n)  <-->  N\/(k+1) < n <= N\/k\n        # N\/(k+1)\u3088\u308a\u5927\u304d\u3044\u6700\u5c0f\u306e\u6574\u6570\u306f(N + k + 1) \/\/ (k + 1)\n        left, right = (N + k + 1) \/\/ (k + 1), N \/\/ k\n        n_values.append(k)\n        n_ranges.append((left, right))\n        if left == 1:\n            break\n        k = N \/\/ (left - 1)\n    return n_values, n_ranges\n\n\ndef main():\n    MOD = 10 ** 9 + 7\n    N, K = list(map(int, input().split()))\n    n_values, n_ranges = calc_floors(N)\n    # dp[k][i]: k\u500b\u76ee\u307e\u3067\u3067\u984c\u610f\u3092\u6e80\u305f\u3059\uff06\u4e00\u756a\u53f3\u306e\u6570\u304c\u533a\u5206i\u306e\u7bc4\u56f2\u306b\u5165\u308b\u3088\u3046\u306a\u6574\u6570\u306e\u7d44\u306e\u500b\u6570\n    dp = [[0 for _ in range(len(n_values))] for _ in range(K)]\n    dp[0][0] = n_values[0]\n    for i in range(1, len(n_values)):\n        dp[0][i] = n_values[i] - n_values[i - 1]\n    dp[0].reverse()\n    for k in range(1, K):\n        # dp\u306e\u7d2f\u7a4d\u548c\uff08\u5f8c\u308d\u304b\u3089\u9806\u306b\uff09\n        csdp = [0 for _ in range(len(n_values))]\n        csdp[len(n_values) - 1] = dp[k - 1][len(n_values) - 1]\n        for i in range(len(n_values) - 2, -1, -1):\n            csdp[i] = csdp[i + 1] + dp[k - 1][i]\n        # dp\u306e\u66f4\u65b0\n        for i in range(len(n_values)):\n            v = csdp[len(n_values) - i - 1] * (n_ranges[i][1] - n_ranges[i][0] + 1)\n            dp[k][i] = v % MOD\n    ans = 0\n    for i in range(len(n_values)):\n        ans += dp[K - 1][i]\n        ans %= MOD\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()","# using main() makes code faster from the point of view of \"access to variables in global name-space\"\n# def main():\n\n\"\"\" convenient functions\n# for i, a in enumerate(iterable)\n# q, mod = divmod(a, b)\n# divmod(x, y) returns the tuple (x\/\/y, x%y)\n# manage median(s) using two heapq https:\/\/atcoder.jp\/contests\/abc127\/tasks\/abc127_f\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(10**7)\nfrom itertools import accumulate, combinations, permutations, product # https:\/\/docs.python.org\/ja\/3\/library\/itertools.html\n# accumulate() returns iterator! to get list: list(accumulate())\nfrom math import factorial, ceil, floor\ndef factorize(n):\n    \"\"\"return the factors of the Arg and count of each factor\n    \n    Args:\n        n (long): number to be resolved into factors\n    \n    Returns:\n        list of tuples: factorize(220) returns [(2, 2), (5, 1), (11, 1)]\n    \"\"\"\n    fct = []  # prime factor\n    b, e = 2, 0  # base, exponent\n    while b * b <= n:\n        while n % b == 0:\n            n = n \/\/ b\n            e = e + 1\n        if e > 0:\n            fct.append((b, e))\n        b, e = b + 1, 0\n    if n > 1:\n        fct.append((n, 1))\n    return fct\ndef combinations_count(n, r):\n    \"\"\"Return the number of selecting r pieces of items from n kinds of items.\n    \n    Args:\n        n (long): number\n        r (long): number\n    \n    Raises:\n        Exception: not defined when n or r is negative\n    \n    Returns:\n        long: number\n    \"\"\"\n    # TODO: How should I do when n - r is negative?\n    if n < 0 or r < 0:\n        raise Exception('combinations_count(n, r) not defined when n or r is negative')\n    if n - r < r: r = n - r\n    if r < 0: return 0\n    if r == 0: return 1\n    if r == 1: return n\n    numerator = [n - r + k + 1 for k in range(r)]\n    denominator = [k + 1 for k in range(r)]\n    for p in range(2,r+1):\n        pivot = denominator[p - 1]\n        if pivot > 1:\n            offset = (n - r) % p\n            for k in range(p-1,r,p):\n                numerator[k - offset] \/= pivot\n                denominator[k] \/= pivot\n    result = 1\n    for k in range(r):\n        if numerator[k] > 1:\n            result *= int(numerator[k])\n    return result\ndef combinations_with_replacement_count(n, r):\n    \"\"\"Return the number of selecting r pieces of items from n kinds of items allowing individual elements to be repeated more than once.\n    \n    Args:\n        n (long): number\n        r (long): number\n    \n    Raises:\n        Exception: not defined when n or r is negative\n    \n    Returns:\n        long: number\n    \"\"\"\n    if n < 0 or r < 0:\n        raise Exception('combinations_with_replacement_count(n, r) not defined when n or r is negative')\n    elif n == 0:\n        return 1\n    else:\n        return combinations_count(n + r - 1, r)\nfrom bisect import bisect_left, bisect_right\nfrom collections import deque, Counter, defaultdict # https:\/\/docs.python.org\/ja\/3\/library\/collections.html#collections.deque\nfrom heapq import heapify, heappop, heappush, heappushpop, heapreplace,nlargest,nsmallest # https:\/\/docs.python.org\/ja\/3\/library\/heapq.html\nfrom copy import deepcopy, copy # https:\/\/docs.python.org\/ja\/3\/library\/copy.html\nfrom operator import itemgetter\n# ex1: List.sort(key=itemgetter(1))\n# ex2: sorted(tuples, key=itemgetter(1,2))\nfrom functools import reduce\ndef chmin(x, y):\n    \"\"\"change minimum\n    if x > y, x = y and return (x, True).\n    convenient when solving problems of dp[i]\n    \n    Args:\n        x (long): current minimum value\n        y (long): potential minimum value\n    \n    Returns:\n        (x, bool): (x, True) when updated, else (x, False)\n    \"\"\"\n    if x > y:\n        x = y\n        return (x, True)\n    else:\n        return (x, False)\ndef chmax(x, y):\n    \"\"\"change maximum\n    if x < y, x = y and return (x, True).\n    convenient when solving problems of dp[i]\n    \n    Args:\n        x (long): current maximum value\n        y (long): potential maximum value\n    \n    Returns:\n        (x, bool): (x, True) when updated, else (x, False)\n    \"\"\"\n    if x < y:\n        x = y\n        return (x, True)\n    else:\n        return (x, False)\n\nfrom fractions import gcd # Deprecated since version 3.5: Use math.gcd() instead.\ndef gcds(numbers):\n    return reduce(gcd, numbers)\ndef lcm(x, y):\n    return (x * y) \/\/ gcd(x, y)\ndef lcms(numbers):\n    return reduce(lcm, numbers, 1)\n\n# first create factorial_list\n# fac_list = mod_factorial_list(n)\nINF = 10 ** 18\nMOD = 10 ** 9 + 7\nmodpow = lambda a, n, p = MOD: pow(a, n, p) # Recursive function in python is slow!\ndef modinv(a, p = MOD):\n    # evaluate reciprocal using Fermat's little theorem:\n    # a**(p-1) is identical to 1 (mod p) when a and p is coprime\n    return modpow(a, p-2, p)\ndef modinv_list(n, p = MOD):\n    if n <= 1:\n        return [0,1][:n+1]\n    else:\n        inv_t = [0,1]\n        for i in range(2, n+1):\n            inv_t += [inv_t[p % i] * (p - int(p \/ i)) % p]\n        return inv_t\ndef modfactorial_list(n, p = MOD):\n    if n == 0:\n        return [1]\n    else:\n        l = [0] * (n+1)\n        tmp = 1\n        for i in range(1, n+1):\n            tmp = tmp * i % p\n            l[i] = tmp\n        return l\ndef modcomb(n, k, fac_list = [], p = MOD):\n    # fac_list = modfactorial_list(100)\n    # print(modcomb(100, 5, modfactorial_list(100)))\n    from math import factorial\n    if n < 0 or k < 0 or n < k: return 0\n    if n == 0 or k == 0: return 1\n    if len(fac_list) <= n:\n        a = factorial(n) % p\n        b = factorial(k) % p\n        c = factorial(n-k) % p\n    else:\n        a = fac_list[n]\n        b = fac_list[k]\n        c = fac_list[n-k]\n    return (a * modpow(b, p-2, p) * modpow(c, p-2, p)) % p\ndef modadd(a, b, p = MOD):\n    return (a + b) % MOD\ndef modsub(a, b, p = MOD):\n    return (a - b) % p\ndef modmul(a, b, p = MOD):\n    return ((a % p) * (b % p)) % p\ndef moddiv(a, b, p = MOD):\n    return modmul(a, modpow(b, p-2, p))\n\n\"\"\" initialize variables and set inputs\n# initialize variables\n    # to initialize list, use [0] * n\n    # to initialize two dimentional array, use [[0] * N for _ in range(N)]\n# set inputs\n    # open(0).read() is a convenient method:\n    # ex) n, m, *x = map(int, open(0).read().split())\n    #     min(x[::2]) - max(x[1::2])\n    # ex2) *x, = map(int, open(0).read().split())\n    #     don't forget to add comma after *x if only one variable is used\n# preprocessing\n    # transpose = [x for x in zip(*data)]\n    # ex) [[1, 2, 3], [4, 5, 6], [7, 8, 9]] => [(1, 4, 7), (2, 5, 8), (3, 6, 9)]\n    # flat = [flatten for inner in data for flatten in inner]\n    # ex) [[1, 2, 3], [4, 5, 6], [7, 8, 9]] => [1, 2, 3, 4, 5, 6, 7, 8, 9]\n# calculate and output\n    # output pattern\n    # ex1) print(*l) => when l = [2, 5, 6], printed 2 5 6\n\"\"\"\n\n# functions used\nr = lambda: sys.stdin.readline().strip()\nr_int = lambda: int(r())\nR = lambda: list(map(int, r().split()))\nRfloat = lambda: list(map(float, r().split()))\nRtuple = lambda: tuple(map(int, r().split()))\nRmap = lambda: map(int, r().split())\n\n\"\"\" how to treat input\n# single int: int(r())\n# single string: r()\n# single float: float(r())\n# line int: R()\n# line string: r().split()\n# line (str, int, int): [j if i == 0 else int(j) for i, j in enumerate(r().split())]\n# lines int: [R() for _ in range(n)]\n\"\"\"\n\n# for test\n# sys.stdin = open('sample.txt') \n\n# ----------------------------------\n# main\nN, K = R()\n\ndvd = [0] * N\ndvd_cnt = [0] * N\ncount = -1\n# define group\nfor i in range(1, N+1):\n    if dvd[count] != N \/\/ i:\n        count += 1\n        dvd[count] = N \/\/ i        \n    dvd_cnt[count] += 1\nelse:\n    dvd = dvd[:count+1]\n    dvd_cnt = dvd_cnt[:count+1]\n    acc_cnt = list(accumulate(dvd_cnt))\n    dvdlen = count+1\n    dvd_prod = [0] * dvdlen\n\nfor i in range(dvdlen):\n    count = 0\n    target = dvd[i]\n    for j in range(dvdlen):\n        if target * dvd[dvdlen-1-j] <= N:\n            count += 1\n        else:\n            dvd_prod[i] = count\n            break\n    else:\n        dvd_prod[i] = count\n\ndp = [[0] * K for _ in range(dvdlen)]\nfor j in range(dvdlen):\n    dp[j][0] = dvd_cnt[j]\n    \nfor j in range(1, K):\n    for i in range(dvdlen):\n        for k in range(dvd_prod[dvdlen-1-i]):\n            dp[i][j] += dp[k][j-1]\n        else:\n            dp[i][j] *= dvd_cnt[i]\n            dp[i][j] %= MOD\nprint(sum([dp[i][K-1] for i in range(dvdlen)]) % MOD)\n\n# end of main\n# ----------------------------------\n\n\"\"\"memo: how to use defaultdict of list\n# initialize\nDic = defaultdict(list)\n# append \/ extend\nDic[x].append(y)\n# for\nfor k, v in Dic.items():\n\"\"\"\n\n# if __name__ == '__main__':\n#     main()","N,K = map(int, input().split())\n\nL = [N]\nc = 2\nwhile c < N**0.5:\n    if L[-1] != N\/\/c:\n        L.append(N\/\/c)\n    c += 1\nif c > N**0.5:\n    c -= 1\n    L.append(c)\nelse:\n    L.append(c)\n\n\nL.reverse()\ndp = [[0 for j in range(c+len(L))] for i in range(K+1)]\n\nfor j in range(1, c+1):\n    dp[2][j] = N\/\/j\nfor j in range(1, len(L)):\n    dp[2][j+c] = N\/\/L[j]*(L[j]-L[j-1])\n\nfor i in range(2, K):\n    dp[i+1][1] = sum(dp[i])\n    for j in range(2, c+len(L)):\n        dp[i+1][j] = dp[i+1][j-1]-dp[i][len(dp[0])+1-j]\n        if j > c:\n            dp[i+1][j] *= (L[j-c]-L[j-c-1])\n#    for j in range(1, len(L)):\n#        dp[i+1][j+c] *= (L[j]-L[j-1])\n        \n\nprint(sum(dp[K])%(10**9+7))","import sys\ninput = sys.stdin.readline\nN, K = map(int, input().split())\nP = 110000\nMOD = 10 ** 9 + 7\nS = [0] * P\ndp = [[0] * P for i in range(110)]\nnum = [0] * P\ni = 1\nt = 0\nwhile i <= N:\n    j = N \/\/ i\n    if i <= j:\n        num[t] = 1\n        t += 1\n        i += 1\n    else:\n        num[t] = N \/\/ j - i + 1\n        i = N \/\/ j + 1\n        t += 1\n\n\ndp[0][0] = 1\nfor k in range(K):\n    S = [0] * P\n    for j in range(t + 1):\n        S[j + 1] = S[j] + dp[k][j]\n        S[j + 1] %= MOD\n    for j in range(t):\n        dp[k + 1][j] = S[t - j] * num[j]\n        dp[k + 1][j] %= MOD\n\nans = 0\nfor i in range(t + 1):\n    ans += dp[K][i]\n    ans %= MOD\nprint(ans)\n\n","mod=1000000007\nn,k=map(int,input().split())\ns=int(n**0.5)\nNum=[0]*(s+1)\nfor i in range(s,0,-1):\n    Num[i]=i\n    Num.append(n\/\/i)\nl=len(Num)\nfor i in range(1,l):\n    Num[-i]=Num[-i]-Num[-i-1]\nDP=[[0]*l for _ in range(k)]\nDP[0]=Num[:]\nfor i in range(1,k):\n    tmp=0\n    for j in range(1,l):\n        tmp+=DP[i-1][j]\n        tmp%=mod\n        DP[i][-j]=(tmp*Num[-j])%mod\nans=0\nfor i in DP[-1][1:]:\n    ans+=i\n    ans%=mod\nprint(ans)","# from https:\/\/atcoder.jp\/contests\/abc132\/submissions\/6187293\n\ndef main():\n    N, K = map(int, input().split())\n\n    MOD = 10 ** 9 + 7\n    r = int(N ** 0.5 + 1)\n    z = [i for i in range(r)] + [N \/\/ i for i in range(1, r)][::-1]\n    m = len(z)\n    pre = [0] + [1] * (m - 1)\n    for _ in range(1, K+1):\n        dp = [0] * m\n        for i in range(1, m):\n            dp[i] = (dp[i-1] + pre[m-i] * (z[i] - z[i-1])) % MOD\n        pre = dp\n    print(dp[-1])\n\n\nmain()","N, K = list(map(int, input().split()))\n\nimport collections\npairs = collections.Counter()\nfor n in range(1, N +1):\n    pairs[n] = N \/\/ n\n\nans = 0\nfor n in range(1, N+1):\n    candidates = [pairs[n]]\n    for _ in range(K-1):\n        new_candidates  = []\n        for c in candidates:\n            for k in range(1, c+1):\n                new_candidates.append(pairs[k])\n        candidates = new_candidates\n    ans += len(candidates)\nprint(ans)","N, K = map(int, input().split())\nConst = []\npc = N\nfor i in range(1, 3200):\n    c = N\/\/i\n    if pc>i-1:\n        Const.append(pc - c)\n    if i*i>N:\n        sqrtN = i-1\n        break\n    pc = c\n#if sqrtN*sqrtN!=N:\n#    Const[-1] -= 1\n\nlen_dp = sqrtN + len(Const)\ndp = [[0]*(len_dp) for _ in range(K)]\ndp0 = dp[0]\n\n\nfor i in range(1, sqrtN+1):\n    dp0[i] = 1\n    if i<len(Const):\n        dp0[-i] = Const[i]\n\ncum_dp0 = []\nc = 0\nfor v in dp0:\n    c += v\n    cum_dp0.append(c)\nmod = 10**9+7\ndp_old = cum_dp0\nfor _ in range(K-1):\n    print(dp_old)\n    dp = [0]*(2*sqrtN+2)\n    for i in range(1,len_dp):\n        dp[i] = dp_old[-i] + dp[i-1] % mod\n        if i > sqrtN:\n            dp[i] *= Const[-(i-sqrtN)]\n            print(Const[-(i-sqrtN)])\n            dp[i] %= mod\n    dp_old = dp\nprint(dp)\n","N, K = map(int, input().split())\n\ndp = [[0]*(N+1) for _ in range(K+1)]\ndp[1] = [1]*(N+1)\n\nfor i in range(K):\n    for j in range(1, N+1):\n        for k in range(1, (N\/\/j)+1):\n            dp[i+1][k] += dp[i][j]\n\nprint(sum(dp[-1]))\n","import sys\ninput = sys.stdin.readline\nimport numpy as np\nMOD = 10**9+7\n  \nn, k = map(int, input().split())\nS = set()\ni = 1\nwhile i * i <= n:\n  S.add(i)\n  S.add(n\/\/i)\n  i += 1\nL = np.array([0] + sorted(S), dtype=np.int64)\nl = len(L) - 1\nnum = np.diff(L)\ndp = np.zeros(l, dtype=np.int64)\ndp[0] = 1\nfor _ in range(k):\n  A = np.cumsum(dp)\n  dp = A[::-1] * num\n  dp %= MOD\nans = dp.sum() % MOD\nprint(ans)","import bisect\nimport heapq\nimport sys\nimport itertools\nimport queue\n\n\ninput = sys.stdin.readline\nsys.setrecursionlimit(100000)\nmod = 10 ** 9 + 7\n\n\nclass V:\n    def __init__(self, f):\n        self.f = f\n        self.v = None\n\n    def __str__(self):\n        return str(self.v)\n\n    def ud(self, n):\n        if self.v is None:\n            self.v = n\n        else:\n            self.v = self.f(self.v, n)\n\n    def get(self):\n        return self.v\n\n\ndef read_values():\n    return map(int, input().split())\n\n\ndef read_list():\n    return list(read_values())\n\n\ndef P(N):\n    D = []\n    for n in range(1, int(N ** 0.5) + 1):\n        D.append(n)\n        if N \/\/ n != n:\n            D.append(N \/\/ n)\n    D.sort()\n    return D\n\n\ndef main():\n    N, K = read_values()\n    D = P(N)\n    C = [(D[i] - D[i - 1]) % mod if i != 0 else D[i] for i, d in enumerate(D)]\n    dp = [0] * len(D)\n    S = [D] + [[0] * len(D) for k in range(K - 1)]\n    I = [bisect.bisect_left(D, N \/\/ d) for d in D]\n\n    for k in range(1, K):\n        for i in range(len(D)):\n            j = I[i]\n            dp[i] = (S[k - 1][j] * C[i]) % mod\n            S[k][i] = (S[k][i - 1] + dp[i]) % mod\n    print(S[-1][-1] % mod)\n\n\nif __name__ == \"__main__\":\n    main()\n","from math import sqrt\n\nN,K=map(int,input().split())\nmod=10**9+7\n\nm=int(sqrt(N))\nif N\/\/(m+1)==m:\n    dp=[[[0  for i in range(0,2)] for j in range(0,int(sqrt(N)))] for k in range(0,K+1)]\n\n    for i in range(0,int(sqrt(N))):\n        dp[1][i][1]=1\n        dp[1][i][0]=(N\/\/(i+1)-N\/\/(i+2))\n\n    for k in range(2,K+1):\n        s=0\n        for i in range(0,int(sqrt(N))):\n            s=(s+dp[k-1][i][1])%mod\n            dp[k][i][0]=(s*(N\/\/(i+1)-N\/\/(i+2)))%mod\n\n        for j in range(0,int(sqrt(N))):\n            i=int(sqrt(N))-j-1\n            s=(s+dp[k-1][i][0])%mod\n            dp[k][i][1]=s\n\n    ans=sum(dp[K][i][0]+dp[k][i][1] for i in range(0,int(sqrt(N))))%mod\n    print(ans)\n\nelse:\n    dp0=[[0 for i in range(0,int(sqrt(N))-1)] for k in range(0,K+1)]\n    dp1=[[0 for i in range(0,int(sqrt(N)))] for k in range(0,K+1)]\n\n    for i in range(0,int(sqrt(N))-1):\n        dp0[1][i]=(N\/\/(i+1)-N\/\/(i+2))\n        dp1[1][i]=1\n\n    dp1[1][-1]=1\n\n    for k in range(2,K+1):\n        s=0\n        for i in range(0,int(sqrt(N))-1):\n            s=(s+dp1[k-1][i])%mod\n            dp0[k][i]=(s*(N\/\/(i+1)-N\/\/(i+2)))%mod\n\n        s=(s+dp1[k-1][int(sqrt(N))-1])%mod\n        dp1[k][int(sqrt(N))-1]=s%mod\n        for j in range(1,int(sqrt(N))):\n            i=int(sqrt(N))-j-1\n            s=(s+dp0[k-1][i])%mod\n            dp1[k][i]=s\n\n    ans=sum(dp0[K][i]+dp1[K][i] for i in range(0,int(sqrt(N))-1))%mod\n    ans=(ans+dp1[K][-1])%mod\n\n    print(ans)\n","#include <bits\/stdc++.h>\n#define N 32768\n#define M 0x3B9ACA07LL\nlong long a[N]={},b[N],c[N]={},d[N];\n#define REP(i,n)for(int i=0;i<n;i++)\nint main(){\nint n,k; std::cin>>n>>k;\nfor(int i=1;i<N;i++)a[i]=std::min(i,n),b[i]=n\/i;\nREP(j,k-1){\nfor(int i=1;i<N;i++)c[i]=(c[i-1]+b[i])%M;\nd[N-1]=c[n\/(N-1)];\nfor(int i=N-2;i>=1;i--)d[i]=(d[i+1]+a[i]*(n\/i-n\/(i+1)))%M;\nstd::swap(a,c);\nstd::swap(b,d);\n}\nstd::cout<<b[1];\n}\n","import sys\ninput = sys.stdin.readline\nimport math\n\nmod = 10**9+7\nN, K = map(int, input().split())\nK -= 1\n\nP = set()\ninv = {}\nfor i in range(1, int(math.sqrt(N)+2)):\n    P.add(i)\n    P.add(N\/\/i)\n    if i not in inv:\n        inv[i] = N\/\/i\n    if N\/\/i not in inv:\n        inv[N\/\/i] = i\n\nP1 = sorted(list(P))\n\nT = len(P1)\n\nM = [1]\nfor i in range(T-1):\n    M.append(P1[i+1]-P1[i])\n\n\nco_to_ind = {}\nfor i, p in enumerate(P1):\n    co_to_ind[p] = i\n\nInv = []\nfor p in P1:\n    Inv.append(co_to_ind[inv[p]])\n\ndp = [[0]*T for _ in range(K+1)]\n\ndp[0] = M\n\nfor i in range(K):\n    tosum = [0]*T\n    for ik in range(T):\n        j = Inv[ik]\n        tosum[j] = (tosum[j] + dp[i][ik]) % mod\n\n    sumup = 0\n    for ik in reversed(range(T)):\n        sumup = (sumup + tosum[ik]) % mod\n        dp[i+1][ik] = sumup * M[ik] % mod\n\nans = 0\nfor t in range(T):\n    ans = (ans + dp[K][t]) % mod\n\nprint(ans)","n,k=map(int,input().split())\nmd=10**9+7\na=[]\npre=n\ncnt=0\nfor i in range(1,n+1):\n    j=n\/\/i\n    if j==pre:\n        cnt+=1\n    elif j==1:\n        a.append([pre,cnt])\n        a.append([1,n+1-i])\n        break\n    else:\n        a.append([pre,cnt])\n        cnt=1\n        pre=j\nm=len(a)\na=a[::-1]\ndp0=[a0*a1 for a0,a1 in a]\nfor _ in range(k-2):\n    s=0\n    dp1=[0]*m\n    for i,(a0,a1) in enumerate(a):\n       s+=dp0[m-1-i]\n       dp1[i]=s*a1\n    dp0=dp1\nprint(sum(dp0))\n","def limit(last,N):\n  return(int(N\/last))\n\ndef loop(last,remain,N):\n  su=0\n  if remain==0:\n    return(1)\n  else:\n    for i in range(int(N\/last)):\n      times=1\n      times=times*loop(i+1,remain-1,N)\n      su+=times\n  return(su)\n\n\nN,K=map(int,input().split())\nssu=loop(1,K,N)\nprint(ssu%1000000007)","import numpy as np\nN, K = map(int,input().split())\nMOD = 10**9+7\ndiv = list(range(1, int(np.sqrt(N))+1))\nL1 = len(div)\ndiv2 = [N\/\/val for val in div]\ndiv2.sort()\nif div[-1] == div2[0]:\n    div2.remove(div2[0])\nL2 = len(div2)\nL = L1+L2\nls = [1]*L1 + [0]*L2\ntmp = div[-1]\nfor i,val in enumerate(div2):\n    ls[i+L1] = val-tmp\n    tmp = val\ndp = [0]*L\ndp = np.zeros((L), dtype='int64')\nls = np.array(ls, dtype='int64')\ndp[:] = ls\nr = np.zeros(L+1, dtype='int64')\nr[:-1] = np.cumsum(dp, dtype='int64')[::-1]\nfor i in range(K-1):\n    dp = (r[:-1]*ls)%MOD\n    r[:-1] = np.cumsum(dp, dtype='int64')[::-1]\nprint(r[0]%MOD)\n"]}
{"description_html":"<span class=\"lang-en\">\n<p>Score: <var>200<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3>\n<p>We have a string <var>S<\/var> consisting of lowercase English letters.<\/p>\n<p>If the length of <var>S<\/var> is at most <var>K<\/var>, print <var>S<\/var> without change.<\/p>\n<p>If the length of <var>S<\/var> exceeds <var>K<\/var>, extract the first <var>K<\/var> characters in <var>S<\/var>, append <code>...<\/code> to the end of them, and print the result.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3>\n<ul>\n<li><var>K<\/var> is an integer between <var>1<\/var> and <var>100<\/var> (inclusive).<\/li>\n<li><var>S<\/var> is a string consisting of lowercase English letters.<\/li>\n<li>The length of <var>S<\/var> is between <var>1<\/var> and <var>100<\/var> (inclusive).<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3>\n<p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>K<\/var>\n<var>S<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3>\n<p>Print a string as stated in Problem Statement.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>7\nnikoandsolstice\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>nikoand...\n<\/pre>\n<p><code>nikoandsolstice<\/code> has a length of <var>15<\/var>, which exceeds <var>K=7<\/var>.<\/p>\n<p>We should extract the first <var>7<\/var> characters in this string, append <code>...<\/code> to the end of them, and print the result <code>nikoand...<\/code>.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>40\nferelibenterhominesidquodvoluntcredunt\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>ferelibenterhominesidquodvoluntcredunt\n<\/pre>\n<p>The famous quote from Gaius Julius Caesar.<\/p><\/section>\n<\/div>\n<\/span>","description_string":"\nScore: 200 points\n\n\nProblem Statement\nWe have a string S consisting of lowercase English letters.\nIf the length of S is at most K, print S without change.\nIf the length of S exceeds K, extract the first K characters in S, append ... to the end of them, and print the result.\n\n\n\n\nConstraints\n\nK is an integer between 1 and 100 (inclusive).\nS is a string consisting of lowercase English letters.\nThe length of S is between 1 and 100 (inclusive).\n\n\n\n\n\n\n\nInput\nInput is given from Standard Input in the following format:\nK\nS\n\n\n\n\n\nOutput\nPrint a string as stated in Problem Statement.\n\n\n\n\n\n\nSample Input 17\nnikoandsolstice\n\n\n\n\n\nSample Output 1nikoand...\n\nnikoandsolstice has a length of 15, which exceeds K=7.\nWe should extract the first 7 characters in this string, append ... to the end of them, and print the result nikoand....\n\n\n\n\n\nSample Input 240\nferelibenterhominesidquodvoluntcredunt\n\n\n\n\n\nSample Output 2ferelibenterhominesidquodvoluntcredunt\n\nThe famous quote from Gaius Julius Caesar.\n\n","orig_lang_html":"<span class=\"lang-en\">\n<p>Score: <var>200<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3>\n<p>We have a string <var>S<\/var> consisting of lowercase English letters.<\/p>\n<p>If the length of <var>S<\/var> is at most <var>K<\/var>, print <var>S<\/var> without change.<\/p>\n<p>If the length of <var>S<\/var> exceeds <var>K<\/var>, extract the first <var>K<\/var> characters in <var>S<\/var>, append <code>...<\/code> to the end of them, and print the result.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3>\n<ul>\n<li><var>K<\/var> is an integer between <var>1<\/var> and <var>100<\/var> (inclusive).<\/li>\n<li><var>S<\/var> is a string consisting of lowercase English letters.<\/li>\n<li>The length of <var>S<\/var> is between <var>1<\/var> and <var>100<\/var> (inclusive).<\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3>\n<p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>K<\/var>\n<var>S<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3>\n<p>Print a string as stated in Problem Statement.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>7\nnikoandsolstice\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>nikoand...\n<\/pre>\n<p><code>nikoandsolstice<\/code> has a length of <var>15<\/var>, which exceeds <var>K=7<\/var>.<\/p>\n<p>We should extract the first <var>7<\/var> characters in this string, append <code>...<\/code> to the end of them, and print the result <code>nikoand...<\/code>.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>40\nferelibenterhominesidquodvoluntcredunt\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>ferelibenterhominesidquodvoluntcredunt\n<\/pre>\n<p>The famous quote from Gaius Julius Caesar.<\/p><\/section>\n<\/div>\n<\/span>","orig_lang_string":"\nScore: 200 points\n\n\nProblem Statement\nWe have a string S consisting of lowercase English letters.\nIf the length of S is at most K, print S without change.\nIf the length of S exceeds K, extract the first K characters in S, append ... to the end of them, and print the result.\n\n\n\n\nConstraints\n\nK is an integer between 1 and 100 (inclusive).\nS is a string consisting of lowercase English letters.\nThe length of S is between 1 and 100 (inclusive).\n\n\n\n\n\n\n\nInput\nInput is given from Standard Input in the following format:\nK\nS\n\n\n\n\n\nOutput\nPrint a string as stated in Problem Statement.\n\n\n\n\n\n\nSample Input 17\nnikoandsolstice\n\n\n\n\n\nSample Output 1nikoand...\n\nnikoandsolstice has a length of 15, which exceeds K=7.\nWe should extract the first 7 characters in this string, append ... to the end of them, and print the result nikoand....\n\n\n\n\n\nSample Input 240\nferelibenterhominesidquodvoluntcredunt\n\n\n\n\n\nSample Output 2ferelibenterhominesidquodvoluntcredunt\n\nThe famous quote from Gaius Julius Caesar.\n\n","solve_rate":0.720925196,"codenet_problem_id":"p02676","input_testcases":{"43":"7\ntdstckfpolcinpj","99":"7\nksnjllnqtmbvdbf","79":"7\nkumilkoqfbbvdtn","49":"7\nkpniclopfkcusct","97":"7\nktnjllnqtmbvdbf","21":"7\nscetsloocnbikjo","13":"7\noikobncsoletics","67":"7\nkooibkoqflcvcsu","58":"7\nuscuckfqolcinpk","82":"7\nkumilloqfnbvdtb","7":"7\noikoancrolstice","28":"7\nscctskoofnciljp","15":"7\noiksbncooletics","101":"7\nnikoandsolstice","37":"7\nscctskfpolcinpj","74":"7\nkunilkoqfbcvdso","93":"7\nfbdvbmtqnllintk","95":"7\nktnillnqtmbvdbf","47":"7\njpniclopfkcusct","100":"7\nnikoandsolstice","18":"7\nscetiloocnbskio","39":"7\ntcctskfpolcinpj","64":"7\nuscvclfqokbiopk","87":"7\nftdvbnbqollinuk","70":"7\nkuoibkoqflcvdso","4":"7\noikoandrolstice","62":"7\nuscvckfqolbiopk","72":"7\nkuoilkoqfbcvdso","2":"7\nnikoandrolstice","33":"7\njpniclfookstccs","41":"7\ntcstckfpolcinpj","0":"7\necitslosdnaokin","84":"7\nbtdvbnfqollimuk","55":"7\ntscuckfqolcinpk","45":"7\ntcsuckfpolcinpj","24":"7\nscctslooenbikjp","89":"7\nfbdvbntqollinuk"},"output_testcases":{"43":"tdstckf...\n","99":"ksnjlln...\n","79":"kumilko...\n","49":"kpniclo...\n","97":"ktnjlln...\n","21":"scetslo...\n","13":"oikobnc...\n","67":"kooibko...\n","58":"uscuckf...\n","82":"kumillo...\n","7":"oikoanc...\n","28":"scctsko...\n","15":"oiksbnc...\n","101":"nikoand...\n","37":"scctskf...\n","74":"kunilko...\n","93":"fbdvbmt...\n","95":"ktnilln...\n","47":"jpniclo...\n","100":"nikoand...\n","18":"scetilo...\n","39":"tcctskf...\n","64":"uscvclf...\n","87":"ftdvbnb...\n","70":"kuoibko...\n","4":"oikoand...\n","62":"uscvckf...\n","72":"kuoilko...\n","2":"nikoand...\n","33":"jpniclf...\n","41":"tcstckf...\n","0":"ecitslo...\n","84":"btdvbnf...\n","55":"tscuckf...\n","45":"tcsuckf...\n","24":"scctslo...\n","89":"fbdvbnt...\n"},"n_missing":66,"programs":["k = int(input())\ns = input()\n\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[:k] + '...')","S = input()\nK = int(input())\nif (len(S) > K):\n    print(S[:K]+\"...\")\nelse:\n    print(S)","k = int(input())\ns = input()\n\nif len(s) <= k:\n    print(s)\n\nelse:\n    print(s[:k]+\"...\")","k=int(input())\ns = input()\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[:k]+\"...\")","K = int(input())\nS = str(input())\n\nif len(S) > K:\n    print (S[0:K]+\"...\")\nelse:\n    print(S)","K = int(input())\nS = input()\nif K < len(S):\n  print(S[:K]+'...')\nelse:\n  print(S)","K = int(input())\nS = input()\n \nif len(S) <= K:\n    print(S)\nelse:\n    print(S[:K] + '...')","import sys\n\ninput = sys.stdin.readline\nsys.setrecursionlimit(4100000)\n\n\ndef main():\n    K = int(input().rstrip())\n    S = input().rstrip()\n    if len(S) <= K:\n        print(S)\n    else:\n        print(S[:K] + \"...\")\n\n\nif __name__ == '__main__':\n    main()\n","k = int(input())\ns = input()\nprint(s if len(s) <= k else \"{}...\".format(s[:7]))","K = int(input())\nS = input()\n\nif(len(S)<=K):\n    print(S)\nelse:\n    print(S[:K]+\"...\")\n","\nK = int(input())\nS = input()\n\nif len(S) <= K:\n    print(S)\nelse:\n    print(S[:K] + \"...\")\n\n","# Below is Pythone code for input\/output \n\n# import sys \n# # For getting input from input.txt file \n# sys.stdin = open('input.txt', 'r') \n\n# # Printing the Output to output.txt file \n# sys.stdout = open('output.txt', 'w') \n\n\nk = int(input())\nn = raw_input()\n\nlst = []\nif(k>=len(n)):\n\tprint(n)\nelse:\n\tfor i in range(k):\n\t\tk= n[i]\n\t\tlst.append(k)\n\n\tx = ''.join(lst)\n\n\tprint(x+ \"...\")","k=int(input())\ns=str(input())\na=len(s)\nif k>= len(str(s)):\n  print(s)\nelse:\n  print(s[0:(k)]+\"...\")","k = int(input())\ns = input()\nans = ''\nif len(s) <= k:\n    print(s)\nelse:\n    for i in s:\n        if len(ans) < k:\n            ans += i\n        else:\n            print(ans + '...')\n            exit()","#!\/usr\/bin\/env python3\n\ndef main():\n    K = int(input())\n    S = input()\n    \n    if len(S) <= K:\n        print(S)\n    else:\n        print(S[0:K] + '...')\n\n\nmain()","K = int(input())\nS = input()\n\nif len(S) > K:\n    print(\"{}...\".format(S[:K]))\nelse:\n    print(S)","K=int(input())\nS=input()\n\nif(K>=int(len(S))):\n    print(S)\nelse:\n    a=S[0:K]\n    \n    print(a+'...')\n","K = int(input())\nS = input()\no = S if len(S) <= K else S[:K]+'...'\nprint(o)","k = int(input())\ns = input()\n\nif(k < len(s)):\n  print(s[0:k] + \"...\")\n  \nif(k >= len(s)):\n  print(s)\n  ","K = int(input())\nS = input()\nif len(S)<=K:\n    print(S)\nelse:\n    print(S[0:K+1]+\"...\")","def solve():\n    K = int(input())\n    S = input()\n    if len(S) <= K:\n        print(S)\n    else:\n        print(S[:K]+'...')\n\nif __name__ == '__main__':\n    solve()\n","k = input()\ns = input()\n\nif len(s) <= int(k):\n    print(s)\nelse:\n    print(s[:int(k)]+\"...\")","k = int(input())\ns = str(input())\n\nif len(s) <= k:\n    print(s)\nelse:\n    ans = s[:k] + '...'\n    print(ans)","K = int(input())\nS = input()\nif len(S) <= K:\n  print(S)\nelse:\n  print(S[:K] + \"...\")","N = int(input())\na = input()\n\nif N < len(a):\n  print(a[:N] + \"...\")\nelse:\n  print(a)","K=int(input())\nS=list(input())\nif len(S)<=K:\n  print(S)\nelse:\n  print(S[:K]+\"...\")","k = int(input())\ns = input()\nif len(s) > k:\n\tprint(s[:k] + \"...\")\nelse:\n\tprint(s)","x = '...'\nK = int(input())\nS = input()\nans = S\nif len(S) > K:\n    ans = S[:K] + x\nprint(ans)","k = int(input())\ns = input()\n\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[:k] + \"...\")","k = int(input())\ns = input()\n\nif len(s) <= k:\n  print(s)\nelse:\n  print(s[:7]+'...')","a=input()\na=int(a)\nb=input()\nc=\"\"\nif a>=len(b):\n  print(b)\nelse:\n  for i in range(a):\n    c=c+b[i]\n  print(c+\"...\")","k=int(input())\ns=input()\n\nif len(s) <= k:\n  print(s)\nelse:\n  print(s[:k] + '...')","# coding: utf-8\nimport sys,pprint\n\nK = int(input())\nS = input().rstrip()\n\nif len(S) > K:\n    print(\"{0}{1}\".format(S[0:K],'...'))\nelse:\n    print(S)","K = int(input())\nS = str(input())\n\nn = len(S)\nlist_S = list(S)\n\nif n > K:\n    tmp = list_S[0:K]\n    print(''.join(tmp) + '...')\nelse:print(''.join(list_S))","num = int(input())\nword = input()\n\nfor i in range(num):\n    print(word[i],end=\"\")\n    if i+1 >= len(word):\n        break\n\nif len(word) > num:\n    print(\"...\")","k=int(input())\ns=input()\na=len(s)\nif(a<=k):\n    print(s)\nelse:\n    b=s[:k]\n    print(b+\"...\")\n\n","K=int(input())\nS=list(input())\nif len(S)<=K:\n    print(*S,sep=\"\")\nelse:\n    kari=S[:K]\n    kari.append(\"...\")\n    print(*kari,sep=\"\")","k = int(input())\ns = input()\n\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[0:k]+\"...\")","K = int(input())\nS = input()\n\nprint(S[:K] + (\"...\" if len(S) > K else \"\"))","k = int(input())\ns = list(input())\nif(len(s) <= k):\n    print(\"\".join(s))\nelse:\n    s = s[0:k]+[\"...\"]\n    print(\"\".join(s))\n","cnt = int(input())\n\ninput_line = input()\n\n\nif len(input_line) > cnt :\n\tprint(input_line[:cnt] + \"...\")\n\nelse :\n\tprint(input_line)","k=int(input())\nword=input()\nif len(word)<k+1:\n  print(word)\nelif len(word)>k:\n  count=0\n  for i in word:\n    print(i,end=\"\")\n    count+=1\n    if count==k:\n      break\n  print(\"...\")","import sys\nimport math\nk=int(input())\ns=input()\n\nif len(s)<=k:\n    print(s)\nelse:\n    s_s=s[:k]\n    print(s_s+'...')","import sys\nimport socket\n\nhostname = socket.gethostname()\n\nif hostname == 'F451C':\n    sys.stdin = open('b1.in')\n\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\n\ndef read_str_list():\n    return input().split()\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_str():\n    return input()\n\n\ndef main():\n    K = read_int()\n    S = read_str()\n    if len(S) > K:\n      res = S[:K] + '...'\n    else:\n      res = S\n    print(res)\n\n\nmain()\n","import sys,queue,math,copy,itertools,bisect,collections,heapq\n\ndef main():\n    sys.setrecursionlimit(10**7)\n    INF = 10**18\n    MOD = 10**9 + 7\n    LI = lambda : [int(x) for x in sys.stdin.readline().split()]\n    NI = lambda : int(sys.stdin.readline())\n    SI = lambda : sys.stdin.readline().rstrip()\n\n    K = NI()\n    S = SI()\n\n    if len(S) <= K:\n        print(S)\n    else:\n        print(S[:K]+'...')\n\nif __name__ == '__main__':\n    main()","K = input()\nk = int(K)\nS= input()\nif len(S) > k:\n    print(S[:k] + \"...\")\nelse:\n    print(S)","k = int(input())\ns = str(input())\nif len(s) <= k:\n  print(s)\nelse:\n  print(s[:k]+\"...\")","k=int(input())\ns=input()\nif k >= len(s):\n    print(s)\nelse:\n    print(s[:k]+'...')\n","K = int(input())\nS = input()\n\nif len(S) <= K:\n    print(S)\nelse:\n    print(S[:K] + '...')\n","K=int(input())\nS=str(input())\n\nif len(S)>K:\n  print(S[0:K]+'...')\nelse:print(S)","K=int(input())\nS=input()\n\nif(len(S)<=K):\n    print(S)\nelse:\n    print(S[:K]+\"...\")","k=int(input())\ns=input()\nl=len(s)\nif k >= l:\n  print(s)\nelse:\n  print(s[:k]+\"...\")","k = int(input())\ns = str(input())\nif len(s) <= k:\n  print(s)\nelse:\n  out = s[:k]+'...'\n  print(out)","k = int(input())\ns = input()\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[:k] + '...')","a = int(input())\ns = input()\nif len(s) <= a:\n    print(s)\nelse:\n    print(s[0:a] + '...')\n","K = int(input().strip())\nS = input().strip()\nif len(S) <= K:\n    print(S)\nelse:\n    print(S[:K]+\"...\")\n","k=int(input())\ns=input()\nif len(s)<=k:\n    print(s)\nelse:\n    print(s[:k:]+\"...\")","k=int(input())\ns=list(input())\nif len(s)<=k:\n    print(''.join(s))\nelse:\n    for i in range(k):\n        print(s[i],end='')\n    print('...')","K = int(input())\nS = input()\n\nif len(S) <= K:\n    print(S)\nelse:\n    print(S[:K] + '...')","k = int(input())\ns = input()\n\nif len(s) <= k:\n  print(s)\nelse:\n  print(s[:k]+\"...\")","K = int(input())\nS = input()\n\nif len(S) <= K:\n  print(S)\nelse:\n  Ka = S[:K]\n  print(Ka + '...')\n  ","K = int(input())\nS = list(input())\nS2 = [0] * K\n\nif len(S) <= K:\n    print(''.join(S))\nelse:\n    for i in range(K):\n        S2[i] = S[i]\n    S2.append('...')\n    print(''.join(S2))\n","K = int(input())\nS = input()\n\nif len(S) <= K:\n    print(S)\nelse:\n    P = [S[i] for i in range(K)]\n    p = \"\".join(P)\n    ans = p + \"...\"\n    print(ans)\n","k=int(input())\ns=input()\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[:k]+'...')","k = int(input())\ns = input()\nif len(s) <= k:\n  print(s)\nelse:\n  print(s[:k] + \"...\")\n","K = int(input())\nS = input()\n\nif len(S) > K:\n     print(S[0:K]+\"...\")\nelse:\n    print(S)","k=int(input())\ns=input()\nif len(s)<=k:\n  print(s)\nelse:\n  print(s[:k]+'...')","K = int(input())\nS = input()\nif len(S) <= K :\n    print(S)\nelse :\n    S = S[:K]\n    print(S + '...')","S = str(input())\nK = int(input())\n\nif len(S) <= K:\n  print(S)\nelse:\n  print(S[0:K],\"...\")","k = int(input())\ns = input()\nn = len(s)\n\nif n <= k:\n\tprint(s)\nelse:\n\tprint(s[:k]+'...')\n","import sys\ninput = sys.stdin.readline\ndef main():\n    K = int(input())\n    S = input().rstrip()\n    if len(S) <= K:\n        print(S)\n    else:\n        print(S[:K]+\"...\")\nif __name__ == \"__main__\":\n    main()","K = int(input())\nS = input()\n\nif len(S) <= K :\n    print(S)\n\nif len(S) > K:\n    nS = S[:K] + \"...\"\n    print(nS)","K = int(input())\nS = input()\n\nif len(S) <= K:\n    print(S)\nelse:\n    print(S[:K] + '...')\n","k = int(input())\ns = input()\nn = len(s)\nif n <= k :\n    print(s)\nelse:\n    print(s[:k] + '...')","k = int(input())\ns = input()\n\nif len(s) > k:\n    print(s[:7] + \"...\")\nelse:\n    print(s)\n","K = int(input())\nS = input()\n\nif len(S) <= K:\n    print(S)\nelse:\n    print(S[:K] + \"...\")","k = int(input())\ns = input()\nif len(s) > k:\n\tprint(s[:k]+'...')\nelse:\n\tprint(s)","def num():\n    return int(input())\n\n\ndef nums():\n    return map(int,input().split())\n\nk = num()\ns = input()\n\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[:k]+'...')","def main():\n    k = int(input())\n    s = input()\n\n    if len(s)<=k:\n        print(s)\n    else:\n        print(s[:k],end=\"...\\r\")\n\n\nif __name__ == \"__main__\":\n    main()","# cook your dish here\nn=int(input())\ns=input()\nif len(s)<=n:\n    print(s)\nelse:\n    s=s[:n]+'...'\n    print(s)","k = int(input())\ns = input()\nl = len(s)\n\nif l <= k:\n    print(s)\nelse:\n    print(f'{s[:k]}...')","k=int(input())\ns=input()\nif len(s) > k:\n    print(s[:k] + \"...\")\nelse:\n    print(s)\n#get input k\n#get input s\n#if k is more than s\n#print the characters before k\n#if not print normally","k = int(input())\nS = [s for s in input()]\nif len(S) > k:\n    print(''.join(S[:k]) + '...')\nelse:\n    print(''.join(S))\n","K = int(input())\nS = input()\nif len(S) <= K:\n    print (S)\nelse:\n    print (S[0:K]+ \"...\")","k=int(input())\ns=input()\n\n\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[:k] + '...')","import math\nimport numpy as np\nimport queue\nfrom collections import deque\nimport heapq\n\nk = int(input())\ns = input()\n\nif k < len(s):\n    print(s[0:k:]+\"...\")\nelse:\n    print(s)\n","k = int(input())\ns = input()\nif len(s) > k:\n    print(s)\nelse:\n    print(s[:k])","import time\nstartTimeProblem=time.time()\n\nimport fileinput, sys, itertools, functools\nfrom math import *\nfrom bisect import *\nfrom heapq import *\nfrom collections import *\n\ndef lcm(a, b):  \n    return (a*b)\/gcd(a, b)\n\nclass InputHelper:\n    def __init__(self):\n        self.myinput = fileinput.input()\n\n    def isLocal(self):\n        return not fileinput.isstdin()\n\n    def int(self):\n        return int(self.myinput.readline().rstrip())\n\n    def ints(self):\n        return [int(_) for _ in self.myinput.readline().rstrip().split()]\n\n    def str(self):\n        return self.myinput.readline().rstrip()\n\n    def strs(self):\n        return [_ for _ in self.myinput.readline().rstrip().split()]\n\nclass OutputHelper:\n    def int(self, a):\n        print(a)    \n\n    def ints(self, a):  \n        print(\" \".join([str(_) for _ in a]))\n    \n    def intsNL(self, a):\n        for _ in a:\n            print(_)\n    \n    def str(self, s):\n        print(s)\n\n    def strs(self, s):\n        print(\" \".join([_ for _ in s]))\n\n    def strsNL(self, s):\n        for st in s:\n            print(st)\n\nclass ListNode:\n    def __init__(self, val):\n        self.val = val\n        self.next = None\n        self.prev = None\n\nIn = InputHelper()\nOut = OutputHelper()\n\n######################################\n\nK = In.int()\nS = In.str()\n\nif len(S)<=K:\n    Out.str(S)\nelse:\n    Out.str(S[0:K] + \"...\")\n\n######################################\n\nif len(sys.argv)>2 and sys.argv[2]==\"TIMEIT\":\n    fin = (time.time()-startTimeProblem)*1000\n    print(\"{:.2f}\".format(fin) + \"ms\")","k=int(input())\ns=input()\nif len(s)<=k:\n    print(s)\nelse:\n    print(s[:k]+'...')","K=int(input())\nS=input()\nif len(S)<=K:\n  print(S)\nelse:\n  print(S[:K]+'...')","K = int(input())\nS = input()\nprint(S[:K]+(K<len(S))*\"...\")","K = int(input())\nS = input()\n\nS_len = len(S)\n\nif S_len < K:\n    print(S)\nelse:\n    print(S[:K]+\"...\")","K=input()\nS=input()\nK=int(K)\nif len(S)>K:\n  S=S[:K]+\"...\"\n  print(S)\nelse:\n  print(S)","import sys\n\nk = int(sys.stdin.readline())\ns = sys.stdin.readline().split()[0]\n\nif len(s) > k:\n    s = s[:k] + '...'\n\nprint(s)\n","k = int(input())\ns = input()\n\nif len(s) > k:\n    print(s[:7]+\"...\")\nelse:\n    print(s)\n","7\nnikoandsolstice","n = int(input())\ns = input()\n\nif len(s) <= n:\n    print(s)\nelse:\n    print(s[:n]+'...')\n","K = int(input())\nS = input()\n\nif len(S) <= K:\n    print(S)\nelse:\n    str = ''\n    for i in range(K):\n        str += S[i]\n    str += \"...\"\n    print(str)\n","k = int(input())\ns = input()\n\n# print(len(s))\n\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[0:k] + '...')","k=int(input())\ns=str(input())\nn=int(len(s))\nif k<n:\n    print(s[:k]+'...')\nelse:\n    print(s)"],"raw_generations":["k = int(input())\ns = input()\n\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[:k] + '...')","S = input()\nK = int(input())\nif (len(S) > K):\n    print(S[:K]+\"...\")\nelse:\n    print(S)","k = int(input())\ns = input()\n\nif len(s) <= k:\n    print(s)\n\nelse:\n    print(s[:k]+\"...\")","k=int(input())\ns = input()\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[:k]+\"...\")","K = int(input())\nS = str(input())\n\nif len(S) > K:\n    print (S[0:K]+\"...\")\nelse:\n    print(S)","K = int(input())\nS = input()\nif K < len(S):\n  print(S[:K]+'...')\nelse:\n  print(S)","K = int(input())\nS = input()\n \nif len(S) <= K:\n    print(S)\nelse:\n    print(S[:K] + '...')","import sys\n\ninput = sys.stdin.readline\nsys.setrecursionlimit(4100000)\n\n\ndef main():\n    K = int(input().rstrip())\n    S = input().rstrip()\n    if len(S) <= K:\n        print(S)\n    else:\n        print(S[:K] + \"...\")\n\n\nif __name__ == '__main__':\n    main()\n","k = int(input())\ns = input()\nprint(s if len(s) <= k else \"{}...\".format(s[:7]))","K = int(input())\nS = input()\n\nif(len(S)<=K):\n    print(S)\nelse:\n    print(S[:K]+\"...\")\n","\nK = int(input())\nS = input()\n\nif len(S) <= K:\n    print(S)\nelse:\n    print(S[:K] + \"...\")\n\n","# Below is Pythone code for input\/output \n\n# import sys \n# # For getting input from input.txt file \n# sys.stdin = open('input.txt', 'r') \n\n# # Printing the Output to output.txt file \n# sys.stdout = open('output.txt', 'w') \n\n\nk = int(input())\nn = raw_input()\n\nlst = []\nif(k>=len(n)):\n\tprint(n)\nelse:\n\tfor i in range(k):\n\t\tk= n[i]\n\t\tlst.append(k)\n\n\tx = ''.join(lst)\n\n\tprint(x+ \"...\")","k=int(input())\ns=str(input())\na=len(s)\nif k>= len(str(s)):\n  print(s)\nelse:\n  print(s[0:(k)]+\"...\")","k = int(input())\ns = input()\nans = ''\nif len(s) <= k:\n    print(s)\nelse:\n    for i in s:\n        if len(ans) < k:\n            ans += i\n        else:\n            print(ans + '...')\n            exit()","#!\/usr\/bin\/env python3\n\ndef main():\n    K = int(input())\n    S = input()\n    \n    if len(S) <= K:\n        print(S)\n    else:\n        print(S[0:K] + '...')\n\n\nmain()","K = int(input())\nS = input()\n\nif len(S) > K:\n    print(\"{}...\".format(S[:K]))\nelse:\n    print(S)","K=int(input())\nS=input()\n\nif(K>=int(len(S))):\n    print(S)\nelse:\n    a=S[0:K]\n    \n    print(a+'...')\n","K = int(input())\nS = input()\no = S if len(S) <= K else S[:K]+'...'\nprint(o)","k = int(input())\ns = input()\n\nif(k < len(s)):\n  print(s[0:k] + \"...\")\n  \nif(k >= len(s)):\n  print(s)\n  ","K = int(input())\nS = input()\nif len(S)<=K:\n    print(S)\nelse:\n    print(S[0:K+1]+\"...\")","def solve():\n    K = int(input())\n    S = input()\n    if len(S) <= K:\n        print(S)\n    else:\n        print(S[:K]+'...')\n\nif __name__ == '__main__':\n    solve()\n","k = input()\ns = input()\n\nif len(s) <= int(k):\n    print(s)\nelse:\n    print(s[:int(k)]+\"...\")","k = int(input())\ns = str(input())\n\nif len(s) <= k:\n    print(s)\nelse:\n    ans = s[:k] + '...'\n    print(ans)","K = int(input())\nS = input()\nif len(S) <= K:\n  print(S)\nelse:\n  print(S[:K] + \"...\")","N = int(input())\na = input()\n\nif N < len(a):\n  print(a[:N] + \"...\")\nelse:\n  print(a)","K=int(input())\nS=list(input())\nif len(S)<=K:\n  print(S)\nelse:\n  print(S[:K]+\"...\")","k = int(input())\ns = input()\nif len(s) > k:\n\tprint(s[:k] + \"...\")\nelse:\n\tprint(s)","x = '...'\nK = int(input())\nS = input()\nans = S\nif len(S) > K:\n    ans = S[:K] + x\nprint(ans)","k = int(input())\ns = input()\n\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[:k] + \"...\")","k = int(input())\ns = input()\n\nif len(s) <= k:\n  print(s)\nelse:\n  print(s[:7]+'...')","a=input()\na=int(a)\nb=input()\nc=\"\"\nif a>=len(b):\n  print(b)\nelse:\n  for i in range(a):\n    c=c+b[i]\n  print(c+\"...\")","k=int(input())\ns=input()\n\nif len(s) <= k:\n  print(s)\nelse:\n  print(s[:k] + '...')","# coding: utf-8\nimport sys,pprint\n\nK = int(input())\nS = input().rstrip()\n\nif len(S) > K:\n    print(\"{0}{1}\".format(S[0:K],'...'))\nelse:\n    print(S)","K = int(input())\nS = str(input())\n\nn = len(S)\nlist_S = list(S)\n\nif n > K:\n    tmp = list_S[0:K]\n    print(''.join(tmp) + '...')\nelse:print(''.join(list_S))","num = int(input())\nword = input()\n\nfor i in range(num):\n    print(word[i],end=\"\")\n    if i+1 >= len(word):\n        break\n\nif len(word) > num:\n    print(\"...\")","k=int(input())\ns=input()\na=len(s)\nif(a<=k):\n    print(s)\nelse:\n    b=s[:k]\n    print(b+\"...\")\n\n","K=int(input())\nS=list(input())\nif len(S)<=K:\n    print(*S,sep=\"\")\nelse:\n    kari=S[:K]\n    kari.append(\"...\")\n    print(*kari,sep=\"\")","k = int(input())\ns = input()\n\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[0:k]+\"...\")","K = int(input())\nS = input()\n\nprint(S[:K] + (\"...\" if len(S) > K else \"\"))","k = int(input())\ns = list(input())\nif(len(s) <= k):\n    print(\"\".join(s))\nelse:\n    s = s[0:k]+[\"...\"]\n    print(\"\".join(s))\n","cnt = int(input())\n\ninput_line = input()\n\n\nif len(input_line) > cnt :\n\tprint(input_line[:cnt] + \"...\")\n\nelse :\n\tprint(input_line)","k=int(input())\nword=input()\nif len(word)<k+1:\n  print(word)\nelif len(word)>k:\n  count=0\n  for i in word:\n    print(i,end=\"\")\n    count+=1\n    if count==k:\n      break\n  print(\"...\")","import sys\nimport math\nk=int(input())\ns=input()\n\nif len(s)<=k:\n    print(s)\nelse:\n    s_s=s[:k]\n    print(s_s+'...')","import sys\nimport socket\n\nhostname = socket.gethostname()\n\nif hostname == 'F451C':\n    sys.stdin = open('b1.in')\n\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\n\ndef read_str_list():\n    return input().split()\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_str():\n    return input()\n\n\ndef main():\n    K = read_int()\n    S = read_str()\n    if len(S) > K:\n      res = S[:K] + '...'\n    else:\n      res = S\n    print(res)\n\n\nmain()\n","import sys,queue,math,copy,itertools,bisect,collections,heapq\n\ndef main():\n    sys.setrecursionlimit(10**7)\n    INF = 10**18\n    MOD = 10**9 + 7\n    LI = lambda : [int(x) for x in sys.stdin.readline().split()]\n    NI = lambda : int(sys.stdin.readline())\n    SI = lambda : sys.stdin.readline().rstrip()\n\n    K = NI()\n    S = SI()\n\n    if len(S) <= K:\n        print(S)\n    else:\n        print(S[:K]+'...')\n\nif __name__ == '__main__':\n    main()","K = input()\nk = int(K)\nS= input()\nif len(S) > k:\n    print(S[:k] + \"...\")\nelse:\n    print(S)","k = int(input())\ns = str(input())\nif len(s) <= k:\n  print(s)\nelse:\n  print(s[:k]+\"...\")","k=int(input())\ns=input()\nif k >= len(s):\n    print(s)\nelse:\n    print(s[:k]+'...')\n","K = int(input())\nS = input()\n\nif len(S) <= K:\n    print(S)\nelse:\n    print(S[:K] + '...')\n","K=int(input())\nS=str(input())\n\nif len(S)>K:\n  print(S[0:K]+'...')\nelse:print(S)","K=int(input())\nS=input()\n\nif(len(S)<=K):\n    print(S)\nelse:\n    print(S[:K]+\"...\")","k=int(input())\ns=input()\nl=len(s)\nif k >= l:\n  print(s)\nelse:\n  print(s[:k]+\"...\")","k = int(input())\ns = str(input())\nif len(s) <= k:\n  print(s)\nelse:\n  out = s[:k]+'...'\n  print(out)","k = int(input())\ns = input()\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[:k] + '...')","a = int(input())\ns = input()\nif len(s) <= a:\n    print(s)\nelse:\n    print(s[0:a] + '...')\n","K = int(input().strip())\nS = input().strip()\nif len(S) <= K:\n    print(S)\nelse:\n    print(S[:K]+\"...\")\n","k=int(input())\ns=input()\nif len(s)<=k:\n    print(s)\nelse:\n    print(s[:k:]+\"...\")","k=int(input())\ns=list(input())\nif len(s)<=k:\n    print(''.join(s))\nelse:\n    for i in range(k):\n        print(s[i],end='')\n    print('...')","K = int(input())\nS = input()\n\nif len(S) <= K:\n    print(S)\nelse:\n    print(S[:K] + '...')","k = int(input())\ns = input()\n\nif len(s) <= k:\n  print(s)\nelse:\n  print(s[:k]+\"...\")","K = int(input())\nS = input()\n\nif len(S) <= K:\n  print(S)\nelse:\n  Ka = S[:K]\n  print(Ka + '...')\n  ","K = int(input())\nS = list(input())\nS2 = [0] * K\n\nif len(S) <= K:\n    print(''.join(S))\nelse:\n    for i in range(K):\n        S2[i] = S[i]\n    S2.append('...')\n    print(''.join(S2))\n","K = int(input())\nS = input()\n\nif len(S) <= K:\n    print(S)\nelse:\n    P = [S[i] for i in range(K)]\n    p = \"\".join(P)\n    ans = p + \"...\"\n    print(ans)\n","k=int(input())\ns=input()\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[:k]+'...')","k = int(input())\ns = input()\nif len(s) <= k:\n  print(s)\nelse:\n  print(s[:k] + \"...\")\n","K = int(input())\nS = input()\n\nif len(S) > K:\n     print(S[0:K]+\"...\")\nelse:\n    print(S)","k=int(input())\ns=input()\nif len(s)<=k:\n  print(s)\nelse:\n  print(s[:k]+'...')","K = int(input())\nS = input()\nif len(S) <= K :\n    print(S)\nelse :\n    S = S[:K]\n    print(S + '...')","S = str(input())\nK = int(input())\n\nif len(S) <= K:\n  print(S)\nelse:\n  print(S[0:K],\"...\")","k = int(input())\ns = input()\nn = len(s)\n\nif n <= k:\n\tprint(s)\nelse:\n\tprint(s[:k]+'...')\n","import sys\ninput = sys.stdin.readline\ndef main():\n    K = int(input())\n    S = input().rstrip()\n    if len(S) <= K:\n        print(S)\n    else:\n        print(S[:K]+\"...\")\nif __name__ == \"__main__\":\n    main()","K = int(input())\nS = input()\n\nif len(S) <= K :\n    print(S)\n\nif len(S) > K:\n    nS = S[:K] + \"...\"\n    print(nS)","K = int(input())\nS = input()\n\nif len(S) <= K:\n    print(S)\nelse:\n    print(S[:K] + '...')\n","k = int(input())\ns = input()\nn = len(s)\nif n <= k :\n    print(s)\nelse:\n    print(s[:k] + '...')","k = int(input())\ns = input()\n\nif len(s) > k:\n    print(s[:7] + \"...\")\nelse:\n    print(s)\n","K = int(input())\nS = input()\n\nif len(S) <= K:\n    print(S)\nelse:\n    print(S[:K] + \"...\")","k = int(input())\ns = input()\nif len(s) > k:\n\tprint(s[:k]+'...')\nelse:\n\tprint(s)","def num():\n    return int(input())\n\n\ndef nums():\n    return map(int,input().split())\n\nk = num()\ns = input()\n\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[:k]+'...')","def main():\n    k = int(input())\n    s = input()\n\n    if len(s)<=k:\n        print(s)\n    else:\n        print(s[:k],end=\"...\\r\")\n\n\nif __name__ == \"__main__\":\n    main()","# cook your dish here\nn=int(input())\ns=input()\nif len(s)<=n:\n    print(s)\nelse:\n    s=s[:n]+'...'\n    print(s)","k = int(input())\ns = input()\nl = len(s)\n\nif l <= k:\n    print(s)\nelse:\n    print(f'{s[:k]}...')","k=int(input())\ns=input()\nif len(s) > k:\n    print(s[:k] + \"...\")\nelse:\n    print(s)\n#get input k\n#get input s\n#if k is more than s\n#print the characters before k\n#if not print normally","k = int(input())\nS = [s for s in input()]\nif len(S) > k:\n    print(''.join(S[:k]) + '...')\nelse:\n    print(''.join(S))\n","K = int(input())\nS = input()\nif len(S) <= K:\n    print (S)\nelse:\n    print (S[0:K]+ \"...\")","k=int(input())\ns=input()\n\n\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[:k] + '...')","import math\nimport numpy as np\nimport queue\nfrom collections import deque\nimport heapq\n\nk = int(input())\ns = input()\n\nif k < len(s):\n    print(s[0:k:]+\"...\")\nelse:\n    print(s)\n","k = int(input())\ns = input()\nif len(s) > k:\n    print(s)\nelse:\n    print(s[:k])","import time\nstartTimeProblem=time.time()\n\nimport fileinput, sys, itertools, functools\nfrom math import *\nfrom bisect import *\nfrom heapq import *\nfrom collections import *\n\ndef lcm(a, b):  \n    return (a*b)\/gcd(a, b)\n\nclass InputHelper:\n    def __init__(self):\n        self.myinput = fileinput.input()\n\n    def isLocal(self):\n        return not fileinput.isstdin()\n\n    def int(self):\n        return int(self.myinput.readline().rstrip())\n\n    def ints(self):\n        return [int(_) for _ in self.myinput.readline().rstrip().split()]\n\n    def str(self):\n        return self.myinput.readline().rstrip()\n\n    def strs(self):\n        return [_ for _ in self.myinput.readline().rstrip().split()]\n\nclass OutputHelper:\n    def int(self, a):\n        print(a)    \n\n    def ints(self, a):  \n        print(\" \".join([str(_) for _ in a]))\n    \n    def intsNL(self, a):\n        for _ in a:\n            print(_)\n    \n    def str(self, s):\n        print(s)\n\n    def strs(self, s):\n        print(\" \".join([_ for _ in s]))\n\n    def strsNL(self, s):\n        for st in s:\n            print(st)\n\nclass ListNode:\n    def __init__(self, val):\n        self.val = val\n        self.next = None\n        self.prev = None\n\nIn = InputHelper()\nOut = OutputHelper()\n\n######################################\n\nK = In.int()\nS = In.str()\n\nif len(S)<=K:\n    Out.str(S)\nelse:\n    Out.str(S[0:K] + \"...\")\n\n######################################\n\nif len(sys.argv)>2 and sys.argv[2]==\"TIMEIT\":\n    fin = (time.time()-startTimeProblem)*1000\n    print(\"{:.2f}\".format(fin) + \"ms\")","k=int(input())\ns=input()\nif len(s)<=k:\n    print(s)\nelse:\n    print(s[:k]+'...')","K=int(input())\nS=input()\nif len(S)<=K:\n  print(S)\nelse:\n  print(S[:K]+'...')","K = int(input())\nS = input()\nprint(S[:K]+(K<len(S))*\"...\")","K = int(input())\nS = input()\n\nS_len = len(S)\n\nif S_len < K:\n    print(S)\nelse:\n    print(S[:K]+\"...\")","K=input()\nS=input()\nK=int(K)\nif len(S)>K:\n  S=S[:K]+\"...\"\n  print(S)\nelse:\n  print(S)","import sys\n\nk = int(sys.stdin.readline())\ns = sys.stdin.readline().split()[0]\n\nif len(s) > k:\n    s = s[:k] + '...'\n\nprint(s)\n","k = int(input())\ns = input()\n\nif len(s) > k:\n    print(s[:7]+\"...\")\nelse:\n    print(s)\n","7\nnikoandsolstice","n = int(input())\ns = input()\n\nif len(s) <= n:\n    print(s)\nelse:\n    print(s[:n]+'...')\n","K = int(input())\nS = input()\n\nif len(S) <= K:\n    print(S)\nelse:\n    str = ''\n    for i in range(K):\n        str += S[i]\n    str += \"...\"\n    print(str)\n","k = int(input())\ns = input()\n\n# print(len(s))\n\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[0:k] + '...')","k=int(input())\ns=str(input())\nn=int(len(s))\nif k<n:\n    print(s[:k]+'...')\nelse:\n    print(s)"],"formatted_programs":["k = int(input())\ns = input()\n\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[:k] + '...')","S = input()\nK = int(input())\nif (len(S) > K):\n    print(S[:K]+\"...\")\nelse:\n    print(S)","k = int(input())\ns = input()\n\nif len(s) <= k:\n    print(s)\n\nelse:\n    print(s[:k]+\"...\")","k=int(input())\ns = input()\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[:k]+\"...\")","K = int(input())\nS = str(input())\n\nif len(S) > K:\n    print (S[0:K]+\"...\")\nelse:\n    print(S)","K = int(input())\nS = input()\nif K < len(S):\n  print(S[:K]+'...')\nelse:\n  print(S)","K = int(input())\nS = input()\n \nif len(S) <= K:\n    print(S)\nelse:\n    print(S[:K] + '...')","import sys\n\ninput = sys.stdin.readline\nsys.setrecursionlimit(4100000)\n\n\ndef main():\n    K = int(input().rstrip())\n    S = input().rstrip()\n    if len(S) <= K:\n        print(S)\n    else:\n        print(S[:K] + \"...\")\n\n\nif __name__ == '__main__':\n    main()\n","k = int(input())\ns = input()\nprint(s if len(s) <= k else \"{}...\".format(s[:7]))","K = int(input())\nS = input()\n\nif(len(S)<=K):\n    print(S)\nelse:\n    print(S[:K]+\"...\")\n","\nK = int(input())\nS = input()\n\nif len(S) <= K:\n    print(S)\nelse:\n    print(S[:K] + \"...\")\n\n","# Below is Pythone code for input\/output \n\n# import sys \n# # For getting input from input.txt file \n# sys.stdin = open('input.txt', 'r') \n\n# # Printing the Output to output.txt file \n# sys.stdout = open('output.txt', 'w') \n\n\nk = int(input())\nn = raw_input()\n\nlst = []\nif(k>=len(n)):\n\tprint(n)\nelse:\n\tfor i in range(k):\n\t\tk= n[i]\n\t\tlst.append(k)\n\n\tx = ''.join(lst)\n\n\tprint(x+ \"...\")","k=int(input())\ns=str(input())\na=len(s)\nif k>= len(str(s)):\n  print(s)\nelse:\n  print(s[0:(k)]+\"...\")","k = int(input())\ns = input()\nans = ''\nif len(s) <= k:\n    print(s)\nelse:\n    for i in s:\n        if len(ans) < k:\n            ans += i\n        else:\n            print(ans + '...')\n            exit()","#!\/usr\/bin\/env python3\n\ndef main():\n    K = int(input())\n    S = input()\n    \n    if len(S) <= K:\n        print(S)\n    else:\n        print(S[0:K] + '...')\n\n\nmain()","K = int(input())\nS = input()\n\nif len(S) > K:\n    print(\"{}...\".format(S[:K]))\nelse:\n    print(S)","K=int(input())\nS=input()\n\nif(K>=int(len(S))):\n    print(S)\nelse:\n    a=S[0:K]\n    \n    print(a+'...')\n","K = int(input())\nS = input()\no = S if len(S) <= K else S[:K]+'...'\nprint(o)","k = int(input())\ns = input()\n\nif(k < len(s)):\n  print(s[0:k] + \"...\")\n  \nif(k >= len(s)):\n  print(s)\n  ","K = int(input())\nS = input()\nif len(S)<=K:\n    print(S)\nelse:\n    print(S[0:K+1]+\"...\")","def solve():\n    K = int(input())\n    S = input()\n    if len(S) <= K:\n        print(S)\n    else:\n        print(S[:K]+'...')\n\nif __name__ == '__main__':\n    solve()\n","k = input()\ns = input()\n\nif len(s) <= int(k):\n    print(s)\nelse:\n    print(s[:int(k)]+\"...\")","k = int(input())\ns = str(input())\n\nif len(s) <= k:\n    print(s)\nelse:\n    ans = s[:k] + '...'\n    print(ans)","K = int(input())\nS = input()\nif len(S) <= K:\n  print(S)\nelse:\n  print(S[:K] + \"...\")","N = int(input())\na = input()\n\nif N < len(a):\n  print(a[:N] + \"...\")\nelse:\n  print(a)","K=int(input())\nS=list(input())\nif len(S)<=K:\n  print(S)\nelse:\n  print(S[:K]+\"...\")","k = int(input())\ns = input()\nif len(s) > k:\n\tprint(s[:k] + \"...\")\nelse:\n\tprint(s)","x = '...'\nK = int(input())\nS = input()\nans = S\nif len(S) > K:\n    ans = S[:K] + x\nprint(ans)","k = int(input())\ns = input()\n\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[:k] + \"...\")","k = int(input())\ns = input()\n\nif len(s) <= k:\n  print(s)\nelse:\n  print(s[:7]+'...')","a=input()\na=int(a)\nb=input()\nc=\"\"\nif a>=len(b):\n  print(b)\nelse:\n  for i in range(a):\n    c=c+b[i]\n  print(c+\"...\")","k=int(input())\ns=input()\n\nif len(s) <= k:\n  print(s)\nelse:\n  print(s[:k] + '...')","# coding: utf-8\nimport sys,pprint\n\nK = int(input())\nS = input().rstrip()\n\nif len(S) > K:\n    print(\"{0}{1}\".format(S[0:K],'...'))\nelse:\n    print(S)","K = int(input())\nS = str(input())\n\nn = len(S)\nlist_S = list(S)\n\nif n > K:\n    tmp = list_S[0:K]\n    print(''.join(tmp) + '...')\nelse:print(''.join(list_S))","num = int(input())\nword = input()\n\nfor i in range(num):\n    print(word[i],end=\"\")\n    if i+1 >= len(word):\n        break\n\nif len(word) > num:\n    print(\"...\")","k=int(input())\ns=input()\na=len(s)\nif(a<=k):\n    print(s)\nelse:\n    b=s[:k]\n    print(b+\"...\")\n\n","K=int(input())\nS=list(input())\nif len(S)<=K:\n    print(*S,sep=\"\")\nelse:\n    kari=S[:K]\n    kari.append(\"...\")\n    print(*kari,sep=\"\")","k = int(input())\ns = input()\n\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[0:k]+\"...\")","K = int(input())\nS = input()\n\nprint(S[:K] + (\"...\" if len(S) > K else \"\"))","k = int(input())\ns = list(input())\nif(len(s) <= k):\n    print(\"\".join(s))\nelse:\n    s = s[0:k]+[\"...\"]\n    print(\"\".join(s))\n","cnt = int(input())\n\ninput_line = input()\n\n\nif len(input_line) > cnt :\n\tprint(input_line[:cnt] + \"...\")\n\nelse :\n\tprint(input_line)","k=int(input())\nword=input()\nif len(word)<k+1:\n  print(word)\nelif len(word)>k:\n  count=0\n  for i in word:\n    print(i,end=\"\")\n    count+=1\n    if count==k:\n      break\n  print(\"...\")","import sys\nimport math\nk=int(input())\ns=input()\n\nif len(s)<=k:\n    print(s)\nelse:\n    s_s=s[:k]\n    print(s_s+'...')","import sys\nimport socket\n\nhostname = socket.gethostname()\n\nif hostname == 'F451C':\n    sys.stdin = open('b1.in')\n\n\ndef read_int_list():\n    return list(map(int, input().split()))\n\n\ndef read_str_list():\n    return input().split()\n\n\ndef read_int():\n    return int(input())\n\n\ndef read_str():\n    return input()\n\n\ndef main():\n    K = read_int()\n    S = read_str()\n    if len(S) > K:\n      res = S[:K] + '...'\n    else:\n      res = S\n    print(res)\n\n\nmain()\n","import sys,queue,math,copy,itertools,bisect,collections,heapq\n\ndef main():\n    sys.setrecursionlimit(10**7)\n    INF = 10**18\n    MOD = 10**9 + 7\n    LI = lambda : [int(x) for x in sys.stdin.readline().split()]\n    NI = lambda : int(sys.stdin.readline())\n    SI = lambda : sys.stdin.readline().rstrip()\n\n    K = NI()\n    S = SI()\n\n    if len(S) <= K:\n        print(S)\n    else:\n        print(S[:K]+'...')\n\nif __name__ == '__main__':\n    main()","K = input()\nk = int(K)\nS= input()\nif len(S) > k:\n    print(S[:k] + \"...\")\nelse:\n    print(S)","k = int(input())\ns = str(input())\nif len(s) <= k:\n  print(s)\nelse:\n  print(s[:k]+\"...\")","k=int(input())\ns=input()\nif k >= len(s):\n    print(s)\nelse:\n    print(s[:k]+'...')\n","K = int(input())\nS = input()\n\nif len(S) <= K:\n    print(S)\nelse:\n    print(S[:K] + '...')\n","K=int(input())\nS=str(input())\n\nif len(S)>K:\n  print(S[0:K]+'...')\nelse:print(S)","K=int(input())\nS=input()\n\nif(len(S)<=K):\n    print(S)\nelse:\n    print(S[:K]+\"...\")","k=int(input())\ns=input()\nl=len(s)\nif k >= l:\n  print(s)\nelse:\n  print(s[:k]+\"...\")","k = int(input())\ns = str(input())\nif len(s) <= k:\n  print(s)\nelse:\n  out = s[:k]+'...'\n  print(out)","k = int(input())\ns = input()\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[:k] + '...')","a = int(input())\ns = input()\nif len(s) <= a:\n    print(s)\nelse:\n    print(s[0:a] + '...')\n","K = int(input().strip())\nS = input().strip()\nif len(S) <= K:\n    print(S)\nelse:\n    print(S[:K]+\"...\")\n","k=int(input())\ns=input()\nif len(s)<=k:\n    print(s)\nelse:\n    print(s[:k:]+\"...\")","k=int(input())\ns=list(input())\nif len(s)<=k:\n    print(''.join(s))\nelse:\n    for i in range(k):\n        print(s[i],end='')\n    print('...')","K = int(input())\nS = input()\n\nif len(S) <= K:\n    print(S)\nelse:\n    print(S[:K] + '...')","k = int(input())\ns = input()\n\nif len(s) <= k:\n  print(s)\nelse:\n  print(s[:k]+\"...\")","K = int(input())\nS = input()\n\nif len(S) <= K:\n  print(S)\nelse:\n  Ka = S[:K]\n  print(Ka + '...')\n  ","K = int(input())\nS = list(input())\nS2 = [0] * K\n\nif len(S) <= K:\n    print(''.join(S))\nelse:\n    for i in range(K):\n        S2[i] = S[i]\n    S2.append('...')\n    print(''.join(S2))\n","K = int(input())\nS = input()\n\nif len(S) <= K:\n    print(S)\nelse:\n    P = [S[i] for i in range(K)]\n    p = \"\".join(P)\n    ans = p + \"...\"\n    print(ans)\n","k=int(input())\ns=input()\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[:k]+'...')","k = int(input())\ns = input()\nif len(s) <= k:\n  print(s)\nelse:\n  print(s[:k] + \"...\")\n","K = int(input())\nS = input()\n\nif len(S) > K:\n     print(S[0:K]+\"...\")\nelse:\n    print(S)","k=int(input())\ns=input()\nif len(s)<=k:\n  print(s)\nelse:\n  print(s[:k]+'...')","K = int(input())\nS = input()\nif len(S) <= K :\n    print(S)\nelse :\n    S = S[:K]\n    print(S + '...')","S = str(input())\nK = int(input())\n\nif len(S) <= K:\n  print(S)\nelse:\n  print(S[0:K],\"...\")","k = int(input())\ns = input()\nn = len(s)\n\nif n <= k:\n\tprint(s)\nelse:\n\tprint(s[:k]+'...')\n","import sys\ninput = sys.stdin.readline\ndef main():\n    K = int(input())\n    S = input().rstrip()\n    if len(S) <= K:\n        print(S)\n    else:\n        print(S[:K]+\"...\")\nif __name__ == \"__main__\":\n    main()","K = int(input())\nS = input()\n\nif len(S) <= K :\n    print(S)\n\nif len(S) > K:\n    nS = S[:K] + \"...\"\n    print(nS)","K = int(input())\nS = input()\n\nif len(S) <= K:\n    print(S)\nelse:\n    print(S[:K] + '...')\n","k = int(input())\ns = input()\nn = len(s)\nif n <= k :\n    print(s)\nelse:\n    print(s[:k] + '...')","k = int(input())\ns = input()\n\nif len(s) > k:\n    print(s[:7] + \"...\")\nelse:\n    print(s)\n","K = int(input())\nS = input()\n\nif len(S) <= K:\n    print(S)\nelse:\n    print(S[:K] + \"...\")","k = int(input())\ns = input()\nif len(s) > k:\n\tprint(s[:k]+'...')\nelse:\n\tprint(s)","def num():\n    return int(input())\n\n\ndef nums():\n    return map(int,input().split())\n\nk = num()\ns = input()\n\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[:k]+'...')","def main():\n    k = int(input())\n    s = input()\n\n    if len(s)<=k:\n        print(s)\n    else:\n        print(s[:k],end=\"...\\r\")\n\n\nif __name__ == \"__main__\":\n    main()","# cook your dish here\nn=int(input())\ns=input()\nif len(s)<=n:\n    print(s)\nelse:\n    s=s[:n]+'...'\n    print(s)","k = int(input())\ns = input()\nl = len(s)\n\nif l <= k:\n    print(s)\nelse:\n    print(f'{s[:k]}...')","k=int(input())\ns=input()\nif len(s) > k:\n    print(s[:k] + \"...\")\nelse:\n    print(s)\n#get input k\n#get input s\n#if k is more than s\n#print the characters before k\n#if not print normally","k = int(input())\nS = [s for s in input()]\nif len(S) > k:\n    print(''.join(S[:k]) + '...')\nelse:\n    print(''.join(S))\n","K = int(input())\nS = input()\nif len(S) <= K:\n    print (S)\nelse:\n    print (S[0:K]+ \"...\")","k=int(input())\ns=input()\n\n\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[:k] + '...')","import math\nimport numpy as np\nimport queue\nfrom collections import deque\nimport heapq\n\nk = int(input())\ns = input()\n\nif k < len(s):\n    print(s[0:k:]+\"...\")\nelse:\n    print(s)\n","k = int(input())\ns = input()\nif len(s) > k:\n    print(s)\nelse:\n    print(s[:k])","import time\nstartTimeProblem=time.time()\n\nimport fileinput, sys, itertools, functools\nfrom math import *\nfrom bisect import *\nfrom heapq import *\nfrom collections import *\n\ndef lcm(a, b):  \n    return (a*b)\/gcd(a, b)\n\nclass InputHelper:\n    def __init__(self):\n        self.myinput = fileinput.input()\n\n    def isLocal(self):\n        return not fileinput.isstdin()\n\n    def int(self):\n        return int(self.myinput.readline().rstrip())\n\n    def ints(self):\n        return [int(_) for _ in self.myinput.readline().rstrip().split()]\n\n    def str(self):\n        return self.myinput.readline().rstrip()\n\n    def strs(self):\n        return [_ for _ in self.myinput.readline().rstrip().split()]\n\nclass OutputHelper:\n    def int(self, a):\n        print(a)    \n\n    def ints(self, a):  \n        print(\" \".join([str(_) for _ in a]))\n    \n    def intsNL(self, a):\n        for _ in a:\n            print(_)\n    \n    def str(self, s):\n        print(s)\n\n    def strs(self, s):\n        print(\" \".join([_ for _ in s]))\n\n    def strsNL(self, s):\n        for st in s:\n            print(st)\n\nclass ListNode:\n    def __init__(self, val):\n        self.val = val\n        self.next = None\n        self.prev = None\n\nIn = InputHelper()\nOut = OutputHelper()\n\n######################################\n\nK = In.int()\nS = In.str()\n\nif len(S)<=K:\n    Out.str(S)\nelse:\n    Out.str(S[0:K] + \"...\")\n\n######################################\n\nif len(sys.argv)>2 and sys.argv[2]==\"TIMEIT\":\n    fin = (time.time()-startTimeProblem)*1000\n    print(\"{:.2f}\".format(fin) + \"ms\")","k=int(input())\ns=input()\nif len(s)<=k:\n    print(s)\nelse:\n    print(s[:k]+'...')","K=int(input())\nS=input()\nif len(S)<=K:\n  print(S)\nelse:\n  print(S[:K]+'...')","K = int(input())\nS = input()\nprint(S[:K]+(K<len(S))*\"...\")","K = int(input())\nS = input()\n\nS_len = len(S)\n\nif S_len < K:\n    print(S)\nelse:\n    print(S[:K]+\"...\")","K=input()\nS=input()\nK=int(K)\nif len(S)>K:\n  S=S[:K]+\"...\"\n  print(S)\nelse:\n  print(S)","import sys\n\nk = int(sys.stdin.readline())\ns = sys.stdin.readline().split()[0]\n\nif len(s) > k:\n    s = s[:k] + '...'\n\nprint(s)\n","k = int(input())\ns = input()\n\nif len(s) > k:\n    print(s[:7]+\"...\")\nelse:\n    print(s)\n","7\nnikoandsolstice","n = int(input())\ns = input()\n\nif len(s) <= n:\n    print(s)\nelse:\n    print(s[:n]+'...')\n","K = int(input())\nS = input()\n\nif len(S) <= K:\n    print(S)\nelse:\n    str = ''\n    for i in range(K):\n        str += S[i]\n    str += \"...\"\n    print(str)\n","k = int(input())\ns = input()\n\n# print(len(s))\n\nif len(s) <= k:\n    print(s)\nelse:\n    print(s[0:k] + '...')","k=int(input())\ns=str(input())\nn=int(len(s))\nif k<n:\n    print(s[:k]+'...')\nelse:\n    print(s)"]}
{"description_html":"<span class=\"lang-en\">\n<p>Score : <var>200<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>There are <var>N<\/var> children, numbered <var>1, 2, ..., N<\/var>.<\/p>\n<p>Snuke has decided to distribute <var>x<\/var> sweets among them.\nHe needs to give out all the <var>x<\/var> sweets, but some of the children may get zero sweets.<\/p>\n<p>For each <var>i<\/var> (<var>1 \\leq i \\leq N<\/var>), Child <var>i<\/var> will be <em>happy<\/em> if he\/she gets exactly <var>a_i<\/var> sweets.\nSnuke is trying to maximize the number of happy children by optimally distributing the sweets.\nFind the maximum possible number of happy children.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li>All values in input are integers.<\/li>\n<li><var>2 \\leq N \\leq 100<\/var><\/li>\n<li><var>1 \\leq x \\leq 10^9<\/var><\/li>\n<li><var>1 \\leq a_i \\leq 10^9<\/var><\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>N<\/var> <var>x<\/var>\n<var>a_1<\/var> <var>a_2<\/var> <var>...<\/var> <var>a_N<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>Print the maximum possible number of happy children.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>3 70\n20 30 10\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>2\n<\/pre>\n<p>One optimal way to distribute sweets is <var>(20, 30, 20)<\/var>.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>3 10\n20 30 10\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>1\n<\/pre>\n<p>The optimal way to distribute sweets is <var>(0, 0, 10)<\/var>.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>4 1111\n1 10 100 1000\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>4\n<\/pre>\n<p>The optimal way to distribute sweets is <var>(1, 10, 100, 1000)<\/var>.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 4<\/h3><pre>2 10\n20 20\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 4<\/h3><pre>0\n<\/pre>\n<p>No children will be happy, no matter how the sweets are distributed.<\/p><\/section>\n<\/div>\n<\/span>","description_string":"\nScore : 200 points\n\n\nProblem StatementThere are N children, numbered 1, 2, ..., N.\nSnuke has decided to distribute x sweets among them.\nHe needs to give out all the x sweets, but some of the children may get zero sweets.\nFor each i (1 \\leq i \\leq N), Child i will be happy if he\/she gets exactly a_i sweets.\nSnuke is trying to maximize the number of happy children by optimally distributing the sweets.\nFind the maximum possible number of happy children.\n\n\n\n\nConstraints\nAll values in input are integers.\n2 \\leq N \\leq 100\n1 \\leq x \\leq 10^9\n1 \\leq a_i \\leq 10^9\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN x\na_1 a_2 ... a_N\n\n\n\n\n\nOutputPrint the maximum possible number of happy children.\n\n\n\n\n\n\nSample Input 13 70\n20 30 10\n\n\n\n\n\nSample Output 12\n\nOne optimal way to distribute sweets is (20, 30, 20).\n\n\n\n\n\nSample Input 23 10\n20 30 10\n\n\n\n\n\nSample Output 21\n\nThe optimal way to distribute sweets is (0, 0, 10).\n\n\n\n\n\nSample Input 34 1111\n1 10 100 1000\n\n\n\n\n\nSample Output 34\n\nThe optimal way to distribute sweets is (1, 10, 100, 1000).\n\n\n\n\n\nSample Input 42 10\n20 20\n\n\n\n\n\nSample Output 40\n\nNo children will be happy, no matter how the sweets are distributed.\n\n","orig_lang_html":"<span class=\"lang-en\">\n<p>Score : <var>200<\/var> points<\/p>\n<div class=\"part\">\n<section>\n<h3>Problem Statement<\/h3><p>There are <var>N<\/var> children, numbered <var>1, 2, ..., N<\/var>.<\/p>\n<p>Snuke has decided to distribute <var>x<\/var> sweets among them.\nHe needs to give out all the <var>x<\/var> sweets, but some of the children may get zero sweets.<\/p>\n<p>For each <var>i<\/var> (<var>1 \\leq i \\leq N<\/var>), Child <var>i<\/var> will be <em>happy<\/em> if he\/she gets exactly <var>a_i<\/var> sweets.\nSnuke is trying to maximize the number of happy children by optimally distributing the sweets.\nFind the maximum possible number of happy children.<\/p>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Constraints<\/h3><ul>\n<li>All values in input are integers.<\/li>\n<li><var>2 \\leq N \\leq 100<\/var><\/li>\n<li><var>1 \\leq x \\leq 10^9<\/var><\/li>\n<li><var>1 \\leq a_i \\leq 10^9<\/var><\/li>\n<\/ul>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"io-style\">\n<div class=\"part\">\n<section>\n<h3>Input<\/h3><p>Input is given from Standard Input in the following format:<\/p>\n<pre><var>N<\/var> <var>x<\/var>\n<var>a_1<\/var> <var>a_2<\/var> <var>...<\/var> <var>a_N<\/var>\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Output<\/h3><p>Print the maximum possible number of happy children.<\/p>\n<\/section>\n<\/div>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 1<\/h3><pre>3 70\n20 30 10\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 1<\/h3><pre>2\n<\/pre>\n<p>One optimal way to distribute sweets is <var>(20, 30, 20)<\/var>.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 2<\/h3><pre>3 10\n20 30 10\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 2<\/h3><pre>1\n<\/pre>\n<p>The optimal way to distribute sweets is <var>(0, 0, 10)<\/var>.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 3<\/h3><pre>4 1111\n1 10 100 1000\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 3<\/h3><pre>4\n<\/pre>\n<p>The optimal way to distribute sweets is <var>(1, 10, 100, 1000)<\/var>.<\/p>\n<\/section>\n<\/div>\n<hr\/>\n<div class=\"part\">\n<section>\n<h3>Sample Input 4<\/h3><pre>2 10\n20 20\n<\/pre>\n<\/section>\n<\/div>\n<div class=\"part\">\n<section>\n<h3>Sample Output 4<\/h3><pre>0\n<\/pre>\n<p>No children will be happy, no matter how the sweets are distributed.<\/p><\/section>\n<\/div>\n<\/span>","orig_lang_string":"\nScore : 200 points\n\n\nProblem StatementThere are N children, numbered 1, 2, ..., N.\nSnuke has decided to distribute x sweets among them.\nHe needs to give out all the x sweets, but some of the children may get zero sweets.\nFor each i (1 \\leq i \\leq N), Child i will be happy if he\/she gets exactly a_i sweets.\nSnuke is trying to maximize the number of happy children by optimally distributing the sweets.\nFind the maximum possible number of happy children.\n\n\n\n\nConstraints\nAll values in input are integers.\n2 \\leq N \\leq 100\n1 \\leq x \\leq 10^9\n1 \\leq a_i \\leq 10^9\n\n\n\n\n\n\n\nInputInput is given from Standard Input in the following format:\nN x\na_1 a_2 ... a_N\n\n\n\n\n\nOutputPrint the maximum possible number of happy children.\n\n\n\n\n\n\nSample Input 13 70\n20 30 10\n\n\n\n\n\nSample Output 12\n\nOne optimal way to distribute sweets is (20, 30, 20).\n\n\n\n\n\nSample Input 23 10\n20 30 10\n\n\n\n\n\nSample Output 21\n\nThe optimal way to distribute sweets is (0, 0, 10).\n\n\n\n\n\nSample Input 34 1111\n1 10 100 1000\n\n\n\n\n\nSample Output 34\n\nThe optimal way to distribute sweets is (1, 10, 100, 1000).\n\n\n\n\n\nSample Input 42 10\n20 20\n\n\n\n\n\nSample Output 40\n\nNo children will be happy, no matter how the sweets are distributed.\n\n","solve_rate":0.4644872092,"codenet_problem_id":"p03254","input_testcases":{"34":"2 1\n30 1","38":"3 66\n20 30 9","93":"3 26\n1 6 5","1":"3 10\n20 18 10","89":"3 18\n3 32 11","94":"3 30\n29 18 4","80":"3 23\n3 18 11","88":"3 79\n29 59 4","4":"4 1111\n-1 2 110 1000","14":"3 70\n4 72 5","20":"3 10\n18 30 10","103":"3 10\n20 30 10","68":"3 70\n20 39 3","100":"2 10\n20 20","82":"3 70\n29 43 4","42":"2 19\n29 37","13":"2 1\n30 20","9":"3 10\n20 4 10","25":"3 70\n20 32 5","52":"3 70\n20 32 2","86":"3 18\n3 22 11","71":"3 70\n-1 2 5","102":"3 70\n20 30 10","57":"3 70\n1 118 6","65":"3 121\n1 118 6","2":"2 10\n29 20","22":"3 93\n20 30 5","28":"3 70\n4 24 5","55":"3 62\n1 80 5","47":"3 70\n4 2 5","40":"3 93\n20 30 4","43":"3 70\n20 32 6","67":"4 1101\n1 5 110 1000","27":"2 10\n35 20","7":"2 10\n30 20","6":"3 10\n20 9 10","85":"3 79\n29 43 4","61":"3 70\n20 32 3","19":"3 66\n20 30 10","70":"3 62\n1 164 5","37":"4 1101\n1 5 100 1000","3":"4 1111\n1 5 100 1000","53":"2 13\n35 34","91":"3 79\n29 18 4","41":"3 11\n37 18 10","81":"3 14\n0 2 5","26":"3 10\n16 9 10","48":"3 70\n1 72 6","104":"3 70\n20 30 10","77":"3 24\n0 2 5","74":"3 70\n29 39 3","46":"3 62\n1 40 5","54":"3 23\n4 24 7","12":"3 10\n20 1 10","32":"3 70\n4 17 5","83":"3 23\n3 22 11","45":"3 70\n4 24 7","76":"3 62\n1 164 1","62":"3 23\n4 24 11","96":"3 26\n1 10 5","84":"3 14\n0 3 5","51":"3 11\n37 18 9","98":"3 51\n3 32 15","44":"2 13\n35 20","64":"3 70\n0 2 5","0":"3 70\n20 30 5","75":"3 23\n6 18 11","60":"3 11\n37 9 9","97":"3 26\n29 18 4","79":"3 70\n29 39 4","23":"3 11\n20 18 10","5":"3 70\n20 49 5","95":"3 28\n3 32 15","73":"4 1101\n1 2 110 1000","87":"3 14\n1 3 5","69":"3 23\n4 18 11","90":"3 26\n1 3 5","11":"3 70\n4 40 5","31":"3 13\n20 1 10","8":"3 70\n4 49 5","16":"2 1\n30 26","56":"3 70\n2 2 5","24":"2 10\n29 37","101":"4 1111\n1 10 100 1000","21":"2 10\n20 2","30":"3 62\n4 40 5","63":"3 62\n1 99 5"},"output_testcases":{"34":"1\n","38":"2\n","93":"2\n","1":"1\n","89":"2\n","94":"2\n","80":"2\n","88":"2\n","4":"4\n","14":"2\n","20":"1\n","103":"1\n","68":"2\n","100":"0\n","82":"2\n","42":"0\n","13":"0\n","9":"1\n","25":"2\n","52":"2\n","86":"2\n","71":"2\n","102":"2\n","57":"2\n","65":"2\n","2":"0\n","22":"2\n","28":"2\n","55":"2\n","47":"2\n","40":"2\n","43":"2\n","67":"3\n","27":"0\n","7":"0\n","6":"1\n","85":"2\n","61":"2\n","19":"2\n","70":"2\n","37":"3\n","3":"3\n","53":"0\n","91":"2\n","41":"1\n","81":"2\n","26":"1\n","48":"2\n","104":"2\n","77":"2\n","74":"2\n","46":"2\n","54":"2\n","12":"1\n","32":"2\n","83":"2\n","45":"2\n","76":"2\n","62":"2\n","96":"2\n","84":"2\n","51":"1\n","98":"2\n","44":"0\n","64":"2\n","0":"2\n","75":"2\n","60":"1\n","97":"2\n","79":"2\n","23":"1\n","5":"2\n","95":"2\n","73":"3\n","87":"2\n","69":"2\n","90":"2\n","11":"2\n","31":"2\n","8":"2\n","16":"0\n","56":"2\n","24":"0\n","101":"4\n","21":"1\n","30":"2\n","63":"2\n"},"n_missing":18,"programs":["n,x=map(int,input().split())\na=sorted([int(i) for i in input().split()])\ncnt=0\nfor j in range(n):\n    if x>=a[j]:\n        if j!=n-1:\n            x-=a[j]\n            cnt+=1 \n        elif x==a[j]:\n            x-=a[j]\n            cnt+=1\n    else :\n        break\nprint(cnt)","N, x = map(int, input().split())\na = list(input().split())\n\na.sort()\ni = 0\nc = 0\nwhile x > 0:\n    if x >= a[i]:\n        c += 1\n    x -= a[i]\n    i += 1\nprint(c)\n","n,x = map(int,input().split())\nA = list(map(int,input().split()))\nA.sort()\nans = 0\nfor a in A:\n    x = x - a\n    if x < 0:\n        break\n    ans += 1\nif x > 0 and ans > 0:\n    ans -= 1\nprint(ans)\n","from sys import stdin\nimport itertools\n#stdin = open(\"input.txt\")\n\nif __name__ == \"__main__\":\n    N, K = [int(item) for item in stdin.readline().split()]\n    li = [int(item) for item in stdin.readline().split()]\n    \n    li.sort()\n    a = [item for i, item in enumerate(itertools.accumulate(li)) if item <= K]\n    print(len(a))","n,x=map(lambda x: int(x), input().split())\na=list(map(lambda x: int(x), input().split()))\na.sort()\nans=0\nfor i in range(n):\n    x-=a[i]\n    if x<0:\n        ans=i\n        break\nif x==0:\n    ans=n\nelif x>0:\n    ans=n-1\nprint(ans)","n, x = map(int, input().split())\n\n\na = list(map(int,input().split()))\n  \na.sort()\n\ntotal=0\nans=0\nfor i in range(n):\n  total += a[i]\n  if total > x:\n    ans = i\n    break\n  ans = i+1\n  \nprint(ans)","# vim: fileencoding=utf-8\n\n\ndef main():\n    n, x = map(int, input().split())\n    li = list(map(int, input().split()))\n    li.sort()\n    ans = 0\n    for i in range(len(li)):\n        x = x - li[i]\n        if x < 0:\n            break\n        ans += 1\n    if x > 0:\n        ans -= 1\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n","n,x = map(int,input().split())\na = sorted([int(x) for x in input().split()])\n\nans = 0\nfor i in range(n):\n    if x >= a[i] and i != n-1:\n        x -= a[i]\n        ans += 1\n    elif i == n-1:\n        if x == a[i]:\n            ans += 1\n\nprint(ans)\n","N, x = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\nc = 0\ni = 0\nwhile x > a[i] and i < N - 1:\n    x -= a[i]\n    c += 1\n    i += 1\nif x == a[i]:\n    c += 1\nprint(c)","n,x = map(int,input().split())\na = list(map(int,input().split()))\na.sort()\ncnt = 0\n\nfor i in a:\n    if x > i:\n        x -= i\n        cnt += 1\n    elif x == i:\n        cnt += 1\n        break\n    else:\n        break\nelse:\n    cnt -= 1\n\nprint(cnt)\n","def solve(n, x, A):\n    A.sort()\n    count = 0\n    for i in range(n):\n        if i < n - 1 and A[i] <= x or i == n - 1 and A[i] == x:\n            x -= A[i]\n            count += 1\n        else:\n            break\n    return count\n\n_n, _x = list(map(int, input().split()))\n_A = list(map(int, input().split()))\nprint(solve(_n, _x, _A))\n","n, x = [int(x) for x in input().split()]\nchildren = [int(x) for x in input().split()]\nchildren.sort()\nfor i, child in enumerate(children):\n    if x < child or (i==len(children)-1 and x!=child):\n        print(i)\n        break\n    else:\n        x -= child\nelse:\n    print(len(children))","N, x = map(int, input().split())\nan = map(int, input().split())\n\ncount = 0\nsan = sorted(an)\nfor a in san:\n    x -= a\n    if x < 0:\n        break\n    count += 1\nif x > 0:\n    count -= 1\n\nprint(count)\n","#!\/usr\/bin python3\n# -*- coding: utf-8 -*-\n\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    N, X = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort()\n    ret = 0\n    cnt = 0\n    if sum(A)<X:\n        print(N-1)\n    elif sum(A)==X:\n        print(N)\n    else:\n        for i in range(N):\n            X-=A[i]\n            if X<0:\n                break\n        print(i)\n\nif __name__ == '__main__':\n    main()","N, x = map(int, input().split())\na_list = list(map(int, input().split()))\na_list.sort()\n\ntmp_total_a = 0\ncount_happy = 0\nfor a in a_list:\n    tmp_total_a += a\n    if tmp_total_a <= x:\n        count_happy += 1\n    else:\n        break\n\nif tmp_total_a < x:\n    count_happy -= 1\n    \nprint(count_happy)\n","def makelist(n, m):\n    return [[0 for _ in range(m)] for _ in range(n)]\n\n\n\nN, x = map(int, input().split())\na = list(map(int, input().split()))\n\n\na.sort()\n\nans = 0\nfor i in range(N-1):\n    e = a[i]\n    if x >= e:\n        ans += 1\n        x -= e\nif a[-1] == x:\n    ans += 1\n\nprint(ans)\n","N,x=[int(i) for i in input().split()]\na=[int(i) for i in  input().split()]\na = sorted(a)\nres=0\nfor num in a:\n    if num<=x:\n        x-=num\n        res+=1\n    else:\n        break\nif x != 0 and res>0:\n    res-=1\nprint(res)\n","n,x=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nfor i in range(n):\n  if a[i]>x:\n    print(i)\n    exit()\n  x-=a[i]\nif x==0:\n  print(n)\nelse:\n  print(n-1)\n","def main():\n    v = list(map(int, input().split()))\n    n = v[0]\n    x = v[1]\n    a = list(map(int, input().split()))\n\n    # a\u306e\u5024\u304c\u5c0f\u3055\u3044\u9806\u306b\u3074\u3063\u305f\u308a\u914d\u3063\u3066\u3044\u304f\n    count = 0\n    a = sorted(a)\n\n    for i in range(len(a)):\n        if i == len(a) - 1:\n            if x == a[i]:\n                count += 1\n        elif x >= a[i]:\n            x -= a[i]\n            count += 1\n        else:\n            break\n\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()\n","N,x = map(int,input().split())\nA = list(map(int,input().split()))\n\nX = 1\nans = 0\n\nwhile x >= X:\n    ans += A.count(X)\n    x += -X*(A.count(X))\n    X += 1\n\nif ans !=0 & x!=0:\n    ans += -1\n\nprint(ans)","def main():\n    n, x = map(int, input().split())\n    an = list(map(int, input().split()))\n    an = sorted(an)\n\n    candy = 0\n    for n in range(n):\n        candy += an[n]\n        if (candy > x):\n            print(n)\n            return\n\n    print(n)\n\n\nif __name__ == '__main__':\n    main()\n\t","import sys\nimport math\nimport itertools\nimport collections\nimport heapq\nimport re\nimport numpy as np\n\nrr = lambda: sys.stdin.buffer.readline().rstrip()\nrs = lambda: sys.stdin.buffer.readline().split()\nri = lambda: int(sys.stdin.buffer.readline())\nrm = lambda: map(int, sys.stdin.buffer.readline().split())\nrl = lambda: list(map(int, sys.stdin.buffer.readline().split()))\n\ndef heapsort(iterable):\n    h = []\n    for value in iterable:\n        heapq.heappush(h, value)\n    return [heapq.heappop(h) for i in range(len(h))]\n\nn, k = rm()\na = rl()\na = heapsort(a)\ncnt = 0\nfor i in a:\n    k -= i\n    if k < 0:\n        break\n    else:\n        cnt += 1\nelse:\n    if k != 0:\n        cnt -= 1\nprint(cnt)\n\n\n","n,x=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nresult=0\nflag=0\nfor i in range(n):\n    x-=a[i]\n    if x<0:\n        result=i\n        flag=1\n        break\n    if x==0:\n        result=i+1\n        flag=1\n        break\nif flag==1:\n    print(result)\n    \nelse:\n    print(n-1)","N, x = map(int, input().split())\na = list(map(int, input().split()))\ncount = 0\na.sort()\nfor i in range(N):\n    if x >= a[i]:\n        count += 1\n        x -= a[i]\n    else:\n        break\nelse:\n    if x != 0:\n        count -= 1\nprint(count)","if __name__ == \"__main__\":\n    N,x = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    A = 0\n\n    a.sort()\n    print(a)\n    while x >= 0:\n        if a[-1] < x:\n            x -= a.pop(-1)\n            A += 1\n        else:\n            break\n\n    if x != 0:\n        A -= 1\n    print(A)\n","n, x = map(int, input().split())\na = list(map(int, input().split()))\nif sum(a) == x:\n    print(n)\nelif sum(a) < x:\n    print(n-1)\nelse:\n    a = sorted(a)\n    total = 0\n    for i in range(n):\n        total += a[i]\n        if total == x:\n            print(i+1)\n            exit()\n        elif total > x:\n            print(i)\n            exit()\n","N, x=map(int, input().split())\na=[]\na=list(map(int, input().split()))\na.sort()\nA=0\nB=0\nfor i in range(N):\n    A=A+a[i]\n    if A<=x:\n        B+=1\nif A<x:\n    B=B-1\nprint(B)\n        ","n,x=map(int,input().split())\nkids=list(map(int,input().split()))\nkids.sort()\ncount=0\nfor i in range(n):\n    x=x-kids[i]\n    if x<0:\n        break\n    count+=1\n\nif x>0:\n    print(count-1)\nelse:\n    print(count)","N, x = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nif x == sum(a):\n    print(N)\nelif x > sum(a):\n    print(N-1)\nelse:\n    for i in range(N):\n        if sum(a[:i+1]) > x:\n            print(i)\n            break\n","N,x=map(int,input().split())\na=list(map(int,input().split()))\na=sorted(a)\ncnt=0\nfor i in range(N):\n    if sum(a)==x:\n        cnt=N\n    elif sum(a)>x:\n        if x>=a[i]:\n            x-=a[i]\n            cnt+=1\n        else:\n            break\n    else:\n        cnt=N-1\n\nprint(cnt)","# -*- coding: utf-8 -*-\nimport numpy as np\nN, x = map(int, input().split())\na = input().split()\nfor i in range(len(a)):\n    a[i] = int(a[i])\n\nfor i in range(N):\n    idx = np.argmin(a[i:]) + i\n    temp = a[i]\n    a[i] = a[idx]\n    a[idx] = temp\n\nsum = 0\nfor i in range(N):\n    sum += a[i]\n\nsum2 = 0\nif sum < x:\n    ans = N - 1\nelse:\n    if a[0] > x:\n        ans = 0\n    for i in range(N):\n        sum2 += a[i]\n        if sum2 == x:\n            ans = i + 1\n            \nprint(ans)\n    ","n,x=map(int,input().split())\na=sorted(list(map(int,input().split())))\ncount=0\nfor i in range(n):\n    if i==n-1:\n        if x==a[i]:\n            count+=1\n        break\n    if x<a[i]:\n        break\n    x-=a[i]\n    count+=1\nprint(count)","import sys\nimport itertools\n\nlines = sys.stdin.readlines()\n\nfor n, line in enumerate(lines):\n  if not n:\n    N, x = [int(_) for _ in line.strip().split(' ')]\n    continue\n  children = sorted([int(_) for _ in line.strip().split(' ')])\n  break\n  \nchild_max = max(children)\ncoef_pattern = [_ for _ in range(x \/\/ child_max + 1)]\nchild_id = [_ for _ in range(len(children))]\npattern = list(itertools.product(coef_pattern, child_id))\nall_pattern = list(itertools.permutations(pattern))\n#print(all_pattern)\nmax_cnt = 0\nfor ap in all_pattern:\n  total = 0\n  cnt = 0\n  #print('ap:{}'.format(ap))\n  log = []\n  given_child = []\n  for p in ap:\n    #print('p[1]:{}, p[0]:{}'.format(p[1], p[0]))\n    total += children[p[1]] * p[0]\n    if not p[0] == 0 and not p[1] in given_child:\n      cnt += 1\n      #log.append('total:{}, p[1]:{}, p[0]:{}'.format(total, p[1], p[0]))\n      given_child.append(p[1])\n    #print('total:{}'.format(total))\n    if total == x:\n      if max_cnt < cnt:\n        max_cnt = cnt\n        #print(log)\nprint(max_cnt)","n, x = map(int,input().split())\na_l = list(map(int,input().split()))\n\na_l.sort()\ncount = 0\nfor val in a_l[:-1]:\n    x -= val\n    if x < 0:\n        break\n    count += 1\nif x == a_l[-1]:\n    count += 1\nprint(count)","n, x = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\ntotal = sum(a)\nans = 0\nif x == total:\n    ans = n\nelif x > total:\n    ans = n - 1\nelse:\n    for v in a:\n        x -= v\n        if x < 0:\n            break\n        ans += 1\nprint(ans)","import sys\ninput = sys.stdin.readline\n\nN, X = map(int, input().split())\nL = [int(v) for v in input().split()]\nL.sort()\n\nans = 0\nfor i in range(N):\n    a = L[i]\n    \n    if X >= a:\n        X -= a\n        ans += 1\n\nif ans == N and X > 0:\n    ans -= 1\n    \nprint(ans)","N, x = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\nrest = x\ni = 0\ncnt = 0\n\nwhile rest > 0 :\n    if rest < a[i] :\n        break\n    rest -= a[i]\n    i += 1\n    if (i == N) :\n        if (rest == 0) :\n            cnt += 1\n        break\n    cnt += 1\n\nprint(cnt)\n","n,x = map(int,input().split())\na = list(map(int,input().split()))\na.sort()\nans = 0\nfor i in a:\n    if x >= 0:\n        x -= i\n        ans += 1\n    else:\n        break\nif x > 0:\n    ans -= 1\nif x < 0:\n    ans -= 1\nprint(ans)","N, x = map(int, input().split())\na_s = map(int, input().split())\nsorted_a_s = sorted(a_s)\nrest_snaks = x\nsatisfied_num = 0\nfor n in range(N):\n    if sorted_a_s[n] <= rest_snaks:\n        satisfied_num += 1\n        rest_snaks -= sorted_a_s[n]\n    else:\n        rest_snaks = 0\n\nprint(satisfied_num)","import numpy\n\nN, x = list(map(int, input().split()))\na = list(map(int, input().split()))\na.sort()\na_sum = numpy.cumsum(a)\nans = numpy.sum(a_sum <= x)\n\nif ans >= 1 and a_sum[ans-1] != x:\n    ans -= 1\n\nprint(ans)\n","# coding: utf-8\n# Your code here!\nN,x=map(int,input().split())\nA=list(map(int,input().split()))\nA.sort(reverse=True)\n\ncount=0\nwhile len(A)>1:\n    temp=A.pop(-1)\n    if temp>x:\n        break\n    else:\n        count+=1\n        x-=temp\n\ntemp=A.pop(-1)\n\nif x==temp:\n    print(count+1)\nelse:\n    print(count)","N,X=map(int,input().split())\nl=list(map(int,input().split()))\nL=sorted(l)\nkids=0\nans=0\nfor i in range(N):\n  kids+=L[i]\n  if kids<=X:\n    ans+=1\n  else:\n    break\n    \nif sum(L)>=X:\n  print(ans)\n  \nelse:\n  print(ans-1)","import sys\n\nN, x = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\ns = [0 for i in range(N)]\n\nfor i in range(N):\n    if i == 0:\n        s[i] = a[i]\n    else:\n        s[i] = s[i-1] + a[i]\n\n    if s[i] > x:\n        print(i)\n        sys.exit()\n\nif s[-1] < x:\n    print(N-1)\nelse:\n    print(N)\n","N, x = map(int, input().split())\na = sorted(list(map(int, input().split())))\ncnt = 0\nfor i in a:\n    if x >= i:\n        cnt += 1\n        x -= i\n    else:\n        x = 0\n        break\nif x > 0:\n    cnt -= 1\nprint(cnt)","n, x = map(int,input().split())\na = list(map(int, input().split()))\n\na.sort()\ncount = 0\nfor ai in a:\n    if x >= ai:\n        x -= ai\n        count += 1\n    else:\n        x = 0\nif x > 0:\n    count -= 1\n\nprint(count)","import sys\ninput = sys.stdin.readline\n\n\ndef read():\n    N, x = map(int, input().strip().split())\n    A = map(int, input().strip().split())\n    return N, x, A\n\n\ndef solve(N, x, A):\n    count = 0\n    for a in sorted(A):\n        x -= a\n        if x < 0:\n            break\n        count += 1\n    if x > 0:\n        count -= 1\n    return max(count, 0)\n\n\nif __name__ == '__main__':\n    inputs = read()\n    print(\"%s\" % solve(*inputs))\n","N, x = (int(x) for x in input().split())\na = sorted([int(x) for x in input().split()])\nfor i in range(N):\n    if x < a[i]:\n        print(i)\n        break\n    else:\n        if i == N-1:\n            if x == a[i]:\n                print(i+1)\n            else:\n                print(i)\n        x -= a[i]\n","def main():\n    from builtins import int, map, list, print\n    import sys\n    sys.setrecursionlimit(10 ** 6)\n\n    input = (lambda: (sys.stdin.readline()).rstrip())\n    input_list = (lambda: input().split())\n    input_number = (lambda: int(input()))\n    input_number_list = (lambda: list(map(int, input_list())))\n\n    N, x = input_number_list()\n    A = input_number_list()\n    A.sort()\n    ans = 0\n    tmp_sum = 0\n    for a in A:\n        tmp_sum += a\n        if tmp_sum > x:\n            break\n        else:\n            ans += 1\n    if ans == N and tmp_sum != x:\n        ans -= 1\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n","N, x = map(int, input().split())\na = sorted(list(map(int, input().split())))\ncount = 0\nfor i in a:\n    x -= i\n    if x == 0:\n        count += 1\n        break\n    elif x < 0:\n        break\n    else:\n        count += 1\nprint(count)\n        ","N, x = list(map(int, input().split()))\nli = sorted(list(map(int, input().split())))\nres = 0\nfor i  in li:\n    x -= i\n    if x < 0:\n        break\n    else:\n        res += 1\nif x > 0:\n    res -= 1\n\nprint(res)\n\n","N, x = [int(_) for _ in input().split()]\nA = sorted([int(_) for _ in input().split()])\nnum = 0\nans = 0\nwhile A:\n    num += A.pop(0)\n    if (num < x and A) or num == x:\n        ans += 1\n    else:\n        break\nprint(ans)\n","n, candy = list(map(int, input().split()))\nnums = list(map(int, input().split()))\n\nnums.sort()\n\nans = 0\nfor i in range(n):\n    if candy >= nums[i]:\n        candy -= nums[i]\n        ans += 1\n    else:\n        break\n\n# \u914d\u308a\u304d\u3063\u3066\u307e\u3060\u4f59\u3063\u3066\u3044\u308b\u5834\u5408\nif candy > 0 and ans == n:\n    ans -= 1\nprint(ans)\n","N, x = map(int, input().split())\nA = [int(x) for x in input().split()]\n\ndef f():\n    As = sorted(A)\n    s = 0\n    for i,a in enumerate(As):\n        s += a\n        if x < s:\n            return i\n        if x == s:\n            return i + 1\n    return N - 1\nprint(f())","import sys\nN,x = map(int,input().split())\nA = list(map(int,input().split()))\nA.sort()\nans = 0\nfor i in range(N):\n    x -= A[i]\n    if x < 0:\n        print(ans)\n        sys.exit()\n    ans += 1\nprint(ans)","n,x=map(int,input().split())\na=list(map(int,input().split() for i in range(n)))\na_sort=sorted(a)\ncount=0\nsum=0\nfor i in a_sort:\n    if sum+i<=x:\n        sum=sum+i\n        count+=1\n    else:\n        break\nprint(count)\n","N,x=map(int,input().split)","n,x = map(int,input().split())\nl = sorted(list(map(int,input().split())))\npe = 0\nfor i in l:\n  if x-i>=0:\n    x -= i\n    pe += 1\n  else:\n    break\nif x!=0 and pe>=1:\n  print(pe-1)\nelse:\n  print(pe)","children = list(map(int,input().split())) \nchildren.sort()\ncount=0\nc = 0\nif x < children[0]:\n  print(0)\n  exit()\nfor i in range(n):\n  count += children[i]\n  c += 1\n  if count == x:\n    print(c)\n    exit()\n  elif count > x:\n    print(c-1)\n    exit()\n\nprint(n-1)","n, x = input().split(\" \")\na = input().split(\" \")\n\nn, x = int(n), int(x)\na = sorted([int(i) for i in a])\n\ns = x\nret = 0\nfor i in a:\n    if s >= i:\n        ret+=1\n        s-=i\n    else:\n        break\nif ret and s != 0:\n    ret -= 1\n\nprint(ret)\n","N, X = map(int, input().split())\nA = list(map(int, input().split()))\nA.sort()\n\nans = 0\nfor a in A:\n    if X >= a:\n        ans += 1\n        X -= a\n\nif ans == N and X > 0:\n    ans -= 1\n\nprint(ans)\n","n, x = map(int, input().split())\na_list = list(map(int, input().split()))\n\na_list.sort()\nans = 0\nfor i in range(n):\n  a = a_list[i]\n  x = x - a\n  if x < 0:\n    break\n  ans += 1\nprint(ans)","n,x=list(map(int,input().split()))\na=sorted(list(map(int,input().split())))\ni=0\nnum=0\nfor i in a:\n    x=x-i\n    num+=1\n    if x==0:\n        break\n    if x<=0:\n        num-=1\n        break\nif x>0:\n    num-=1\nprint(num)","N, x = map(int, input().split())\nchild_list = list(map(int, input().split()))\n\ncount = 0\nfor i, child in enumerate(sorted(child_list)):\n  x -= child\n  if x < 0:\n    break\n  if (i == len(child_list) - 1) and x != 0:\n    break\n  count += 1\n\nprint(count)","N, x = map(int, input().split())\na = [int(i) for i in input().split()]\na = sorted(a)\n\nsum_okashi = 0\nans = 0\nfor i in range(len(a)):\n    sum_okashi += a[i]\n    if sum_okashi > x:\n        break\nans = i if sum_okashi > x else i + 1\n\nprint(ans)","N, x = map(int,input().split())\nA = list(map(int,input().split()))\n\nans = 0\nA.sort()\ni = 0\nwhile i < N and x > 0:\n    if x >= A[i]:\n        if i != N-1 or x == A[i]:\n            ans += 1\n        x -= A[i]\n    else:\n        break\n    i += 1\n\nprint(ans)","n,x=map(int, input().split())\na=list(map(int, input().split()))\na.sort()\ncount=0\ni=0\nwhile x>0 and i<n:\n    x-=a[i]\n    if x>=0:count+=1\n    i+=1 \nif x!=0 and count==n:count-=1\nprint(count)","def getInput():\n    return [int(i) for i in input().rstrip().split(' ')]\n\nN, x = getInput()\na_i = getInput()\na_i.sort()\nchild = 0\nfor i in range(N):\n    a = a_i.pop(0)\n    if x >= a:\n        x = x - a\n        if x > 0 and not a_i:\n            break\n        child += 1\n    if x == 0:\n        break\n\nprint(child)","n,x = map(int,input().split())\nli = list(map(int,input().split()))\nlist.sort(li)\ntotal = 0\nnum = 0\nfor i in range(n):\n    if total + li[i] >= x:\n        num = i + 1\n        break\n    elif i == n - 1:\n        num = i + 1\n    else:\n        total += li[i]\nprint(num)\n","n,x = map(int,input().split())\na = list(map(int,input().split()))\na = sorted(a)\ncounter = 0\nfor i in range(n):\n    x -= a[i]\n    if x == 0 and i == 0:\n        counter +=1\n    elif x > 0 and 0 <= i <= n-2:\n        counter +=1\n    elif x == 0 and i == n-1:\n        counter +=1\nprint(counter)","N, x = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\na.sort()\n\ncnt = 0\nfor i, child in enumerate(a):\n    if x == 0:\n        break\n    if child == x:\n        cnt += 1\n        break\n    if child < x:\n        # \u6700\u5f8c\u306e\u8981\u7d20\u304b\u5224\u5b9a\n        if i == len(a) - 1:\n            break\n        x -= child\n        cnt += 1\n\nprint(cnt)","N, x = map(int, input().split())\n\na = list(map(int, input().split()))\n\na.sort()\n\ncurrent = x\nresult = 0\n\nfor i in range(N):\n    if  current >= a[i]:\n        current -= a[i]\n        result += 1\n\nif current > 0 and result != 0:\n    result -= 1\n\nprint(result)","n,x = map(int,input().split())\narr = list(map(int,input().split()))\nans = 0;\narr.sort();\n\nfor i in range(n):\n\n\tif x < arr[i]:\n\t\tbreak;\n\telse:\n\t\tans+=1;\n\t\tx -= arr[i];\n\nif x > 0 and ans > 0:\n\tans-=1;\n\nprint(ans);","import numpy as np\nimport sys\n\ninput = sys.stdin.readline\n\nN,x = map(int,input().split())\n\na = list(map(int,input().split()))\n\na.sort()\n\nans = 0\nfor i in range(N):\n    if x >= a[i]:\n        x-= a[i]\n        ans+=1\n    else:\n        print(i)\n        exit()\n\nif ans == N and x > 0:ans-=1\n\nprint(ans)\n\n","N, x = list(map(int, input().split()))\na = list(map(int, input().split()))\nresult = 0\nsorted_a = sorted(a)\nremain = x\nfor a_i in sorted_a:\n    if remain >= a_i:\n        result += 1\n        remain -= a_i\n    else:\n        break\n\n### \u6700\u5f8c\u306e\u5b50\u4f9b\u306b\u3074\u3063\u305f\u308a\u306e\u304a\u83d3\u5b50\u3092\u3042\u3052\u3089\u308c\u306a\u304b\u3063\u305f\nif result == N and remain != 0:\n    result -= 1\nprint(result)","N, x = list(map(int, input().split()))\na_list = list(map(int, input().split()))\n\nans = 0\ntotal = 0\n\na_list.sort()\n\nfor i, a in enumerate(a_list):\n    total += a\n\n    if x < total:\n        break\n            \n    elif i == len(a_list) - 1 and x > total:\n        None\n        \n    else:\n        ans += 1\n    \nprint(ans)","N,x = map(int, input().split())\nli = list(map(int, input().split()))\nli.sort()\na = 0\nan = 0\nwhile a < N:\n    x -= li[a]\n    if x < 0:\n        break\n    an += 1\n    a += 1\nif x > 0:\n    an -= 1\nprint(an)","a = input().split()\na = [int(i) for i in a]\nb = input().split()\nb = [int(i) for i in b]\nb = sorted(b)\noutput = 0\nend = False\n\nfor i in range(len(b)-  1):\n\tif a[1] - b[i] > 0:\n\t\ta[1] += -b[i]\n\t\toutput += 1\n\telif(a[1] - b[i] == 0):\n\t\toutput += 1\n\t\tend = True\n\t\tbreak\n\telse:\n\t\tend = True\n\t\tpass\n\t\t\nif end == False:\n\tif a[1] - b[-1] < 0:\n\t\toutput -= 1\n\telif a[1] - b[-1] > 0:\n\t\toutput -= 1\n\telse:\n\t\toutput += 1\n\t\t \nprint(output)","N, x = [int(z) for z in input().split()]\nchildren = [int(z) for z in input().split()]\n\nchildren.sort()\nsum = 0\n\nfor i in children:\n    sum += i\n\nif sum < x:\n    print(N - 1)\n#elif sum == x:\n#    print(N)\nelse:\n    cnt = 0\n    for i in children:\n        if x - i < 0:\n            break\n        else:\n            x -= i\n            cnt += 1\n    print(cnt)\n","N, x = tuple(int(i) for i in input().split())\na = [int(i) for i in input().split()]\n\ndef f(a, x):\n    print(\"f\", a, x)\n    if not a:\n        return 0\n\n    a.append(x)\n    a = sorted(a)\n    i = a.index(x)\n    print(\"i\", a, i)\n    if i < len(a)-1:\n        return len(a) - 2\n    elif a[i-1] == a[i]:\n        return len(a) - 2\n    return f(a[:i-1], x-a[i-1])\n\n\ns = sum(a)\nif x == s:\n    print(N)\nelif x > s:\n    print(N-1)\nelse:\n    print(f(a, s-x))\n","headData = input().split()\ncandyTotal = int(headData[1])\nchildList = [ int(n) for n in input().split()]\nchildList.sort()\nchildTotal = sum(childList)\n\nif candyTotal == childTotal:\n    print(len(childList))\nelif candyTotal > childTotal:\n    print(len(childList)-1)\nelse:\n    answer=0\n    childSum=0\n    for child in childList:\n        childSum = childSum + child\n        if childSum > candyTotal:\n            print(answer)\n            exit()\n        else:\n            answer = answer + 1\n    print(answer-1)","def main():\n    N,x=[int(i) for i in input().split()]\n    a=input().split()\n    k=0\n    while True:\n        if x>=int(min(a)):\n            x=x-int(min(a))\n            a.remove(min(a))\n            k+=1\n            if len(a)==0:\n                break\n        else:\n            break\n    print(k)\nmain()\n","n, x = map(int, input().split())\na = sorted(list(map(int, input().split())))\nans = 0\nfor i in range(n):\n    if a[i] <= x:\n        x -= a[i]\n        ans += 1\n    else:\n        x = 0\n        break\nif not x == 0:\n    ans -= 1\nprint(ans)","n, x = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nif x < a[0]:\n\tprint(0)\n\texit()\n\nif sum(a) < x:\n\tprint(n - 1)\n\texit()\n\ncnt = 0\nfor i in range(n):\n\tif a[i] <= x:\n\t\tcnt += 1\n\t\tx -= a[i]\n\nprint(cnt)\n","n,x = map(int,input().split())\na = list(map(int, input().split()))\nans = 0\na.sort()\nfor i in range(0,n):\n    x -= a[i]\n    if x < 0:\n        break\n    if i == n-1:\n        if x == 0:\n            ans += 1\n            break\n        else:\n            break\n    ans += 1\nprint(ans)\n","\ndef cumsum(inlist):\n    s = 0\n    outlist = []\n    for i in inlist:\n        s += i\n        outlist.append(s)\n    return outlist\n\nn, x = [ int(v) for v in input().split() ]\ncandy_list = sorted([ int(v) for v in input().split() ])\ncandy_list_2 = cumsum(candy_list)\n\nif sum(candy_list) <= x:\n    print(n)\nelse:\n    for i in range(n):\n        if candy_list_2[i] > x:\n            print(i)\n            break \n","#AGC027 A\n'''\n\u554f\u984c\nN\u4eba\u306e\u5b50\u4f9b\u304c\u3044\u308b\nx\u500b\u306e\u304a\u83d3\u5b50\u3092\u3059\u3079\u3066\u914d\u308a\u5207\u3089\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\n\u304a\u83d3\u5b50\u3092\u3082\u3089\u308f\u306a\u3044\u3053\u3069\u3082\u304c\u3044\u3066\u3082\u3088\u3044\n\u5b50\u4f9bi\u306f\u3061\u3087\u3046\u3069ai\u500b\u306e\u304a\u304b\u3057\u3092\u3082\u3089\u3046\u3068\u559c\u3076\n\u559c\u3076\u5b50\u4f9b\u306e\u4eba\u6570\u306e\u6700\u5927\u5024\u306f?\n\n\u8003\u5bdf\nai\u3092\u5c0f\u3055\u3044\u9806\u306b\u30bd\u30fc\u30c8\u3057,x\u304b\u3089\u9806\u756a\u306bai\u3092\u5f15\u3044\u3066\u3044\u304f\n'''\n\nN,x = map(int,input().split(' '))\nA = sorted(list(map(int,input().split(' '))))\n\nans = 0\n\nfor a in A:\n\tif x>=a:\n\t\tans += 1\n\t\tx -= a\n\telif x<a:\n\t\tbreak\n\n#\u304a\u83d3\u5b50\u304c\u6700\u7d42\u7684\u306b\u4f59\u3063\u305f\u5834\u5408\u306e\u51e6\u7406\nif ans==N and x>0:\n\tans -= 1\n\nprint(str(ans))","N,x = map(int,input().split())\nA = list(map(int,input().split()))\nA.sort()\ncount = 0\nflag = True\n\nfor i in range(len(A)):\n  if x - A[i] >= 0:\n    x -= A[i]\n    count += 1\n  else:\n    flag = False\n    break\n    \nif x > 0 and flag:\n  print(count-1)\nelse:\n  print(count)","# AGC 027 A - Candy Distribution Again\nn, x = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\ncount = 0\nfor i in range(n):\n    if i == n-1:\n        if x == a[i]:\n            count += 1\n        else:\n            break\n    elif x >= a[i]:\n        x -= a[i]\n        count += 1\n    else:\n        break\n        \nprint(count)","N,x = map(int, input().split())\nA = sorted(map(int, input().split()))\ns = 0\nfor i in range(N):\n  x -= A[i]\n  if x<0:\n    break\n  else:\n    s += 1\nprint(s)","# 2019\/05\/21\n# AtCoder Grand Contest 027 - A\n\n# For the Answer:\n# 1. \u30ea\u30b9\u30c8\u3092\u6607\u9806\u30bd\u30fc\u30c8\n# 2. \u5c0f\u3055\u3044\u65b9\u304b\u3089\u8db3\u3057\u3066\u3044\u304f\n# 2-1. x\u3068\u7b49\u3057\u304f\u306a\u3063\u305f\u3089\u3001\u7b54\u3048\n# 2-2. x\u3092\u8d85\u3048\u305f\u3089\u3001\u6700\u5f8c\u306e1\u500b\u3067\u6e80\u8db3\u3059\u308b\u306e\u304c\u3044\u308b\u304b\u63a2\u7d22(\u3044\u306a\u3051\u308c\u3070-1)\n# 2-3. n\u307e\u3067\u8db3\u3057\u3066\u3082\u7b49\u3057\u304f\u306a\u3051\u308c\u3070\u3001-1\n\n# Input\nn, x = map(int, input().split())\na = list(map(int, input().split()))\n\n# 1.\na.sort()\n\n#2. \nacm = 0\nans = -1\nfor i in range(n):\n    acm += a[i]\n    # 2-1.\n    if acm == x:\n        ans = i + 1\n        break\n    # 2-2.\n    elif acm > x:\n        wk_acm = acm - a[i]\n        j = i + 1\n        while j < n:\n            if wk_acm + a[j] == x:\n                ans = i + 1\n                break\n            j += 1\n        if j >= n:\n            ans = i\n        break\n\n# 2-3.\nif i == n - 1 and x != acm:\n    ans = n - 1\n\n# Output\nprint(ans)\n","N,x=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\ntotal=0\nj=0\nssum=sum(a)\n\nif ssum>=x:\n    for i in range(N):\n        total+=a[i]\n        if total>x:\n            break\n        j+=1\n    print(j)\nelse:\n    print(N-1)\n","try:\n    N, x = map(int, input().split())\n    l = list(map(int, input().split()))\n    l_ = sorted(l)\n    cnt = 0\n    for i in l_:\n        _ = x-i\n        if _>= 0:\n            cnt += 1\n        if _<0:\n            break\n    print(cnt)\nexcept EOFError:\n    pass","N, x = map(int, input().split())\nan = list(map(int, input().split()))\nan.sort()\nans = 0\nfor a in an:\n    x -= a\n    if x < 0:\n        break\n    ans += 1\nif x > 0:\n    ans -= 1\nprint(ans)\n","def solve():\n    N,x=map(int,input().split())\n    a=list(map(int,input().split()))\n    a=sorted(a)\n    ans = 0\n    for i,ai in enumerate(a):\n        x -= ai\n        if x == 0:\n            return i + 1\n        elif x < 0:\n            return i\n    return N - 1\n\nprint(solve())\n","n, x = [int(i) for i in input().split()]\nA = [int(i) for i in input().split()]\n\nA.sort()\nct = 0\nfor i in range(n):\n    if x>=A[i]:\n        ct+=1\n        x -= A[i]\nif x!=0:\n    ct-=1\nprint(ct)\n","n,x=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nans=0\nfor i in range(n):\n  if a[i]<=x:\n    x=x-a[i]\n    ans=ans+1\nprint(ans)\n","#!\/usr\/bin\/python\n# -*- coding: utf-8 -*-\n\ns = raw_input()\nn, x =  [int(i) for i in s.split()]\n\naa = raw_input()\na = [int(i) for i in aa.split()]\n\na = sorted(a)\ncount = 0\ntotal = 0\nfor i in a:\n    total += i\n    if total > x:\n        break\n    count += 1\nprint count","n,x=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\ncnt=0\nans=0\nfor i in range(n):\n    cnt+=a[i]\n    if cnt==x:\n        ans=i+1\n        break\n    elif cnt>x:\n        ans=i\n        break\n    elif i==n-1:\n        ans=n-1\nprint(ans)","N, x = map(int, input().split())\nA = list(map(int, input().split()))\nA.sort()\ncount = 0\nfor i in A:\n  if x >= i:\n    count += 1\n    x -= i\n  else:\n    break\nprint(count)","N, x = map(int, input().split())\na = list(map(int, input().split()))\na = sorted(a)\nn = 0\nfor i in range(N):\n  x -= a[i]\n  if x < 0:\n    break\n  n += 1\nif x != 0:\n  n -= 1\nprint(n)"],"raw_generations":["n,x=map(int,input().split())\na=sorted([int(i) for i in input().split()])\ncnt=0\nfor j in range(n):\n    if x>=a[j]:\n        if j!=n-1:\n            x-=a[j]\n            cnt+=1 \n        elif x==a[j]:\n            x-=a[j]\n            cnt+=1\n    else :\n        break\nprint(cnt)","N, x = map(int, input().split())\na = list(input().split())\n\na.sort()\ni = 0\nc = 0\nwhile x > 0:\n    if x >= a[i]:\n        c += 1\n    x -= a[i]\n    i += 1\nprint(c)\n","n,x = map(int,input().split())\nA = list(map(int,input().split()))\nA.sort()\nans = 0\nfor a in A:\n    x = x - a\n    if x < 0:\n        break\n    ans += 1\nif x > 0 and ans > 0:\n    ans -= 1\nprint(ans)\n","from sys import stdin\nimport itertools\n#stdin = open(\"input.txt\")\n\nif __name__ == \"__main__\":\n    N, K = [int(item) for item in stdin.readline().split()]\n    li = [int(item) for item in stdin.readline().split()]\n    \n    li.sort()\n    a = [item for i, item in enumerate(itertools.accumulate(li)) if item <= K]\n    print(len(a))","n,x=map(lambda x: int(x), input().split())\na=list(map(lambda x: int(x), input().split()))\na.sort()\nans=0\nfor i in range(n):\n    x-=a[i]\n    if x<0:\n        ans=i\n        break\nif x==0:\n    ans=n\nelif x>0:\n    ans=n-1\nprint(ans)","n, x = map(int, input().split())\n\n\na = list(map(int,input().split()))\n  \na.sort()\n\ntotal=0\nans=0\nfor i in range(n):\n  total += a[i]\n  if total > x:\n    ans = i\n    break\n  ans = i+1\n  \nprint(ans)","# vim: fileencoding=utf-8\n\n\ndef main():\n    n, x = map(int, input().split())\n    li = list(map(int, input().split()))\n    li.sort()\n    ans = 0\n    for i in range(len(li)):\n        x = x - li[i]\n        if x < 0:\n            break\n        ans += 1\n    if x > 0:\n        ans -= 1\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n","n,x = map(int,input().split())\na = sorted([int(x) for x in input().split()])\n\nans = 0\nfor i in range(n):\n    if x >= a[i] and i != n-1:\n        x -= a[i]\n        ans += 1\n    elif i == n-1:\n        if x == a[i]:\n            ans += 1\n\nprint(ans)\n","N, x = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\nc = 0\ni = 0\nwhile x > a[i] and i < N - 1:\n    x -= a[i]\n    c += 1\n    i += 1\nif x == a[i]:\n    c += 1\nprint(c)","n,x = map(int,input().split())\na = list(map(int,input().split()))\na.sort()\ncnt = 0\n\nfor i in a:\n    if x > i:\n        x -= i\n        cnt += 1\n    elif x == i:\n        cnt += 1\n        break\n    else:\n        break\nelse:\n    cnt -= 1\n\nprint(cnt)\n","def solve(n, x, A):\n    A.sort()\n    count = 0\n    for i in range(n):\n        if i < n - 1 and A[i] <= x or i == n - 1 and A[i] == x:\n            x -= A[i]\n            count += 1\n        else:\n            break\n    return count\n\n_n, _x = list(map(int, input().split()))\n_A = list(map(int, input().split()))\nprint(solve(_n, _x, _A))\n","n, x = [int(x) for x in input().split()]\nchildren = [int(x) for x in input().split()]\nchildren.sort()\nfor i, child in enumerate(children):\n    if x < child or (i==len(children)-1 and x!=child):\n        print(i)\n        break\n    else:\n        x -= child\nelse:\n    print(len(children))","N, x = map(int, input().split())\nan = map(int, input().split())\n\ncount = 0\nsan = sorted(an)\nfor a in san:\n    x -= a\n    if x < 0:\n        break\n    count += 1\nif x > 0:\n    count -= 1\n\nprint(count)\n","#!\/usr\/bin python3\n# -*- coding: utf-8 -*-\n\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    N, X = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort()\n    ret = 0\n    cnt = 0\n    if sum(A)<X:\n        print(N-1)\n    elif sum(A)==X:\n        print(N)\n    else:\n        for i in range(N):\n            X-=A[i]\n            if X<0:\n                break\n        print(i)\n\nif __name__ == '__main__':\n    main()","N, x = map(int, input().split())\na_list = list(map(int, input().split()))\na_list.sort()\n\ntmp_total_a = 0\ncount_happy = 0\nfor a in a_list:\n    tmp_total_a += a\n    if tmp_total_a <= x:\n        count_happy += 1\n    else:\n        break\n\nif tmp_total_a < x:\n    count_happy -= 1\n    \nprint(count_happy)\n","def makelist(n, m):\n    return [[0 for _ in range(m)] for _ in range(n)]\n\n\n\nN, x = map(int, input().split())\na = list(map(int, input().split()))\n\n\na.sort()\n\nans = 0\nfor i in range(N-1):\n    e = a[i]\n    if x >= e:\n        ans += 1\n        x -= e\nif a[-1] == x:\n    ans += 1\n\nprint(ans)\n","N,x=[int(i) for i in input().split()]\na=[int(i) for i in  input().split()]\na = sorted(a)\nres=0\nfor num in a:\n    if num<=x:\n        x-=num\n        res+=1\n    else:\n        break\nif x != 0 and res>0:\n    res-=1\nprint(res)\n","n,x=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nfor i in range(n):\n  if a[i]>x:\n    print(i)\n    exit()\n  x-=a[i]\nif x==0:\n  print(n)\nelse:\n  print(n-1)\n","def main():\n    v = list(map(int, input().split()))\n    n = v[0]\n    x = v[1]\n    a = list(map(int, input().split()))\n\n    # a\u306e\u5024\u304c\u5c0f\u3055\u3044\u9806\u306b\u3074\u3063\u305f\u308a\u914d\u3063\u3066\u3044\u304f\n    count = 0\n    a = sorted(a)\n\n    for i in range(len(a)):\n        if i == len(a) - 1:\n            if x == a[i]:\n                count += 1\n        elif x >= a[i]:\n            x -= a[i]\n            count += 1\n        else:\n            break\n\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()\n","N,x = map(int,input().split())\nA = list(map(int,input().split()))\n\nX = 1\nans = 0\n\nwhile x >= X:\n    ans += A.count(X)\n    x += -X*(A.count(X))\n    X += 1\n\nif ans !=0 & x!=0:\n    ans += -1\n\nprint(ans)","def main():\n    n, x = map(int, input().split())\n    an = list(map(int, input().split()))\n    an = sorted(an)\n\n    candy = 0\n    for n in range(n):\n        candy += an[n]\n        if (candy > x):\n            print(n)\n            return\n\n    print(n)\n\n\nif __name__ == '__main__':\n    main()\n\t","import sys\nimport math\nimport itertools\nimport collections\nimport heapq\nimport re\nimport numpy as np\n\nrr = lambda: sys.stdin.buffer.readline().rstrip()\nrs = lambda: sys.stdin.buffer.readline().split()\nri = lambda: int(sys.stdin.buffer.readline())\nrm = lambda: map(int, sys.stdin.buffer.readline().split())\nrl = lambda: list(map(int, sys.stdin.buffer.readline().split()))\n\ndef heapsort(iterable):\n    h = []\n    for value in iterable:\n        heapq.heappush(h, value)\n    return [heapq.heappop(h) for i in range(len(h))]\n\nn, k = rm()\na = rl()\na = heapsort(a)\ncnt = 0\nfor i in a:\n    k -= i\n    if k < 0:\n        break\n    else:\n        cnt += 1\nelse:\n    if k != 0:\n        cnt -= 1\nprint(cnt)\n\n\n","n,x=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nresult=0\nflag=0\nfor i in range(n):\n    x-=a[i]\n    if x<0:\n        result=i\n        flag=1\n        break\n    if x==0:\n        result=i+1\n        flag=1\n        break\nif flag==1:\n    print(result)\n    \nelse:\n    print(n-1)","N, x = map(int, input().split())\na = list(map(int, input().split()))\ncount = 0\na.sort()\nfor i in range(N):\n    if x >= a[i]:\n        count += 1\n        x -= a[i]\n    else:\n        break\nelse:\n    if x != 0:\n        count -= 1\nprint(count)","if __name__ == \"__main__\":\n    N,x = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    A = 0\n\n    a.sort()\n    print(a)\n    while x >= 0:\n        if a[-1] < x:\n            x -= a.pop(-1)\n            A += 1\n        else:\n            break\n\n    if x != 0:\n        A -= 1\n    print(A)\n","n, x = map(int, input().split())\na = list(map(int, input().split()))\nif sum(a) == x:\n    print(n)\nelif sum(a) < x:\n    print(n-1)\nelse:\n    a = sorted(a)\n    total = 0\n    for i in range(n):\n        total += a[i]\n        if total == x:\n            print(i+1)\n            exit()\n        elif total > x:\n            print(i)\n            exit()\n","N, x=map(int, input().split())\na=[]\na=list(map(int, input().split()))\na.sort()\nA=0\nB=0\nfor i in range(N):\n    A=A+a[i]\n    if A<=x:\n        B+=1\nif A<x:\n    B=B-1\nprint(B)\n        ","n,x=map(int,input().split())\nkids=list(map(int,input().split()))\nkids.sort()\ncount=0\nfor i in range(n):\n    x=x-kids[i]\n    if x<0:\n        break\n    count+=1\n\nif x>0:\n    print(count-1)\nelse:\n    print(count)","N, x = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nif x == sum(a):\n    print(N)\nelif x > sum(a):\n    print(N-1)\nelse:\n    for i in range(N):\n        if sum(a[:i+1]) > x:\n            print(i)\n            break\n","N,x=map(int,input().split())\na=list(map(int,input().split()))\na=sorted(a)\ncnt=0\nfor i in range(N):\n    if sum(a)==x:\n        cnt=N\n    elif sum(a)>x:\n        if x>=a[i]:\n            x-=a[i]\n            cnt+=1\n        else:\n            break\n    else:\n        cnt=N-1\n\nprint(cnt)","# -*- coding: utf-8 -*-\nimport numpy as np\nN, x = map(int, input().split())\na = input().split()\nfor i in range(len(a)):\n    a[i] = int(a[i])\n\nfor i in range(N):\n    idx = np.argmin(a[i:]) + i\n    temp = a[i]\n    a[i] = a[idx]\n    a[idx] = temp\n\nsum = 0\nfor i in range(N):\n    sum += a[i]\n\nsum2 = 0\nif sum < x:\n    ans = N - 1\nelse:\n    if a[0] > x:\n        ans = 0\n    for i in range(N):\n        sum2 += a[i]\n        if sum2 == x:\n            ans = i + 1\n            \nprint(ans)\n    ","n,x=map(int,input().split())\na=sorted(list(map(int,input().split())))\ncount=0\nfor i in range(n):\n    if i==n-1:\n        if x==a[i]:\n            count+=1\n        break\n    if x<a[i]:\n        break\n    x-=a[i]\n    count+=1\nprint(count)","import sys\nimport itertools\n\nlines = sys.stdin.readlines()\n\nfor n, line in enumerate(lines):\n  if not n:\n    N, x = [int(_) for _ in line.strip().split(' ')]\n    continue\n  children = sorted([int(_) for _ in line.strip().split(' ')])\n  break\n  \nchild_max = max(children)\ncoef_pattern = [_ for _ in range(x \/\/ child_max + 1)]\nchild_id = [_ for _ in range(len(children))]\npattern = list(itertools.product(coef_pattern, child_id))\nall_pattern = list(itertools.permutations(pattern))\n#print(all_pattern)\nmax_cnt = 0\nfor ap in all_pattern:\n  total = 0\n  cnt = 0\n  #print('ap:{}'.format(ap))\n  log = []\n  given_child = []\n  for p in ap:\n    #print('p[1]:{}, p[0]:{}'.format(p[1], p[0]))\n    total += children[p[1]] * p[0]\n    if not p[0] == 0 and not p[1] in given_child:\n      cnt += 1\n      #log.append('total:{}, p[1]:{}, p[0]:{}'.format(total, p[1], p[0]))\n      given_child.append(p[1])\n    #print('total:{}'.format(total))\n    if total == x:\n      if max_cnt < cnt:\n        max_cnt = cnt\n        #print(log)\nprint(max_cnt)","n, x = map(int,input().split())\na_l = list(map(int,input().split()))\n\na_l.sort()\ncount = 0\nfor val in a_l[:-1]:\n    x -= val\n    if x < 0:\n        break\n    count += 1\nif x == a_l[-1]:\n    count += 1\nprint(count)","n, x = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\ntotal = sum(a)\nans = 0\nif x == total:\n    ans = n\nelif x > total:\n    ans = n - 1\nelse:\n    for v in a:\n        x -= v\n        if x < 0:\n            break\n        ans += 1\nprint(ans)","import sys\ninput = sys.stdin.readline\n\nN, X = map(int, input().split())\nL = [int(v) for v in input().split()]\nL.sort()\n\nans = 0\nfor i in range(N):\n    a = L[i]\n    \n    if X >= a:\n        X -= a\n        ans += 1\n\nif ans == N and X > 0:\n    ans -= 1\n    \nprint(ans)","N, x = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\nrest = x\ni = 0\ncnt = 0\n\nwhile rest > 0 :\n    if rest < a[i] :\n        break\n    rest -= a[i]\n    i += 1\n    if (i == N) :\n        if (rest == 0) :\n            cnt += 1\n        break\n    cnt += 1\n\nprint(cnt)\n","n,x = map(int,input().split())\na = list(map(int,input().split()))\na.sort()\nans = 0\nfor i in a:\n    if x >= 0:\n        x -= i\n        ans += 1\n    else:\n        break\nif x > 0:\n    ans -= 1\nif x < 0:\n    ans -= 1\nprint(ans)","N, x = map(int, input().split())\na_s = map(int, input().split())\nsorted_a_s = sorted(a_s)\nrest_snaks = x\nsatisfied_num = 0\nfor n in range(N):\n    if sorted_a_s[n] <= rest_snaks:\n        satisfied_num += 1\n        rest_snaks -= sorted_a_s[n]\n    else:\n        rest_snaks = 0\n\nprint(satisfied_num)","import numpy\n\nN, x = list(map(int, input().split()))\na = list(map(int, input().split()))\na.sort()\na_sum = numpy.cumsum(a)\nans = numpy.sum(a_sum <= x)\n\nif ans >= 1 and a_sum[ans-1] != x:\n    ans -= 1\n\nprint(ans)\n","# coding: utf-8\n# Your code here!\nN,x=map(int,input().split())\nA=list(map(int,input().split()))\nA.sort(reverse=True)\n\ncount=0\nwhile len(A)>1:\n    temp=A.pop(-1)\n    if temp>x:\n        break\n    else:\n        count+=1\n        x-=temp\n\ntemp=A.pop(-1)\n\nif x==temp:\n    print(count+1)\nelse:\n    print(count)","N,X=map(int,input().split())\nl=list(map(int,input().split()))\nL=sorted(l)\nkids=0\nans=0\nfor i in range(N):\n  kids+=L[i]\n  if kids<=X:\n    ans+=1\n  else:\n    break\n    \nif sum(L)>=X:\n  print(ans)\n  \nelse:\n  print(ans-1)","import sys\n\nN, x = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\ns = [0 for i in range(N)]\n\nfor i in range(N):\n    if i == 0:\n        s[i] = a[i]\n    else:\n        s[i] = s[i-1] + a[i]\n\n    if s[i] > x:\n        print(i)\n        sys.exit()\n\nif s[-1] < x:\n    print(N-1)\nelse:\n    print(N)\n","N, x = map(int, input().split())\na = sorted(list(map(int, input().split())))\ncnt = 0\nfor i in a:\n    if x >= i:\n        cnt += 1\n        x -= i\n    else:\n        x = 0\n        break\nif x > 0:\n    cnt -= 1\nprint(cnt)","n, x = map(int,input().split())\na = list(map(int, input().split()))\n\na.sort()\ncount = 0\nfor ai in a:\n    if x >= ai:\n        x -= ai\n        count += 1\n    else:\n        x = 0\nif x > 0:\n    count -= 1\n\nprint(count)","import sys\ninput = sys.stdin.readline\n\n\ndef read():\n    N, x = map(int, input().strip().split())\n    A = map(int, input().strip().split())\n    return N, x, A\n\n\ndef solve(N, x, A):\n    count = 0\n    for a in sorted(A):\n        x -= a\n        if x < 0:\n            break\n        count += 1\n    if x > 0:\n        count -= 1\n    return max(count, 0)\n\n\nif __name__ == '__main__':\n    inputs = read()\n    print(\"%s\" % solve(*inputs))\n","N, x = (int(x) for x in input().split())\na = sorted([int(x) for x in input().split()])\nfor i in range(N):\n    if x < a[i]:\n        print(i)\n        break\n    else:\n        if i == N-1:\n            if x == a[i]:\n                print(i+1)\n            else:\n                print(i)\n        x -= a[i]\n","def main():\n    from builtins import int, map, list, print\n    import sys\n    sys.setrecursionlimit(10 ** 6)\n\n    input = (lambda: (sys.stdin.readline()).rstrip())\n    input_list = (lambda: input().split())\n    input_number = (lambda: int(input()))\n    input_number_list = (lambda: list(map(int, input_list())))\n\n    N, x = input_number_list()\n    A = input_number_list()\n    A.sort()\n    ans = 0\n    tmp_sum = 0\n    for a in A:\n        tmp_sum += a\n        if tmp_sum > x:\n            break\n        else:\n            ans += 1\n    if ans == N and tmp_sum != x:\n        ans -= 1\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n","N, x = map(int, input().split())\na = sorted(list(map(int, input().split())))\ncount = 0\nfor i in a:\n    x -= i\n    if x == 0:\n        count += 1\n        break\n    elif x < 0:\n        break\n    else:\n        count += 1\nprint(count)\n        ","N, x = list(map(int, input().split()))\nli = sorted(list(map(int, input().split())))\nres = 0\nfor i  in li:\n    x -= i\n    if x < 0:\n        break\n    else:\n        res += 1\nif x > 0:\n    res -= 1\n\nprint(res)\n\n","N, x = [int(_) for _ in input().split()]\nA = sorted([int(_) for _ in input().split()])\nnum = 0\nans = 0\nwhile A:\n    num += A.pop(0)\n    if (num < x and A) or num == x:\n        ans += 1\n    else:\n        break\nprint(ans)\n","n, candy = list(map(int, input().split()))\nnums = list(map(int, input().split()))\n\nnums.sort()\n\nans = 0\nfor i in range(n):\n    if candy >= nums[i]:\n        candy -= nums[i]\n        ans += 1\n    else:\n        break\n\n# \u914d\u308a\u304d\u3063\u3066\u307e\u3060\u4f59\u3063\u3066\u3044\u308b\u5834\u5408\nif candy > 0 and ans == n:\n    ans -= 1\nprint(ans)\n","N, x = map(int, input().split())\nA = [int(x) for x in input().split()]\n\ndef f():\n    As = sorted(A)\n    s = 0\n    for i,a in enumerate(As):\n        s += a\n        if x < s:\n            return i\n        if x == s:\n            return i + 1\n    return N - 1\nprint(f())","import sys\nN,x = map(int,input().split())\nA = list(map(int,input().split()))\nA.sort()\nans = 0\nfor i in range(N):\n    x -= A[i]\n    if x < 0:\n        print(ans)\n        sys.exit()\n    ans += 1\nprint(ans)","n,x=map(int,input().split())\na=list(map(int,input().split() for i in range(n)))\na_sort=sorted(a)\ncount=0\nsum=0\nfor i in a_sort:\n    if sum+i<=x:\n        sum=sum+i\n        count+=1\n    else:\n        break\nprint(count)\n","N,x=map(int,input().split)","n,x = map(int,input().split())\nl = sorted(list(map(int,input().split())))\npe = 0\nfor i in l:\n  if x-i>=0:\n    x -= i\n    pe += 1\n  else:\n    break\nif x!=0 and pe>=1:\n  print(pe-1)\nelse:\n  print(pe)","children = list(map(int,input().split())) \nchildren.sort()\ncount=0\nc = 0\nif x < children[0]:\n  print(0)\n  exit()\nfor i in range(n):\n  count += children[i]\n  c += 1\n  if count == x:\n    print(c)\n    exit()\n  elif count > x:\n    print(c-1)\n    exit()\n\nprint(n-1)","n, x = input().split(\" \")\na = input().split(\" \")\n\nn, x = int(n), int(x)\na = sorted([int(i) for i in a])\n\ns = x\nret = 0\nfor i in a:\n    if s >= i:\n        ret+=1\n        s-=i\n    else:\n        break\nif ret and s != 0:\n    ret -= 1\n\nprint(ret)\n","N, X = map(int, input().split())\nA = list(map(int, input().split()))\nA.sort()\n\nans = 0\nfor a in A:\n    if X >= a:\n        ans += 1\n        X -= a\n\nif ans == N and X > 0:\n    ans -= 1\n\nprint(ans)\n","n, x = map(int, input().split())\na_list = list(map(int, input().split()))\n\na_list.sort()\nans = 0\nfor i in range(n):\n  a = a_list[i]\n  x = x - a\n  if x < 0:\n    break\n  ans += 1\nprint(ans)","n,x=list(map(int,input().split()))\na=sorted(list(map(int,input().split())))\ni=0\nnum=0\nfor i in a:\n    x=x-i\n    num+=1\n    if x==0:\n        break\n    if x<=0:\n        num-=1\n        break\nif x>0:\n    num-=1\nprint(num)","N, x = map(int, input().split())\nchild_list = list(map(int, input().split()))\n\ncount = 0\nfor i, child in enumerate(sorted(child_list)):\n  x -= child\n  if x < 0:\n    break\n  if (i == len(child_list) - 1) and x != 0:\n    break\n  count += 1\n\nprint(count)","N, x = map(int, input().split())\na = [int(i) for i in input().split()]\na = sorted(a)\n\nsum_okashi = 0\nans = 0\nfor i in range(len(a)):\n    sum_okashi += a[i]\n    if sum_okashi > x:\n        break\nans = i if sum_okashi > x else i + 1\n\nprint(ans)","N, x = map(int,input().split())\nA = list(map(int,input().split()))\n\nans = 0\nA.sort()\ni = 0\nwhile i < N and x > 0:\n    if x >= A[i]:\n        if i != N-1 or x == A[i]:\n            ans += 1\n        x -= A[i]\n    else:\n        break\n    i += 1\n\nprint(ans)","n,x=map(int, input().split())\na=list(map(int, input().split()))\na.sort()\ncount=0\ni=0\nwhile x>0 and i<n:\n    x-=a[i]\n    if x>=0:count+=1\n    i+=1 \nif x!=0 and count==n:count-=1\nprint(count)","def getInput():\n    return [int(i) for i in input().rstrip().split(' ')]\n\nN, x = getInput()\na_i = getInput()\na_i.sort()\nchild = 0\nfor i in range(N):\n    a = a_i.pop(0)\n    if x >= a:\n        x = x - a\n        if x > 0 and not a_i:\n            break\n        child += 1\n    if x == 0:\n        break\n\nprint(child)","n,x = map(int,input().split())\nli = list(map(int,input().split()))\nlist.sort(li)\ntotal = 0\nnum = 0\nfor i in range(n):\n    if total + li[i] >= x:\n        num = i + 1\n        break\n    elif i == n - 1:\n        num = i + 1\n    else:\n        total += li[i]\nprint(num)\n","n,x = map(int,input().split())\na = list(map(int,input().split()))\na = sorted(a)\ncounter = 0\nfor i in range(n):\n    x -= a[i]\n    if x == 0 and i == 0:\n        counter +=1\n    elif x > 0 and 0 <= i <= n-2:\n        counter +=1\n    elif x == 0 and i == n-1:\n        counter +=1\nprint(counter)","N, x = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\na.sort()\n\ncnt = 0\nfor i, child in enumerate(a):\n    if x == 0:\n        break\n    if child == x:\n        cnt += 1\n        break\n    if child < x:\n        # \u6700\u5f8c\u306e\u8981\u7d20\u304b\u5224\u5b9a\n        if i == len(a) - 1:\n            break\n        x -= child\n        cnt += 1\n\nprint(cnt)","N, x = map(int, input().split())\n\na = list(map(int, input().split()))\n\na.sort()\n\ncurrent = x\nresult = 0\n\nfor i in range(N):\n    if  current >= a[i]:\n        current -= a[i]\n        result += 1\n\nif current > 0 and result != 0:\n    result -= 1\n\nprint(result)","n,x = map(int,input().split())\narr = list(map(int,input().split()))\nans = 0;\narr.sort();\n\nfor i in range(n):\n\n\tif x < arr[i]:\n\t\tbreak;\n\telse:\n\t\tans+=1;\n\t\tx -= arr[i];\n\nif x > 0 and ans > 0:\n\tans-=1;\n\nprint(ans);","import numpy as np\nimport sys\n\ninput = sys.stdin.readline\n\nN,x = map(int,input().split())\n\na = list(map(int,input().split()))\n\na.sort()\n\nans = 0\nfor i in range(N):\n    if x >= a[i]:\n        x-= a[i]\n        ans+=1\n    else:\n        print(i)\n        exit()\n\nif ans == N and x > 0:ans-=1\n\nprint(ans)\n\n","N, x = list(map(int, input().split()))\na = list(map(int, input().split()))\nresult = 0\nsorted_a = sorted(a)\nremain = x\nfor a_i in sorted_a:\n    if remain >= a_i:\n        result += 1\n        remain -= a_i\n    else:\n        break\n\n### \u6700\u5f8c\u306e\u5b50\u4f9b\u306b\u3074\u3063\u305f\u308a\u306e\u304a\u83d3\u5b50\u3092\u3042\u3052\u3089\u308c\u306a\u304b\u3063\u305f\nif result == N and remain != 0:\n    result -= 1\nprint(result)","N, x = list(map(int, input().split()))\na_list = list(map(int, input().split()))\n\nans = 0\ntotal = 0\n\na_list.sort()\n\nfor i, a in enumerate(a_list):\n    total += a\n\n    if x < total:\n        break\n            \n    elif i == len(a_list) - 1 and x > total:\n        None\n        \n    else:\n        ans += 1\n    \nprint(ans)","N,x = map(int, input().split())\nli = list(map(int, input().split()))\nli.sort()\na = 0\nan = 0\nwhile a < N:\n    x -= li[a]\n    if x < 0:\n        break\n    an += 1\n    a += 1\nif x > 0:\n    an -= 1\nprint(an)","a = input().split()\na = [int(i) for i in a]\nb = input().split()\nb = [int(i) for i in b]\nb = sorted(b)\noutput = 0\nend = False\n\nfor i in range(len(b)-  1):\n\tif a[1] - b[i] > 0:\n\t\ta[1] += -b[i]\n\t\toutput += 1\n\telif(a[1] - b[i] == 0):\n\t\toutput += 1\n\t\tend = True\n\t\tbreak\n\telse:\n\t\tend = True\n\t\tpass\n\t\t\nif end == False:\n\tif a[1] - b[-1] < 0:\n\t\toutput -= 1\n\telif a[1] - b[-1] > 0:\n\t\toutput -= 1\n\telse:\n\t\toutput += 1\n\t\t \nprint(output)","N, x = [int(z) for z in input().split()]\nchildren = [int(z) for z in input().split()]\n\nchildren.sort()\nsum = 0\n\nfor i in children:\n    sum += i\n\nif sum < x:\n    print(N - 1)\n#elif sum == x:\n#    print(N)\nelse:\n    cnt = 0\n    for i in children:\n        if x - i < 0:\n            break\n        else:\n            x -= i\n            cnt += 1\n    print(cnt)\n","N, x = tuple(int(i) for i in input().split())\na = [int(i) for i in input().split()]\n\ndef f(a, x):\n    print(\"f\", a, x)\n    if not a:\n        return 0\n\n    a.append(x)\n    a = sorted(a)\n    i = a.index(x)\n    print(\"i\", a, i)\n    if i < len(a)-1:\n        return len(a) - 2\n    elif a[i-1] == a[i]:\n        return len(a) - 2\n    return f(a[:i-1], x-a[i-1])\n\n\ns = sum(a)\nif x == s:\n    print(N)\nelif x > s:\n    print(N-1)\nelse:\n    print(f(a, s-x))\n","headData = input().split()\ncandyTotal = int(headData[1])\nchildList = [ int(n) for n in input().split()]\nchildList.sort()\nchildTotal = sum(childList)\n\nif candyTotal == childTotal:\n    print(len(childList))\nelif candyTotal > childTotal:\n    print(len(childList)-1)\nelse:\n    answer=0\n    childSum=0\n    for child in childList:\n        childSum = childSum + child\n        if childSum > candyTotal:\n            print(answer)\n            exit()\n        else:\n            answer = answer + 1\n    print(answer-1)","def main():\n    N,x=[int(i) for i in input().split()]\n    a=input().split()\n    k=0\n    while True:\n        if x>=int(min(a)):\n            x=x-int(min(a))\n            a.remove(min(a))\n            k+=1\n            if len(a)==0:\n                break\n        else:\n            break\n    print(k)\nmain()\n","n, x = map(int, input().split())\na = sorted(list(map(int, input().split())))\nans = 0\nfor i in range(n):\n    if a[i] <= x:\n        x -= a[i]\n        ans += 1\n    else:\n        x = 0\n        break\nif not x == 0:\n    ans -= 1\nprint(ans)","n, x = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nif x < a[0]:\n\tprint(0)\n\texit()\n\nif sum(a) < x:\n\tprint(n - 1)\n\texit()\n\ncnt = 0\nfor i in range(n):\n\tif a[i] <= x:\n\t\tcnt += 1\n\t\tx -= a[i]\n\nprint(cnt)\n","n,x = map(int,input().split())\na = list(map(int, input().split()))\nans = 0\na.sort()\nfor i in range(0,n):\n    x -= a[i]\n    if x < 0:\n        break\n    if i == n-1:\n        if x == 0:\n            ans += 1\n            break\n        else:\n            break\n    ans += 1\nprint(ans)\n","\ndef cumsum(inlist):\n    s = 0\n    outlist = []\n    for i in inlist:\n        s += i\n        outlist.append(s)\n    return outlist\n\nn, x = [ int(v) for v in input().split() ]\ncandy_list = sorted([ int(v) for v in input().split() ])\ncandy_list_2 = cumsum(candy_list)\n\nif sum(candy_list) <= x:\n    print(n)\nelse:\n    for i in range(n):\n        if candy_list_2[i] > x:\n            print(i)\n            break \n","#AGC027 A\n'''\n\u554f\u984c\nN\u4eba\u306e\u5b50\u4f9b\u304c\u3044\u308b\nx\u500b\u306e\u304a\u83d3\u5b50\u3092\u3059\u3079\u3066\u914d\u308a\u5207\u3089\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\n\u304a\u83d3\u5b50\u3092\u3082\u3089\u308f\u306a\u3044\u3053\u3069\u3082\u304c\u3044\u3066\u3082\u3088\u3044\n\u5b50\u4f9bi\u306f\u3061\u3087\u3046\u3069ai\u500b\u306e\u304a\u304b\u3057\u3092\u3082\u3089\u3046\u3068\u559c\u3076\n\u559c\u3076\u5b50\u4f9b\u306e\u4eba\u6570\u306e\u6700\u5927\u5024\u306f?\n\n\u8003\u5bdf\nai\u3092\u5c0f\u3055\u3044\u9806\u306b\u30bd\u30fc\u30c8\u3057,x\u304b\u3089\u9806\u756a\u306bai\u3092\u5f15\u3044\u3066\u3044\u304f\n'''\n\nN,x = map(int,input().split(' '))\nA = sorted(list(map(int,input().split(' '))))\n\nans = 0\n\nfor a in A:\n\tif x>=a:\n\t\tans += 1\n\t\tx -= a\n\telif x<a:\n\t\tbreak\n\n#\u304a\u83d3\u5b50\u304c\u6700\u7d42\u7684\u306b\u4f59\u3063\u305f\u5834\u5408\u306e\u51e6\u7406\nif ans==N and x>0:\n\tans -= 1\n\nprint(str(ans))","N,x = map(int,input().split())\nA = list(map(int,input().split()))\nA.sort()\ncount = 0\nflag = True\n\nfor i in range(len(A)):\n  if x - A[i] >= 0:\n    x -= A[i]\n    count += 1\n  else:\n    flag = False\n    break\n    \nif x > 0 and flag:\n  print(count-1)\nelse:\n  print(count)","# AGC 027 A - Candy Distribution Again\nn, x = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\ncount = 0\nfor i in range(n):\n    if i == n-1:\n        if x == a[i]:\n            count += 1\n        else:\n            break\n    elif x >= a[i]:\n        x -= a[i]\n        count += 1\n    else:\n        break\n        \nprint(count)","N,x = map(int, input().split())\nA = sorted(map(int, input().split()))\ns = 0\nfor i in range(N):\n  x -= A[i]\n  if x<0:\n    break\n  else:\n    s += 1\nprint(s)","# 2019\/05\/21\n# AtCoder Grand Contest 027 - A\n\n# For the Answer:\n# 1. \u30ea\u30b9\u30c8\u3092\u6607\u9806\u30bd\u30fc\u30c8\n# 2. \u5c0f\u3055\u3044\u65b9\u304b\u3089\u8db3\u3057\u3066\u3044\u304f\n# 2-1. x\u3068\u7b49\u3057\u304f\u306a\u3063\u305f\u3089\u3001\u7b54\u3048\n# 2-2. x\u3092\u8d85\u3048\u305f\u3089\u3001\u6700\u5f8c\u306e1\u500b\u3067\u6e80\u8db3\u3059\u308b\u306e\u304c\u3044\u308b\u304b\u63a2\u7d22(\u3044\u306a\u3051\u308c\u3070-1)\n# 2-3. n\u307e\u3067\u8db3\u3057\u3066\u3082\u7b49\u3057\u304f\u306a\u3051\u308c\u3070\u3001-1\n\n# Input\nn, x = map(int, input().split())\na = list(map(int, input().split()))\n\n# 1.\na.sort()\n\n#2. \nacm = 0\nans = -1\nfor i in range(n):\n    acm += a[i]\n    # 2-1.\n    if acm == x:\n        ans = i + 1\n        break\n    # 2-2.\n    elif acm > x:\n        wk_acm = acm - a[i]\n        j = i + 1\n        while j < n:\n            if wk_acm + a[j] == x:\n                ans = i + 1\n                break\n            j += 1\n        if j >= n:\n            ans = i\n        break\n\n# 2-3.\nif i == n - 1 and x != acm:\n    ans = n - 1\n\n# Output\nprint(ans)\n","N,x=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\ntotal=0\nj=0\nssum=sum(a)\n\nif ssum>=x:\n    for i in range(N):\n        total+=a[i]\n        if total>x:\n            break\n        j+=1\n    print(j)\nelse:\n    print(N-1)\n","try:\n    N, x = map(int, input().split())\n    l = list(map(int, input().split()))\n    l_ = sorted(l)\n    cnt = 0\n    for i in l_:\n        _ = x-i\n        if _>= 0:\n            cnt += 1\n        if _<0:\n            break\n    print(cnt)\nexcept EOFError:\n    pass","N, x = map(int, input().split())\nan = list(map(int, input().split()))\nan.sort()\nans = 0\nfor a in an:\n    x -= a\n    if x < 0:\n        break\n    ans += 1\nif x > 0:\n    ans -= 1\nprint(ans)\n","def solve():\n    N,x=map(int,input().split())\n    a=list(map(int,input().split()))\n    a=sorted(a)\n    ans = 0\n    for i,ai in enumerate(a):\n        x -= ai\n        if x == 0:\n            return i + 1\n        elif x < 0:\n            return i\n    return N - 1\n\nprint(solve())\n","n, x = [int(i) for i in input().split()]\nA = [int(i) for i in input().split()]\n\nA.sort()\nct = 0\nfor i in range(n):\n    if x>=A[i]:\n        ct+=1\n        x -= A[i]\nif x!=0:\n    ct-=1\nprint(ct)\n","n,x=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nans=0\nfor i in range(n):\n  if a[i]<=x:\n    x=x-a[i]\n    ans=ans+1\nprint(ans)\n","#!\/usr\/bin\/python\n# -*- coding: utf-8 -*-\n\ns = raw_input()\nn, x =  [int(i) for i in s.split()]\n\naa = raw_input()\na = [int(i) for i in aa.split()]\n\na = sorted(a)\ncount = 0\ntotal = 0\nfor i in a:\n    total += i\n    if total > x:\n        break\n    count += 1\nprint count","n,x=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\ncnt=0\nans=0\nfor i in range(n):\n    cnt+=a[i]\n    if cnt==x:\n        ans=i+1\n        break\n    elif cnt>x:\n        ans=i\n        break\n    elif i==n-1:\n        ans=n-1\nprint(ans)","N, x = map(int, input().split())\nA = list(map(int, input().split()))\nA.sort()\ncount = 0\nfor i in A:\n  if x >= i:\n    count += 1\n    x -= i\n  else:\n    break\nprint(count)","N, x = map(int, input().split())\na = list(map(int, input().split()))\na = sorted(a)\nn = 0\nfor i in range(N):\n  x -= a[i]\n  if x < 0:\n    break\n  n += 1\nif x != 0:\n  n -= 1\nprint(n)"],"formatted_programs":["n,x=map(int,input().split())\na=sorted([int(i) for i in input().split()])\ncnt=0\nfor j in range(n):\n    if x>=a[j]:\n        if j!=n-1:\n            x-=a[j]\n            cnt+=1 \n        elif x==a[j]:\n            x-=a[j]\n            cnt+=1\n    else :\n        break\nprint(cnt)","N, x = map(int, input().split())\na = list(input().split())\n\na.sort()\ni = 0\nc = 0\nwhile x > 0:\n    if x >= a[i]:\n        c += 1\n    x -= a[i]\n    i += 1\nprint(c)\n","n,x = map(int,input().split())\nA = list(map(int,input().split()))\nA.sort()\nans = 0\nfor a in A:\n    x = x - a\n    if x < 0:\n        break\n    ans += 1\nif x > 0 and ans > 0:\n    ans -= 1\nprint(ans)\n","from sys import stdin\nimport itertools\n#stdin = open(\"input.txt\")\n\nif __name__ == \"__main__\":\n    N, K = [int(item) for item in stdin.readline().split()]\n    li = [int(item) for item in stdin.readline().split()]\n    \n    li.sort()\n    a = [item for i, item in enumerate(itertools.accumulate(li)) if item <= K]\n    print(len(a))","n,x=map(lambda x: int(x), input().split())\na=list(map(lambda x: int(x), input().split()))\na.sort()\nans=0\nfor i in range(n):\n    x-=a[i]\n    if x<0:\n        ans=i\n        break\nif x==0:\n    ans=n\nelif x>0:\n    ans=n-1\nprint(ans)","n, x = map(int, input().split())\n\n\na = list(map(int,input().split()))\n  \na.sort()\n\ntotal=0\nans=0\nfor i in range(n):\n  total += a[i]\n  if total > x:\n    ans = i\n    break\n  ans = i+1\n  \nprint(ans)","# vim: fileencoding=utf-8\n\n\ndef main():\n    n, x = map(int, input().split())\n    li = list(map(int, input().split()))\n    li.sort()\n    ans = 0\n    for i in range(len(li)):\n        x = x - li[i]\n        if x < 0:\n            break\n        ans += 1\n    if x > 0:\n        ans -= 1\n    print(ans)\n\n\nif __name__ == \"__main__\":\n    main()\n","n,x = map(int,input().split())\na = sorted([int(x) for x in input().split()])\n\nans = 0\nfor i in range(n):\n    if x >= a[i] and i != n-1:\n        x -= a[i]\n        ans += 1\n    elif i == n-1:\n        if x == a[i]:\n            ans += 1\n\nprint(ans)\n","N, x = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\nc = 0\ni = 0\nwhile x > a[i] and i < N - 1:\n    x -= a[i]\n    c += 1\n    i += 1\nif x == a[i]:\n    c += 1\nprint(c)","n,x = map(int,input().split())\na = list(map(int,input().split()))\na.sort()\ncnt = 0\n\nfor i in a:\n    if x > i:\n        x -= i\n        cnt += 1\n    elif x == i:\n        cnt += 1\n        break\n    else:\n        break\nelse:\n    cnt -= 1\n\nprint(cnt)\n","def solve(n, x, A):\n    A.sort()\n    count = 0\n    for i in range(n):\n        if i < n - 1 and A[i] <= x or i == n - 1 and A[i] == x:\n            x -= A[i]\n            count += 1\n        else:\n            break\n    return count\n\n_n, _x = list(map(int, input().split()))\n_A = list(map(int, input().split()))\nprint(solve(_n, _x, _A))\n","n, x = [int(x) for x in input().split()]\nchildren = [int(x) for x in input().split()]\nchildren.sort()\nfor i, child in enumerate(children):\n    if x < child or (i==len(children)-1 and x!=child):\n        print(i)\n        break\n    else:\n        x -= child\nelse:\n    print(len(children))","N, x = map(int, input().split())\nan = map(int, input().split())\n\ncount = 0\nsan = sorted(an)\nfor a in san:\n    x -= a\n    if x < 0:\n        break\n    count += 1\nif x > 0:\n    count -= 1\n\nprint(count)\n","#!\/usr\/bin python3\n# -*- coding: utf-8 -*-\n\nimport sys\ninput = sys.stdin.readline\n\ndef main():\n    N, X = map(int, input().split())\n    A = list(map(int, input().split()))\n    A.sort()\n    ret = 0\n    cnt = 0\n    if sum(A)<X:\n        print(N-1)\n    elif sum(A)==X:\n        print(N)\n    else:\n        for i in range(N):\n            X-=A[i]\n            if X<0:\n                break\n        print(i)\n\nif __name__ == '__main__':\n    main()","N, x = map(int, input().split())\na_list = list(map(int, input().split()))\na_list.sort()\n\ntmp_total_a = 0\ncount_happy = 0\nfor a in a_list:\n    tmp_total_a += a\n    if tmp_total_a <= x:\n        count_happy += 1\n    else:\n        break\n\nif tmp_total_a < x:\n    count_happy -= 1\n    \nprint(count_happy)\n","def makelist(n, m):\n    return [[0 for _ in range(m)] for _ in range(n)]\n\n\n\nN, x = map(int, input().split())\na = list(map(int, input().split()))\n\n\na.sort()\n\nans = 0\nfor i in range(N-1):\n    e = a[i]\n    if x >= e:\n        ans += 1\n        x -= e\nif a[-1] == x:\n    ans += 1\n\nprint(ans)\n","N,x=[int(i) for i in input().split()]\na=[int(i) for i in  input().split()]\na = sorted(a)\nres=0\nfor num in a:\n    if num<=x:\n        x-=num\n        res+=1\n    else:\n        break\nif x != 0 and res>0:\n    res-=1\nprint(res)\n","n,x=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nfor i in range(n):\n  if a[i]>x:\n    print(i)\n    exit()\n  x-=a[i]\nif x==0:\n  print(n)\nelse:\n  print(n-1)\n","def main():\n    v = list(map(int, input().split()))\n    n = v[0]\n    x = v[1]\n    a = list(map(int, input().split()))\n\n    # a\u306e\u5024\u304c\u5c0f\u3055\u3044\u9806\u306b\u3074\u3063\u305f\u308a\u914d\u3063\u3066\u3044\u304f\n    count = 0\n    a = sorted(a)\n\n    for i in range(len(a)):\n        if i == len(a) - 1:\n            if x == a[i]:\n                count += 1\n        elif x >= a[i]:\n            x -= a[i]\n            count += 1\n        else:\n            break\n\n    print(count)\n\n\nif __name__ == \"__main__\":\n    main()\n","N,x = map(int,input().split())\nA = list(map(int,input().split()))\n\nX = 1\nans = 0\n\nwhile x >= X:\n    ans += A.count(X)\n    x += -X*(A.count(X))\n    X += 1\n\nif ans !=0 & x!=0:\n    ans += -1\n\nprint(ans)","def main():\n    n, x = map(int, input().split())\n    an = list(map(int, input().split()))\n    an = sorted(an)\n\n    candy = 0\n    for n in range(n):\n        candy += an[n]\n        if (candy > x):\n            print(n)\n            return\n\n    print(n)\n\n\nif __name__ == '__main__':\n    main()\n\t","import sys\nimport math\nimport itertools\nimport collections\nimport heapq\nimport re\nimport numpy as np\n\nrr = lambda: sys.stdin.buffer.readline().rstrip()\nrs = lambda: sys.stdin.buffer.readline().split()\nri = lambda: int(sys.stdin.buffer.readline())\nrm = lambda: map(int, sys.stdin.buffer.readline().split())\nrl = lambda: list(map(int, sys.stdin.buffer.readline().split()))\n\ndef heapsort(iterable):\n    h = []\n    for value in iterable:\n        heapq.heappush(h, value)\n    return [heapq.heappop(h) for i in range(len(h))]\n\nn, k = rm()\na = rl()\na = heapsort(a)\ncnt = 0\nfor i in a:\n    k -= i\n    if k < 0:\n        break\n    else:\n        cnt += 1\nelse:\n    if k != 0:\n        cnt -= 1\nprint(cnt)\n\n\n","n,x=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nresult=0\nflag=0\nfor i in range(n):\n    x-=a[i]\n    if x<0:\n        result=i\n        flag=1\n        break\n    if x==0:\n        result=i+1\n        flag=1\n        break\nif flag==1:\n    print(result)\n    \nelse:\n    print(n-1)","N, x = map(int, input().split())\na = list(map(int, input().split()))\ncount = 0\na.sort()\nfor i in range(N):\n    if x >= a[i]:\n        count += 1\n        x -= a[i]\n    else:\n        break\nelse:\n    if x != 0:\n        count -= 1\nprint(count)","if __name__ == \"__main__\":\n    N,x = list(map(int, input().split()))\n    a = list(map(int, input().split()))\n    A = 0\n\n    a.sort()\n    print(a)\n    while x >= 0:\n        if a[-1] < x:\n            x -= a.pop(-1)\n            A += 1\n        else:\n            break\n\n    if x != 0:\n        A -= 1\n    print(A)\n","n, x = map(int, input().split())\na = list(map(int, input().split()))\nif sum(a) == x:\n    print(n)\nelif sum(a) < x:\n    print(n-1)\nelse:\n    a = sorted(a)\n    total = 0\n    for i in range(n):\n        total += a[i]\n        if total == x:\n            print(i+1)\n            exit()\n        elif total > x:\n            print(i)\n            exit()\n","N, x=map(int, input().split())\na=[]\na=list(map(int, input().split()))\na.sort()\nA=0\nB=0\nfor i in range(N):\n    A=A+a[i]\n    if A<=x:\n        B+=1\nif A<x:\n    B=B-1\nprint(B)\n        ","n,x=map(int,input().split())\nkids=list(map(int,input().split()))\nkids.sort()\ncount=0\nfor i in range(n):\n    x=x-kids[i]\n    if x<0:\n        break\n    count+=1\n\nif x>0:\n    print(count-1)\nelse:\n    print(count)","N, x = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nif x == sum(a):\n    print(N)\nelif x > sum(a):\n    print(N-1)\nelse:\n    for i in range(N):\n        if sum(a[:i+1]) > x:\n            print(i)\n            break\n","N,x=map(int,input().split())\na=list(map(int,input().split()))\na=sorted(a)\ncnt=0\nfor i in range(N):\n    if sum(a)==x:\n        cnt=N\n    elif sum(a)>x:\n        if x>=a[i]:\n            x-=a[i]\n            cnt+=1\n        else:\n            break\n    else:\n        cnt=N-1\n\nprint(cnt)","# -*- coding: utf-8 -*-\nimport numpy as np\nN, x = map(int, input().split())\na = input().split()\nfor i in range(len(a)):\n    a[i] = int(a[i])\n\nfor i in range(N):\n    idx = np.argmin(a[i:]) + i\n    temp = a[i]\n    a[i] = a[idx]\n    a[idx] = temp\n\nsum = 0\nfor i in range(N):\n    sum += a[i]\n\nsum2 = 0\nif sum < x:\n    ans = N - 1\nelse:\n    if a[0] > x:\n        ans = 0\n    for i in range(N):\n        sum2 += a[i]\n        if sum2 == x:\n            ans = i + 1\n            \nprint(ans)\n    ","n,x=map(int,input().split())\na=sorted(list(map(int,input().split())))\ncount=0\nfor i in range(n):\n    if i==n-1:\n        if x==a[i]:\n            count+=1\n        break\n    if x<a[i]:\n        break\n    x-=a[i]\n    count+=1\nprint(count)","import sys\nimport itertools\n\nlines = sys.stdin.readlines()\n\nfor n, line in enumerate(lines):\n  if not n:\n    N, x = [int(_) for _ in line.strip().split(' ')]\n    continue\n  children = sorted([int(_) for _ in line.strip().split(' ')])\n  break\n  \nchild_max = max(children)\ncoef_pattern = [_ for _ in range(x \/\/ child_max + 1)]\nchild_id = [_ for _ in range(len(children))]\npattern = list(itertools.product(coef_pattern, child_id))\nall_pattern = list(itertools.permutations(pattern))\n#print(all_pattern)\nmax_cnt = 0\nfor ap in all_pattern:\n  total = 0\n  cnt = 0\n  #print('ap:{}'.format(ap))\n  log = []\n  given_child = []\n  for p in ap:\n    #print('p[1]:{}, p[0]:{}'.format(p[1], p[0]))\n    total += children[p[1]] * p[0]\n    if not p[0] == 0 and not p[1] in given_child:\n      cnt += 1\n      #log.append('total:{}, p[1]:{}, p[0]:{}'.format(total, p[1], p[0]))\n      given_child.append(p[1])\n    #print('total:{}'.format(total))\n    if total == x:\n      if max_cnt < cnt:\n        max_cnt = cnt\n        #print(log)\nprint(max_cnt)","n, x = map(int,input().split())\na_l = list(map(int,input().split()))\n\na_l.sort()\ncount = 0\nfor val in a_l[:-1]:\n    x -= val\n    if x < 0:\n        break\n    count += 1\nif x == a_l[-1]:\n    count += 1\nprint(count)","n, x = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\ntotal = sum(a)\nans = 0\nif x == total:\n    ans = n\nelif x > total:\n    ans = n - 1\nelse:\n    for v in a:\n        x -= v\n        if x < 0:\n            break\n        ans += 1\nprint(ans)","import sys\ninput = sys.stdin.readline\n\nN, X = map(int, input().split())\nL = [int(v) for v in input().split()]\nL.sort()\n\nans = 0\nfor i in range(N):\n    a = L[i]\n    \n    if X >= a:\n        X -= a\n        ans += 1\n\nif ans == N and X > 0:\n    ans -= 1\n    \nprint(ans)","N, x = map(int, input().split())\na = sorted(list(map(int, input().split())))\n\nrest = x\ni = 0\ncnt = 0\n\nwhile rest > 0 :\n    if rest < a[i] :\n        break\n    rest -= a[i]\n    i += 1\n    if (i == N) :\n        if (rest == 0) :\n            cnt += 1\n        break\n    cnt += 1\n\nprint(cnt)\n","n,x = map(int,input().split())\na = list(map(int,input().split()))\na.sort()\nans = 0\nfor i in a:\n    if x >= 0:\n        x -= i\n        ans += 1\n    else:\n        break\nif x > 0:\n    ans -= 1\nif x < 0:\n    ans -= 1\nprint(ans)","N, x = map(int, input().split())\na_s = map(int, input().split())\nsorted_a_s = sorted(a_s)\nrest_snaks = x\nsatisfied_num = 0\nfor n in range(N):\n    if sorted_a_s[n] <= rest_snaks:\n        satisfied_num += 1\n        rest_snaks -= sorted_a_s[n]\n    else:\n        rest_snaks = 0\n\nprint(satisfied_num)","import numpy\n\nN, x = list(map(int, input().split()))\na = list(map(int, input().split()))\na.sort()\na_sum = numpy.cumsum(a)\nans = numpy.sum(a_sum <= x)\n\nif ans >= 1 and a_sum[ans-1] != x:\n    ans -= 1\n\nprint(ans)\n","# coding: utf-8\n# Your code here!\nN,x=map(int,input().split())\nA=list(map(int,input().split()))\nA.sort(reverse=True)\n\ncount=0\nwhile len(A)>1:\n    temp=A.pop(-1)\n    if temp>x:\n        break\n    else:\n        count+=1\n        x-=temp\n\ntemp=A.pop(-1)\n\nif x==temp:\n    print(count+1)\nelse:\n    print(count)","N,X=map(int,input().split())\nl=list(map(int,input().split()))\nL=sorted(l)\nkids=0\nans=0\nfor i in range(N):\n  kids+=L[i]\n  if kids<=X:\n    ans+=1\n  else:\n    break\n    \nif sum(L)>=X:\n  print(ans)\n  \nelse:\n  print(ans-1)","import sys\n\nN, x = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\ns = [0 for i in range(N)]\n\nfor i in range(N):\n    if i == 0:\n        s[i] = a[i]\n    else:\n        s[i] = s[i-1] + a[i]\n\n    if s[i] > x:\n        print(i)\n        sys.exit()\n\nif s[-1] < x:\n    print(N-1)\nelse:\n    print(N)\n","N, x = map(int, input().split())\na = sorted(list(map(int, input().split())))\ncnt = 0\nfor i in a:\n    if x >= i:\n        cnt += 1\n        x -= i\n    else:\n        x = 0\n        break\nif x > 0:\n    cnt -= 1\nprint(cnt)","n, x = map(int,input().split())\na = list(map(int, input().split()))\n\na.sort()\ncount = 0\nfor ai in a:\n    if x >= ai:\n        x -= ai\n        count += 1\n    else:\n        x = 0\nif x > 0:\n    count -= 1\n\nprint(count)","import sys\ninput = sys.stdin.readline\n\n\ndef read():\n    N, x = map(int, input().strip().split())\n    A = map(int, input().strip().split())\n    return N, x, A\n\n\ndef solve(N, x, A):\n    count = 0\n    for a in sorted(A):\n        x -= a\n        if x < 0:\n            break\n        count += 1\n    if x > 0:\n        count -= 1\n    return max(count, 0)\n\n\nif __name__ == '__main__':\n    inputs = read()\n    print(\"%s\" % solve(*inputs))\n","N, x = (int(x) for x in input().split())\na = sorted([int(x) for x in input().split()])\nfor i in range(N):\n    if x < a[i]:\n        print(i)\n        break\n    else:\n        if i == N-1:\n            if x == a[i]:\n                print(i+1)\n            else:\n                print(i)\n        x -= a[i]\n","def main():\n    from builtins import int, map, list, print\n    import sys\n    sys.setrecursionlimit(10 ** 6)\n\n    input = (lambda: (sys.stdin.readline()).rstrip())\n    input_list = (lambda: input().split())\n    input_number = (lambda: int(input()))\n    input_number_list = (lambda: list(map(int, input_list())))\n\n    N, x = input_number_list()\n    A = input_number_list()\n    A.sort()\n    ans = 0\n    tmp_sum = 0\n    for a in A:\n        tmp_sum += a\n        if tmp_sum > x:\n            break\n        else:\n            ans += 1\n    if ans == N and tmp_sum != x:\n        ans -= 1\n    print(ans)\n\n\nif __name__ == '__main__':\n    main()\n","N, x = map(int, input().split())\na = sorted(list(map(int, input().split())))\ncount = 0\nfor i in a:\n    x -= i\n    if x == 0:\n        count += 1\n        break\n    elif x < 0:\n        break\n    else:\n        count += 1\nprint(count)\n        ","N, x = list(map(int, input().split()))\nli = sorted(list(map(int, input().split())))\nres = 0\nfor i  in li:\n    x -= i\n    if x < 0:\n        break\n    else:\n        res += 1\nif x > 0:\n    res -= 1\n\nprint(res)\n\n","N, x = [int(_) for _ in input().split()]\nA = sorted([int(_) for _ in input().split()])\nnum = 0\nans = 0\nwhile A:\n    num += A.pop(0)\n    if (num < x and A) or num == x:\n        ans += 1\n    else:\n        break\nprint(ans)\n","n, candy = list(map(int, input().split()))\nnums = list(map(int, input().split()))\n\nnums.sort()\n\nans = 0\nfor i in range(n):\n    if candy >= nums[i]:\n        candy -= nums[i]\n        ans += 1\n    else:\n        break\n\n# \u914d\u308a\u304d\u3063\u3066\u307e\u3060\u4f59\u3063\u3066\u3044\u308b\u5834\u5408\nif candy > 0 and ans == n:\n    ans -= 1\nprint(ans)\n","N, x = map(int, input().split())\nA = [int(x) for x in input().split()]\n\ndef f():\n    As = sorted(A)\n    s = 0\n    for i,a in enumerate(As):\n        s += a\n        if x < s:\n            return i\n        if x == s:\n            return i + 1\n    return N - 1\nprint(f())","import sys\nN,x = map(int,input().split())\nA = list(map(int,input().split()))\nA.sort()\nans = 0\nfor i in range(N):\n    x -= A[i]\n    if x < 0:\n        print(ans)\n        sys.exit()\n    ans += 1\nprint(ans)","n,x=map(int,input().split())\na=list(map(int,input().split() for i in range(n)))\na_sort=sorted(a)\ncount=0\nsum=0\nfor i in a_sort:\n    if sum+i<=x:\n        sum=sum+i\n        count+=1\n    else:\n        break\nprint(count)\n","N,x=map(int,input().split)","n,x = map(int,input().split())\nl = sorted(list(map(int,input().split())))\npe = 0\nfor i in l:\n  if x-i>=0:\n    x -= i\n    pe += 1\n  else:\n    break\nif x!=0 and pe>=1:\n  print(pe-1)\nelse:\n  print(pe)","children = list(map(int,input().split())) \nchildren.sort()\ncount=0\nc = 0\nif x < children[0]:\n  print(0)\n  exit()\nfor i in range(n):\n  count += children[i]\n  c += 1\n  if count == x:\n    print(c)\n    exit()\n  elif count > x:\n    print(c-1)\n    exit()\n\nprint(n-1)","n, x = input().split(\" \")\na = input().split(\" \")\n\nn, x = int(n), int(x)\na = sorted([int(i) for i in a])\n\ns = x\nret = 0\nfor i in a:\n    if s >= i:\n        ret+=1\n        s-=i\n    else:\n        break\nif ret and s != 0:\n    ret -= 1\n\nprint(ret)\n","N, X = map(int, input().split())\nA = list(map(int, input().split()))\nA.sort()\n\nans = 0\nfor a in A:\n    if X >= a:\n        ans += 1\n        X -= a\n\nif ans == N and X > 0:\n    ans -= 1\n\nprint(ans)\n","n, x = map(int, input().split())\na_list = list(map(int, input().split()))\n\na_list.sort()\nans = 0\nfor i in range(n):\n  a = a_list[i]\n  x = x - a\n  if x < 0:\n    break\n  ans += 1\nprint(ans)","n,x=list(map(int,input().split()))\na=sorted(list(map(int,input().split())))\ni=0\nnum=0\nfor i in a:\n    x=x-i\n    num+=1\n    if x==0:\n        break\n    if x<=0:\n        num-=1\n        break\nif x>0:\n    num-=1\nprint(num)","N, x = map(int, input().split())\nchild_list = list(map(int, input().split()))\n\ncount = 0\nfor i, child in enumerate(sorted(child_list)):\n  x -= child\n  if x < 0:\n    break\n  if (i == len(child_list) - 1) and x != 0:\n    break\n  count += 1\n\nprint(count)","N, x = map(int, input().split())\na = [int(i) for i in input().split()]\na = sorted(a)\n\nsum_okashi = 0\nans = 0\nfor i in range(len(a)):\n    sum_okashi += a[i]\n    if sum_okashi > x:\n        break\nans = i if sum_okashi > x else i + 1\n\nprint(ans)","N, x = map(int,input().split())\nA = list(map(int,input().split()))\n\nans = 0\nA.sort()\ni = 0\nwhile i < N and x > 0:\n    if x >= A[i]:\n        if i != N-1 or x == A[i]:\n            ans += 1\n        x -= A[i]\n    else:\n        break\n    i += 1\n\nprint(ans)","n,x=map(int, input().split())\na=list(map(int, input().split()))\na.sort()\ncount=0\ni=0\nwhile x>0 and i<n:\n    x-=a[i]\n    if x>=0:count+=1\n    i+=1 \nif x!=0 and count==n:count-=1\nprint(count)","def getInput():\n    return [int(i) for i in input().rstrip().split(' ')]\n\nN, x = getInput()\na_i = getInput()\na_i.sort()\nchild = 0\nfor i in range(N):\n    a = a_i.pop(0)\n    if x >= a:\n        x = x - a\n        if x > 0 and not a_i:\n            break\n        child += 1\n    if x == 0:\n        break\n\nprint(child)","n,x = map(int,input().split())\nli = list(map(int,input().split()))\nlist.sort(li)\ntotal = 0\nnum = 0\nfor i in range(n):\n    if total + li[i] >= x:\n        num = i + 1\n        break\n    elif i == n - 1:\n        num = i + 1\n    else:\n        total += li[i]\nprint(num)\n","n,x = map(int,input().split())\na = list(map(int,input().split()))\na = sorted(a)\ncounter = 0\nfor i in range(n):\n    x -= a[i]\n    if x == 0 and i == 0:\n        counter +=1\n    elif x > 0 and 0 <= i <= n-2:\n        counter +=1\n    elif x == 0 and i == n-1:\n        counter +=1\nprint(counter)","N, x = [int(x) for x in input().split()]\na = [int(x) for x in input().split()]\n\na.sort()\n\ncnt = 0\nfor i, child in enumerate(a):\n    if x == 0:\n        break\n    if child == x:\n        cnt += 1\n        break\n    if child < x:\n        # \u6700\u5f8c\u306e\u8981\u7d20\u304b\u5224\u5b9a\n        if i == len(a) - 1:\n            break\n        x -= child\n        cnt += 1\n\nprint(cnt)","N, x = map(int, input().split())\n\na = list(map(int, input().split()))\n\na.sort()\n\ncurrent = x\nresult = 0\n\nfor i in range(N):\n    if  current >= a[i]:\n        current -= a[i]\n        result += 1\n\nif current > 0 and result != 0:\n    result -= 1\n\nprint(result)","n,x = map(int,input().split())\narr = list(map(int,input().split()))\nans = 0;\narr.sort();\n\nfor i in range(n):\n\n\tif x < arr[i]:\n\t\tbreak;\n\telse:\n\t\tans+=1;\n\t\tx -= arr[i];\n\nif x > 0 and ans > 0:\n\tans-=1;\n\nprint(ans);","import numpy as np\nimport sys\n\ninput = sys.stdin.readline\n\nN,x = map(int,input().split())\n\na = list(map(int,input().split()))\n\na.sort()\n\nans = 0\nfor i in range(N):\n    if x >= a[i]:\n        x-= a[i]\n        ans+=1\n    else:\n        print(i)\n        exit()\n\nif ans == N and x > 0:ans-=1\n\nprint(ans)\n\n","N, x = list(map(int, input().split()))\na = list(map(int, input().split()))\nresult = 0\nsorted_a = sorted(a)\nremain = x\nfor a_i in sorted_a:\n    if remain >= a_i:\n        result += 1\n        remain -= a_i\n    else:\n        break\n\n### \u6700\u5f8c\u306e\u5b50\u4f9b\u306b\u3074\u3063\u305f\u308a\u306e\u304a\u83d3\u5b50\u3092\u3042\u3052\u3089\u308c\u306a\u304b\u3063\u305f\nif result == N and remain != 0:\n    result -= 1\nprint(result)","N, x = list(map(int, input().split()))\na_list = list(map(int, input().split()))\n\nans = 0\ntotal = 0\n\na_list.sort()\n\nfor i, a in enumerate(a_list):\n    total += a\n\n    if x < total:\n        break\n            \n    elif i == len(a_list) - 1 and x > total:\n        None\n        \n    else:\n        ans += 1\n    \nprint(ans)","N,x = map(int, input().split())\nli = list(map(int, input().split()))\nli.sort()\na = 0\nan = 0\nwhile a < N:\n    x -= li[a]\n    if x < 0:\n        break\n    an += 1\n    a += 1\nif x > 0:\n    an -= 1\nprint(an)","a = input().split()\na = [int(i) for i in a]\nb = input().split()\nb = [int(i) for i in b]\nb = sorted(b)\noutput = 0\nend = False\n\nfor i in range(len(b)-  1):\n\tif a[1] - b[i] > 0:\n\t\ta[1] += -b[i]\n\t\toutput += 1\n\telif(a[1] - b[i] == 0):\n\t\toutput += 1\n\t\tend = True\n\t\tbreak\n\telse:\n\t\tend = True\n\t\tpass\n\t\t\nif end == False:\n\tif a[1] - b[-1] < 0:\n\t\toutput -= 1\n\telif a[1] - b[-1] > 0:\n\t\toutput -= 1\n\telse:\n\t\toutput += 1\n\t\t \nprint(output)","N, x = [int(z) for z in input().split()]\nchildren = [int(z) for z in input().split()]\n\nchildren.sort()\nsum = 0\n\nfor i in children:\n    sum += i\n\nif sum < x:\n    print(N - 1)\n#elif sum == x:\n#    print(N)\nelse:\n    cnt = 0\n    for i in children:\n        if x - i < 0:\n            break\n        else:\n            x -= i\n            cnt += 1\n    print(cnt)\n","N, x = tuple(int(i) for i in input().split())\na = [int(i) for i in input().split()]\n\ndef f(a, x):\n    print(\"f\", a, x)\n    if not a:\n        return 0\n\n    a.append(x)\n    a = sorted(a)\n    i = a.index(x)\n    print(\"i\", a, i)\n    if i < len(a)-1:\n        return len(a) - 2\n    elif a[i-1] == a[i]:\n        return len(a) - 2\n    return f(a[:i-1], x-a[i-1])\n\n\ns = sum(a)\nif x == s:\n    print(N)\nelif x > s:\n    print(N-1)\nelse:\n    print(f(a, s-x))\n","headData = input().split()\ncandyTotal = int(headData[1])\nchildList = [ int(n) for n in input().split()]\nchildList.sort()\nchildTotal = sum(childList)\n\nif candyTotal == childTotal:\n    print(len(childList))\nelif candyTotal > childTotal:\n    print(len(childList)-1)\nelse:\n    answer=0\n    childSum=0\n    for child in childList:\n        childSum = childSum + child\n        if childSum > candyTotal:\n            print(answer)\n            exit()\n        else:\n            answer = answer + 1\n    print(answer-1)","def main():\n    N,x=[int(i) for i in input().split()]\n    a=input().split()\n    k=0\n    while True:\n        if x>=int(min(a)):\n            x=x-int(min(a))\n            a.remove(min(a))\n            k+=1\n            if len(a)==0:\n                break\n        else:\n            break\n    print(k)\nmain()\n","n, x = map(int, input().split())\na = sorted(list(map(int, input().split())))\nans = 0\nfor i in range(n):\n    if a[i] <= x:\n        x -= a[i]\n        ans += 1\n    else:\n        x = 0\n        break\nif not x == 0:\n    ans -= 1\nprint(ans)","n, x = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\n\nif x < a[0]:\n\tprint(0)\n\texit()\n\nif sum(a) < x:\n\tprint(n - 1)\n\texit()\n\ncnt = 0\nfor i in range(n):\n\tif a[i] <= x:\n\t\tcnt += 1\n\t\tx -= a[i]\n\nprint(cnt)\n","n,x = map(int,input().split())\na = list(map(int, input().split()))\nans = 0\na.sort()\nfor i in range(0,n):\n    x -= a[i]\n    if x < 0:\n        break\n    if i == n-1:\n        if x == 0:\n            ans += 1\n            break\n        else:\n            break\n    ans += 1\nprint(ans)\n","\ndef cumsum(inlist):\n    s = 0\n    outlist = []\n    for i in inlist:\n        s += i\n        outlist.append(s)\n    return outlist\n\nn, x = [ int(v) for v in input().split() ]\ncandy_list = sorted([ int(v) for v in input().split() ])\ncandy_list_2 = cumsum(candy_list)\n\nif sum(candy_list) <= x:\n    print(n)\nelse:\n    for i in range(n):\n        if candy_list_2[i] > x:\n            print(i)\n            break \n","#AGC027 A\n'''\n\u554f\u984c\nN\u4eba\u306e\u5b50\u4f9b\u304c\u3044\u308b\nx\u500b\u306e\u304a\u83d3\u5b50\u3092\u3059\u3079\u3066\u914d\u308a\u5207\u3089\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\n\u304a\u83d3\u5b50\u3092\u3082\u3089\u308f\u306a\u3044\u3053\u3069\u3082\u304c\u3044\u3066\u3082\u3088\u3044\n\u5b50\u4f9bi\u306f\u3061\u3087\u3046\u3069ai\u500b\u306e\u304a\u304b\u3057\u3092\u3082\u3089\u3046\u3068\u559c\u3076\n\u559c\u3076\u5b50\u4f9b\u306e\u4eba\u6570\u306e\u6700\u5927\u5024\u306f?\n\n\u8003\u5bdf\nai\u3092\u5c0f\u3055\u3044\u9806\u306b\u30bd\u30fc\u30c8\u3057,x\u304b\u3089\u9806\u756a\u306bai\u3092\u5f15\u3044\u3066\u3044\u304f\n'''\n\nN,x = map(int,input().split(' '))\nA = sorted(list(map(int,input().split(' '))))\n\nans = 0\n\nfor a in A:\n\tif x>=a:\n\t\tans += 1\n\t\tx -= a\n\telif x<a:\n\t\tbreak\n\n#\u304a\u83d3\u5b50\u304c\u6700\u7d42\u7684\u306b\u4f59\u3063\u305f\u5834\u5408\u306e\u51e6\u7406\nif ans==N and x>0:\n\tans -= 1\n\nprint(str(ans))","N,x = map(int,input().split())\nA = list(map(int,input().split()))\nA.sort()\ncount = 0\nflag = True\n\nfor i in range(len(A)):\n  if x - A[i] >= 0:\n    x -= A[i]\n    count += 1\n  else:\n    flag = False\n    break\n    \nif x > 0 and flag:\n  print(count-1)\nelse:\n  print(count)","# AGC 027 A - Candy Distribution Again\nn, x = map(int, input().split())\na = list(map(int, input().split()))\n\na.sort()\ncount = 0\nfor i in range(n):\n    if i == n-1:\n        if x == a[i]:\n            count += 1\n        else:\n            break\n    elif x >= a[i]:\n        x -= a[i]\n        count += 1\n    else:\n        break\n        \nprint(count)","N,x = map(int, input().split())\nA = sorted(map(int, input().split()))\ns = 0\nfor i in range(N):\n  x -= A[i]\n  if x<0:\n    break\n  else:\n    s += 1\nprint(s)","# 2019\/05\/21\n# AtCoder Grand Contest 027 - A\n\n# For the Answer:\n# 1. \u30ea\u30b9\u30c8\u3092\u6607\u9806\u30bd\u30fc\u30c8\n# 2. \u5c0f\u3055\u3044\u65b9\u304b\u3089\u8db3\u3057\u3066\u3044\u304f\n# 2-1. x\u3068\u7b49\u3057\u304f\u306a\u3063\u305f\u3089\u3001\u7b54\u3048\n# 2-2. x\u3092\u8d85\u3048\u305f\u3089\u3001\u6700\u5f8c\u306e1\u500b\u3067\u6e80\u8db3\u3059\u308b\u306e\u304c\u3044\u308b\u304b\u63a2\u7d22(\u3044\u306a\u3051\u308c\u3070-1)\n# 2-3. n\u307e\u3067\u8db3\u3057\u3066\u3082\u7b49\u3057\u304f\u306a\u3051\u308c\u3070\u3001-1\n\n# Input\nn, x = map(int, input().split())\na = list(map(int, input().split()))\n\n# 1.\na.sort()\n\n#2. \nacm = 0\nans = -1\nfor i in range(n):\n    acm += a[i]\n    # 2-1.\n    if acm == x:\n        ans = i + 1\n        break\n    # 2-2.\n    elif acm > x:\n        wk_acm = acm - a[i]\n        j = i + 1\n        while j < n:\n            if wk_acm + a[j] == x:\n                ans = i + 1\n                break\n            j += 1\n        if j >= n:\n            ans = i\n        break\n\n# 2-3.\nif i == n - 1 and x != acm:\n    ans = n - 1\n\n# Output\nprint(ans)\n","N,x=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\ntotal=0\nj=0\nssum=sum(a)\n\nif ssum>=x:\n    for i in range(N):\n        total+=a[i]\n        if total>x:\n            break\n        j+=1\n    print(j)\nelse:\n    print(N-1)\n","try:\n    N, x = map(int, input().split())\n    l = list(map(int, input().split()))\n    l_ = sorted(l)\n    cnt = 0\n    for i in l_:\n        _ = x-i\n        if _>= 0:\n            cnt += 1\n        if _<0:\n            break\n    print(cnt)\nexcept EOFError:\n    pass","N, x = map(int, input().split())\nan = list(map(int, input().split()))\nan.sort()\nans = 0\nfor a in an:\n    x -= a\n    if x < 0:\n        break\n    ans += 1\nif x > 0:\n    ans -= 1\nprint(ans)\n","def solve():\n    N,x=map(int,input().split())\n    a=list(map(int,input().split()))\n    a=sorted(a)\n    ans = 0\n    for i,ai in enumerate(a):\n        x -= ai\n        if x == 0:\n            return i + 1\n        elif x < 0:\n            return i\n    return N - 1\n\nprint(solve())\n","n, x = [int(i) for i in input().split()]\nA = [int(i) for i in input().split()]\n\nA.sort()\nct = 0\nfor i in range(n):\n    if x>=A[i]:\n        ct+=1\n        x -= A[i]\nif x!=0:\n    ct-=1\nprint(ct)\n","n,x=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nans=0\nfor i in range(n):\n  if a[i]<=x:\n    x=x-a[i]\n    ans=ans+1\nprint(ans)\n","#!\/usr\/bin\/python\n# -*- coding: utf-8 -*-\n\ns = raw_input()\nn, x =  [int(i) for i in s.split()]\n\naa = raw_input()\na = [int(i) for i in aa.split()]\n\na = sorted(a)\ncount = 0\ntotal = 0\nfor i in a:\n    total += i\n    if total > x:\n        break\n    count += 1\nprint count","n,x=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\ncnt=0\nans=0\nfor i in range(n):\n    cnt+=a[i]\n    if cnt==x:\n        ans=i+1\n        break\n    elif cnt>x:\n        ans=i\n        break\n    elif i==n-1:\n        ans=n-1\nprint(ans)","N, x = map(int, input().split())\nA = list(map(int, input().split()))\nA.sort()\ncount = 0\nfor i in A:\n  if x >= i:\n    count += 1\n    x -= i\n  else:\n    break\nprint(count)","N, x = map(int, input().split())\na = list(map(int, input().split()))\na = sorted(a)\nn = 0\nfor i in range(N):\n  x -= a[i]\n  if x < 0:\n    break\n  n += 1\nif x != 0:\n  n -= 1\nprint(n)"]}
{"description_html":"\n<H1>Naive String Search<\/H1>\n\n<p>\n  Find places where a string <var>P<\/var> is found within a text <var>T<\/var>.\n  \n  Print all indices of <var>T<\/var> where <var>P<\/var> found. The indices of <var>T<\/var> start with 0.\n<\/p>\n\n<H2>Input<\/H2>\n\n<p>\n  In the first line, a text <var>T<\/var> is given. In the second line, a string <var>P<\/var> is given.\n<\/p>\n\n<H2>output<\/H2>\n\n<p>\n  Print an index of <var>T<\/var> where <var>P<\/var> found in a line. Print the indices in ascending order.\n<\/p>\n\n<H2>Constraints<\/H2>\n\n<ul>\n  <li> 1 &le; length of <var>T<\/var> &le; 1000 <\/li>\n  <li> 1 &le; length of <var>P<\/var> &le; 1000 <\/li>\n  <li>The input consists of alphabetical characters and digits<\/li>\n<\/ul>\n\n<H2>Sample Input 1<\/H2>\n<pre>\naabaaa\naa\n<\/pre>\n\n<H2>Sample Output 1<\/H2>\n<pre>\n0\n3\n4\n<\/pre>\n\n<H2>Sample Input 2<\/H2>\n<pre>\nxyzz\nyz\n<\/pre>\n\n<H2>Sample Output 2<\/H2>\n<pre>\n1\n<\/pre>\n\n\n\n<H2>Sample Input 3<\/H2>\n<pre>\nabc\nxyz\n<\/pre>\n\n<H2>Sample Output3<\/H2>\n<pre>\n<\/pre>\n<p>\nThe ouput should be empty.\n<\/p>\n","description_string":"\nNaive String Search\n\n  Find places where a string P is found within a text T.\n  \n  Print all indices of T where P found. The indices of T start with 0.\n\nInput\n\n  In the first line, a text T is given. In the second line, a string P is given.\n\noutput\n\n  Print an index of T where P found in a line. Print the indices in ascending order.\n\nConstraints\n\n 1 \u2264 length of T \u2264 1000 \n 1 \u2264 length of P \u2264 1000 \nThe input consists of alphabetical characters and digits\n\nSample Input 1\n\naabaaa\naa\n\nSample Output 1\n\n0\n3\n4\n\nSample Input 2\n\nxyzz\nyz\n\nSample Output 2\n\n1\n\nSample Input 3\n\nabc\nxyz\n\nSample Output3\n\n\n\nThe ouput should be empty.\n\n","orig_lang_html":"\n<H1>Naive String Search<\/H1>\n\n<p>\n  Find places where a string <var>P<\/var> is found within a text <var>T<\/var>.\n  \n  Print all indices of <var>T<\/var> where <var>P<\/var> found. The indices of <var>T<\/var> start with 0.\n<\/p>\n\n<H2>Input<\/H2>\n\n<p>\n  In the first line, a text <var>T<\/var> is given. In the second line, a string <var>P<\/var> is given.\n<\/p>\n\n<H2>output<\/H2>\n\n<p>\n  Print an index of <var>T<\/var> where <var>P<\/var> found in a line. Print the indices in ascending order.\n<\/p>\n\n<H2>Constraints<\/H2>\n\n<ul>\n  <li> 1 &le; length of <var>T<\/var> &le; 1000 <\/li>\n  <li> 1 &le; length of <var>P<\/var> &le; 1000 <\/li>\n  <li>The input consists of alphabetical characters and digits<\/li>\n<\/ul>\n\n<H2>Sample Input 1<\/H2>\n<pre>\naabaaa\naa\n<\/pre>\n\n<H2>Sample Output 1<\/H2>\n<pre>\n0\n3\n4\n<\/pre>\n\n<H2>Sample Input 2<\/H2>\n<pre>\nxyzz\nyz\n<\/pre>\n\n<H2>Sample Output 2<\/H2>\n<pre>\n1\n<\/pre>\n\n\n\n<H2>Sample Input 3<\/H2>\n<pre>\nabc\nxyz\n<\/pre>\n\n<H2>Sample Output3<\/H2>\n<pre>\n<\/pre>\n<p>\nThe ouput should be empty.\n<\/p>\n","orig_lang_string":"\nNaive String Search\n\n  Find places where a string P is found within a text T.\n  \n  Print all indices of T where P found. The indices of T start with 0.\n\nInput\n\n  In the first line, a text T is given. In the second line, a string P is given.\n\noutput\n\n  Print an index of T where P found in a line. Print the indices in ascending order.\n\nConstraints\n\n 1 \u2264 length of T \u2264 1000 \n 1 \u2264 length of P \u2264 1000 \nThe input consists of alphabetical characters and digits\n\nSample Input 1\n\naabaaa\naa\n\nSample Output 1\n\n0\n3\n4\n\nSample Input 2\n\nxyzz\nyz\n\nSample Output 2\n\n1\n\nSample Input 3\n\nabc\nxyz\n\nSample Output3\n\n\n\nThe ouput should be empty.\n\n","solve_rate":0.7918781726,"codenet_problem_id":"p02247","input_testcases":{"35":"aaaaba\nab","23":"aaaaaa\naa","5":"aaaaba\naa","96":"abbaab\nba","39":"yzyw\nzy","60":"aabbaa\nab","66":"aaab`a\nab","67":"aaac`a\naa","2":"aaabaa\nba","81":"c`abba\nab","16":"`aabab\nab","62":"aab`ba\naa","102":"xyzz\nyz","25":"aaabaa\nab","8":"aaacab\naa","32":"yzyx\nzy","18":"ababab\nab","57":"b`abba\nab","63":"zzyx\nzz","50":"bab`aa\nab","29":"xyzy\nzy","4":"xyzy\nyz","37":"aaabba\nab","15":"aaaaab\naa","85":"`babaa\nab","1":"aabaaa\nba","33":"abaaaa\nba","70":"aabdab\naa","44":"yzyw\nyz","43":"abb`aa\nab","36":"aabaaa\nab","9":"aaaaba\nba","7":"abaaaa\nab","27":"aaaaca\naa","49":"yzxw\nyz","30":"aaaacb\naa","41":"aaadab\naa","86":"`aabba\nba","78":"baabba\nba","26":"aabbaa\nba","38":"aab`aa\nab","71":"aab`ab\nab","68":"aaabba\nba","65":"yzyx\nyz"},"output_testcases":{"35":"3\n","23":"0\n1\n2\n3\n4\n","5":"0\n1\n2\n","96":"2\n","39":"1\n","60":"1\n","66":"2\n","67":"0\n1\n","2":"3\n","81":"2\n","16":"2\n4\n","62":"0\n","102":"1\n","25":"2\n","8":"0\n1\n","32":"1\n","18":"0\n2\n4\n","57":"2\n","63":"0\n","50":"1\n","29":"2\n","4":"1\n","37":"2\n","15":"0\n1\n2\n3\n","85":"2\n","1":"2\n","33":"1\n","70":"0\n","44":"0\n","43":"0\n","36":"1\n","9":"4\n","7":"0\n","27":"0\n1\n2\n","49":"0\n","30":"0\n1\n2\n","41":"0\n1\n","86":"4\n","78":"0\n4\n","26":"3\n","38":"1\n","71":"1\n4\n","68":"4\n","65":"0\n"},"n_missing":59,"programs":["T=str(input())\nP=str(input())\nfor i in range(len(T)+1-len(P)):\n    if T[i:i+len(P)]==P:\n        print(i)\n","t = input()\np = input()\n\nanslist = []\nfor i in range(len(t) - len(p) + 1):\n    if t[i] == p[0]:\n        k = 0\n        for j in range(i, i + len(p)):\n            if t[j] != p[k]:\n                break\n            k += 1\n        else:\n            anslist.append(i)\n\nfor ans in anslist:\n    print(ans)\n\n","T, P = [input() for i in range(2)]\n\nlen_P = len(P)\nfor i in range(len(T) - len_P + 1):\n    if P == T[i:i + len_P]:\n        print(i)\n\n","a = list(input())\nb = list(input())\n\n\nfor j in range(len(a)+1-len(b)) :\n    Same = True\n    ans = j\n    i = 0\n    while i < len(b) :\n        if b[i] == a[j] :\n            i += 1\n            j += 1\n        else :\n            Same = False\n            break\n    if Same == True :\n        print(ans)\n","t=str(input())\np=str(input())\na=int(0)\nfor i in range(len(t)):\n    f=t[i:i+len(p)]\n    if f.find(p)!=-1:\n        print(i)\n","def main():\n    s = input()\n    t = input()\n    for i in range(len(s)-len(t)+1):\n        if t == s[i:i+len(t)]:print(i)\n\n\nif __name__ == '__main__':\n    main()\n\n\n","T = input()\nP = input()\n\nfor i in range(len(T)):\n    if T[i:].startswith(P):\n        print(i)\n\n","t=input()\np=input()\nl=len(t)-len(p)\nans=[]\nfor i in range(l+1):\n    if t[i:i+len(p)]==p:\n        ans.append(i)\n#if ans==[]:\n#   sys.exit\nfor _ in ans:\n    print(_)\n","T = str(input())\nP = str(input())\nresults = []\nfor i in range(len(T) - len(P) + 1):\n    x = T[i:i+len(P)]\n    if x == P:\n        results.append(i)\n\nfor r in results:\n    print(r)\n","t= input()\np= input()\nl= len(p)\n\nfor i in range(len(t) - l + 1) :\n    if t[i : i + l] == p:\n        print(i)\n","t_str =  input()\np_str =  input()\nfor i in range(len(t_str) - len(p_str) + 1):\n    if t_str[i:i + len(p_str)] == p_str:\n        print(i)\n    else:\n      pass\n\n","T = list(input())\nP = list(input())\nfor i in range(len(T)):\n    try:\n        if P[0] == T[i]:\n            for j in range(len(P)):\n                if P[j] == T[i + j]:\n                    pass\n                else: break\n            else: print(i)\n    except:pass","T = input()\nP = input()\nfor j in range(len(T)):\n    if T[j:].startswith(P):\n        print(j)\n","T = input()\nP = input()\nfor j in range(len(T)):\n    if T[j:].startswith(P):\n        print(j)\n","t = str(input())\np = str(input())\ntt = len(t)\npp = len(p)\ny = 0\n\n#print(t, p)\n\nfor i in range(tt - pp + 1):\n    x = 0\n    for j in range(pp):\n        #print(i, j, t[i+j], p[j])\n\n        if t[i+j] == p[j]:\n            x = x + 1\n        #print(x)\n        \n    if x == pp:\n        y = y + 1\n        #print('\u2192',i)\n        print(i)\n","T = input()\nP = input()\nt = len(T)\np = len(P)\nfor i in range(t - p + 1):\n    if T[i : i + p] == P:\n        print(i)\n","t=input();p=input()\n[print(i)for i in range(len(t))if t[i:].startswith(p)]","def search(s1, s2):\n    len1 = len(s1)\n    len2 = len(s2)\n    for i in range(len1):\n        if i + len2 > len1:\n            break\n\n        for j in range(len2):\n            if s1[i+j] != s2[j]:\n                break\n        else:\n            yield i\n\n\ndef run():\n    s1 = input()\n    s2 = input()\n    for idx in search(s1, s2):\n        print(idx)\n\n\nif __name__ == '__main__':\n    run()\n\n","T = input()\nP = input()\nt = len(T)\np = len(P)\nfor i in range(t - p + 1):\n    if T[i : i + p] == P:\n        print(i)\n","T = input()\nP = input()\nl = len(P)\n\nfor i in range(len(T) - l + 1) :\n    if T[i : i + l] == P :\n        print(i)\n","# coding: utf-8\n# Your code here!\n\nt = str(input())\np = str(input())\n\nfor i in range(len(t)):\n    if t[i:].startswith(p):\n        print(i)\n\n","\nT=input()\nP=input()\nt=len(T)\np=len(P)\n\nfor i in range(t):\n    x=T.find(P,i,i+p)\n    if x!=(-1):\n        print(x)\n        \n\n","#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n  int i, j;\n  char t[1002], p[1002];\n  fgets(t, 1001, stdin);\n  fgets(p, 1001, stdin);\n  if (t[strlen(t)-1]=='\\n') t[strlen(t)-1]='\\0';\n  if (p[strlen(p)-1]=='\\n') p[strlen(p)-1]='\\0';\n\n  int plen = strlen(p);\n  if (plen>strlen(t)) return 0;\n  for (i=0; i<strlen(t)-strlen(p)+1; i++) {\n    if (t[i]==p[0]) {\n      for (j=1; j<plen; j++) {\n\tif (t[i+j]!=p[j]) break;\n      }\n      if (j==plen) {\n\tprintf(\"%d\\n\", i);\n      }\n    }\n  }\n\n  return 0;\n}\n","T = input()\nP = input()\nfor i in range(len(T)):\n    if T[i:].startswith(P):\n        print(i)\n","T = input()\nP = input()\n\nn, result = 0, []\nwhile n < len(T):\n\tnext_n = T.find(P, n)\n\tif next_n < 0:\n\t\tbreak\n\tresult.append(next_n)\n\tn = next_n + 1\n\nfor r in result:\n\tprint(r)\n\n","t=input()\np=input()\nlt=len(t)\nlp=len(p)\nfor i in range(lt-lp+1):\n    if t[i:i+lp]==p:print(i)","T=input()\nP=input()\na=T.find(P)\nif a>=0:\n    print(a)\n    while True:\n        b=T.find(P,a+1)\n        if b>=0:\n            print(b)\n        if b==-1:\n            break\n        a=b\n","T = input() \nP = input()\n\nindex = -1\nwhile True:\n    index = T.find(P,index + 1)\n    if index == -1:\n        break\n    print(index)\n","T = str(input())\nP = str(input())\n\nx = -1\nwhile True:\n    x = T.find(P, x+1)\n    if x == -1:\n        break\n    print(x)\n","a = input()\nb = input()\nidx = 0\nwhile True:\n    idx = a.find(b, idx)\n    if idx+1:\n        print(idx)\n    else:\n        break\n    idx += 1\n","t = input()\np = input()\n \nanslist = []\nfor i in range(len(t) - len(p) + 1):\n    if t[i] == p[0]:\n        k = 0\n        for j in range(i, i + len(p)):\n            if t[j] != p[k]:\n                break\n            k += 1\n        else:\n            anslist.append(i)\n \nfor ans in anslist:\n    print(ans)\n","C=''\n\nT=list(str(input()))\n\nP=str(input())\n\nfor i in range(len(T)-len(P)+1):\n    for j in range(len(P)):\n        C+=T[i+j]\n        j+=1\n    \n    if C==P:\n        print(i)\n    C=''\n","# coding: utf-8\n# Your code here!\nT=input()\nP=input()\n\nfor i in range(len(T)):\n    if P==T[i:i+len(P)]:\n        print(i)\n","if __name__ == '__main__':\n    # ??????????????\\???\n    # T = 'abc'\n    # P = 'xyz'\n    T = input()\n    P = input()\n\n    # ???????????????\n    results = []\n\n    for i in range(len(T) - len(P) + 1):\n        temp = T[i:i+len(P)]\n        if temp == P:\n            results.append(i)\n\n    # ???????????\u00a8???\n    for r in results:\n        print(r)","t = input()\np = input()\n\nfor i in range(len(t)-len(p)+1):\n    if t[i] == p[0]:\n        if all(t[i+j] == p[j] for j in range(len(p)) if i+j < len(t)):\n            print(i)\n\n","a=input()\nb=input()\nfor i in range (len(a)):\n    if b == a[i:i+len(b)]:\n        print(i)\n\n","T = input()\nP = input()\nfor i in range(len(T)):\n  if T[i:].startswith(P):\n    print(i)\n","T=input()\nP=input()\nfor i in range(len(T)):\n    if T[i:i+len(P)]==P:\n        print(i)\n    else:\n        continue \n","text=input()\nstring=input()\n\n\n#common_length[i]\u306f\u3001\u63a2\u7d22\u5217\u304cstring[i]\u3067\u63a2\u7d22\u3092\u7d42\u4e86\u3057\u305f\u3068\u304d\u306b\u3001\n# string[i-common_lneght[i] + 1] \u301cstring[i]\u3067\u69cb\u6210\u3055\u308c\u308b\u6587\u5b57\u5217\u304c\u3001\u63a2\u7d22\u4fa1\u5024\u3092\u6301\u3064\u3053\u3068\u3092\u793a\u3059\n\n\nlen_string=len(string)\ncommon_length=[0]*len_string\ntmp=0\nfor i in range(1,len_string):\n    if(string[i]==string[tmp]):\n        common_length[i-1]=0\n        tmp+=1\n    else:\n        common_length[i-1]=tmp\n        tmp=0\n\nif(string[-1]==string[tmp-1]):\n    common_length[-1]=tmp\n\n\n\n\ntmp=0\n\nfor i in range(len(text)):\n    if(text[i]!=string[tmp]):\n        while(text[i]!=string[tmp] and tmp==0):\n            tmp=common_length[max([tmp-1,0])]\n        if(text[i]==string[tmp]):\n            tmp+=1\n    else:\n        tmp+=1\n        if(tmp==len_string):\n            print(i-tmp+1)\n            tmp=common_length[-1]\n","a=input()\nb=input()\nfor i in range(len(a)):\n    x=a[i:i+len(b)].find(b)\n    if x!=-1:\n        print(x+i)\n","target = input().strip()\nse = input().strip()\nanswer = []\nfor i in range(len(target) - len(se) + 1):\n    for inner in range(len(se)):\n        if target[i + inner] != se[inner]:\n            break\n    else:\n        answer.append(i)\nfor a in answer:\n    print(a)","T = input()\nP = input()\n\nfor i in range(len(T)):\n    if P == T[i:i+len(P)]:\n        print(i)\n","T = input()\nP = input()\nfor i in range(len(T)):\n    if T[i:].startswith(P):\n        print(i)\n","t, p = input(), input()\nlen_p = len(p)\nfor i in range(len(t) - len_p + 1):\n    if t[i:i + len_p] == p:\n        print(i)","#!\/usr\/bin\/env python\n# -*- coding: utf-8 -*-\n\n\"\"\"\ninput:\naabaaa\naa\n\noutput:\n0\n3\n4\n\"\"\"\n\nimport sys\n\n\nclass NaiveStringSearch(object):\n    __slots__ = ('target', 'pattern')\n\n    def __init__(self, in_data):\n        \"\"\"\"\"\"\n        self.target, self.pattern = map(lambda x: x.strip(), _input)\n\n    def brute_force(self):\n        m, n = len(self.pattern), len(self.target)\n        for i in range(n - m + 1):\n            for j in range(m):\n                if self.target[i + j] != self.pattern[j]:\n                    break\n                if j == m - 1:\n                    print(i)\n        return None\n\n\nif __name__ == '__main__':\n    _input = sys.stdin.readlines()\n    case = NaiveStringSearch(in_data=_input)\n    case.brute_force()","a = list(input())\nb = list(input())\n\n\nfor j in range(len(a)+1-len(b)) :\n    Same = True\n    ans = j\n    i = 0\n    while i < len(b) :\n        if b[i] == a[j] :\n            i += 1\n            j += 1\n        else :\n            Same = False\n            break\n    if Same == True :\n        print(ans)\n","# coding: utf-8\n# 59\n\nT = input()\nP = input()\nt=[]\nA = []\n#print(len(P),len(T))\nif len(P)==1:\n    K=len(T)\nelse:\n    K = len(T)-(len(P)-1)\n    #print(K)\np = len(P)\nfor i in range(K):\n    t = T[i:p]\n    #print(t)\n    p += 1\n    if t.count(P)>0:\n        print(i)\n","import string\n\n\nclass SuffixArray:\n    def __init__(self, S):\n        self.N = len(S)\n        self.S = S\n        self.atoi = {x: i for i, x in enumerate(string.printable)}\n        self.sa = self.__make_sa()\n\n    def show(self):\n        for i, s in enumerate(self.sa):\n            print(i, s, self.S[s:])\n\n    def __make_sa(self):\n        \"\"\"\u914d\u5217\uff08\u6587\u5b57\u5217\uff09S\u306esuffix array\u3092\u8fd4\u3059 O(N(logN)^2)\"\"\"\n        N = self.N\n        SA = list(range(N + 1))\n        rank = [-1] * (N + 1)\n        tmp = [0] * (N + 1)\n        k = 1\n\n        for i, s in enumerate(self.S):\n            rank[i] = self.atoi[s]\n\n        def key(i):\n            if i + k <= N:\n                return (rank[i], rank[i + k])\n            return (rank[i], -1)\n\n        def cmp(i, j):\n            return key(i) < key(j)\n\n        while k <= N:\n            SA.sort(key=key)\n            tmp[SA[0]] = 0\n            for i in range(1, N + 1):\n                tmp[SA[i]] = tmp[SA[i - 1]] + cmp(SA[i - 1], SA[i])\n            for i in range(N + 1):\n                rank[i] = tmp[i]\n            k *= 2\n        return SA\n\n    def contain(self, T, side=\"left\"):\n        \"\"\"\u6587\u5b57\u5217S\u306bT\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u304b\u3092\u8fd4\u3059O(|T|log|S|)\n        input\n            T: \u691c\u7d22\u3059\u308b\u6587\u5b57\u5217\uff08\u914d\u5217\uff09\n            side: left\u3000-> S[sa[i]:sa[i]+NT] == T\u3068\u306a\u308b\u6700\u5c0f\u306eindex i\u3092\u8fd4\u3059\n                  right -> \u6700\u5927\u306eindex\u3092\u8fd4\u3059\n        output:\n            \u542b\u307e\u308c\u308b\u5834\u5408: S[sa[i]: sa[i]+NT] == T\u3068\u306a\u308b\u6700\u5c0for\u6700\u5927\u306ei\n            \u542b\u307e\u308c\u306a\u3044\u5834\u5408: -1\n        \"\"\"\n        NT = len(T)\n        if NT > self.N:\n            return -1\n        L = 0\n        R = self.N\n        if side == \"left\":\n            while R - L > 1:\n                m = (L + R) \/\/ 2\n                i = self.sa[m]\n                if self.S[i:i + NT] < T:\n                    L = m\n                else:\n                    R = m\n            i = self.sa[R]\n            if self.S[i:i + NT] == T:\n                return R\n        else:\n            R += 1\n            while R - L > 1:\n                m = (L + R) \/\/ 2\n                i = self.sa[m]\n                if self.S[i:i + NT] <= T:\n                    L = m\n                else:\n                    R = m\n            i = self.sa[L]\n            if self.S[i:i + NT] == T:\n                return L\n        return -1\n\n    def get_indices(self, T):\n        \"\"\"S\u306e\u4e2d\u306b\u542b\u307e\u308c\u308bT\u306e\u4f4d\u7f6e\u3092\u683c\u7d0d\u3057\u305findex\u306e\u30ea\u30b9\u30c8\u3092\u8fd4\u3059\"\"\"\n        L = self.contain(T, side=\"left\")\n        if L == -1:\n            return []\n        R = self.contain(T, side=\"right\")\n        return [self.sa[i] for i in range(L, R+1)]\n\n\nSA = SuffixArray(input())\nres = SA.get_indices(input())\nif res:\n    res.sort()\n    print(*res, sep=\"\\n\")\n","T, P = input(), input()\nfor i in range(len(T)):\n\tif T[i:].startswith(P):\n\t\tprint(i)","from pprint import pprint\n\n__BASE     = 1000000007\n__MOD      = (2**64)\n__INV      = 13499267949257065399\n\ndef main():\n    s,t = input(),input()\n    x = len(t)\n    mp = {}\n    hashv = 0\n    for i in range(len(s)):\n        if i - x >= 0:\n            hashv = hashv - ord(s[i-x]) * ( __BASE ** (x-1) )\n        hashv *= __BASE\n        hashv %= __MOD\n        hashv += ord(s[i])\n        hashv %= __MOD\n        if i >= x-1:\n            if hashv in mp:\n                mp[hashv].append(i)\n            else:\n                mp[hashv] = [i]\n    hashv = 0\n    for c in t:\n        hashv *= __BASE\n        hashv %= __MOD\n        hashv += ord(c)\n    if hashv in mp:\n        for pos in mp[hashv]:\n            print(pos-(x-1))\n\nif __name__ == \"__main__\":\n    main()\n","a=input()\nb=input()\nx=list(a)\ny=list(b)\nfor i in range(len(a)+1-len(b)):\n    z=0\n    for j in range(len(b)):\n        if x[i+j]==y[j]:\n            z+=1\n    if z==len(b):\n        print(i)\n","t=input()\np=input()\ns=len(t)-len(p)\nfor i in range(s+1):\n    if p==t[i:len(p)+i]:\n        print(i)\n","X = input()\nY = input()\nx = len(X)\ny = len(Y)\nfor i in range(x-y+1):\n    if Y == X[i:i+y]:\n        print(i)\n","string = input()\nteststring = input()\nlength = len(teststring)\ncounter = []\nfor position in range(0, len(string)):\n  if string[position:position + length] == teststring:\n    counter.append(position)\n\nfor content in counter:\n  print(content)","a= input()\nb= input()\nln = len(b)\nfor i in range(len(a) - ln + 1):\n    if a[i : i + ln] == b :\n        print(i)\n","T=str(input())\nP=str(input())\nfor i in range(len(T)):\n    if T[i:len(T)].startswith(P):\n        print(i)\n","a = input()\nb = input()\nx = 0\nwhile True:\n    x = a.find(b, x)\n    if x+1:\n        print(x)\n    else:\n        break\n    x += 1\n","T=input()\nP=input()\nfor i in range(len(T)):\n    if T[i:i+len(P)]==P:\n        print(i)\n","T,P=input(),input()\nfor i in range(len(T)):\n    if T[i:].startswith(P):\n        print(i)\n","T=input()\nP=input()\nm=-1\nfor i in range(len(T)):\n    k=T.find(P,i,len(T))\n    if m != k and k>=0:\n        print(k)\n    m=k\n","T = input()\nP = input()\nfor i in range(len(T)):\n    if P in T[i:i+len(P)]:\n        print(i)\n    else:\n        pass\n","T, P = input(), input()\nfor i in range(len(T)):\n    if T[i:].startswith(P):\n        print(i)","# coding: utf-8\n# Your code here!\n\nT = input()\nP = input()\n\nfor i in range(len(T) - len(P) + 1):\n   if P == T[i : i + len(P)]:\n      print(i)\n\n","t =  input()\np =  input()\nfor i in range(len(t) - len(p) + 1):\n    if t[i:i + len(p)] == p:\n        print(i)\n    else:\n      pass\n","A = input()\nB = input()\na = len(A)\nb = len(B)\nfor i in range(a-b+1):\n    if B == A[i:i+b]:    #a[i:j]\u2192[a[i], a[i+1], a[i+2], ..., a[j-1]]\n        print(i)\n","t=input()\np=input()\nfor i in range(len(t)-len(p)+1):\n\tif t[i:i+len(p)]==p:\n\t\tprint(i)\n\n","s=input()\np=input()\nfor i in range(len(s)):\n    if s[i:].startswith(p):\n        print(i)\n","t=input()\np=input()\nl=len(t)\nll=len(p)\ni=0\nfor i in range(l-ll+1):\n    x=t.find(p,i,i+ll)\n    if x==-1:\n        pass\n    else:\n        print(x)\n","t=input()\np=input()\nfor i in range(len(t)-len(p)+1):\n    if t[i:i+len(p)] == p:\n        print(i)\n    \n","t=input()\np=input()\ntry:\n    if t.count(p)!=0:\n        for i in range(len(t)-len(p)+1):\n                if p==t[i:i+len(p)]:\n                    print(i)    \nexcept:\n    pass\n","T,P=input(),input()\nn=len(P)\nfor i in range(len(T)):T[i:i+n]!=P or print(i)\n","def main():\n    text = input()\n    len_text = len(text)\n    pattern = input()\n    len_pattern = len(pattern)\n\n    for i in range(len_text - len_pattern + 1):\n        if text[i:i+len_pattern] == pattern:\n            print(i)\n    return\n\n\nmain()\n","def comp(T,P):\n    if T == P:\n        return True\n    else:\n        return False\n\ndef main():\n    T = input()\n    P = input()\n    n1,n2 = len(T),len(P)\n\n    for i in range(n1-n2+1):\n        if comp(T[i:i+n2],P):\n            print(i)\n\nif __name__ == \"__main__\":\n    main()\n\n","T=input()\nP=input()\n\nfor i in range (len(T)):\n    P!=T[i:i+len(P)] or print(i)\n","T = str(input())\nP = str(input())\nx = 0\n\nwhile True:\n    x = T.find(P, x)\n    if x+1:\n        print(x)\n    else:\n        break\n    x = x + 1\n","#59 \u6587\u5b57\u5217\u691c\u7d22\n\nT = input().upper()\nP = input().upper()\n\nresults = []\n\nfor i in range(len(T) - len(P) + 1):\n        temp = T[i:i+len(P)]\n        if temp == P:\n                results.append(i)\n\nfor r in results:\n        print(r)\n","T=input()\nP=input()\nfor i in range(len(T)):\n    if T[i:].startswith(P):\n        print(i)\n\n","T=input()\nP=input()\nfor i in range(len(T)-len(P)+1):\n    if P[0:len(P)]==T[i:i+len(P)]:\n        print(i)\n    else:\n        continue\n","#import pysnooper\n#import os,re,sys,operator,math,heapq,string\nfrom collections import Counter,deque\n#from operator import itemgetter\n#from itertools import accumulate,combinations,groupby,combinations_with_replacement\nfrom sys import stdin,setrecursionlimit\n#from copy import deepcopy\nsetrecursionlimit(10**6)\ninput=stdin.readline\n\ns=input().rstrip()\nt=input().rstrip()\nans=set()\nfor i in range(len(s)):\n    try:\n        n=s[i:].index(t)+i\n        ans.add(n)\n    except:\n        continue\nfor i in sorted(ans):\n    print(i)\n","T=input()\nP=input()\nb=0\nwhile True:\n    a=T.find(P,b)\n    if a==-1:\n        break\n    print(a)\n    b=a+1\n","T = input()\nS = input()\n\ns = len(S)\nfor i in range(len(T)-s+1):\n    if T[i:i+s] == S:\n        print(i)\n","#coding:utf-8\n\ndef NSS(s1,s2):\n    s1list=list(s1)\n    n=len(s1list)\n    s2list=list(s2)\n    for i in range(n):\n        ans=0\n        if len(s1list)>=len(s2list) and s1list[0]==s2list[0]:\n            ans+=1\n            for j in range(1,len(s2list)):\n                if s1list[j]==s2list[j]:\n                    ans+=1\n        if ans==len(s2list):\n            print(i)\n        s1list.pop(0)\n\nif __name__==\"__main__\":\n    s1=input()\n    s2=input()\n    NSS(s1,s2)\n        \n            ","t=input()\np=input()\n\n\nfor i in range(len(t)):\n    if p in t[i:i+len(p)]:\n        print(i)\n\n","t=input()\np=input()\n\nfor i in range(len(t)-len(p)+1):\n    x=t.find(p)\n    if x==0:\n        print(i)\n    t=list(t)\n    t.extend(t[0])\n    t.remove(t[0])\n    t=''.join(map(str,t))\n","T = input()\nP = input()\nt = len(T)\np = len(P)\nfor i in range(t-p+1):\n    if P == T[i:i+p]:\n        print(i)\n\n","parent = input()\nkey = input()\n\nfor i in range(len(parent)):\n    if parent[i:i+len(key)] == key:\n        print(i)\n","t = input()\np = input()\n\nfor i in range(len(t)):\n    for j in range(len(p) + 1):\n        if j == len(p):\n            print(i)\n        else:\n            if i + j >= len(t):\n                break\n            elif t[i + j] == p[j]:\n                continue\n            else:\n                break\n","a = input()\nb = input()\nfor i in range(len(a)):\n    if a[i:i+len(b)] == b:\n        print(i)\n        \n","def Main():\n    text = input()\n    pattern = input()\n    \n    for i in range(len(text)):\n        if text[i:].startswith(pattern):\n            print(i)\nMain()\n","T = input()\nP = input()\nfor i in range(len(T)):\n    if T[i:].startswith(P):\n        print(i)\n","# coding: utf-8\n# Your code here!\n\nT = input()\nP = input()\n\nfor i in range(len(T) - len(P) + 1):\n   if P == T[i : i + len(P)]:\n      print(i)\n","l = input()\nm = input()\nn = len(l)\nk = len(m)\n\nc = 0\nfor i in range(n-k+1):\n    if l[i:i+k] == m:\n        print(i)\n\n","T=str(input())\nP=str(input())\nl1=len(T)\nl2=len(P)\ni=0\nfor i in range(l1-l2+1):\n    i+=1\n    x=T.find(P,i-1,i+l2-1)\n    if x==-1:\n        pass\n    else:\n        print(x)\n","T = input()\nP = input()\n\nfor i in range(len(T) - len(P) + 1):\n   if P == T[i : i + len(P)]:\n      print(i)\n","import sys\nfrom typing import List\n\n\nif __name__ == \"__main__\":\n    input_str = input()\n    target_str = input()\n    target_str_len = len(target_str)\n\n    for idx, s in enumerate(input_str):\n        if len(input_str[idx:]) < target_str_len:\n            break\n        if s == target_str[0]:\n            if input_str[idx:idx + target_str_len] == target_str:\n                print(idx)\n\n","def search(t, p):\n    tn = len(t)\n    i = 0\n    pn = len(p)\n    plist = []\n    if pn <= tn:\n        while i < tn:\n            j = 0\n            while j < pn and i+j < tn:\n                if t[i+j] != p[j]: break\n                j += 1\n            if j == pn:\n                plist.append(i)\n            i += 1\n    return plist\n\ndef main():\n    t = input()\n    p = input()\n    plist = search(t, p)\n    for i in plist: print(i)\n\n\n\nif __name__ == \"__main__\":\n    main()\n","t = input()\np = input()\nfor i in range(len(t)-len(p)+1):\n if t.find(p,i,i+len(p)) != -1: print(i)\n","T = input()\nP = input()\nlen_P = len(P)\n\nfor i in range(len(T)-len_P+1):\n    if T[i:i+len_P] == P:\n        print(i)\n\n","s=input()\na=len(s)\np=input()\nb=len(p)\nfor i in range (a):\n    l=s[i:i+b]\n    if l==p:\n        print(i)\n","A=input()\nB=input()\na=len(A)\nb=len(B)\nfor i in range(a-b+1):\n    if B==A[i:i+b]:\n        print(i)\n\n"],"raw_generations":["T=str(input())\nP=str(input())\nfor i in range(len(T)+1-len(P)):\n    if T[i:i+len(P)]==P:\n        print(i)\n","t = input()\np = input()\n\nanslist = []\nfor i in range(len(t) - len(p) + 1):\n    if t[i] == p[0]:\n        k = 0\n        for j in range(i, i + len(p)):\n            if t[j] != p[k]:\n                break\n            k += 1\n        else:\n            anslist.append(i)\n\nfor ans in anslist:\n    print(ans)\n\n","T, P = [input() for i in range(2)]\n\nlen_P = len(P)\nfor i in range(len(T) - len_P + 1):\n    if P == T[i:i + len_P]:\n        print(i)\n\n","a = list(input())\nb = list(input())\n\n\nfor j in range(len(a)+1-len(b)) :\n    Same = True\n    ans = j\n    i = 0\n    while i < len(b) :\n        if b[i] == a[j] :\n            i += 1\n            j += 1\n        else :\n            Same = False\n            break\n    if Same == True :\n        print(ans)\n","t=str(input())\np=str(input())\na=int(0)\nfor i in range(len(t)):\n    f=t[i:i+len(p)]\n    if f.find(p)!=-1:\n        print(i)\n","def main():\n    s = input()\n    t = input()\n    for i in range(len(s)-len(t)+1):\n        if t == s[i:i+len(t)]:print(i)\n\n\nif __name__ == '__main__':\n    main()\n\n\n","T = input()\nP = input()\n\nfor i in range(len(T)):\n    if T[i:].startswith(P):\n        print(i)\n\n","t=input()\np=input()\nl=len(t)-len(p)\nans=[]\nfor i in range(l+1):\n    if t[i:i+len(p)]==p:\n        ans.append(i)\n#if ans==[]:\n#   sys.exit\nfor _ in ans:\n    print(_)\n","T = str(input())\nP = str(input())\nresults = []\nfor i in range(len(T) - len(P) + 1):\n    x = T[i:i+len(P)]\n    if x == P:\n        results.append(i)\n\nfor r in results:\n    print(r)\n","t= input()\np= input()\nl= len(p)\n\nfor i in range(len(t) - l + 1) :\n    if t[i : i + l] == p:\n        print(i)\n","t_str =  input()\np_str =  input()\nfor i in range(len(t_str) - len(p_str) + 1):\n    if t_str[i:i + len(p_str)] == p_str:\n        print(i)\n    else:\n      pass\n\n","T = list(input())\nP = list(input())\nfor i in range(len(T)):\n    try:\n        if P[0] == T[i]:\n            for j in range(len(P)):\n                if P[j] == T[i + j]:\n                    pass\n                else: break\n            else: print(i)\n    except:pass","T = input()\nP = input()\nfor j in range(len(T)):\n    if T[j:].startswith(P):\n        print(j)\n","T = input()\nP = input()\nfor j in range(len(T)):\n    if T[j:].startswith(P):\n        print(j)\n","t = str(input())\np = str(input())\ntt = len(t)\npp = len(p)\ny = 0\n\n#print(t, p)\n\nfor i in range(tt - pp + 1):\n    x = 0\n    for j in range(pp):\n        #print(i, j, t[i+j], p[j])\n\n        if t[i+j] == p[j]:\n            x = x + 1\n        #print(x)\n        \n    if x == pp:\n        y = y + 1\n        #print('\u2192',i)\n        print(i)\n","T = input()\nP = input()\nt = len(T)\np = len(P)\nfor i in range(t - p + 1):\n    if T[i : i + p] == P:\n        print(i)\n","t=input();p=input()\n[print(i)for i in range(len(t))if t[i:].startswith(p)]","def search(s1, s2):\n    len1 = len(s1)\n    len2 = len(s2)\n    for i in range(len1):\n        if i + len2 > len1:\n            break\n\n        for j in range(len2):\n            if s1[i+j] != s2[j]:\n                break\n        else:\n            yield i\n\n\ndef run():\n    s1 = input()\n    s2 = input()\n    for idx in search(s1, s2):\n        print(idx)\n\n\nif __name__ == '__main__':\n    run()\n\n","T = input()\nP = input()\nt = len(T)\np = len(P)\nfor i in range(t - p + 1):\n    if T[i : i + p] == P:\n        print(i)\n","T = input()\nP = input()\nl = len(P)\n\nfor i in range(len(T) - l + 1) :\n    if T[i : i + l] == P :\n        print(i)\n","# coding: utf-8\n# Your code here!\n\nt = str(input())\np = str(input())\n\nfor i in range(len(t)):\n    if t[i:].startswith(p):\n        print(i)\n\n","\nT=input()\nP=input()\nt=len(T)\np=len(P)\n\nfor i in range(t):\n    x=T.find(P,i,i+p)\n    if x!=(-1):\n        print(x)\n        \n\n","#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n  int i, j;\n  char t[1002], p[1002];\n  fgets(t, 1001, stdin);\n  fgets(p, 1001, stdin);\n  if (t[strlen(t)-1]=='\\n') t[strlen(t)-1]='\\0';\n  if (p[strlen(p)-1]=='\\n') p[strlen(p)-1]='\\0';\n\n  int plen = strlen(p);\n  if (plen>strlen(t)) return 0;\n  for (i=0; i<strlen(t)-strlen(p)+1; i++) {\n    if (t[i]==p[0]) {\n      for (j=1; j<plen; j++) {\n\tif (t[i+j]!=p[j]) break;\n      }\n      if (j==plen) {\n\tprintf(\"%d\\n\", i);\n      }\n    }\n  }\n\n  return 0;\n}\n","T = input()\nP = input()\nfor i in range(len(T)):\n    if T[i:].startswith(P):\n        print(i)\n","T = input()\nP = input()\n\nn, result = 0, []\nwhile n < len(T):\n\tnext_n = T.find(P, n)\n\tif next_n < 0:\n\t\tbreak\n\tresult.append(next_n)\n\tn = next_n + 1\n\nfor r in result:\n\tprint(r)\n\n","t=input()\np=input()\nlt=len(t)\nlp=len(p)\nfor i in range(lt-lp+1):\n    if t[i:i+lp]==p:print(i)","T=input()\nP=input()\na=T.find(P)\nif a>=0:\n    print(a)\n    while True:\n        b=T.find(P,a+1)\n        if b>=0:\n            print(b)\n        if b==-1:\n            break\n        a=b\n","T = input() \nP = input()\n\nindex = -1\nwhile True:\n    index = T.find(P,index + 1)\n    if index == -1:\n        break\n    print(index)\n","T = str(input())\nP = str(input())\n\nx = -1\nwhile True:\n    x = T.find(P, x+1)\n    if x == -1:\n        break\n    print(x)\n","a = input()\nb = input()\nidx = 0\nwhile True:\n    idx = a.find(b, idx)\n    if idx+1:\n        print(idx)\n    else:\n        break\n    idx += 1\n","t = input()\np = input()\n \nanslist = []\nfor i in range(len(t) - len(p) + 1):\n    if t[i] == p[0]:\n        k = 0\n        for j in range(i, i + len(p)):\n            if t[j] != p[k]:\n                break\n            k += 1\n        else:\n            anslist.append(i)\n \nfor ans in anslist:\n    print(ans)\n","C=''\n\nT=list(str(input()))\n\nP=str(input())\n\nfor i in range(len(T)-len(P)+1):\n    for j in range(len(P)):\n        C+=T[i+j]\n        j+=1\n    \n    if C==P:\n        print(i)\n    C=''\n","# coding: utf-8\n# Your code here!\nT=input()\nP=input()\n\nfor i in range(len(T)):\n    if P==T[i:i+len(P)]:\n        print(i)\n","if __name__ == '__main__':\n    # ??????????????\\???\n    # T = 'abc'\n    # P = 'xyz'\n    T = input()\n    P = input()\n\n    # ???????????????\n    results = []\n\n    for i in range(len(T) - len(P) + 1):\n        temp = T[i:i+len(P)]\n        if temp == P:\n            results.append(i)\n\n    # ???????????\u00a8???\n    for r in results:\n        print(r)","t = input()\np = input()\n\nfor i in range(len(t)-len(p)+1):\n    if t[i] == p[0]:\n        if all(t[i+j] == p[j] for j in range(len(p)) if i+j < len(t)):\n            print(i)\n\n","a=input()\nb=input()\nfor i in range (len(a)):\n    if b == a[i:i+len(b)]:\n        print(i)\n\n","T = input()\nP = input()\nfor i in range(len(T)):\n  if T[i:].startswith(P):\n    print(i)\n","T=input()\nP=input()\nfor i in range(len(T)):\n    if T[i:i+len(P)]==P:\n        print(i)\n    else:\n        continue \n","text=input()\nstring=input()\n\n\n#common_length[i]\u306f\u3001\u63a2\u7d22\u5217\u304cstring[i]\u3067\u63a2\u7d22\u3092\u7d42\u4e86\u3057\u305f\u3068\u304d\u306b\u3001\n# string[i-common_lneght[i] + 1] \u301cstring[i]\u3067\u69cb\u6210\u3055\u308c\u308b\u6587\u5b57\u5217\u304c\u3001\u63a2\u7d22\u4fa1\u5024\u3092\u6301\u3064\u3053\u3068\u3092\u793a\u3059\n\n\nlen_string=len(string)\ncommon_length=[0]*len_string\ntmp=0\nfor i in range(1,len_string):\n    if(string[i]==string[tmp]):\n        common_length[i-1]=0\n        tmp+=1\n    else:\n        common_length[i-1]=tmp\n        tmp=0\n\nif(string[-1]==string[tmp-1]):\n    common_length[-1]=tmp\n\n\n\n\ntmp=0\n\nfor i in range(len(text)):\n    if(text[i]!=string[tmp]):\n        while(text[i]!=string[tmp] and tmp==0):\n            tmp=common_length[max([tmp-1,0])]\n        if(text[i]==string[tmp]):\n            tmp+=1\n    else:\n        tmp+=1\n        if(tmp==len_string):\n            print(i-tmp+1)\n            tmp=common_length[-1]\n","a=input()\nb=input()\nfor i in range(len(a)):\n    x=a[i:i+len(b)].find(b)\n    if x!=-1:\n        print(x+i)\n","target = input().strip()\nse = input().strip()\nanswer = []\nfor i in range(len(target) - len(se) + 1):\n    for inner in range(len(se)):\n        if target[i + inner] != se[inner]:\n            break\n    else:\n        answer.append(i)\nfor a in answer:\n    print(a)","T = input()\nP = input()\n\nfor i in range(len(T)):\n    if P == T[i:i+len(P)]:\n        print(i)\n","T = input()\nP = input()\nfor i in range(len(T)):\n    if T[i:].startswith(P):\n        print(i)\n","t, p = input(), input()\nlen_p = len(p)\nfor i in range(len(t) - len_p + 1):\n    if t[i:i + len_p] == p:\n        print(i)","#!\/usr\/bin\/env python\n# -*- coding: utf-8 -*-\n\n\"\"\"\ninput:\naabaaa\naa\n\noutput:\n0\n3\n4\n\"\"\"\n\nimport sys\n\n\nclass NaiveStringSearch(object):\n    __slots__ = ('target', 'pattern')\n\n    def __init__(self, in_data):\n        \"\"\"\"\"\"\n        self.target, self.pattern = map(lambda x: x.strip(), _input)\n\n    def brute_force(self):\n        m, n = len(self.pattern), len(self.target)\n        for i in range(n - m + 1):\n            for j in range(m):\n                if self.target[i + j] != self.pattern[j]:\n                    break\n                if j == m - 1:\n                    print(i)\n        return None\n\n\nif __name__ == '__main__':\n    _input = sys.stdin.readlines()\n    case = NaiveStringSearch(in_data=_input)\n    case.brute_force()","a = list(input())\nb = list(input())\n\n\nfor j in range(len(a)+1-len(b)) :\n    Same = True\n    ans = j\n    i = 0\n    while i < len(b) :\n        if b[i] == a[j] :\n            i += 1\n            j += 1\n        else :\n            Same = False\n            break\n    if Same == True :\n        print(ans)\n","# coding: utf-8\n# 59\n\nT = input()\nP = input()\nt=[]\nA = []\n#print(len(P),len(T))\nif len(P)==1:\n    K=len(T)\nelse:\n    K = len(T)-(len(P)-1)\n    #print(K)\np = len(P)\nfor i in range(K):\n    t = T[i:p]\n    #print(t)\n    p += 1\n    if t.count(P)>0:\n        print(i)\n","import string\n\n\nclass SuffixArray:\n    def __init__(self, S):\n        self.N = len(S)\n        self.S = S\n        self.atoi = {x: i for i, x in enumerate(string.printable)}\n        self.sa = self.__make_sa()\n\n    def show(self):\n        for i, s in enumerate(self.sa):\n            print(i, s, self.S[s:])\n\n    def __make_sa(self):\n        \"\"\"\u914d\u5217\uff08\u6587\u5b57\u5217\uff09S\u306esuffix array\u3092\u8fd4\u3059 O(N(logN)^2)\"\"\"\n        N = self.N\n        SA = list(range(N + 1))\n        rank = [-1] * (N + 1)\n        tmp = [0] * (N + 1)\n        k = 1\n\n        for i, s in enumerate(self.S):\n            rank[i] = self.atoi[s]\n\n        def key(i):\n            if i + k <= N:\n                return (rank[i], rank[i + k])\n            return (rank[i], -1)\n\n        def cmp(i, j):\n            return key(i) < key(j)\n\n        while k <= N:\n            SA.sort(key=key)\n            tmp[SA[0]] = 0\n            for i in range(1, N + 1):\n                tmp[SA[i]] = tmp[SA[i - 1]] + cmp(SA[i - 1], SA[i])\n            for i in range(N + 1):\n                rank[i] = tmp[i]\n            k *= 2\n        return SA\n\n    def contain(self, T, side=\"left\"):\n        \"\"\"\u6587\u5b57\u5217S\u306bT\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u304b\u3092\u8fd4\u3059O(|T|log|S|)\n        input\n            T: \u691c\u7d22\u3059\u308b\u6587\u5b57\u5217\uff08\u914d\u5217\uff09\n            side: left\u3000-> S[sa[i]:sa[i]+NT] == T\u3068\u306a\u308b\u6700\u5c0f\u306eindex i\u3092\u8fd4\u3059\n                  right -> \u6700\u5927\u306eindex\u3092\u8fd4\u3059\n        output:\n            \u542b\u307e\u308c\u308b\u5834\u5408: S[sa[i]: sa[i]+NT] == T\u3068\u306a\u308b\u6700\u5c0for\u6700\u5927\u306ei\n            \u542b\u307e\u308c\u306a\u3044\u5834\u5408: -1\n        \"\"\"\n        NT = len(T)\n        if NT > self.N:\n            return -1\n        L = 0\n        R = self.N\n        if side == \"left\":\n            while R - L > 1:\n                m = (L + R) \/\/ 2\n                i = self.sa[m]\n                if self.S[i:i + NT] < T:\n                    L = m\n                else:\n                    R = m\n            i = self.sa[R]\n            if self.S[i:i + NT] == T:\n                return R\n        else:\n            R += 1\n            while R - L > 1:\n                m = (L + R) \/\/ 2\n                i = self.sa[m]\n                if self.S[i:i + NT] <= T:\n                    L = m\n                else:\n                    R = m\n            i = self.sa[L]\n            if self.S[i:i + NT] == T:\n                return L\n        return -1\n\n    def get_indices(self, T):\n        \"\"\"S\u306e\u4e2d\u306b\u542b\u307e\u308c\u308bT\u306e\u4f4d\u7f6e\u3092\u683c\u7d0d\u3057\u305findex\u306e\u30ea\u30b9\u30c8\u3092\u8fd4\u3059\"\"\"\n        L = self.contain(T, side=\"left\")\n        if L == -1:\n            return []\n        R = self.contain(T, side=\"right\")\n        return [self.sa[i] for i in range(L, R+1)]\n\n\nSA = SuffixArray(input())\nres = SA.get_indices(input())\nif res:\n    res.sort()\n    print(*res, sep=\"\\n\")\n","T, P = input(), input()\nfor i in range(len(T)):\n\tif T[i:].startswith(P):\n\t\tprint(i)","from pprint import pprint\n\n__BASE     = 1000000007\n__MOD      = (2**64)\n__INV      = 13499267949257065399\n\ndef main():\n    s,t = input(),input()\n    x = len(t)\n    mp = {}\n    hashv = 0\n    for i in range(len(s)):\n        if i - x >= 0:\n            hashv = hashv - ord(s[i-x]) * ( __BASE ** (x-1) )\n        hashv *= __BASE\n        hashv %= __MOD\n        hashv += ord(s[i])\n        hashv %= __MOD\n        if i >= x-1:\n            if hashv in mp:\n                mp[hashv].append(i)\n            else:\n                mp[hashv] = [i]\n    hashv = 0\n    for c in t:\n        hashv *= __BASE\n        hashv %= __MOD\n        hashv += ord(c)\n    if hashv in mp:\n        for pos in mp[hashv]:\n            print(pos-(x-1))\n\nif __name__ == \"__main__\":\n    main()\n","a=input()\nb=input()\nx=list(a)\ny=list(b)\nfor i in range(len(a)+1-len(b)):\n    z=0\n    for j in range(len(b)):\n        if x[i+j]==y[j]:\n            z+=1\n    if z==len(b):\n        print(i)\n","t=input()\np=input()\ns=len(t)-len(p)\nfor i in range(s+1):\n    if p==t[i:len(p)+i]:\n        print(i)\n","X = input()\nY = input()\nx = len(X)\ny = len(Y)\nfor i in range(x-y+1):\n    if Y == X[i:i+y]:\n        print(i)\n","string = input()\nteststring = input()\nlength = len(teststring)\ncounter = []\nfor position in range(0, len(string)):\n  if string[position:position + length] == teststring:\n    counter.append(position)\n\nfor content in counter:\n  print(content)","a= input()\nb= input()\nln = len(b)\nfor i in range(len(a) - ln + 1):\n    if a[i : i + ln] == b :\n        print(i)\n","T=str(input())\nP=str(input())\nfor i in range(len(T)):\n    if T[i:len(T)].startswith(P):\n        print(i)\n","a = input()\nb = input()\nx = 0\nwhile True:\n    x = a.find(b, x)\n    if x+1:\n        print(x)\n    else:\n        break\n    x += 1\n","T=input()\nP=input()\nfor i in range(len(T)):\n    if T[i:i+len(P)]==P:\n        print(i)\n","T,P=input(),input()\nfor i in range(len(T)):\n    if T[i:].startswith(P):\n        print(i)\n","T=input()\nP=input()\nm=-1\nfor i in range(len(T)):\n    k=T.find(P,i,len(T))\n    if m != k and k>=0:\n        print(k)\n    m=k\n","T = input()\nP = input()\nfor i in range(len(T)):\n    if P in T[i:i+len(P)]:\n        print(i)\n    else:\n        pass\n","T, P = input(), input()\nfor i in range(len(T)):\n    if T[i:].startswith(P):\n        print(i)","# coding: utf-8\n# Your code here!\n\nT = input()\nP = input()\n\nfor i in range(len(T) - len(P) + 1):\n   if P == T[i : i + len(P)]:\n      print(i)\n\n","t =  input()\np =  input()\nfor i in range(len(t) - len(p) + 1):\n    if t[i:i + len(p)] == p:\n        print(i)\n    else:\n      pass\n","A = input()\nB = input()\na = len(A)\nb = len(B)\nfor i in range(a-b+1):\n    if B == A[i:i+b]:    #a[i:j]\u2192[a[i], a[i+1], a[i+2], ..., a[j-1]]\n        print(i)\n","t=input()\np=input()\nfor i in range(len(t)-len(p)+1):\n\tif t[i:i+len(p)]==p:\n\t\tprint(i)\n\n","s=input()\np=input()\nfor i in range(len(s)):\n    if s[i:].startswith(p):\n        print(i)\n","t=input()\np=input()\nl=len(t)\nll=len(p)\ni=0\nfor i in range(l-ll+1):\n    x=t.find(p,i,i+ll)\n    if x==-1:\n        pass\n    else:\n        print(x)\n","t=input()\np=input()\nfor i in range(len(t)-len(p)+1):\n    if t[i:i+len(p)] == p:\n        print(i)\n    \n","t=input()\np=input()\ntry:\n    if t.count(p)!=0:\n        for i in range(len(t)-len(p)+1):\n                if p==t[i:i+len(p)]:\n                    print(i)    \nexcept:\n    pass\n","T,P=input(),input()\nn=len(P)\nfor i in range(len(T)):T[i:i+n]!=P or print(i)\n","def main():\n    text = input()\n    len_text = len(text)\n    pattern = input()\n    len_pattern = len(pattern)\n\n    for i in range(len_text - len_pattern + 1):\n        if text[i:i+len_pattern] == pattern:\n            print(i)\n    return\n\n\nmain()\n","def comp(T,P):\n    if T == P:\n        return True\n    else:\n        return False\n\ndef main():\n    T = input()\n    P = input()\n    n1,n2 = len(T),len(P)\n\n    for i in range(n1-n2+1):\n        if comp(T[i:i+n2],P):\n            print(i)\n\nif __name__ == \"__main__\":\n    main()\n\n","T=input()\nP=input()\n\nfor i in range (len(T)):\n    P!=T[i:i+len(P)] or print(i)\n","T = str(input())\nP = str(input())\nx = 0\n\nwhile True:\n    x = T.find(P, x)\n    if x+1:\n        print(x)\n    else:\n        break\n    x = x + 1\n","#59 \u6587\u5b57\u5217\u691c\u7d22\n\nT = input().upper()\nP = input().upper()\n\nresults = []\n\nfor i in range(len(T) - len(P) + 1):\n        temp = T[i:i+len(P)]\n        if temp == P:\n                results.append(i)\n\nfor r in results:\n        print(r)\n","T=input()\nP=input()\nfor i in range(len(T)):\n    if T[i:].startswith(P):\n        print(i)\n\n","T=input()\nP=input()\nfor i in range(len(T)-len(P)+1):\n    if P[0:len(P)]==T[i:i+len(P)]:\n        print(i)\n    else:\n        continue\n","#import pysnooper\n#import os,re,sys,operator,math,heapq,string\nfrom collections import Counter,deque\n#from operator import itemgetter\n#from itertools import accumulate,combinations,groupby,combinations_with_replacement\nfrom sys import stdin,setrecursionlimit\n#from copy import deepcopy\nsetrecursionlimit(10**6)\ninput=stdin.readline\n\ns=input().rstrip()\nt=input().rstrip()\nans=set()\nfor i in range(len(s)):\n    try:\n        n=s[i:].index(t)+i\n        ans.add(n)\n    except:\n        continue\nfor i in sorted(ans):\n    print(i)\n","T=input()\nP=input()\nb=0\nwhile True:\n    a=T.find(P,b)\n    if a==-1:\n        break\n    print(a)\n    b=a+1\n","T = input()\nS = input()\n\ns = len(S)\nfor i in range(len(T)-s+1):\n    if T[i:i+s] == S:\n        print(i)\n","#coding:utf-8\n\ndef NSS(s1,s2):\n    s1list=list(s1)\n    n=len(s1list)\n    s2list=list(s2)\n    for i in range(n):\n        ans=0\n        if len(s1list)>=len(s2list) and s1list[0]==s2list[0]:\n            ans+=1\n            for j in range(1,len(s2list)):\n                if s1list[j]==s2list[j]:\n                    ans+=1\n        if ans==len(s2list):\n            print(i)\n        s1list.pop(0)\n\nif __name__==\"__main__\":\n    s1=input()\n    s2=input()\n    NSS(s1,s2)\n        \n            ","t=input()\np=input()\n\n\nfor i in range(len(t)):\n    if p in t[i:i+len(p)]:\n        print(i)\n\n","t=input()\np=input()\n\nfor i in range(len(t)-len(p)+1):\n    x=t.find(p)\n    if x==0:\n        print(i)\n    t=list(t)\n    t.extend(t[0])\n    t.remove(t[0])\n    t=''.join(map(str,t))\n","T = input()\nP = input()\nt = len(T)\np = len(P)\nfor i in range(t-p+1):\n    if P == T[i:i+p]:\n        print(i)\n\n","parent = input()\nkey = input()\n\nfor i in range(len(parent)):\n    if parent[i:i+len(key)] == key:\n        print(i)\n","t = input()\np = input()\n\nfor i in range(len(t)):\n    for j in range(len(p) + 1):\n        if j == len(p):\n            print(i)\n        else:\n            if i + j >= len(t):\n                break\n            elif t[i + j] == p[j]:\n                continue\n            else:\n                break\n","a = input()\nb = input()\nfor i in range(len(a)):\n    if a[i:i+len(b)] == b:\n        print(i)\n        \n","def Main():\n    text = input()\n    pattern = input()\n    \n    for i in range(len(text)):\n        if text[i:].startswith(pattern):\n            print(i)\nMain()\n","T = input()\nP = input()\nfor i in range(len(T)):\n    if T[i:].startswith(P):\n        print(i)\n","# coding: utf-8\n# Your code here!\n\nT = input()\nP = input()\n\nfor i in range(len(T) - len(P) + 1):\n   if P == T[i : i + len(P)]:\n      print(i)\n","l = input()\nm = input()\nn = len(l)\nk = len(m)\n\nc = 0\nfor i in range(n-k+1):\n    if l[i:i+k] == m:\n        print(i)\n\n","T=str(input())\nP=str(input())\nl1=len(T)\nl2=len(P)\ni=0\nfor i in range(l1-l2+1):\n    i+=1\n    x=T.find(P,i-1,i+l2-1)\n    if x==-1:\n        pass\n    else:\n        print(x)\n","T = input()\nP = input()\n\nfor i in range(len(T) - len(P) + 1):\n   if P == T[i : i + len(P)]:\n      print(i)\n","import sys\nfrom typing import List\n\n\nif __name__ == \"__main__\":\n    input_str = input()\n    target_str = input()\n    target_str_len = len(target_str)\n\n    for idx, s in enumerate(input_str):\n        if len(input_str[idx:]) < target_str_len:\n            break\n        if s == target_str[0]:\n            if input_str[idx:idx + target_str_len] == target_str:\n                print(idx)\n\n","def search(t, p):\n    tn = len(t)\n    i = 0\n    pn = len(p)\n    plist = []\n    if pn <= tn:\n        while i < tn:\n            j = 0\n            while j < pn and i+j < tn:\n                if t[i+j] != p[j]: break\n                j += 1\n            if j == pn:\n                plist.append(i)\n            i += 1\n    return plist\n\ndef main():\n    t = input()\n    p = input()\n    plist = search(t, p)\n    for i in plist: print(i)\n\n\n\nif __name__ == \"__main__\":\n    main()\n","t = input()\np = input()\nfor i in range(len(t)-len(p)+1):\n if t.find(p,i,i+len(p)) != -1: print(i)\n","T = input()\nP = input()\nlen_P = len(P)\n\nfor i in range(len(T)-len_P+1):\n    if T[i:i+len_P] == P:\n        print(i)\n\n","s=input()\na=len(s)\np=input()\nb=len(p)\nfor i in range (a):\n    l=s[i:i+b]\n    if l==p:\n        print(i)\n","A=input()\nB=input()\na=len(A)\nb=len(B)\nfor i in range(a-b+1):\n    if B==A[i:i+b]:\n        print(i)\n\n"],"formatted_programs":["T=str(input())\nP=str(input())\nfor i in range(len(T)+1-len(P)):\n    if T[i:i+len(P)]==P:\n        print(i)\n","t = input()\np = input()\n\nanslist = []\nfor i in range(len(t) - len(p) + 1):\n    if t[i] == p[0]:\n        k = 0\n        for j in range(i, i + len(p)):\n            if t[j] != p[k]:\n                break\n            k += 1\n        else:\n            anslist.append(i)\n\nfor ans in anslist:\n    print(ans)\n\n","T, P = [input() for i in range(2)]\n\nlen_P = len(P)\nfor i in range(len(T) - len_P + 1):\n    if P == T[i:i + len_P]:\n        print(i)\n\n","a = list(input())\nb = list(input())\n\n\nfor j in range(len(a)+1-len(b)) :\n    Same = True\n    ans = j\n    i = 0\n    while i < len(b) :\n        if b[i] == a[j] :\n            i += 1\n            j += 1\n        else :\n            Same = False\n            break\n    if Same == True :\n        print(ans)\n","t=str(input())\np=str(input())\na=int(0)\nfor i in range(len(t)):\n    f=t[i:i+len(p)]\n    if f.find(p)!=-1:\n        print(i)\n","def main():\n    s = input()\n    t = input()\n    for i in range(len(s)-len(t)+1):\n        if t == s[i:i+len(t)]:print(i)\n\n\nif __name__ == '__main__':\n    main()\n\n\n","T = input()\nP = input()\n\nfor i in range(len(T)):\n    if T[i:].startswith(P):\n        print(i)\n\n","t=input()\np=input()\nl=len(t)-len(p)\nans=[]\nfor i in range(l+1):\n    if t[i:i+len(p)]==p:\n        ans.append(i)\n#if ans==[]:\n#   sys.exit\nfor _ in ans:\n    print(_)\n","T = str(input())\nP = str(input())\nresults = []\nfor i in range(len(T) - len(P) + 1):\n    x = T[i:i+len(P)]\n    if x == P:\n        results.append(i)\n\nfor r in results:\n    print(r)\n","t= input()\np= input()\nl= len(p)\n\nfor i in range(len(t) - l + 1) :\n    if t[i : i + l] == p:\n        print(i)\n","t_str =  input()\np_str =  input()\nfor i in range(len(t_str) - len(p_str) + 1):\n    if t_str[i:i + len(p_str)] == p_str:\n        print(i)\n    else:\n      pass\n\n","T = list(input())\nP = list(input())\nfor i in range(len(T)):\n    try:\n        if P[0] == T[i]:\n            for j in range(len(P)):\n                if P[j] == T[i + j]:\n                    pass\n                else: break\n            else: print(i)\n    except:pass","T = input()\nP = input()\nfor j in range(len(T)):\n    if T[j:].startswith(P):\n        print(j)\n","T = input()\nP = input()\nfor j in range(len(T)):\n    if T[j:].startswith(P):\n        print(j)\n","t = str(input())\np = str(input())\ntt = len(t)\npp = len(p)\ny = 0\n\n#print(t, p)\n\nfor i in range(tt - pp + 1):\n    x = 0\n    for j in range(pp):\n        #print(i, j, t[i+j], p[j])\n\n        if t[i+j] == p[j]:\n            x = x + 1\n        #print(x)\n        \n    if x == pp:\n        y = y + 1\n        #print('\u2192',i)\n        print(i)\n","T = input()\nP = input()\nt = len(T)\np = len(P)\nfor i in range(t - p + 1):\n    if T[i : i + p] == P:\n        print(i)\n","t=input();p=input()\n[print(i)for i in range(len(t))if t[i:].startswith(p)]","def search(s1, s2):\n    len1 = len(s1)\n    len2 = len(s2)\n    for i in range(len1):\n        if i + len2 > len1:\n            break\n\n        for j in range(len2):\n            if s1[i+j] != s2[j]:\n                break\n        else:\n            yield i\n\n\ndef run():\n    s1 = input()\n    s2 = input()\n    for idx in search(s1, s2):\n        print(idx)\n\n\nif __name__ == '__main__':\n    run()\n\n","T = input()\nP = input()\nt = len(T)\np = len(P)\nfor i in range(t - p + 1):\n    if T[i : i + p] == P:\n        print(i)\n","T = input()\nP = input()\nl = len(P)\n\nfor i in range(len(T) - l + 1) :\n    if T[i : i + l] == P :\n        print(i)\n","# coding: utf-8\n# Your code here!\n\nt = str(input())\np = str(input())\n\nfor i in range(len(t)):\n    if t[i:].startswith(p):\n        print(i)\n\n","\nT=input()\nP=input()\nt=len(T)\np=len(P)\n\nfor i in range(t):\n    x=T.find(P,i,i+p)\n    if x!=(-1):\n        print(x)\n        \n\n","#include <stdio.h>\n#include <string.h>\n\nint main()\n{\n  int i, j;\n  char t[1002], p[1002];\n  fgets(t, 1001, stdin);\n  fgets(p, 1001, stdin);\n  if (t[strlen(t)-1]=='\\n') t[strlen(t)-1]='\\0';\n  if (p[strlen(p)-1]=='\\n') p[strlen(p)-1]='\\0';\n\n  int plen = strlen(p);\n  if (plen>strlen(t)) return 0;\n  for (i=0; i<strlen(t)-strlen(p)+1; i++) {\n    if (t[i]==p[0]) {\n      for (j=1; j<plen; j++) {\n\tif (t[i+j]!=p[j]) break;\n      }\n      if (j==plen) {\n\tprintf(\"%d\\n\", i);\n      }\n    }\n  }\n\n  return 0;\n}\n","T = input()\nP = input()\nfor i in range(len(T)):\n    if T[i:].startswith(P):\n        print(i)\n","T = input()\nP = input()\n\nn, result = 0, []\nwhile n < len(T):\n\tnext_n = T.find(P, n)\n\tif next_n < 0:\n\t\tbreak\n\tresult.append(next_n)\n\tn = next_n + 1\n\nfor r in result:\n\tprint(r)\n\n","t=input()\np=input()\nlt=len(t)\nlp=len(p)\nfor i in range(lt-lp+1):\n    if t[i:i+lp]==p:print(i)","T=input()\nP=input()\na=T.find(P)\nif a>=0:\n    print(a)\n    while True:\n        b=T.find(P,a+1)\n        if b>=0:\n            print(b)\n        if b==-1:\n            break\n        a=b\n","T = input() \nP = input()\n\nindex = -1\nwhile True:\n    index = T.find(P,index + 1)\n    if index == -1:\n        break\n    print(index)\n","T = str(input())\nP = str(input())\n\nx = -1\nwhile True:\n    x = T.find(P, x+1)\n    if x == -1:\n        break\n    print(x)\n","a = input()\nb = input()\nidx = 0\nwhile True:\n    idx = a.find(b, idx)\n    if idx+1:\n        print(idx)\n    else:\n        break\n    idx += 1\n","t = input()\np = input()\n \nanslist = []\nfor i in range(len(t) - len(p) + 1):\n    if t[i] == p[0]:\n        k = 0\n        for j in range(i, i + len(p)):\n            if t[j] != p[k]:\n                break\n            k += 1\n        else:\n            anslist.append(i)\n \nfor ans in anslist:\n    print(ans)\n","C=''\n\nT=list(str(input()))\n\nP=str(input())\n\nfor i in range(len(T)-len(P)+1):\n    for j in range(len(P)):\n        C+=T[i+j]\n        j+=1\n    \n    if C==P:\n        print(i)\n    C=''\n","# coding: utf-8\n# Your code here!\nT=input()\nP=input()\n\nfor i in range(len(T)):\n    if P==T[i:i+len(P)]:\n        print(i)\n","if __name__ == '__main__':\n    # ??????????????\\???\n    # T = 'abc'\n    # P = 'xyz'\n    T = input()\n    P = input()\n\n    # ???????????????\n    results = []\n\n    for i in range(len(T) - len(P) + 1):\n        temp = T[i:i+len(P)]\n        if temp == P:\n            results.append(i)\n\n    # ???????????\u00a8???\n    for r in results:\n        print(r)","t = input()\np = input()\n\nfor i in range(len(t)-len(p)+1):\n    if t[i] == p[0]:\n        if all(t[i+j] == p[j] for j in range(len(p)) if i+j < len(t)):\n            print(i)\n\n","a=input()\nb=input()\nfor i in range (len(a)):\n    if b == a[i:i+len(b)]:\n        print(i)\n\n","T = input()\nP = input()\nfor i in range(len(T)):\n  if T[i:].startswith(P):\n    print(i)\n","T=input()\nP=input()\nfor i in range(len(T)):\n    if T[i:i+len(P)]==P:\n        print(i)\n    else:\n        continue \n","text=input()\nstring=input()\n\n\n#common_length[i]\u306f\u3001\u63a2\u7d22\u5217\u304cstring[i]\u3067\u63a2\u7d22\u3092\u7d42\u4e86\u3057\u305f\u3068\u304d\u306b\u3001\n# string[i-common_lneght[i] + 1] \u301cstring[i]\u3067\u69cb\u6210\u3055\u308c\u308b\u6587\u5b57\u5217\u304c\u3001\u63a2\u7d22\u4fa1\u5024\u3092\u6301\u3064\u3053\u3068\u3092\u793a\u3059\n\n\nlen_string=len(string)\ncommon_length=[0]*len_string\ntmp=0\nfor i in range(1,len_string):\n    if(string[i]==string[tmp]):\n        common_length[i-1]=0\n        tmp+=1\n    else:\n        common_length[i-1]=tmp\n        tmp=0\n\nif(string[-1]==string[tmp-1]):\n    common_length[-1]=tmp\n\n\n\n\ntmp=0\n\nfor i in range(len(text)):\n    if(text[i]!=string[tmp]):\n        while(text[i]!=string[tmp] and tmp==0):\n            tmp=common_length[max([tmp-1,0])]\n        if(text[i]==string[tmp]):\n            tmp+=1\n    else:\n        tmp+=1\n        if(tmp==len_string):\n            print(i-tmp+1)\n            tmp=common_length[-1]\n","a=input()\nb=input()\nfor i in range(len(a)):\n    x=a[i:i+len(b)].find(b)\n    if x!=-1:\n        print(x+i)\n","target = input().strip()\nse = input().strip()\nanswer = []\nfor i in range(len(target) - len(se) + 1):\n    for inner in range(len(se)):\n        if target[i + inner] != se[inner]:\n            break\n    else:\n        answer.append(i)\nfor a in answer:\n    print(a)","T = input()\nP = input()\n\nfor i in range(len(T)):\n    if P == T[i:i+len(P)]:\n        print(i)\n","T = input()\nP = input()\nfor i in range(len(T)):\n    if T[i:].startswith(P):\n        print(i)\n","t, p = input(), input()\nlen_p = len(p)\nfor i in range(len(t) - len_p + 1):\n    if t[i:i + len_p] == p:\n        print(i)","#!\/usr\/bin\/env python\n# -*- coding: utf-8 -*-\n\n\"\"\"\ninput:\naabaaa\naa\n\noutput:\n0\n3\n4\n\"\"\"\n\nimport sys\n\n\nclass NaiveStringSearch(object):\n    __slots__ = ('target', 'pattern')\n\n    def __init__(self, in_data):\n        \"\"\"\"\"\"\n        self.target, self.pattern = map(lambda x: x.strip(), _input)\n\n    def brute_force(self):\n        m, n = len(self.pattern), len(self.target)\n        for i in range(n - m + 1):\n            for j in range(m):\n                if self.target[i + j] != self.pattern[j]:\n                    break\n                if j == m - 1:\n                    print(i)\n        return None\n\n\nif __name__ == '__main__':\n    _input = sys.stdin.readlines()\n    case = NaiveStringSearch(in_data=_input)\n    case.brute_force()","a = list(input())\nb = list(input())\n\n\nfor j in range(len(a)+1-len(b)) :\n    Same = True\n    ans = j\n    i = 0\n    while i < len(b) :\n        if b[i] == a[j] :\n            i += 1\n            j += 1\n        else :\n            Same = False\n            break\n    if Same == True :\n        print(ans)\n","# coding: utf-8\n# 59\n\nT = input()\nP = input()\nt=[]\nA = []\n#print(len(P),len(T))\nif len(P)==1:\n    K=len(T)\nelse:\n    K = len(T)-(len(P)-1)\n    #print(K)\np = len(P)\nfor i in range(K):\n    t = T[i:p]\n    #print(t)\n    p += 1\n    if t.count(P)>0:\n        print(i)\n","import string\n\n\nclass SuffixArray:\n    def __init__(self, S):\n        self.N = len(S)\n        self.S = S\n        self.atoi = {x: i for i, x in enumerate(string.printable)}\n        self.sa = self.__make_sa()\n\n    def show(self):\n        for i, s in enumerate(self.sa):\n            print(i, s, self.S[s:])\n\n    def __make_sa(self):\n        \"\"\"\u914d\u5217\uff08\u6587\u5b57\u5217\uff09S\u306esuffix array\u3092\u8fd4\u3059 O(N(logN)^2)\"\"\"\n        N = self.N\n        SA = list(range(N + 1))\n        rank = [-1] * (N + 1)\n        tmp = [0] * (N + 1)\n        k = 1\n\n        for i, s in enumerate(self.S):\n            rank[i] = self.atoi[s]\n\n        def key(i):\n            if i + k <= N:\n                return (rank[i], rank[i + k])\n            return (rank[i], -1)\n\n        def cmp(i, j):\n            return key(i) < key(j)\n\n        while k <= N:\n            SA.sort(key=key)\n            tmp[SA[0]] = 0\n            for i in range(1, N + 1):\n                tmp[SA[i]] = tmp[SA[i - 1]] + cmp(SA[i - 1], SA[i])\n            for i in range(N + 1):\n                rank[i] = tmp[i]\n            k *= 2\n        return SA\n\n    def contain(self, T, side=\"left\"):\n        \"\"\"\u6587\u5b57\u5217S\u306bT\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u304b\u3092\u8fd4\u3059O(|T|log|S|)\n        input\n            T: \u691c\u7d22\u3059\u308b\u6587\u5b57\u5217\uff08\u914d\u5217\uff09\n            side: left\u3000-> S[sa[i]:sa[i]+NT] == T\u3068\u306a\u308b\u6700\u5c0f\u306eindex i\u3092\u8fd4\u3059\n                  right -> \u6700\u5927\u306eindex\u3092\u8fd4\u3059\n        output:\n            \u542b\u307e\u308c\u308b\u5834\u5408: S[sa[i]: sa[i]+NT] == T\u3068\u306a\u308b\u6700\u5c0for\u6700\u5927\u306ei\n            \u542b\u307e\u308c\u306a\u3044\u5834\u5408: -1\n        \"\"\"\n        NT = len(T)\n        if NT > self.N:\n            return -1\n        L = 0\n        R = self.N\n        if side == \"left\":\n            while R - L > 1:\n                m = (L + R) \/\/ 2\n                i = self.sa[m]\n                if self.S[i:i + NT] < T:\n                    L = m\n                else:\n                    R = m\n            i = self.sa[R]\n            if self.S[i:i + NT] == T:\n                return R\n        else:\n            R += 1\n            while R - L > 1:\n                m = (L + R) \/\/ 2\n                i = self.sa[m]\n                if self.S[i:i + NT] <= T:\n                    L = m\n                else:\n                    R = m\n            i = self.sa[L]\n            if self.S[i:i + NT] == T:\n                return L\n        return -1\n\n    def get_indices(self, T):\n        \"\"\"S\u306e\u4e2d\u306b\u542b\u307e\u308c\u308bT\u306e\u4f4d\u7f6e\u3092\u683c\u7d0d\u3057\u305findex\u306e\u30ea\u30b9\u30c8\u3092\u8fd4\u3059\"\"\"\n        L = self.contain(T, side=\"left\")\n        if L == -1:\n            return []\n        R = self.contain(T, side=\"right\")\n        return [self.sa[i] for i in range(L, R+1)]\n\n\nSA = SuffixArray(input())\nres = SA.get_indices(input())\nif res:\n    res.sort()\n    print(*res, sep=\"\\n\")\n","T, P = input(), input()\nfor i in range(len(T)):\n\tif T[i:].startswith(P):\n\t\tprint(i)","from pprint import pprint\n\n__BASE     = 1000000007\n__MOD      = (2**64)\n__INV      = 13499267949257065399\n\ndef main():\n    s,t = input(),input()\n    x = len(t)\n    mp = {}\n    hashv = 0\n    for i in range(len(s)):\n        if i - x >= 0:\n            hashv = hashv - ord(s[i-x]) * ( __BASE ** (x-1) )\n        hashv *= __BASE\n        hashv %= __MOD\n        hashv += ord(s[i])\n        hashv %= __MOD\n        if i >= x-1:\n            if hashv in mp:\n                mp[hashv].append(i)\n            else:\n                mp[hashv] = [i]\n    hashv = 0\n    for c in t:\n        hashv *= __BASE\n        hashv %= __MOD\n        hashv += ord(c)\n    if hashv in mp:\n        for pos in mp[hashv]:\n            print(pos-(x-1))\n\nif __name__ == \"__main__\":\n    main()\n","a=input()\nb=input()\nx=list(a)\ny=list(b)\nfor i in range(len(a)+1-len(b)):\n    z=0\n    for j in range(len(b)):\n        if x[i+j]==y[j]:\n            z+=1\n    if z==len(b):\n        print(i)\n","t=input()\np=input()\ns=len(t)-len(p)\nfor i in range(s+1):\n    if p==t[i:len(p)+i]:\n        print(i)\n","X = input()\nY = input()\nx = len(X)\ny = len(Y)\nfor i in range(x-y+1):\n    if Y == X[i:i+y]:\n        print(i)\n","string = input()\nteststring = input()\nlength = len(teststring)\ncounter = []\nfor position in range(0, len(string)):\n  if string[position:position + length] == teststring:\n    counter.append(position)\n\nfor content in counter:\n  print(content)","a= input()\nb= input()\nln = len(b)\nfor i in range(len(a) - ln + 1):\n    if a[i : i + ln] == b :\n        print(i)\n","T=str(input())\nP=str(input())\nfor i in range(len(T)):\n    if T[i:len(T)].startswith(P):\n        print(i)\n","a = input()\nb = input()\nx = 0\nwhile True:\n    x = a.find(b, x)\n    if x+1:\n        print(x)\n    else:\n        break\n    x += 1\n","T=input()\nP=input()\nfor i in range(len(T)):\n    if T[i:i+len(P)]==P:\n        print(i)\n","T,P=input(),input()\nfor i in range(len(T)):\n    if T[i:].startswith(P):\n        print(i)\n","T=input()\nP=input()\nm=-1\nfor i in range(len(T)):\n    k=T.find(P,i,len(T))\n    if m != k and k>=0:\n        print(k)\n    m=k\n","T = input()\nP = input()\nfor i in range(len(T)):\n    if P in T[i:i+len(P)]:\n        print(i)\n    else:\n        pass\n","T, P = input(), input()\nfor i in range(len(T)):\n    if T[i:].startswith(P):\n        print(i)","# coding: utf-8\n# Your code here!\n\nT = input()\nP = input()\n\nfor i in range(len(T) - len(P) + 1):\n   if P == T[i : i + len(P)]:\n      print(i)\n\n","t =  input()\np =  input()\nfor i in range(len(t) - len(p) + 1):\n    if t[i:i + len(p)] == p:\n        print(i)\n    else:\n      pass\n","A = input()\nB = input()\na = len(A)\nb = len(B)\nfor i in range(a-b+1):\n    if B == A[i:i+b]:    #a[i:j]\u2192[a[i], a[i+1], a[i+2], ..., a[j-1]]\n        print(i)\n","t=input()\np=input()\nfor i in range(len(t)-len(p)+1):\n\tif t[i:i+len(p)]==p:\n\t\tprint(i)\n\n","s=input()\np=input()\nfor i in range(len(s)):\n    if s[i:].startswith(p):\n        print(i)\n","t=input()\np=input()\nl=len(t)\nll=len(p)\ni=0\nfor i in range(l-ll+1):\n    x=t.find(p,i,i+ll)\n    if x==-1:\n        pass\n    else:\n        print(x)\n","t=input()\np=input()\nfor i in range(len(t)-len(p)+1):\n    if t[i:i+len(p)] == p:\n        print(i)\n    \n","t=input()\np=input()\ntry:\n    if t.count(p)!=0:\n        for i in range(len(t)-len(p)+1):\n                if p==t[i:i+len(p)]:\n                    print(i)    \nexcept:\n    pass\n","T,P=input(),input()\nn=len(P)\nfor i in range(len(T)):T[i:i+n]!=P or print(i)\n","def main():\n    text = input()\n    len_text = len(text)\n    pattern = input()\n    len_pattern = len(pattern)\n\n    for i in range(len_text - len_pattern + 1):\n        if text[i:i+len_pattern] == pattern:\n            print(i)\n    return\n\n\nmain()\n","def comp(T,P):\n    if T == P:\n        return True\n    else:\n        return False\n\ndef main():\n    T = input()\n    P = input()\n    n1,n2 = len(T),len(P)\n\n    for i in range(n1-n2+1):\n        if comp(T[i:i+n2],P):\n            print(i)\n\nif __name__ == \"__main__\":\n    main()\n\n","T=input()\nP=input()\n\nfor i in range (len(T)):\n    P!=T[i:i+len(P)] or print(i)\n","T = str(input())\nP = str(input())\nx = 0\n\nwhile True:\n    x = T.find(P, x)\n    if x+1:\n        print(x)\n    else:\n        break\n    x = x + 1\n","#59 \u6587\u5b57\u5217\u691c\u7d22\n\nT = input().upper()\nP = input().upper()\n\nresults = []\n\nfor i in range(len(T) - len(P) + 1):\n        temp = T[i:i+len(P)]\n        if temp == P:\n                results.append(i)\n\nfor r in results:\n        print(r)\n","T=input()\nP=input()\nfor i in range(len(T)):\n    if T[i:].startswith(P):\n        print(i)\n\n","T=input()\nP=input()\nfor i in range(len(T)-len(P)+1):\n    if P[0:len(P)]==T[i:i+len(P)]:\n        print(i)\n    else:\n        continue\n","#import pysnooper\n#import os,re,sys,operator,math,heapq,string\nfrom collections import Counter,deque\n#from operator import itemgetter\n#from itertools import accumulate,combinations,groupby,combinations_with_replacement\nfrom sys import stdin,setrecursionlimit\n#from copy import deepcopy\nsetrecursionlimit(10**6)\ninput=stdin.readline\n\ns=input().rstrip()\nt=input().rstrip()\nans=set()\nfor i in range(len(s)):\n    try:\n        n=s[i:].index(t)+i\n        ans.add(n)\n    except:\n        continue\nfor i in sorted(ans):\n    print(i)\n","T=input()\nP=input()\nb=0\nwhile True:\n    a=T.find(P,b)\n    if a==-1:\n        break\n    print(a)\n    b=a+1\n","T = input()\nS = input()\n\ns = len(S)\nfor i in range(len(T)-s+1):\n    if T[i:i+s] == S:\n        print(i)\n","#coding:utf-8\n\ndef NSS(s1,s2):\n    s1list=list(s1)\n    n=len(s1list)\n    s2list=list(s2)\n    for i in range(n):\n        ans=0\n        if len(s1list)>=len(s2list) and s1list[0]==s2list[0]:\n            ans+=1\n            for j in range(1,len(s2list)):\n                if s1list[j]==s2list[j]:\n                    ans+=1\n        if ans==len(s2list):\n            print(i)\n        s1list.pop(0)\n\nif __name__==\"__main__\":\n    s1=input()\n    s2=input()\n    NSS(s1,s2)\n        \n            ","t=input()\np=input()\n\n\nfor i in range(len(t)):\n    if p in t[i:i+len(p)]:\n        print(i)\n\n","t=input()\np=input()\n\nfor i in range(len(t)-len(p)+1):\n    x=t.find(p)\n    if x==0:\n        print(i)\n    t=list(t)\n    t.extend(t[0])\n    t.remove(t[0])\n    t=''.join(map(str,t))\n","T = input()\nP = input()\nt = len(T)\np = len(P)\nfor i in range(t-p+1):\n    if P == T[i:i+p]:\n        print(i)\n\n","parent = input()\nkey = input()\n\nfor i in range(len(parent)):\n    if parent[i:i+len(key)] == key:\n        print(i)\n","t = input()\np = input()\n\nfor i in range(len(t)):\n    for j in range(len(p) + 1):\n        if j == len(p):\n            print(i)\n        else:\n            if i + j >= len(t):\n                break\n            elif t[i + j] == p[j]:\n                continue\n            else:\n                break\n","a = input()\nb = input()\nfor i in range(len(a)):\n    if a[i:i+len(b)] == b:\n        print(i)\n        \n","def Main():\n    text = input()\n    pattern = input()\n    \n    for i in range(len(text)):\n        if text[i:].startswith(pattern):\n            print(i)\nMain()\n","T = input()\nP = input()\nfor i in range(len(T)):\n    if T[i:].startswith(P):\n        print(i)\n","# coding: utf-8\n# Your code here!\n\nT = input()\nP = input()\n\nfor i in range(len(T) - len(P) + 1):\n   if P == T[i : i + len(P)]:\n      print(i)\n","l = input()\nm = input()\nn = len(l)\nk = len(m)\n\nc = 0\nfor i in range(n-k+1):\n    if l[i:i+k] == m:\n        print(i)\n\n","T=str(input())\nP=str(input())\nl1=len(T)\nl2=len(P)\ni=0\nfor i in range(l1-l2+1):\n    i+=1\n    x=T.find(P,i-1,i+l2-1)\n    if x==-1:\n        pass\n    else:\n        print(x)\n","T = input()\nP = input()\n\nfor i in range(len(T) - len(P) + 1):\n   if P == T[i : i + len(P)]:\n      print(i)\n","import sys\nfrom typing import List\n\n\nif __name__ == \"__main__\":\n    input_str = input()\n    target_str = input()\n    target_str_len = len(target_str)\n\n    for idx, s in enumerate(input_str):\n        if len(input_str[idx:]) < target_str_len:\n            break\n        if s == target_str[0]:\n            if input_str[idx:idx + target_str_len] == target_str:\n                print(idx)\n\n","def search(t, p):\n    tn = len(t)\n    i = 0\n    pn = len(p)\n    plist = []\n    if pn <= tn:\n        while i < tn:\n            j = 0\n            while j < pn and i+j < tn:\n                if t[i+j] != p[j]: break\n                j += 1\n            if j == pn:\n                plist.append(i)\n            i += 1\n    return plist\n\ndef main():\n    t = input()\n    p = input()\n    plist = search(t, p)\n    for i in plist: print(i)\n\n\n\nif __name__ == \"__main__\":\n    main()\n","t = input()\np = input()\nfor i in range(len(t)-len(p)+1):\n if t.find(p,i,i+len(p)) != -1: print(i)\n","T = input()\nP = input()\nlen_P = len(P)\n\nfor i in range(len(T)-len_P+1):\n    if T[i:i+len_P] == P:\n        print(i)\n\n","s=input()\na=len(s)\np=input()\nb=len(p)\nfor i in range (a):\n    l=s[i:i+b]\n    if l==p:\n        print(i)\n","A=input()\nB=input()\na=len(A)\nb=len(B)\nfor i in range(a-b+1):\n    if B==A[i:i+b]:\n        print(i)\n\n"]}
